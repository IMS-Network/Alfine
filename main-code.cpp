
int32_t g41f370 = 0;

int32_t SHGetSpecialFolderLocation = 0x19966;

int32_t SHGetPathFromIDListA = 0x1994e;

int32_t SHGetMalloc = 0x19940;

void fun_401000(void** ecx, void** a2) {
    int1_t zf3;
    void*** esp4;
    int32_t eax5;
    int32_t eax6;
    void* v7;
    int32_t eax8;
    void** eax9;
    void** edx10;
    void** ecx11;

    zf3 = g41f370 == 0;
    if (!zf3) {
    }
    esp4 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4);
    eax5 = reinterpret_cast<int32_t>(SHGetSpecialFolderLocation());
    if (!eax5 && ecx) {
        eax6 = reinterpret_cast<int32_t>(SHGetPathFromIDListA());
        if (eax6) {
        }
        v7 = reinterpret_cast<void*>(esp4 - 4 - 4 - 4 - 4 - 4 + 4 - 4 - 4 - 4 + 4 + 4);
        eax8 = reinterpret_cast<int32_t>(SHGetMalloc(v7));
        if (!eax8 && (eax9 = ecx, !!eax9)) {
            if (a2) {
                edx10 = *reinterpret_cast<void***>(eax9);
                *reinterpret_cast<void***>(edx10 + 20)(eax9);
                eax9 = a2;
            }
            ecx11 = *reinterpret_cast<void***>(eax9);
            *reinterpret_cast<void***>(ecx11 + 8)(eax9, v7);
        }
    }
    goto esp4 + 12;
}

int32_t ReadFile = 0x18fda;

int32_t GetLastError = 0x18fbc;

void** fun_4011c0(void** a1, void** a2, void** a3, void** a4, void** a5) {
    int32_t eax6;

    eax6 = reinterpret_cast<int32_t>(ReadFile());
    if (eax6) {
        goto a2;
    } else {
        GetLastError();
        goto a2;
    }
}

void** fun_413320(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, ...);

void fun_4132cc(void** ecx, void** a2);

void** fun_402180(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9) {
    void** esi10;
    void** eax11;
    void** edx12;

    eax11 = fun_413320(ecx, a2, esi10, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9);
    if (!eax11) {
        fun_4132cc(ecx, esi10);
        eax11 = fun_413320(ecx, a2, esi10, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9);
    }
    edx12 = reinterpret_cast<void**>(0);
    *reinterpret_cast<unsigned char*>(&edx12) = reinterpret_cast<uint1_t>(!!eax11);
    *reinterpret_cast<void***>(a3) = eax11;
    return edx12;
}

void** fun_407320(void** a1, void** a2, void** a3, int32_t a4);

void** fun_4012c0(void** a1, void** a2, void** a3);

void** fun_4035b0(void** ecx, void** a2, void** a3, void** a4, void** a5);

int32_t fun_403770(void** ecx, void** a2, void** a3, void** a4, void** a5);

int32_t fun_4038d0(void** a1, void** a2, void** a3, void** a4, void** a5) {
    void** v6;
    void* esp7;
    void** eax8;
    void** eax9;

    v6 = reinterpret_cast<void**>(__return_address());
    esp7 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    *reinterpret_cast<signed char*>(&v6) = 0;
    eax8 = fun_407320(reinterpret_cast<int32_t>(esp7) - 4 + 20, reinterpret_cast<int32_t>(esp7) + 4, 1, 1);
    if (!eax8) {
        eax9 = a5 - 1;
        if (reinterpret_cast<int1_t>(eax9 == 0xffffffff)) {
            eax9 = fun_4012c0(a3, v6, a1);
        }
        if (eax9) {
            if (0) {
                fun_4035b0(a3, a2, a3, a4, eax9);
            } else {
                if (0) {
                    fun_403770(a3, a2, a3, a4, eax9);
                    goto a1;
                } else {
                    goto a1;
                }
            }
        } else {
            goto a1;
        }
    }
    goto a1;
}

void** fun_413483(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, ...);

void** fun_402200(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20) {
    void** eax21;
    void** esi22;

    eax21 = *reinterpret_cast<void***>(a2);
    if (eax21) {
        eax21 = fun_413483(ecx, eax21, esi22, __return_address(), a2, a3, a4);
        *reinterpret_cast<void***>(a2) = reinterpret_cast<void**>(0);
    }
    return eax21;
}

int32_t GetFileAttributesA = 0x191ac;

int32_t SetFileAttributesA = 0x19196;

uint32_t* fun_41427a(void** ecx, uint32_t a2, void** a3, void** a4);

int32_t fun_41303c(void** ecx, unsigned char a2, void** a3, void** a4, void** a5) {
    int32_t eax6;
    int32_t eax7;
    uint32_t eax8;

    eax6 = reinterpret_cast<int32_t>(GetFileAttributesA());
    if (eax6 != -1) {
        if (!(a2 & 0x80)) {
        }
        eax7 = reinterpret_cast<int32_t>(SetFileAttributesA());
        if (eax7) {
            return 0;
        }
    }
    eax8 = reinterpret_cast<uint32_t>(GetLastError());
    fun_41427a(ecx, eax8, __return_address(), __return_address());
    return -1;
}

struct s0 {
    void** f0;
    signed char f1;
    void** f2;
    signed char[5] pad8;
    void** f8;
};

struct s1 {
    void** f0;
    signed char f1;
    void** f2;
    signed char f3;
    void* f4;
    signed char[236] pad244;
    unsigned char f244;
};

int32_t GetDeviceCaps = 0x196e4;

int32_t CreatePalette = 0x196ba;

int32_t GetSystemPaletteEntries = 0x196ca;

void** fun_4014f0(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11) {
    void** v12;
    void** v13;
    void** esi14;
    void*** esp15;
    void** v16;
    void** edi17;
    void** eax18;
    void*** esp19;
    void** v20;
    void** ebx21;
    struct s0* ecx22;
    struct s1* eax23;
    int32_t esi24;
    int32_t edi25;
    int32_t eax26;
    int32_t eax27;
    void* esp28;
    void** ecx29;
    int32_t edi30;

    v12 = reinterpret_cast<void**>(__return_address());
    v13 = esi14;
    esp15 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4);
    v16 = edi17;
    if (!reinterpret_cast<int1_t>(*reinterpret_cast<void**>(a3 + 14) == 8) || (eax18 = fun_402180(ecx, 0x404, esp15 + 16, v16, v13, v12, a2, a3, a4), esp15 = esp15 - 4 - 4 - 4 + 4 + 8, eax18 == 0)) {
        return 0;
    }
    esp19 = esp15 - 4;
    v20 = ebx21;
    *reinterpret_cast<void***>(a3) = reinterpret_cast<void**>(0x300);
    ecx22 = reinterpret_cast<struct s0*>(a3 + 40);
    *reinterpret_cast<void***>(a3 + 2) = reinterpret_cast<void**>(0x100);
    eax23 = reinterpret_cast<struct s1*>(a3 + 4);
    esi24 = 0;
    do {
        eax23->f0 = ecx22->f2;
        eax23->f1 = ecx22->f1;
        eax23->f2 = ecx22->f0;
        eax23->f3 = 0;
        if (esi24 < 10 || esi24 >= 0xf6) {
            eax23->f3 = 4;
        }
        ++esi24;
        eax23 = reinterpret_cast<struct s1*>(&eax23->f4);
        ecx22 = reinterpret_cast<struct s0*>(reinterpret_cast<uint32_t>(ecx22) + 4);
    } while (esi24 < 0x100);
    edi25 = GetDeviceCaps;
    eax26 = reinterpret_cast<int32_t>(edi25());
    eax27 = reinterpret_cast<int32_t>(edi25());
    esp28 = reinterpret_cast<void*>(esp19 - 4 - 4 - 4 + 4 - 4 - 4 - 4 + 4 + 4);
    if (eax26 * eax27 != 8) 
        goto addr_4015c6_8;
    edi25();
    esp28 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp28) - 4 - 4 - 4 + 4);
    if (*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax27) + 1) & 1) 
        goto addr_40159c_10;
    addr_4015c6_8:
    CreatePalette();
    ecx29 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp28) - 4 - 4 + 4 + 16);
    fun_402200(ecx29, ecx29, v16, 12, a2, 14, v20, v16, v13, v12, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
    goto a2;
    addr_40159c_10:
    edi30 = GetSystemPaletteEntries;
    edi30(a2, 0, 10, 18);
    edi30(a2, 0xf6, 10, a2 + 0x3dc, a2, 0, 10, 18);
    esp28 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp28) - 4 - 4 - 4 - 4 - 4 + 4 - 4 - 4 - 4 - 4 - 4 + 4);
    goto addr_4015c6_8;
}

struct s2 {
    unsigned char f0;
    signed char[3] pad4;
    int32_t f4;
    signed char f5;
    signed char f9;
};

struct s3 {
    signed char[12] pad12;
    int32_t f12;
};

struct s4 {
    void* f0;
    void* f4;
    void* f8;
    void* f12;
};

int32_t CreateSolidBrush = 0x197ac;

int32_t SelectObject = 0x1971a;

int32_t FillRect = 0x19320;

int32_t DeleteObject = 0x19700;

void** g41f2e8 = reinterpret_cast<void**>(0);

int32_t GlobalAlloc = 0x1903e;

int32_t GlobalLock = 0x19030;

struct s5 {
    int32_t f0;
    int32_t f4;
    int32_t f8;
    int16_t f12;
    int16_t f14;
    signed char[4] pad20;
    int32_t f20;
    signed char[16] pad40;
    signed char f40;
};

struct s6 {
    signed char f0;
    signed char f1;
};

struct s7 {
    signed char f0;
    signed char f1;
};

struct s8 {
    signed char f0;
    signed char f1;
};

int32_t CreateDIBPatternBrush = 0x19794;

int32_t GlobalUnlock = 0x19020;

int32_t GlobalFree = 0x19012;

struct s9 {
    signed char[12] pad12;
    int32_t f12;
};

void fun_401810(void** a1, struct s2* a2, struct s3* a3, struct s4* a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14) {
    struct s2* eax15;
    unsigned char cl16;
    int32_t v17;
    int32_t ebx18;
    uint32_t v19;
    uint32_t ebp20;
    uint32_t v21;
    uint32_t esi22;
    int32_t v23;
    int32_t edi24;
    int32_t v25;
    int32_t eax26;
    int32_t ebx27;
    int32_t v28;
    struct s3* edi29;
    int32_t ebx30;
    int32_t esi31;
    int32_t ebp32;
    uint32_t ebx33;
    void** v34;
    uint32_t v35;
    int32_t eax36;
    void* esp37;
    void** eax38;
    uint32_t eax39;
    uint32_t v40;
    struct s5* eax41;
    void* esp42;
    int32_t ecx43;
    struct s6* v44;
    int32_t ebp45;
    int32_t edi46;
    int32_t esi47;
    int32_t eax48;
    uint32_t edx49;
    signed char v50;
    int32_t eax51;
    uint32_t edx52;
    signed char v53;
    uint32_t eax54;
    struct s6* eax55;
    int32_t* esi56;
    int32_t edi57;
    uint32_t ecx58;
    uint32_t edx59;
    struct s7* eax60;
    struct s8* eax61;
    int32_t eax62;
    int32_t eax63;
    void* esp64;
    void* v65;
    uint32_t v66;
    int32_t v67;
    int32_t v68;
    int32_t edi69;
    int32_t ecx70;
    int32_t v71;
    int32_t ebp72;
    int32_t esi73;
    int32_t eax74;
    uint32_t ecx75;
    signed char v76;
    int32_t eax77;
    signed char v78;
    uint32_t eax79;
    uint32_t esi80;
    uint32_t esi81;
    int32_t v82;
    uint32_t eax83;
    int32_t v84;
    int32_t eax85;
    void* v86;
    int32_t v87;
    struct s9* v88;
    int32_t v89;

    eax15 = a2;
    cl16 = eax15->f0;
    v17 = ebx18;
    v19 = ebp20;
    v21 = esi22;
    v23 = edi24;
    if (!(cl16 & 4)) {
        v25 = eax15->f4;
        eax26 = reinterpret_cast<int32_t>(CreateSolidBrush(v25));
        ebx27 = SelectObject;
        ebx27(__return_address(), eax26, v25);
        FillRect();
        ebx27();
        DeleteObject();
        goto v28;
    }
    edi29 = a3;
    *reinterpret_cast<signed char*>(&a3) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax15) + 5);
    ebx30 = 0;
    *reinterpret_cast<signed char*>(&ebx30) = eax15->f9;
    esi31 = edi29->f12;
    ebp32 = GetDeviceCaps;
    ebx33 = ebx30 - (reinterpret_cast<uint32_t>(a3) & 0xff);
    v34 = a1;
    v35 = ebx33;
    ebp32();
    eax36 = reinterpret_cast<int32_t>(ebp32());
    esp37 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 84 - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4 - 4 - 4 - 4 + 4);
    if (esi31 * eax36 > 8 && (eax38 = g41f2e8, !eax38)) {
        eax39 = reinterpret_cast<uint32_t>(GlobalAlloc());
        v40 = eax39;
        eax41 = reinterpret_cast<struct s5*>(GlobalLock());
        esp42 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp37) - 4 - 4 - 4 + 4 - 4 - 4 + 4);
        eax41->f0 = 40;
        eax41->f4 = 8;
        eax41->f8 = 8;
        eax41->f12 = 1;
        eax41->f14 = 24;
        eax41->f20 = 0xc0;
        ecx43 = 0;
        v44 = reinterpret_cast<struct s6*>(&eax41->f40);
        if (!(reinterpret_cast<uint1_t>(esi31 < 0) | reinterpret_cast<uint1_t>(esi31 == 0))) {
            ebp45 = esi31 * esi31;
            while (1) {
                edi46 = 0;
                while (1) {
                    if (esi31 >= ecx43) {
                        esi31 = ecx43;
                    }
                    esi47 = esi31 * esi31;
                    ecx43 = ecx43 + 8;
                    __asm__("cdq ");
                    eax48 = reinterpret_cast<int32_t>(esi47 * v19) / ebp45;
                    edx49 = 0;
                    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx49) + 1) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax48) + v50);
                    __asm__("cdq ");
                    eax51 = reinterpret_cast<int32_t>(esi47 * ebx33) / ebp45;
                    edx52 = edx49;
                    *reinterpret_cast<signed char*>(&edx52) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax51) + v53);
                    __asm__("cdq ");
                    eax54 = reinterpret_cast<uint32_t>(esi47 * v17 / ebp45);
                    *reinterpret_cast<signed char*>(&eax54) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax54) + 12);
                    *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(esp42) + edi46 * 4 + 68) = edx52 << 8 | eax54 & 0xff;
                    ++edi46;
                    if (edi46 >= 8) 
                        break;
                    esi31 = v23;
                    ebx33 = v40;
                }
                eax55 = v44;
                esi56 = reinterpret_cast<int32_t*>(0x41a3d8);
                do {
                    edi57 = 8;
                    do {
                        ++esi56;
                        ecx58 = *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(esp42) + *esi56 * 4 + 68);
                        edx59 = ecx58 >> 16;
                        eax55->f0 = *reinterpret_cast<signed char*>(&edx59);
                        eax60 = reinterpret_cast<struct s7*>(&eax55->f1);
                        eax60->f0 = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx58) + 1);
                        eax61 = reinterpret_cast<struct s8*>(&eax60->f1);
                        eax61->f0 = *reinterpret_cast<signed char*>(&ecx58);
                        eax55 = reinterpret_cast<struct s6*>(&eax61->f1);
                        --edi57;
                    } while (edi57);
                } while (reinterpret_cast<int32_t>(esi56) < reinterpret_cast<int32_t>("</blue>"));
                eax62 = reinterpret_cast<int32_t>(CreateDIBPatternBrush(v34, 0));
                eax63 = reinterpret_cast<int32_t>(SelectObject());
                esp64 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp42) - 4 - 4 - 4 + 4 - 4 - 4 - 4 + 4);
                v65 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp64) + 52);
                FillRect(v66, v65);
                SelectObject(v66, eax63, v66, v65);
                DeleteObject(eax62, v66, eax63, v66, v65);
                esp42 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp64) - 4 - 4 - 4 - 4 + 4 - 4 - 4 - 4 + 4 - 4 - 4 + 4);
                esi31 = eax62;
                ecx43 = v67 + 8;
                v67 = ecx43;
                if (ecx43 >= esi31) 
                    break;
                ebx33 = v66;
            }
        }
        GlobalUnlock();
        GlobalFree();
        goto v68;
    }
    edi69 = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(__return_address()) + 4);
    ecx70 = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(__return_address()) + 12);
    if (edi69 <= ecx70) 
        goto addr_401ab1_20;
    addr_401b99_21:
    goto v71;
    addr_401ab1_20:
    ebp72 = esi31 * esi31;
    do {
        esi73 = edi69 * edi69;
        __asm__("cdq ");
        eax74 = esi73 * -1 / ebp72;
        ecx75 = 0;
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx75) + 1) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax74) + v76);
        __asm__("cdq ");
        eax77 = reinterpret_cast<int32_t>(esi73 * ebx33) / ebp72;
        *reinterpret_cast<signed char*>(&ecx75) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax77) + v78);
        __asm__("cdq ");
        eax79 = reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(esi73 * v35) / ebp72);
        *reinterpret_cast<signed char*>(&eax79) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax79) + *reinterpret_cast<signed char*>(&v23));
        esi80 = ecx75 << 8 | eax79 & 0xff;
        if (esi80 == v21) {
            esi81 = v19;
        } else {
            if (v21 != 0xffffffff) {
                SelectObject(v82, v17);
                DeleteObject(v23, v82, v17);
                esp37 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp37) - 4 - 4 - 4 + 4 - 4 - 4 + 4);
            }
            eax83 = reinterpret_cast<uint32_t>(CreateSolidBrush(esi80));
            esi81 = eax83;
            v21 = esi81;
            eax85 = reinterpret_cast<int32_t>(SelectObject(v84, esi81, esi80));
            esp37 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp37) - 4 - 4 + 4 - 4 - 4 - 4 + 4);
            v23 = eax85;
        }
        v86 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp37) + 52);
        FillRect(v87, v86, esi81);
        esp37 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp37) - 4 - 4 - 4 - 4 + 4);
        ++edi69;
    } while (edi69 <= v88->f12);
    if (v34 == 0xffffffff) 
        goto addr_401b99_21;
    SelectObject(v89, v23, v87, v86, esi81);
    DeleteObject(12, v89, v23, v87, v86, esi81);
    goto addr_401b99_21;
}

int32_t StretchDIBits = 0x197e4;

int32_t SetStretchBltMode = 0x197d0;

int32_t SetBrushOrgEx = 0x197c0;

void fun_401bb0(void** a1, void** a2, struct s4* a3, unsigned char a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14) {
    void** esi15;
    void** ecx16;
    struct s0* eax17;
    void* eax18;
    unsigned char edx19;
    void* v20;
    void* eax21;
    void* ecx22;
    void* edi23;
    void* ebx24;
    void* v25;
    unsigned char edx26;
    unsigned char edx27;
    unsigned char edx28;
    void** eax29;
    void** edx30;
    void** ecx31;
    void** ebx32;
    void** ebp33;
    void** v34;
    void** eax35;
    int32_t ebx36;
    void** edx37;
    void* ecx38;
    void** eax39;
    void* edx40;
    struct s4* edi41;
    void* ebp42;
    void* ecx43;
    void* ebx44;
    void** eax45;
    void** ecx46;
    void* ecx47;
    void* v48;

    esi15 = a2;
    ecx16 = *reinterpret_cast<void***>(esi15 + 32);
    eax17 = reinterpret_cast<struct s0*>(esi15 + 40);
    if (!ecx16) {
        eax18 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax17) + (4 << reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(esi15 + 14)) & 0xffff));
    } else {
        *reinterpret_cast<int16_t*>(&ecx16) = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ecx16) << 2);
        eax18 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax17) + (reinterpret_cast<unsigned char>(ecx16) & 0xffff));
    }
    edx19 = a4;
    v20 = eax18;
    if (!(edx19 & 64)) {
        if (!(edx19 & 32)) {
            eax21 = a3->f12;
            ecx22 = a3->f4;
            edi23 = a3->f0;
            ebx24 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax21) - reinterpret_cast<uint32_t>(ecx22));
            v25 = eax21;
            if ((&edx19)[1] & 1) {
                __asm__("cdq ");
                edi23 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(reinterpret_cast<uint32_t>(a3->f8) - reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi15 + 4)) - reinterpret_cast<uint32_t>(edi23) - reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi15 + 4))) >> 1);
                eax21 = v25;
            }
            edx26 = a4;
            if ((&edx26)[1] & 2) {
                edi23 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(a3->f8) - reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi15 + 4)));
            }
            edx27 = a4;
            if ((&edx27)[1] & 16) {
                __asm__("cdq ");
                eax21 = v25;
                ecx22 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(reinterpret_cast<uint32_t>(ebx24) - reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi15 + 8)) - reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi15 + 8))) >> 1);
            }
            edx28 = a4;
            if ((&edx28)[1] & 32) {
                ecx22 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax21) - reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi15 + 8)));
            }
            eax29 = *reinterpret_cast<void***>(esi15 + 8);
            edx30 = *reinterpret_cast<void***>(esi15 + 4);
            StretchDIBits(a1, edi23, ecx22, edx30, eax29, 0, 0, edx30, eax29, v20, esi15, 0, 0xcc0020);
        } else {
            ecx31 = *reinterpret_cast<void***>(esi15 + 4);
            ebx32 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(a3->f8) - reinterpret_cast<uint32_t>(a3->f0));
            ebp33 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(a3->f12) - reinterpret_cast<uint32_t>(a3->f4));
            if (ebx32 != ecx31 || ebp33 != *reinterpret_cast<void***>(esi15 + 8)) {
                v34 = a1;
                eax35 = reinterpret_cast<void**>(SetStretchBltMode(v34, 4));
                a1 = eax35;
                SetBrushOrgEx(ebx36, 0, 0, 0, v34, 4);
            }
            edx37 = *reinterpret_cast<void***>(esi15 + 8);
            ecx38 = a3->f4;
            eax39 = *reinterpret_cast<void***>(esi15 + 4);
            edx40 = a3->f0;
            StretchDIBits(a1, edx40, ecx38, ebx32, ebp33, 0, 0);
            if (edx37 && eax39) {
                SetStretchBltMode();
                SetBrushOrgEx();
                goto a1;
            }
        }
    } else {
        edi41 = a3;
        ebp42 = edi41->f4;
        if (reinterpret_cast<int32_t>(ebp42) < reinterpret_cast<int32_t>(edi41->f12)) {
            ecx43 = edi41->f8;
            do {
                ebx44 = edi41->f0;
                if (reinterpret_cast<int32_t>(ebx44) < reinterpret_cast<int32_t>(ecx43)) {
                    eax45 = *reinterpret_cast<void***>(esi15 + 4);
                    do {
                        ecx46 = *reinterpret_cast<void***>(esi15 + 8);
                        ecx47 = edi41->f0;
                        v48 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edi41->f4) + reinterpret_cast<uint32_t>(ebp42));
                        StretchDIBits(a1, reinterpret_cast<uint32_t>(ecx47) + reinterpret_cast<uint32_t>(ebx44), v48, eax45, ecx46, 0, 0, eax45, ecx46, v20, esi15, 0, 0xcc0020);
                        eax45 = *reinterpret_cast<void***>(esi15 + 4);
                        ecx43 = edi41->f8;
                        ebx44 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebx44) + reinterpret_cast<unsigned char>(eax45));
                    } while (reinterpret_cast<int32_t>(ebx44) < reinterpret_cast<int32_t>(ecx43));
                }
                ebp42 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebp42) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi15 + 8)));
            } while (reinterpret_cast<int32_t>(ebp42) < reinterpret_cast<int32_t>(edi41->f12));
            return;
        }
    }
    return;
}

void** fun_413210(void** ecx, void** a2, signed char a3, void** a4, void** a5, void** a6, void** a7, ...);

void** fun_413850(void** a1, void** a2, void** a3);

struct s10 {
    void* f0;
    void** f4;
};

struct s11 {
    void** f0;
    signed char[3] pad4;
    void** f4;
};

void** fun_413750(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9);

int32_t SetWindowTextA = 0x19434;

int32_t GetClassNameA = 0x1938c;

void** fun_412fb0(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, ...);

void** g41f27c = reinterpret_cast<void**>(0);

void** g41f29c = reinterpret_cast<void**>(0);

struct s12 {
    signed char[8] pad8;
    uint32_t f8;
    signed char[24] pad36;
    uint32_t f36;
};

int32_t GetParent = 0x1950c;

void** g41f328 = reinterpret_cast<void**>(0);

void** g41f320 = reinterpret_cast<void**>(0);

int32_t SendMessageA = 0x192a8;

int32_t GetWindowLongA = 0x193e2;

int32_t EnableWindow = 0x1936e;

void** fun_405910(void** a1, void** a2, void** a3);

void** fun_405a50(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37) {
    void** v38;
    void** ebx39;
    void** ebx40;
    void** eax41;
    void** v42;
    void** v43;
    void** v44;
    void** v45;
    void** ebp46;
    void** v47;
    void** esi48;
    void** esi49;
    void*** esp50;
    void** v51;
    void** edi52;
    uint32_t ecx53;
    void** edi54;
    uint32_t ecx55;
    void** v56;
    void** v57;
    void** v58;
    void** v59;
    void** eax60;
    void* esp61;
    void** ebp62;
    void** edi63;
    uint32_t ecx64;
    void** ecx65;
    void** v66;
    void** v67;
    void** v68;
    void** v69;
    void** eax70;
    void* esp71;
    void** v72;
    void** edi73;
    uint32_t ecx74;
    void** ecx75;
    void** v76;
    void** v77;
    void** eax78;
    void* esp79;
    void** v80;
    void** v81;
    void** eax82;
    void** edi83;
    void** v84;
    void* eax85;
    void* edx86;
    uint32_t ecx87;
    uint32_t ecx88;
    void** esi89;
    void** ebx90;
    void** edx91;
    uint32_t ecx92;
    void** edi93;
    void** eax94;
    uint32_t ecx95;
    void** edx96;
    void** edi97;
    void** eax98;
    signed char* edi99;
    void** al100;
    void** eax101;
    void** al102;
    void** v103;
    void** eax104;
    struct s1* ebp105;
    struct s10* ebp106;
    struct s11* ebp107;
    void** v108;
    void** esi109;
    uint32_t ecx110;
    signed char* edi111;
    void* ecx112;
    void** al113;
    void** edx114;
    void** eax115;
    void** ecx116;
    struct s1* ebp117;
    struct s10* ebp118;
    struct s11* ebp119;
    void** v120;
    void** v121;
    void* esp122;
    void** v123;
    void** v124;
    void** v125;
    void* esp126;
    void** v127;
    void** eax128;
    void* esp129;
    void** eax130;
    void** edx131;
    void** eax132;
    uint32_t esi133;
    struct s12* edi134;
    void** eax135;
    int1_t zf136;
    int1_t zf137;
    int32_t ebp138;
    int32_t v139;
    void** v140;
    void** eax141;
    void* esp142;
    void** edi143;
    void** eax144;
    void* v145;
    void** v146;
    void* esp147;
    void** esi148;
    void** ecx149;
    int32_t edx150;
    int32_t ecx151;
    int32_t edx152;
    int32_t eax153;
    void* esp154;
    int32_t eax155;
    void** esi156;
    uint32_t eax157;

    v38 = ebx39;
    ebx40 = a1;
    eax41 = reinterpret_cast<void**>(0);
    v42 = reinterpret_cast<void**>(0);
    v43 = reinterpret_cast<void**>(0);
    v44 = reinterpret_cast<void**>(0);
    if (!ebx40) {
        addr_405f78_2:
        return eax41;
    } else {
        v45 = ebp46;
        v47 = esi48;
        esi49 = a2;
        esp50 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 0x7c - 4 - 4 - 4 - 4);
        v51 = edi52;
        ecx53 = 11;
        while (ecx53) {
            --ecx53;
            esi49 = esi49 + 4;
        }
        edi54 = esi49;
        ecx55 = 0xffffffff;
        do {
            if (!ecx55) 
                break;
            --ecx55;
            ++edi54;
            ++esi49;
        } while (*reinterpret_cast<void***>(edi54));
        v56 = reinterpret_cast<void**>(__intrinsic() >> 2 << 4);
        eax60 = fun_413320(~ecx55 + 4, v56, v51, v47, v45, v38, v57, 0, 0, v58, v59, 0);
        esp61 = reinterpret_cast<void*>(esp50 - 4 - 4 + 4);
        ebp62 = eax60;
        edi63 = esi49;
        ecx64 = 0xffffffff;
        do {
            if (!ecx64) 
                break;
            --ecx64;
            ++edi63;
            ++esi49;
        } while (*reinterpret_cast<void***>(edi63));
        ecx65 = reinterpret_cast<void**>(~ecx64 + 4);
        v66 = ecx65;
        eax70 = fun_413320(ecx65, v66, v56, v51, v47, v45, v38, v67, 0, 0, v68, v69);
        esp71 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp61) - 4 - 4 + 4);
        v72 = eax70;
        *reinterpret_cast<void***>(eax70) = reinterpret_cast<void**>(0xffffffff);
        edi73 = esi49;
        ecx74 = 0xffffffff;
        do {
            if (!ecx74) 
                break;
            --ecx74;
            ++edi73;
            ++esi49;
        } while (*reinterpret_cast<void***>(edi73));
        ecx75 = reinterpret_cast<void**>(~ecx74);
        eax78 = fun_413320(ecx75, ecx75, v66, v56, v51, v47, v45, v38, v76, 0, 0, v77);
        esp79 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp71) - 4 - 4 + 4 + 12);
        v80 = eax78;
        *reinterpret_cast<void***>(eax78) = reinterpret_cast<void**>(0);
        v81 = eax78;
        while (eax82 = fun_413210(ecx75, esi49, 60, v51, v47, v45, v38), edi83 = v81, esp79 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp79) - 4 - 4 - 4 + 4 + 8), v84 = eax82, !!eax82) {
            eax85 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax82) - reinterpret_cast<unsigned char>(esi49));
            edx86 = eax85;
            ecx87 = reinterpret_cast<uint32_t>(eax85) >> 2;
            while (ecx87) {
                --ecx87;
                *reinterpret_cast<void***>(edi83) = *reinterpret_cast<void***>(esi49);
                edi83 = edi83 + 4;
                esi49 = esi49 + 4;
            }
            ecx88 = reinterpret_cast<uint32_t>(edx86) & 3;
            while (ecx88) {
                --ecx88;
                *reinterpret_cast<void***>(edi83) = *reinterpret_cast<void***>(esi49);
                ++edi83;
                ++esi49;
            }
            esi89 = reinterpret_cast<void**>(0x41835c);
            ebx90 = reinterpret_cast<void**>(0);
            v81 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v81) + reinterpret_cast<uint32_t>(eax85));
            do {
                edx91 = *reinterpret_cast<void***>(esi89 + 0xfffffffc);
                ecx92 = 0xffffffff;
                edi93 = edx91;
                do {
                    if (!ecx92) 
                        break;
                    --ecx92;
                    ++edi93;
                    ++esi89;
                } while (*reinterpret_cast<void***>(edi93));
                eax94 = fun_413850(v84, edx91, ~ecx92 - 1);
                esp79 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp79) - 4 - 4 - 4 - 4 + 4 + 12);
                ecx95 = 0xffffffff;
                if (!eax94) 
                    break;
                edx96 = *reinterpret_cast<void***>(esi89);
                edi97 = edx96;
                do {
                    if (!ecx95) 
                        break;
                    --ecx95;
                    ++edi97;
                    ++esi89;
                } while (*reinterpret_cast<void***>(edi97));
                ecx75 = v84;
                eax98 = fun_413850(ecx75, edx96, ~ecx95 - 1);
                esp79 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp79) - 4 - 4 - 4 - 4 + 4 + 12);
                if (!eax98) 
                    goto addr_405c4f_32;
                esi89 = esi89 + 16;
                ++ebx90;
            } while (reinterpret_cast<signed char>(esi89) < reinterpret_cast<signed char>("osoft\\Internet Explorer\\Quick Launch"));
            goto addr_405b8b_34;
            if (*reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(esp79) + reinterpret_cast<unsigned char>(ebx90) * 4 + 80) == 0xffffffff) {
                *reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp79) + reinterpret_cast<unsigned char>(ebx90) * 4 + 80) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(v81) - reinterpret_cast<unsigned char>(v80));
            }
            edi99 = *reinterpret_cast<signed char**>((reinterpret_cast<unsigned char>(ebx90) << 4) + 0x418358);
            do {
                if (!ecx95) 
                    break;
                --ecx95;
                ++edi99;
            } while (*edi99);
            ecx75 = v84;
            esi49 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(~ecx95) - 1 + reinterpret_cast<unsigned char>(ecx75));
            if (!reinterpret_cast<int1_t>(ebx90 == 4)) {
                if (!reinterpret_cast<int1_t>(ebx90 == 5)) 
                    goto addr_405af3_42;
                al100 = *reinterpret_cast<void***>(esi49);
                ecx75 = reinterpret_cast<void**>(0);
                v44 = reinterpret_cast<void**>(0);
                if (al100 == 62) 
                    goto addr_405c0a_44;
                do {
                    if (!al100) 
                        break;
                    if (reinterpret_cast<signed char>(al100) >= reinterpret_cast<signed char>(48) && reinterpret_cast<signed char>(al100) <= reinterpret_cast<signed char>(57)) {
                        eax101 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(al100 + reinterpret_cast<uint32_t>(ecx75 + reinterpret_cast<unsigned char>(ecx75) * 4) * 2) + 0xffffffd0);
                        v44 = eax101;
                        ecx75 = eax101;
                    }
                    al100 = *reinterpret_cast<void***>(esi49 + 1);
                    ++esi49;
                } while (!reinterpret_cast<int1_t>(al100 == 62));
                goto addr_405c49_49;
            } else {
                al102 = *reinterpret_cast<void***>(esi49);
                ecx75 = reinterpret_cast<void**>(0);
                v43 = reinterpret_cast<void**>(0);
                v103 = esi49;
                if (al102 == 62) 
                    goto addr_405c0a_44;
                do {
                    if (!al102) 
                        goto addr_405bfd_52;
                    al102 = *reinterpret_cast<void***>(esi49 + 1);
                    ++esi49;
                    ++ecx75;
                } while (!reinterpret_cast<int1_t>(al102 == 62));
                goto addr_405bf3_54;
            }
            addr_405c01_55:
            if (!reinterpret_cast<int1_t>(*reinterpret_cast<void***>(esi49) == 62)) {
                addr_405af3_42:
                ebx40 = a1;
                continue;
            } else {
                addr_405c0a_44:
                ++esi49;
                goto addr_405af3_42;
            }
            addr_405c49_49:
            ++esi49;
            goto addr_405af3_42;
            addr_405bfd_52:
            v43 = ecx75;
            goto addr_405c01_55;
            addr_405bf3_54:
            v43 = ecx75;
            ++esi49;
            goto addr_405af3_42;
            addr_405c4f_32:
            eax104 = *reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp79) + reinterpret_cast<unsigned char>(ebx90) * 4 + 80);
            if (eax104 != 0xffffffff) {
                *reinterpret_cast<void***>(ebp62) = ebx90;
                ebp105 = reinterpret_cast<struct s1*>(ebp62 + 4);
                ebp105->f0 = eax104;
                ebp106 = reinterpret_cast<struct s10*>(&ebp105->f4);
                ebp106->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(v81) - reinterpret_cast<unsigned char>(v80));
                ebp107 = reinterpret_cast<struct s11*>(&ebp106->f4);
                ebp107->f0 = v44;
                ebp62 = reinterpret_cast<void**>(&ebp107->f4);
                ++v42;
                if (reinterpret_cast<int1_t>(ebx90 == 4) && v43) {
                    *reinterpret_cast<void***>(v72) = v108;
                    esi109 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v72) + reinterpret_cast<unsigned char>(ebx90));
                    fun_413750(v103, esi109, v103, v43, v51, v47, v45, v38, v81);
                    *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(esi109) + reinterpret_cast<unsigned char>(v43)) = 0;
                    esp79 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp79) - 4 - 4 - 4 - 4 + 4 + 12);
                    esi89 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi109) + (reinterpret_cast<unsigned char>(v43) + reinterpret_cast<unsigned char>(ebx90) & 0xfffffffc));
                    v43 = reinterpret_cast<void**>(0);
                    v72 = esi89;
                    *reinterpret_cast<void***>(esi89) = reinterpret_cast<void**>(0xffffffff);
                }
                ecx110 = 0xffffffff;
                *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(esp79) + reinterpret_cast<unsigned char>(ebx90) * 4 + 80) = 0xffffffff;
                edi111 = *reinterpret_cast<signed char**>((reinterpret_cast<unsigned char>(ebx90) << 4) + 0x41835c);
                do {
                    if (!ecx110) 
                        break;
                    --ecx110;
                    ++edi111;
                } while (*edi111);
                ecx75 = reinterpret_cast<void**>(~ecx110 - 1);
                esi49 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx75) + reinterpret_cast<unsigned char>(v84));
                goto addr_405af3_42;
            }
            addr_405b8b_34:
            *reinterpret_cast<void***>(v81) = reinterpret_cast<void**>(60);
            ++v81;
            esi49 = v84 + 1;
            goto addr_405af3_42;
        }
        ecx112 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(edi83) - reinterpret_cast<unsigned char>(esi49));
        do {
            al113 = *reinterpret_cast<void***>(esi49);
            *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(ecx112) + reinterpret_cast<unsigned char>(esi49)) = al113;
            ++esi49;
        } while (al113);
        edx114 = v80;
        eax115 = reinterpret_cast<void**>(0);
        do {
            ecx116 = *reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp79) + reinterpret_cast<unsigned char>(eax115) * 4 + 80);
            if (ecx116 != 0xffffffff) {
                *reinterpret_cast<void***>(ebp62) = eax115;
                ebp117 = reinterpret_cast<struct s1*>(ebp62 + 4);
                ebp117->f0 = ecx116;
                ebp118 = reinterpret_cast<struct s10*>(&ebp117->f4);
                ebp118->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(edi83) - reinterpret_cast<unsigned char>(edx114));
                ebp119 = reinterpret_cast<struct s11*>(&ebp118->f4);
                ebp119->f0 = v44;
                ebp62 = reinterpret_cast<void**>(&ebp119->f4);
                ecx116 = v42 + 1;
                v42 = ecx116;
            }
            ++eax115;
        } while (reinterpret_cast<signed char>(eax115) < reinterpret_cast<signed char>(11));
        v120 = edx114;
        v121 = ebx40;
        SetWindowTextA(v121, v120);
        esp122 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp79) - 4 - 4 - 4 + 4);
        v123 = reinterpret_cast<void**>(19);
        v124 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp122) + 60);
        v125 = ebx40;
        GetClassNameA();
        esp126 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp122) - 4 - 4 - 4 - 4 + 4);
        v127 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp126) + 60);
        eax128 = fun_412fb0(ecx116, v127, "RichEdit20A", v125, v124, 19, v121, ecx116, v127, "RichEdit20A", v125, v124, 19, v121);
        esp129 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp126) - 4 - 4 - 4 + 4 + 8);
        if (!eax128) 
            goto addr_405d86_69;
        ecx116 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp129) + 60);
        eax130 = fun_412fb0(ecx116, ecx116, "RICHEDIT", v125, v124, 19, v121, ecx116, ecx116, "RICHEDIT", v125, v124, 19, v121);
        esp129 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp129) - 4 - 4 - 4 + 4 + 8);
        if (eax130) 
            goto addr_405f4a_71;
    }
    addr_405d86_69:
    edx131 = g41f27c;
    eax132 = g41f29c;
    esi133 = 0xffffffff;
    edi134 = *reinterpret_cast<struct s12**>(reinterpret_cast<uint32_t>(edx131 + reinterpret_cast<unsigned char>(eax132) * 4) + 0x7e);
    if (edi134) {
        eax135 = reinterpret_cast<void**>(GetParent(ebx40));
        esp129 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp129) - 4 - 4 + 4);
        zf136 = eax135 == g41f328;
        if (zf136) {
            esi133 = edi134->f36;
        }
        zf137 = eax135 == g41f320;
        if (zf137) {
            esi133 = edi134->f8;
        }
    }
    if (v51 || esi133 != 0xffffffff) {
        ebp138 = SendMessageA;
        v139 = 0x43b;
        v140 = ebx40;
        eax141 = reinterpret_cast<void**>(ebp138());
        esp142 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp129) - 4 - 4 - 4 - 4 - 4 + 4);
        edi143 = eax141;
        eax144 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax141) & 0x80000);
        v120 = edi143;
        v42 = eax144;
        if (eax144) {
            ecx116 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi143) & 0xfff7ffff);
            ebp138(ebx40, 0x445, 0, ecx116);
            esp142 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp142) - 4 - 4 - 4 - 4 - 4 + 4);
        }
        if (esi133 != 0xffffffff) {
            v123 = reinterpret_cast<void**>(0);
            v145 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp142) + 24);
            v146 = ebx40;
            v121 = reinterpret_cast<void**>(0x7fffffff);
            ebp138(v146, 0x437, 0, v145);
            esp147 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp142) - 4 - 4 - 4 - 4 - 4 + 4);
            ecx116 = reinterpret_cast<void**>(15);
            while (ecx116) {
                --ecx116;
            }
            v84 = reinterpret_cast<void**>(0x40000000);
            ebp138(ebx40, 0x444, 1, reinterpret_cast<int32_t>(esp147) + 80, v146, 0x437, 0, v145);
            esp142 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp147) - 4 - 4 - 4 - 4 - 4 + 4);
            edi143 = v140;
        }
        if (v124) {
            esi148 = v81 + 8;
            do {
                ecx149 = *reinterpret_cast<void***>(esi148);
                edx150 = *reinterpret_cast<int32_t*>(esi148 + 0xfffffff8);
                v123 = *reinterpret_cast<void***>(esi148 + 0xfffffffc);
                v121 = ecx149;
                ecx151 = 15;
                edx152 = edx150 << 4;
                while (ecx151) {
                    --ecx151;
                    esi148 = esi148 + 4;
                }
                eax153 = *reinterpret_cast<int32_t*>(edx152 + 0x418360);
                if (eax153 != 0x40000000) {
                    if (eax153 != 0x80000000) {
                    }
                }
                ecx116 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp142) + 24);
                ebp138(ebx40, 0x437, 0, ecx116);
                esp154 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp142) - 4 - 4 - 4 - 4 - 4 + 4);
                ebp138(ebx40, 0x444, 1, reinterpret_cast<int32_t>(esp154) + 80, ebx40, 0x437, 0, ecx116);
                esp142 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp154) - 4 - 4 - 4 - 4 - 4 + 4);
                esi148 = esi148 + 16;
                eax155 = v139 - 1;
                v139 = eax155;
            } while (eax155);
            edi143 = v140;
        }
        if (v42) {
            ebp138(ebx40, 0x445, 0, edi143);
        }
        ebp138(ebx40, 0xb1, 0xff, 0);
    }
    esi156 = v42;
    if (60 == esi156) {
        eax157 = reinterpret_cast<uint32_t>(GetWindowLongA(ebx40, 0xf0));
        if (*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax157) + 1) & 8 && !(eax157 & 0x3000c0)) {
            EnableWindow(ebx40, 0, ebx40, 0xf0);
        }
    } else {
        fun_405910(ebx40, esi156, v125);
        v42 = reinterpret_cast<void**>(0);
        EnableWindow(ebx40, 1);
        goto addr_405f4a_71;
    }
    addr_405f4e_103:
    fun_413483(ecx116, v43, v125, v124, v123, v121, v120, ecx116, v43, v125, v124, v123, v121, v120);
    if (esi156) {
        fun_413483(ecx116, esi156, v125, v124, v123, v121, v120, ecx116, esi156, v125, v124, v123, v121, v120);
    }
    eax41 = fun_413483(v84, v84, v125, v124, v123, v121, v120, v84, v84, v125, v124, v123, v121, v120);
    goto addr_405f78_2;
    addr_405f4a_71:
    esi156 = v42;
    goto addr_405f4e_103;
}

void** fun_4131d0(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, ...);

void fun_401ff0(void** ecx, void** a2, void** a3) {
    void** v4;
    void** v5;
    void** ebx6;
    void** v7;
    void** ebp8;
    void** ebp9;
    void** v10;
    void** esi11;
    void** v12;
    void** edi13;
    void** edi14;
    uint32_t ecx15;
    void** ecx16;
    void** eax17;
    void** eax18;
    void** ebx19;
    void** edx20;
    void** esi21;
    void** edi22;
    uint32_t ecx23;
    void** ecx24;
    void** eax25;
    void** esi26;
    void** eax27;
    void** esi28;
    void* edx29;
    void** cl30;

    v4 = reinterpret_cast<void**>(__return_address());
    v5 = ebx6;
    v7 = ebp8;
    ebp9 = a2;
    v10 = esi11;
    v12 = edi13;
    edi14 = ebp9;
    ecx15 = 0xffffffff;
    do {
        if (!ecx15) 
            break;
        --ecx15;
        ++edi14;
    } while (*reinterpret_cast<void***>(edi14));
    ecx16 = reinterpret_cast<void**>(~ecx15 - 1);
    if (reinterpret_cast<unsigned char>(ecx16) > reinterpret_cast<unsigned char>(a3) && ((eax17 = fun_413210(ecx16, ebp9, 92, v12, v10, v7, v5), !!eax17) && ((eax18 = fun_4131d0(ecx16, ebp9, 92, v12, v10, v7, v5, v4, a2, a3), ebx19 = eax18, !!ebx19) && reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(eax18) - reinterpret_cast<unsigned char>(eax17)) >= reinterpret_cast<int32_t>(4)))) {
        edx20 = eax17;
        esi21 = eax17 + 1;
        if (reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(ebx19) - reinterpret_cast<unsigned char>(edx20)) >= reinterpret_cast<int32_t>(4)) {
            do {
                edi22 = ebx19;
                ecx23 = 0xffffffff;
                do {
                    if (!ecx23) 
                        break;
                    --ecx23;
                    ++edi22;
                    ++esi21;
                } while (*reinterpret_cast<void***>(edi22));
                ecx24 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(~ecx23) - 1 + (reinterpret_cast<unsigned char>(edx20) - reinterpret_cast<unsigned char>(ebp9)));
            } while (reinterpret_cast<unsigned char>(ecx24) < reinterpret_cast<unsigned char>(a3) && ((esi21 = edx20 + 1, eax25 = fun_413210(ecx24, esi21, 92, v12, v10, v7, v5), edx20 = eax25, !!edx20) && reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(ebx19) - reinterpret_cast<unsigned char>(edx20)) >= reinterpret_cast<int32_t>(4)));
        }
        *reinterpret_cast<void***>(esi21) = reinterpret_cast<void**>(46);
        esi26 = esi21 + 1;
        eax27 = ebx19;
        *reinterpret_cast<void***>(esi26) = reinterpret_cast<void**>(46);
        esi28 = esi26 + 1;
        *reinterpret_cast<void***>(esi28) = reinterpret_cast<void**>(46);
        edx29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(esi28 + 1) - reinterpret_cast<unsigned char>(ebx19));
        do {
            cl30 = *reinterpret_cast<void***>(eax27);
            *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(edx29) + reinterpret_cast<unsigned char>(eax27)) = cl30;
            ++eax27;
        } while (cl30);
    }
    return;
}

void** fun_413210(void** ecx, void** a2, signed char a3, void** a4, void** a5, void** a6, void** a7, ...) {
    uint32_t eax8;
    uint32_t ebx9;
    uint32_t eax10;
    void** edx11;
    uint32_t ebx12;
    uint32_t ebx13;
    uint32_t ecx14;
    void* esi15;
    void** eax16;
    uint32_t eax17;
    uint32_t eax18;

    eax8 = 0;
    *reinterpret_cast<signed char*>(&eax8) = a3;
    ebx9 = eax8;
    eax10 = eax8 << 8;
    edx11 = a2;
    if (!(reinterpret_cast<unsigned char>(edx11) & 3)) {
        addr_41323b_3:
        ebx12 = ebx9 | eax10;
        ebx13 = ebx12 << 16 | ebx12;
    } else {
        do {
            ++edx11;
            if (*reinterpret_cast<void***>(edx11) == *reinterpret_cast<void***>(&ebx9)) 
                goto addr_413200_5;
            if (!*reinterpret_cast<void***>(edx11)) 
                goto addr_413284_7;
        } while (reinterpret_cast<unsigned char>(edx11) & 3);
        goto addr_41323b_3;
    }
    while (1) {
        ecx14 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx11)) ^ ebx13;
        esi15 = reinterpret_cast<void*>(*reinterpret_cast<void***>(edx11) + 0x7efefeff);
        edx11 = edx11 + 4;
        if ((ecx14 ^ 0xffffffff ^ 0x7efefeff + ecx14) & 0x81010100) {
            eax16 = *reinterpret_cast<void***>(edx11 + 0xfffffffc);
            if (*reinterpret_cast<signed char*>(&eax16) == *reinterpret_cast<signed char*>(&ebx13)) 
                break;
            if (!*reinterpret_cast<signed char*>(&eax16)) 
                goto addr_413282_12;
            if (*reinterpret_cast<signed char*>(&eax16 + 1) == *reinterpret_cast<signed char*>(&ebx13)) 
                goto addr_4132be_14;
            if (!*reinterpret_cast<signed char*>(&eax16 + 1)) 
                goto addr_413282_12;
            eax17 = reinterpret_cast<unsigned char>(eax16) >> 16;
            if (*reinterpret_cast<signed char*>(&eax17) == *reinterpret_cast<signed char*>(&ebx13)) 
                goto addr_4132b7_17;
            if (!*reinterpret_cast<signed char*>(&eax17)) 
                goto addr_413282_12;
            if (*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax17) + 1) == *reinterpret_cast<signed char*>(&ebx13)) 
                goto addr_4132b0_20;
            if (!*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax17) + 1)) 
                goto addr_413282_12;
        } else {
            eax18 = (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx11)) ^ 0xffffffff ^ reinterpret_cast<uint32_t>(esi15)) & 0x81010100;
            if (!eax18) 
                continue;
            if (eax18 & 0x1010100) 
                goto addr_413282_12;
            if (!(reinterpret_cast<uint32_t>(esi15) & 0x80000000)) 
                goto addr_413282_12;
        }
    }
    return edx11 + 0xfffffffc;
    addr_413282_12:
    addr_413284_7:
    return 0;
    addr_4132be_14:
    return edx11 + 0xfffffffd;
    addr_4132b7_17:
    return edx11 + 0xfffffffe;
    addr_4132b0_20:
    return edx11 + 0xffffffff;
    addr_413200_5:
    return edx11 + 0xffffffff;
}

void** fun_4131d0(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, ...) {
    void** edi11;
    uint32_t ecx12;
    int32_t ecx13;
    void** edi14;
    void** al15;
    void** edi16;
    void** eax17;

    edi11 = a2;
    ecx12 = 0xffffffff;
    do {
        if (!ecx12) 
            break;
        --ecx12;
        ++edi11;
    } while (*reinterpret_cast<void***>(edi11));
    ecx13 = reinterpret_cast<int32_t>(-(ecx12 + 1));
    edi14 = edi11 - 1;
    al15 = a3;
    do {
        if (!ecx13) 
            break;
        --ecx13;
        --edi14;
    } while (*reinterpret_cast<void***>(edi14) != al15);
    edi16 = edi14 + 1;
    if (*reinterpret_cast<void***>(edi16) == al15) {
        eax17 = edi16;
    } else {
        eax17 = reinterpret_cast<void**>(0);
    }
    return eax17;
}

void*** g41f8a8 = reinterpret_cast<void***>(0);

void** fun_414f6f(void** ecx);

void** fun_414d04(int32_t a1, void** a2);

void** g41f8a4 = reinterpret_cast<void**>(0);

int32_t HeapCompact = 0x19a92;

uint32_t g41f38c = 0;

uint32_t* g41f388 = reinterpret_cast<uint32_t*>(0);

void fun_4132cc(void** ecx, void** a2) {
    void*** eax3;
    void** v4;
    int32_t eax5;
    uint32_t eax6;

    eax3 = g41f8a8;
    if (!reinterpret_cast<int1_t>(eax3 == 3)) {
        if (reinterpret_cast<int1_t>(eax3 == 2)) {
            fun_414f6f(ecx);
            ecx = reinterpret_cast<void**>(32);
        }
    } else {
        fun_414d04(__return_address(), a2);
    }
    v4 = g41f8a4;
    eax5 = reinterpret_cast<int32_t>(HeapCompact(ecx));
    if (eax5) {
        goto v4;
    } else {
        eax6 = reinterpret_cast<uint32_t>(GetLastError(ecx));
        if (eax6 == 0x78) {
            g41f38c = 0x78;
            g41f388 = reinterpret_cast<uint32_t*>(40);
        }
        goto v4;
    }
}

void** g41f404 = reinterpret_cast<void**>(0);

void** fun_413332(uint32_t a1, void** a2);

void** fun_413320(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, ...) {
    void** v13;
    void** eax14;

    v13 = g41f404;
    eax14 = fun_413332(__return_address(), v13);
    return eax14;
}

void** g41ec44 = reinterpret_cast<void**>(0xe0);

void** fun_4150cd(void** ecx, void** a2);

void** g41f8a0 = reinterpret_cast<void**>(0);

void** fun_41484f(void** ecx, void** a2);

int32_t HeapAlloc = 0x19aa0;

int32_t fun_4153f9(void** ecx);

void** fun_415420(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10);

void** fun_4133d2(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6) {
    void** v7;
    void** v8;
    void** ebp9;
    void** v10;
    void** esi11;
    void** esi12;
    void** v13;
    void** edi14;
    void** v15;
    void** edi16;
    void*** eax17;
    int1_t below_or_equal18;
    void** v19;
    void** ecx20;
    void** eax21;
    int1_t below_or_equal22;
    void** eax23;
    void** v24;
    void** eax25;
    int1_t zf26;
    int32_t eax27;
    void** eax28;
    void** v29;

    v7 = reinterpret_cast<void**>(__return_address());
    v8 = ebp9;
    v10 = esi11;
    esi12 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(a1) * reinterpret_cast<unsigned char>(a2));
    v13 = edi14;
    v15 = esi12;
    if (reinterpret_cast<unsigned char>(esi12) <= reinterpret_cast<unsigned char>(0xffffffe0)) {
        if (!esi12) {
            esi12 = reinterpret_cast<void**>(1);
        }
        esi12 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esi12 + 15) & 0xfffffff0);
    }
    while (1) {
        edi16 = reinterpret_cast<void**>(0);
        if (reinterpret_cast<unsigned char>(esi12) <= reinterpret_cast<unsigned char>(0xffffffe0)) {
            eax17 = g41f8a8;
            if (!reinterpret_cast<int1_t>(eax17 == 3)) {
                if (!reinterpret_cast<int1_t>(eax17 == 2)) 
                    goto addr_41343d_8;
                below_or_equal18 = reinterpret_cast<unsigned char>(esi12) <= reinterpret_cast<unsigned char>(g41ec44);
                if (!below_or_equal18) 
                    goto addr_41343d_8;
                v19 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi12) >> 4);
                eax21 = fun_4150cd(ecx20, v19);
                edi16 = eax21;
                ecx20 = v19;
                if (edi16) 
                    goto addr_41347c_11;
            } else {
                below_or_equal22 = reinterpret_cast<unsigned char>(v15) <= reinterpret_cast<unsigned char>(g41f8a0);
                if (below_or_equal22) {
                    eax23 = fun_41484f(ecx20, v15);
                    edi16 = eax23;
                    ecx20 = v15;
                    if (edi16) 
                        goto addr_413468_14;
                }
            }
            addr_41343d_8:
            v24 = g41f8a4;
            eax25 = reinterpret_cast<void**>(HeapAlloc(ecx20, v24, 8, esi12));
            edi16 = eax25;
            if (edi16) 
                break;
        }
        zf26 = g41f404 == 0;
        if (zf26) 
            break;
        eax27 = fun_4153f9(ecx20);
        ecx20 = esi12;
        if (!eax27) 
            goto addr_41347f_18;
    }
    addr_413476_20:
    eax28 = edi16;
    addr_413478_21:
    return eax28;
    addr_41347f_18:
    eax28 = reinterpret_cast<void**>(0);
    goto addr_413478_21;
    addr_41347c_11:
    v29 = esi12;
    addr_41346b_22:
    fun_415420(ecx20, edi16, 0, v29, v13, v10, v8, v7, v15, a2);
    goto addr_413476_20;
    addr_413468_14:
    v29 = v15;
    goto addr_41346b_22;
}

struct s13 {
    struct s13* f0;
    signed char[12] pad16;
    void** f16;
    signed char[3] pad20;
    void** f20;
};

void** fun_415031(void** a1, struct s13** a2, void*** a3);

void** fun_415088(void** a1, void** a2, void** a3);

void** fun_4144fb(void** a1);

int32_t HeapFree = 0x19aac;

void** fun_414526(void** ecx, void** a2, void** a3);

void** fun_413483(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, ...) {
    void* ebp8;
    void*** eax9;
    void** eax10;
    void** v11;
    void** eax12;
    void** eax13;
    void** v14;

    ebp8 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    if (a2) {
        eax9 = g41f8a8;
        if (!reinterpret_cast<int1_t>(eax9 == 3)) {
            if (!reinterpret_cast<int1_t>(eax9 == 2) || (eax10 = fun_415031(a2, reinterpret_cast<int32_t>(ebp8) - 4, reinterpret_cast<int32_t>(ebp8) + 8), eax10 == 0)) {
                v11 = a2;
                goto addr_4134db_5;
            } else {
                eax12 = fun_415088(ecx, a2, eax10);
            }
        } else {
            eax13 = fun_4144fb(a2);
            ecx = a2;
            v11 = a2;
            if (!eax13) {
                addr_4134db_5:
                v14 = g41f8a4;
                eax12 = reinterpret_cast<void**>(HeapFree(ecx, v14, 0, v11));
            } else {
                eax12 = fun_414526(ecx, eax13, v11);
            }
        }
    }
    return eax12;
}

void** g41a5e0 = reinterpret_cast<void**>(92);

void fun_402110(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, ...) {
    void** edx7;
    void** edi8;
    uint32_t ecx9;
    void** edi10;
    uint32_t ecx11;
    void** ax12;

    edx7 = a2;
    if (!*reinterpret_cast<void***>(edx7)) {
        addr_402140_2:
        return;
    } else {
        edi8 = edx7;
        ecx9 = 0xffffffff;
        do {
            if (!ecx9) 
                break;
            --ecx9;
            ++edi8;
        } while (*reinterpret_cast<void***>(edi8));
        if (*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(~ecx9) - 1 + reinterpret_cast<unsigned char>(edx7) - 1) == 92) 
            goto addr_402140_2;
    }
    edi10 = edx7;
    ecx11 = 0xffffffff;
    do {
        if (!ecx11) 
            break;
        --ecx11;
        ++edi10;
    } while (*reinterpret_cast<void***>(edi10));
    ax12 = g41a5e0;
    *reinterpret_cast<void***>(edi10 + 0xffffffff) = ax12;
    goto addr_402140_2;
}

void** fun_4135a0(void** a1, void** a2, void** a3) {
    void** ecx4;
    void** edi5;
    void** eax6;
    void** edi7;
    void** esi8;
    void** ebx9;
    uint32_t ecx10;
    void** edx11;
    void** dl12;

    ecx4 = a3;
    if (!ecx4) {
        addr_413654_2:
        return a1;
    } else {
        edi5 = a1;
        if (!(reinterpret_cast<unsigned char>(edi5) & 3)) {
            do {
                addr_4135ca_4:
                edi5 = edi5 + 4;
                if (!((reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi5)) ^ 0xffffffff ^ reinterpret_cast<uint32_t>(*reinterpret_cast<void***>(edi5) + 0x7efefeff)) & 0x81010100)) 
                    goto addr_4135ca_4;
                eax6 = *reinterpret_cast<void***>(edi5 + 0xfffffffc);
                if (!*reinterpret_cast<signed char*>(&eax6)) 
                    break;
                if (!*reinterpret_cast<signed char*>(&eax6 + 1)) 
                    goto addr_413603_7;
                if (!(reinterpret_cast<unsigned char>(eax6) & 0xff0000)) 
                    goto addr_4135fe_9;
            } while (reinterpret_cast<unsigned char>(eax6) & 0xff000000);
            goto addr_4135fb_11;
        } else {
            do {
                ++edi5;
                if (!*reinterpret_cast<void***>(edi5)) 
                    goto addr_4135fb_11;
            } while (reinterpret_cast<unsigned char>(edi5) & 3);
            goto addr_4135ca_4;
        }
    }
    edi7 = edi5 - 4;
    addr_41360b_15:
    esi8 = a2;
    if (!(reinterpret_cast<unsigned char>(esi8) & 3)) {
        ebx9 = ecx4;
        ecx10 = reinterpret_cast<unsigned char>(ecx4) >> 2;
        if (ecx10) 
            goto addr_41366c_17;
        goto addr_41363c_19;
    }
    do {
        edx11 = *reinterpret_cast<void***>(esi8);
        ++esi8;
        if (!edx11) 
            break;
        *reinterpret_cast<void***>(edi7) = edx11;
        ++edi7;
        --ecx4;
        if (!ecx4) 
            goto addr_413650_22;
    } while (reinterpret_cast<unsigned char>(esi8) & 3);
    goto addr_413635_24;
    addr_41365a_25:
    *reinterpret_cast<void***>(edi7) = edx11;
    return a1;
    addr_413635_24:
    ebx9 = ecx4;
    ecx10 = reinterpret_cast<unsigned char>(ecx4) >> 2;
    if (ecx10) {
        do {
            addr_41366c_17:
            edx11 = *reinterpret_cast<void***>(esi8);
            esi8 = esi8 + 4;
            if ((reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi8)) ^ 0xffffffff ^ reinterpret_cast<uint32_t>(*reinterpret_cast<void***>(esi8) + 0x7efefeff)) & 0x81010100) {
                if (!edx11) 
                    goto addr_41365a_25;
                if (!*reinterpret_cast<signed char*>(&edx11 + 1)) 
                    break;
                if (!(reinterpret_cast<unsigned char>(edx11) & 0xff0000)) 
                    goto addr_4136a8_29;
                if (!(reinterpret_cast<unsigned char>(edx11) & 0xff000000)) 
                    goto addr_41369e_31;
            }
            *reinterpret_cast<void***>(edi7) = edx11;
            edi7 = edi7 + 4;
            --ecx10;
        } while (ecx10);
        goto addr_41363c_19;
    } else {
        addr_41363c_19:
        ecx4 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebx9) & 3);
        if (!ecx4) {
            addr_413650_22:
            *reinterpret_cast<void***>(edi7) = ecx4;
            goto addr_413652_33;
        } else {
            do {
                dl12 = *reinterpret_cast<void***>(esi8);
                ++esi8;
                *reinterpret_cast<void***>(edi7) = dl12;
                ++edi7;
                if (!dl12) 
                    goto addr_413652_33;
                --ecx4;
            } while (ecx4);
            goto addr_413650_22;
        }
    }
    *reinterpret_cast<void***>(edi7) = edx11;
    return a1;
    addr_4136a8_29:
    *reinterpret_cast<void***>(edi7) = edx11;
    *reinterpret_cast<void***>(edi7 + 2) = reinterpret_cast<void**>(0);
    return a1;
    addr_41369e_31:
    *reinterpret_cast<void***>(edi7) = edx11;
    return a1;
    addr_413652_33:
    goto addr_413654_2;
    addr_413603_7:
    edi7 = edi5 - 3;
    goto addr_41360b_15;
    addr_4135fe_9:
    edi7 = edi5 - 2;
    goto addr_41360b_15;
    addr_4135fb_11:
    edi7 = edi5 - 1;
    goto addr_41360b_15;
}

int32_t SetCurrentDirectoryA = 0x190cc;

int32_t GetCurrentDirectoryA = 0x190e4;

signed char fun_415478(void** ecx, void** a2, int32_t a3, void* a4, void** a5);

int32_t SetEnvironmentVariableA = 0x19acc;

int32_t fun_413518(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, ...) {
    void* ebp8;
    int32_t eax9;
    void* v10;
    int32_t eax11;
    unsigned char v12;
    unsigned char v13;
    void** v14;
    int32_t eax15;
    uint32_t eax16;
    void** v17;

    ebp8 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax9 = reinterpret_cast<int32_t>(SetCurrentDirectoryA(a2));
    if (!eax9 || ((v10 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ebp8) - 0x108), eax11 = reinterpret_cast<int32_t>(GetCurrentDirectoryA(0x105, v10, a2)), eax11 == 0) || (v12 != 92 && v12 != 47 || v12 != v13) && (v14 = reinterpret_cast<void**>(static_cast<uint32_t>(v12)), fun_415478(ecx, v14, 0x105, v10, a2), ecx = v14, eax15 = reinterpret_cast<int32_t>(SetEnvironmentVariableA(ecx, reinterpret_cast<int32_t>(ebp8) + 8, reinterpret_cast<int32_t>(ebp8) - 0x108, 0x105, v10, a2)), eax15 == 0))) {
        eax16 = reinterpret_cast<uint32_t>(GetLastError(ecx, a2));
        fun_41427a(ecx, eax16, a2, v17);
        return -1;
    } else {
        return 0;
    }
}

int32_t CreateDirectoryA = 0x19ab8;

int32_t fun_4134ec(void** ecx, void** a2) {
    int32_t eax3;
    uint32_t eax4;

    eax3 = reinterpret_cast<int32_t>(CreateDirectoryA());
    if (eax3) {
        eax4 = 0;
    } else {
        eax4 = reinterpret_cast<uint32_t>(GetLastError());
    }
    if (!eax4) {
        return 0;
    } else {
        fun_41427a(ecx, eax4, __return_address(), 0);
        return -1;
    }
}

void** fun_402150(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, ...) {
    void** edx7;
    void** edi8;
    uint32_t ecx9;
    void* ecx10;

    edx7 = a2;
    edi8 = edx7;
    ecx9 = 0xffffffff;
    do {
        if (!ecx9) 
            break;
        --ecx9;
        ++edi8;
    } while (*reinterpret_cast<void***>(edi8));
    ecx10 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(~ecx9) - 1);
    if (reinterpret_cast<int32_t>(ecx10) > 3 && *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ecx10) + reinterpret_cast<unsigned char>(edx7) + 0xffffffff) == 92) {
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ecx10) + reinterpret_cast<unsigned char>(edx7) + 0xffffffff) = 0;
    }
    return 0;
}

void** g41f258 = reinterpret_cast<void**>(0);

struct s14 {
    uint16_t f0;
    void** f2;
};

void** fun_403a00(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36) {
    void** ecx37;
    void** esi38;
    void** edx39;
    void** edi40;
    uint32_t ecx41;

    if (reinterpret_cast<signed char>(a1) >= reinterpret_cast<signed char>(10) || ((ecx37 = g41f258, *reinterpret_cast<struct s14**>(reinterpret_cast<uint32_t>(ecx37 + reinterpret_cast<unsigned char>(a1) * 4) + 62) == 0) || (esi38 = a2, edx39 = reinterpret_cast<void**>(&(*reinterpret_cast<struct s14**>(reinterpret_cast<uint32_t>(ecx37 + reinterpret_cast<unsigned char>(a1) * 4) + 62))->f2), *reinterpret_cast<uint16_t*>(&esi38) >= (*reinterpret_cast<struct s14**>(reinterpret_cast<uint32_t>(ecx37 + reinterpret_cast<unsigned char>(a1) * 4) + 62))->f0))) {
        return 0x41f380;
    } else {
        if (!(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(esi38) < reinterpret_cast<signed char>(0)) | reinterpret_cast<uint1_t>(esi38 == 0))) {
            do {
                edi40 = edx39;
                ecx41 = 0xffffffff;
                do {
                    if (!ecx41) 
                        break;
                    --ecx41;
                    ++edi40;
                    ++esi38;
                } while (*reinterpret_cast<void***>(edi40));
                --esi38;
                edx39 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx39) + reinterpret_cast<unsigned char>(~ecx41 - 1) + 1);
            } while (esi38);
        }
        return edx39;
    }
}

void** g41f3e8 = reinterpret_cast<void**>(0);

void** fun_4141af(void** ecx, void** a2, void** a3);

void** fun_413850(void** a1, void** a2, void** a3) {
    void** ecx4;
    void** esi5;
    void** edi6;
    int1_t zf7;
    void** eax8;
    void** ebx9;
    void** edi10;
    void** eax11;
    int1_t cf12;
    void** ecx13;
    void** ah14;
    void** al15;
    int1_t cf16;

    ecx4 = a3;
    if (!ecx4) 
        goto addr_4138f6_2;
    esi5 = a1;
    edi6 = a2;
    zf7 = g41f3e8 == 0;
    if (!zf7) {
        eax8 = reinterpret_cast<void**>(0);
        ebx9 = reinterpret_cast<void**>(0);
        edi10 = edi6;
        do {
            eax8 = *reinterpret_cast<void***>(esi5);
            ebx9 = *reinterpret_cast<void***>(edi10);
            if (!eax8) 
                break;
            if (!ebx9) 
                break;
            ++esi5;
            ++edi10;
            eax11 = fun_4141af(ecx4, ebx9, eax8);
            ebx9 = eax11;
            eax8 = fun_4141af(ecx4, eax8, ecx4);
            cf12 = reinterpret_cast<unsigned char>(eax8) < reinterpret_cast<unsigned char>(ebx9);
            if (eax8 != ebx9) 
                goto addr_4138ed_8;
            --ecx4;
        } while (ecx4);
        ecx4 = reinterpret_cast<void**>(0);
        cf12 = reinterpret_cast<unsigned char>(eax8) < reinterpret_cast<unsigned char>(ebx9);
        if (eax8 == ebx9) {
            addr_4138f6_2:
            return ecx4;
        } else {
            addr_4138ed_8:
            ecx4 = reinterpret_cast<void**>(0xffffffff);
            if (!cf12) {
                ecx4 = reinterpret_cast<void**>(-reinterpret_cast<unsigned char>(0xffffffff));
                goto addr_4138f6_2;
            }
        }
    }
    ecx13 = ecx4;
    do {
        ah14 = *reinterpret_cast<void***>(esi5);
        al15 = *reinterpret_cast<void***>(edi6);
        if (!ah14) 
            break;
        if (!al15) 
            break;
        ++esi5;
        ++edi6;
        if (reinterpret_cast<unsigned char>(ah14) >= 65 && reinterpret_cast<unsigned char>(ah14) <= 90) {
            ah14 = ah14 + 32;
        }
        if (reinterpret_cast<unsigned char>(al15) >= 65 && reinterpret_cast<unsigned char>(al15) <= 90) {
            al15 = al15 + 32;
        }
        cf16 = reinterpret_cast<unsigned char>(ah14) < reinterpret_cast<unsigned char>(al15);
        if (ah14 != al15) 
            goto addr_4138ab_20;
        --ecx13;
    } while (ecx13);
    ecx4 = reinterpret_cast<void**>(0);
    cf16 = reinterpret_cast<unsigned char>(ah14) < reinterpret_cast<unsigned char>(al15);
    if (ah14 == al15) 
        goto addr_4138f6_2;
    addr_4138ab_20:
    ecx4 = reinterpret_cast<void**>(0xffffffff);
    if (!cf16) {
        ecx4 = reinterpret_cast<void**>(-reinterpret_cast<unsigned char>(0xffffffff));
        goto addr_4138f6_2;
    }
}

int32_t RegOpenKeyExA = 0x19878;

int32_t RegQueryValueA = 0x19888;

int32_t RegCloseKey = 0x19856;

int32_t fun_402810(int32_t a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11) {
    int32_t eax12;

    eax12 = reinterpret_cast<int32_t>(RegOpenKeyExA());
    if (!eax12) {
        RegQueryValueA(1, eax12, reinterpret_cast<int32_t>(__zero_stack_offset()) + 8);
        RegCloseKey(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4 + 8, 1, eax12, reinterpret_cast<int32_t>(__zero_stack_offset()) + 8);
    }
    goto a2;
}

void** fun_4136d0(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10) {
    void** dl11;
    void** edi12;
    void** dh13;
    uint32_t eax14;
    uint32_t ebx15;
    uint32_t eax16;
    void** edx17;
    uint32_t ebx18;
    uint32_t ebx19;
    uint32_t ecx20;
    void* esi21;
    void** eax22;
    uint32_t eax23;
    uint32_t eax24;
    void** al25;
    void** esi26;
    void** ecx27;

    dl11 = *reinterpret_cast<void***>(a2);
    edi12 = a1;
    if (!dl11) {
        return edi12;
    }
    dh13 = *reinterpret_cast<void***>(a2 + 1);
    if (dh13) 
        goto addr_4136e8_4;
    eax14 = 0;
    *reinterpret_cast<void***>(&eax14) = dl11;
    ebx15 = eax14;
    eax16 = eax14 << 8;
    edx17 = a1;
    if (reinterpret_cast<unsigned char>(edx17) & 3) 
        goto addr_413228_7;
    addr_41323b_8:
    ebx18 = ebx15 | eax16;
    ebx19 = ebx18 << 16 | ebx18;
    while (1) {
        ecx20 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx17)) ^ ebx19;
        esi21 = reinterpret_cast<void*>(*reinterpret_cast<void***>(edx17) + 0x7efefeff);
        edx17 = edx17 + 4;
        if ((ecx20 ^ 0xffffffff ^ 0x7efefeff + ecx20) & 0x81010100) {
            eax22 = *reinterpret_cast<void***>(edx17 + 0xfffffffc);
            if (*reinterpret_cast<signed char*>(&eax22) == *reinterpret_cast<signed char*>(&ebx19)) 
                break;
            if (!*reinterpret_cast<signed char*>(&eax22)) 
                goto addr_413282_12;
            if (*reinterpret_cast<signed char*>(&eax22 + 1) == *reinterpret_cast<signed char*>(&ebx19)) 
                goto addr_4132be_14;
            if (!*reinterpret_cast<signed char*>(&eax22 + 1)) 
                goto addr_413282_12;
            eax23 = reinterpret_cast<unsigned char>(eax22) >> 16;
            if (*reinterpret_cast<signed char*>(&eax23) == *reinterpret_cast<signed char*>(&ebx19)) 
                goto addr_4132b7_17;
            if (!*reinterpret_cast<signed char*>(&eax23)) 
                goto addr_413282_12;
            if (*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax23) + 1) == *reinterpret_cast<signed char*>(&ebx19)) 
                goto addr_4132b0_20;
            if (!*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax23) + 1)) 
                goto addr_413282_12;
        } else {
            eax24 = (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx17)) ^ 0xffffffff ^ reinterpret_cast<uint32_t>(esi21)) & 0x81010100;
            if (!eax24) 
                continue;
            if (eax24 & 0x1010100) 
                goto addr_413282_12;
            if (!(reinterpret_cast<uint32_t>(esi21) & 0x80000000)) 
                goto addr_413282_12;
        }
    }
    return edx17 + 0xfffffffc;
    addr_413282_12:
    addr_413284_27:
    return 0;
    addr_4132be_14:
    return edx17 + 0xfffffffd;
    addr_4132b7_17:
    return edx17 + 0xfffffffe;
    addr_4132b0_20:
    return edx17 + 0xffffffff;
    do {
        addr_413228_7:
        ++edx17;
        if (*reinterpret_cast<void***>(edx17) == *reinterpret_cast<void***>(&ebx15)) 
            break;
        if (!*reinterpret_cast<void***>(edx17)) 
            goto addr_413284_27;
    } while (reinterpret_cast<unsigned char>(edx17) & 3);
    goto addr_41323b_8;
    return edx17 + 0xffffffff;
    addr_413704_31:
    return 0;
    addr_413743_32:
    return edi12 + 0xffffffff;
    while (1) {
        addr_4136fc_33:
        if (al25 == dl11) {
            do {
                al25 = *reinterpret_cast<void***>(esi26);
                ++esi26;
                if (al25 != dh13) 
                    goto addr_4136fc_33;
                edi12 = esi26 + 0xffffffff;
                do {
                    if (!*reinterpret_cast<void***>(ecx27 + 2)) 
                        goto addr_413743_32;
                    esi26 = esi26 + 2;
                    if (*reinterpret_cast<void***>(esi26) != *reinterpret_cast<void***>(ecx27 + 2)) 
                        goto addr_4136e8_4;
                    if (!*reinterpret_cast<void***>(ecx27 + 3)) 
                        goto addr_413743_32;
                    ecx27 = ecx27 + 2;
                } while (*reinterpret_cast<void***>(ecx27 + 3) == *reinterpret_cast<void***>(esi26 + 0xffffffff));
                addr_4136e8_4:
                ecx27 = a2;
                esi26 = edi12 + 1;
            } while (*reinterpret_cast<void***>(edi12) == dl11);
            if (!*reinterpret_cast<void***>(edi12)) 
                goto addr_413704_31;
        } else {
            if (!al25) 
                goto addr_413704_31;
        }
        al25 = *reinterpret_cast<void***>(esi26);
        ++esi26;
    }
}

int32_t CloseHandle = 0x19004;

void** fun_4013c0(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19) {
    CloseHandle();
    goto a1;
}

int32_t SetFilePointer = 0x18ff2;

void** fun_401240(void** a1, void** a2, void** a3, void** a4, void** a5, ...) {
    SetFilePointer();
    goto a1;
}

void fun_401260(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7) {
    SetFilePointer();
    goto a1;
}

int32_t GetExitCodeProcess = 0x190fc;

int32_t fun_402e40(int32_t* a1, void** a2, void** a3, void** a4, void** a5, void** a6) {
    int32_t v7;
    int32_t eax8;

    v7 = *a1;
    eax8 = reinterpret_cast<int32_t>(GetExitCodeProcess());
    if (eax8) {
        goto v7;
    } else {
        goto v7;
    }
}

int32_t PeekMessageA = 0x194a2;

int32_t GetMessageA = 0x19494;

int32_t IsDialogMessageA = 0x19480;

void** g41f338 = reinterpret_cast<void**>(0);

void** g41f2a0 = reinterpret_cast<void**>(0);

void** g41f31c = reinterpret_cast<void**>(0);

void** g41f324 = reinterpret_cast<void**>(0);

int32_t TranslateMessage = 0x1946c;

int32_t DispatchMessageA = 0x19458;

void** g41f2e0 = reinterpret_cast<void**>(0);

void fun_404ef0(int32_t a1, void** a2, void** a3, void** a4, void** a5) {
    int32_t ebx6;
    int32_t ebp7;
    int32_t esi8;
    void* esp9;
    int32_t edi10;
    int32_t eax11;
    int32_t eax12;
    void* esp13;
    void** eax14;
    int32_t eax15;
    void** eax16;
    int32_t eax17;
    void** eax18;
    int32_t eax19;
    void** eax20;
    int32_t eax21;
    void** eax22;
    int32_t eax23;
    void* v24;
    void* esp25;
    void** eax26;
    void* esp27;
    int32_t eax28;
    int32_t v29;

    ebx6 = PeekMessageA;
    ebp7 = GetMessageA;
    esi8 = IsDialogMessageA;
    esp9 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 28 - 4 - 4 - 4 - 4);
    edi10 = a1;
    do {
        if (edi10) 
            goto addr_404f24_3;
        eax11 = reinterpret_cast<int32_t>(ebx6());
        esp9 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp9) - 4 - 4 - 4 - 4 - 4 - 4 + 4);
        if (!eax11) 
            break;
        addr_404f24_3:
        eax12 = reinterpret_cast<int32_t>(ebp7());
        esp13 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp9) - 4 - 4 - 4 - 4 - 4 + 4);
        if (eax12) {
            eax14 = g41f338;
            if ((!eax14 || (eax15 = reinterpret_cast<int32_t>(esi8(eax14, reinterpret_cast<int32_t>(esp13) + 16)), esp13 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp13) - 4 - 4 - 4 + 4), !eax15)) && (((eax16 = g41f2a0, eax16 == 0) || (eax17 = reinterpret_cast<int32_t>(esi8(eax16, reinterpret_cast<int32_t>(esp13) + 16)), esp13 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp13) - 4 - 4 - 4 + 4), !eax17)) && (((eax18 = g41f31c, eax18 == 0) || (eax19 = reinterpret_cast<int32_t>(esi8(eax18, reinterpret_cast<int32_t>(esp13) + 16)), esp13 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp13) - 4 - 4 - 4 + 4), !eax19)) && (((eax20 = g41f328, eax20 == 0) || (eax21 = reinterpret_cast<int32_t>(esi8(eax20, reinterpret_cast<int32_t>(esp13) + 16)), esp13 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp13) - 4 - 4 - 4 + 4), !eax21)) && ((eax22 = g41f324, eax22 == 0) || (eax23 = reinterpret_cast<int32_t>(esi8(eax22, reinterpret_cast<int32_t>(esp13) + 16)), esp13 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp13) - 4 - 4 - 4 + 4), !eax23)))))) {
                v24 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp13) + 16);
                TranslateMessage(v24);
                esp25 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp13) - 4 - 4 + 4);
                DispatchMessageA(reinterpret_cast<int32_t>(esp25) + 16, v24);
                esp13 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp25) - 4 - 4 + 4);
            }
            eax26 = g41f2e0;
            if (!eax26) 
                continue;
        } else {
            g41f2e0 = reinterpret_cast<void**>(2);
        }
        edi10 = 0;
        esp27 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp13) - 4 - 4 - 4);
        eax28 = reinterpret_cast<int32_t>(ebx6(reinterpret_cast<int32_t>(esp27) + 28, 0, 0, 0));
        esp9 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp27) - 4 - 4 - 4 + 4);
    } while (eax28);
    goto v29;
}

void** fun_410670(void** a1, void** a2, void** a3, int32_t a4);

void** fun_410780(void** a1, void** a2, int32_t a3) {
    void** eax4;

    eax4 = fun_410670(a1, 15, a2, a3);
    return eax4;
}

void** g41a2bc = reinterpret_cast<void**>(0xff);

uint32_t g41f2a4 = 0;

void** g41a2b0 = reinterpret_cast<void**>(0xff);

void** fun_407070();

void** fun_407320(void** a1, void** a2, void** a3, int32_t a4) {
    void** ecx5;
    void** v6;
    void** ebx7;
    void** ebx8;
    void** v9;
    void** ebp10;
    void** ebp11;
    void** v12;
    void** esi13;
    void** esi14;
    void** v15;
    void** edi16;
    void** eax17;
    void** edi18;
    void** eax19;
    uint32_t eax20;
    uint32_t eax21;
    void** eax22;
    void** ecx23;
    void** eax24;
    void** eax25;
    void** eax26;
    void** eax27;
    void** eax28;
    void** eax29;

    ecx5 = g41a2bc;
    v6 = ebx7;
    ebx8 = a2;
    v9 = ebp10;
    ebp11 = a1;
    v12 = esi13;
    esi14 = reinterpret_cast<void**>(0);
    v15 = edi16;
    eax17 = *reinterpret_cast<void***>(ebp11);
    edi18 = a3;
    if (eax17 != ecx5) {
        eax19 = fun_4011c0(eax17, ebx8, edi18, v15, v12);
        esi14 = eax19;
        goto addr_4073c8_3;
    }
    if (!edi18) {
        addr_4073c8_3:
        eax20 = g41f2a4;
        eax21 = eax20 - reinterpret_cast<unsigned char>(edi18);
        g41f2a4 = eax21;
        if (reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(eax21) < reinterpret_cast<int32_t>(0)) | reinterpret_cast<uint1_t>(eax21 == 0))) {
            g41f2a4 = 0x1000;
            fun_404ef0(0, v15, v12, v9, v6);
        }
    } else {
        while (!esi14) {
            eax22 = g41a2b0;
            if (reinterpret_cast<unsigned char>(edi18) > reinterpret_cast<unsigned char>(eax22)) {
                if (eax22) {
                    ecx23 = *reinterpret_cast<void***>(ebp11);
                    eax24 = fun_4011c0(ecx23, ebx8, eax22, v15, v12);
                    esi14 = eax24;
                    if (esi14) {
                        addr_4073b5_10:
                        if (!reinterpret_cast<uint1_t>(static_cast<uint32_t>(reinterpret_cast<uint1_t>(edi18 == 0)))) 
                            continue; else 
                            goto addr_4073b9_11;
                    } else {
                        eax22 = g41a2b0;
                    }
                }
                edi18 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi18) - reinterpret_cast<unsigned char>(eax22));
                ebx8 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebx8) + reinterpret_cast<unsigned char>(eax22));
                g41a2b0 = reinterpret_cast<void**>(0);
                eax25 = fun_407070();
                *reinterpret_cast<void***>(ebp11) = eax25;
                if (reinterpret_cast<int1_t>(eax25 == 0xffffffff)) {
                    esi14 = reinterpret_cast<void**>(1);
                    goto addr_4073b5_10;
                }
            } else {
                eax26 = *reinterpret_cast<void***>(ebp11);
                eax27 = fun_4011c0(eax26, ebx8, edi18, v15, v12);
                esi14 = eax27;
                if (esi14) 
                    goto addr_4073b5_10; else 
                    goto addr_407368_16;
            }
        }
        goto addr_4073c8_3;
    }
    return esi14;
    addr_4073b9_11:
    goto addr_4073c8_3;
    addr_407368_16:
    eax28 = g41a2b0;
    eax29 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax28) - reinterpret_cast<unsigned char>(edi18));
    edi18 = reinterpret_cast<void**>(0);
    g41a2b0 = eax29;
    goto addr_4073c8_3;
}

void** fun_410cf0(void** a1, void** a2, void** a3);

void fun_410bd0(void** a1, void** a2, struct s1* a3);

void** fun_4107a0(void** a1, int32_t a2) {
    void** esi3;
    int32_t ebx4;
    void** edi5;
    void** ebx6;
    void** v7;
    void** eax8;
    void** edx9;
    void** eax10;
    uint32_t ecx11;
    void** edx12;
    void** edx13;
    uint32_t ecx14;
    void** ebx15;
    void** eax16;
    void** ecx17;
    void** eax18;
    void** edx19;
    struct s1* v20;
    void** edx21;
    uint32_t ecx22;
    void** ecx23;
    void** eax24;
    uint32_t edx25;
    void** ecx26;
    void** eax27;
    uint32_t edx28;
    void** ecx29;
    void** edx30;
    void** eax31;
    void* edx32;
    void** edx33;
    void** ecx34;
    void** eax35;
    uint32_t edx36;
    void** ecx37;
    void** edx38;
    uint32_t ecx39;
    void** edx40;
    void** ecx41;
    uint32_t edx42;
    void** ecx43;
    void** edx44;
    void** eax45;
    void* edx46;
    void** eax47;
    void** eax48;

    esi3 = a1;
    if (!esi3 || (!*reinterpret_cast<void***>(esi3 + 28) || !*reinterpret_cast<void***>(esi3))) {
        addr_410b70_2:
        return 0xfffffffe;
    } else {
        ebx4 = 0;
        edi5 = reinterpret_cast<void**>(0xfffffffb);
        *reinterpret_cast<unsigned char*>(&ebx4) = reinterpret_cast<uint1_t>(a2 != 4);
        ebx6 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ebx4 - 1) & 0xfffffffb);
        v7 = ebx6;
        while (1) {
            eax8 = *reinterpret_cast<void***>(esi3 + 28);
            switch (*reinterpret_cast<void***>(eax8)) {
            case 0:
                if (!*reinterpret_cast<void***>(esi3 + 4)) 
                    goto addr_410a67_7;
                edx9 = reinterpret_cast<void**>(0);
                *reinterpret_cast<void***>(esi3 + 4) = *reinterpret_cast<void***>(esi3 + 4) - 1;
                edi5 = ebx6;
                *reinterpret_cast<void***>(esi3 + 8) = *reinterpret_cast<void***>(esi3 + 8) + 1;
                edx9 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(esi3));
                *reinterpret_cast<void***>(eax8 + 4) = edx9;
                eax10 = *reinterpret_cast<void***>(esi3 + 28);
                ecx11 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax10 + 4)) & 15;
                *reinterpret_cast<void***>(esi3) = *reinterpret_cast<void***>(esi3) + 1;
                if (*reinterpret_cast<signed char*>(&ecx11) == 8) {
                    if (reinterpret_cast<unsigned char>((reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax10 + 4)) >> 4) + 8) <= reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax10 + 16))) {
                        *reinterpret_cast<void***>(eax10) = reinterpret_cast<void**>(1);
                    } else {
                        *reinterpret_cast<void***>(eax10) = reinterpret_cast<void**>(13);
                        edx12 = *reinterpret_cast<void***>(esi3 + 28);
                        *reinterpret_cast<void***>(esi3 + 24) = reinterpret_cast<void**>("invalid window size");
                        *reinterpret_cast<void***>(edx12 + 4) = reinterpret_cast<void**>(5);
                        break;
                    }
                } else {
                    *reinterpret_cast<void***>(eax10) = reinterpret_cast<void**>(13);
                    edx13 = *reinterpret_cast<void***>(esi3 + 28);
                    *reinterpret_cast<void***>(esi3 + 24) = reinterpret_cast<void**>("unknown compression method");
                    *reinterpret_cast<void***>(edx13 + 4) = reinterpret_cast<void**>(5);
                    break;
                }
            case 1:
                if (!*reinterpret_cast<void***>(esi3 + 4)) 
                    goto addr_410a67_7;
                ecx14 = 0;
                *reinterpret_cast<void***>(esi3 + 4) = *reinterpret_cast<void***>(esi3 + 4) - 1;
                edi5 = ebx6;
                ebx15 = *reinterpret_cast<void***>(esi3 + 28);
                *reinterpret_cast<void***>(esi3 + 8) = *reinterpret_cast<void***>(esi3 + 8) + 1;
                *reinterpret_cast<void***>(&ecx14) = *reinterpret_cast<void***>(*reinterpret_cast<void***>(esi3));
                *reinterpret_cast<void***>(esi3) = *reinterpret_cast<void***>(esi3) + 1;
                if (!(((reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx15 + 4)) << 8) + ecx14) % 31)) {
                    if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(&ecx14)) & 32) 
                        goto addr_410a4e_16;
                    *reinterpret_cast<void***>(ebx15) = reinterpret_cast<void**>(7);
                    ebx6 = v7;
                    break;
                } else {
                    *reinterpret_cast<void***>(ebx15) = reinterpret_cast<void**>(13);
                    eax16 = *reinterpret_cast<void***>(esi3 + 28);
                    ebx6 = v7;
                    *reinterpret_cast<void***>(esi3 + 24) = reinterpret_cast<void**>("incorrect header check");
                    *reinterpret_cast<void***>(eax16 + 4) = reinterpret_cast<void**>(5);
                    break;
                }
            case 7:
                ecx17 = *reinterpret_cast<void***>(eax8 + 20);
                eax18 = fun_410cf0(ecx17, esi3, edi5);
                edi5 = eax18;
                if (!reinterpret_cast<int1_t>(edi5 == 0xfffffffd)) {
                    if (!edi5) {
                        edi5 = ebx6;
                    }
                    if (!reinterpret_cast<int1_t>(edi5 == 1)) 
                        goto addr_410a67_7;
                    edi5 = ebx6;
                    edx19 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(esi3 + 28) + 20);
                    v20 = reinterpret_cast<struct s1*>(*reinterpret_cast<void***>(esi3 + 28) + 4);
                    fun_410bd0(edx19, esi3, v20);
                    if (!*reinterpret_cast<void***>(*reinterpret_cast<void***>(esi3 + 28) + 12)) {
                        *reinterpret_cast<void***>(*reinterpret_cast<void***>(esi3 + 28)) = reinterpret_cast<void**>(8);
                    } else {
                        *reinterpret_cast<void***>(*reinterpret_cast<void***>(esi3 + 28)) = reinterpret_cast<void**>(12);
                        break;
                    }
                } else {
                    *reinterpret_cast<void***>(*reinterpret_cast<void***>(esi3 + 28)) = reinterpret_cast<void**>(13);
                    *reinterpret_cast<void***>(*reinterpret_cast<void***>(esi3 + 28) + 4) = reinterpret_cast<void**>(0);
                    break;
                }
            case 8:
                if (!*reinterpret_cast<void***>(esi3 + 4)) 
                    goto addr_410a67_7;
                edx21 = *reinterpret_cast<void***>(esi3 + 28);
                *reinterpret_cast<void***>(esi3 + 4) = *reinterpret_cast<void***>(esi3 + 4) - 1;
                ecx22 = 0;
                *reinterpret_cast<void***>(esi3 + 8) = *reinterpret_cast<void***>(esi3 + 8) + 1;
                edi5 = ebx6;
                *reinterpret_cast<void***>(&ecx22) = *reinterpret_cast<void***>(*reinterpret_cast<void***>(esi3));
                *reinterpret_cast<void***>(edx21 + 8) = reinterpret_cast<void**>(ecx22 << 24);
                *reinterpret_cast<void***>(esi3) = *reinterpret_cast<void***>(esi3) + 1;
                *reinterpret_cast<void***>(*reinterpret_cast<void***>(esi3 + 28)) = reinterpret_cast<void**>(9);
            case 9:
                if (!*reinterpret_cast<void***>(esi3 + 4)) 
                    goto addr_410a67_7;
                ecx23 = *reinterpret_cast<void***>(esi3);
                eax24 = *reinterpret_cast<void***>(esi3 + 4) - 1;
                *reinterpret_cast<void***>(esi3 + 8) = *reinterpret_cast<void***>(esi3 + 8) + 1;
                *reinterpret_cast<void***>(esi3 + 4) = eax24;
                edx25 = 0;
                *reinterpret_cast<void***>(&edx25) = *reinterpret_cast<void***>(ecx23);
                edi5 = ebx6;
                *reinterpret_cast<void***>(*reinterpret_cast<void***>(esi3 + 28) + 8) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(*reinterpret_cast<void***>(esi3 + 28) + 8)) + (edx25 << 16));
                *reinterpret_cast<void***>(esi3) = *reinterpret_cast<void***>(esi3) + 1;
                *reinterpret_cast<void***>(*reinterpret_cast<void***>(esi3 + 28)) = reinterpret_cast<void**>(10);
            case 10:
                if (!*reinterpret_cast<void***>(esi3 + 4)) 
                    goto addr_410a67_7;
                ecx26 = *reinterpret_cast<void***>(esi3);
                eax27 = *reinterpret_cast<void***>(esi3 + 4) - 1;
                *reinterpret_cast<void***>(esi3 + 8) = *reinterpret_cast<void***>(esi3 + 8) + 1;
                *reinterpret_cast<void***>(esi3 + 4) = eax27;
                edx28 = 0;
                *reinterpret_cast<void***>(&edx28) = *reinterpret_cast<void***>(ecx26);
                edi5 = ebx6;
                *reinterpret_cast<void***>(*reinterpret_cast<void***>(esi3 + 28) + 8) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(*reinterpret_cast<void***>(esi3 + 28) + 8)) + (edx28 << 8));
                *reinterpret_cast<void***>(esi3) = *reinterpret_cast<void***>(esi3) + 1;
                *reinterpret_cast<void***>(*reinterpret_cast<void***>(esi3 + 28)) = reinterpret_cast<void**>(11);
            case 11:
                if (!*reinterpret_cast<void***>(esi3 + 4)) 
                    goto addr_410a67_7;
                ecx29 = *reinterpret_cast<void***>(esi3);
                edx30 = *reinterpret_cast<void***>(esi3 + 8) + 1;
                *reinterpret_cast<void***>(esi3 + 4) = *reinterpret_cast<void***>(esi3 + 4) - 1;
                eax31 = *reinterpret_cast<void***>(esi3 + 28);
                *reinterpret_cast<void***>(esi3 + 8) = edx30;
                edx32 = reinterpret_cast<void*>(0);
                *reinterpret_cast<void***>(&edx32) = *reinterpret_cast<void***>(ecx29);
                edi5 = ebx6;
                *reinterpret_cast<void***>(eax31 + 8) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax31 + 8)) + reinterpret_cast<uint32_t>(edx32));
                *reinterpret_cast<void***>(esi3) = *reinterpret_cast<void***>(esi3) + 1;
                if (*reinterpret_cast<void***>(*reinterpret_cast<void***>(esi3 + 28) + 4) == *reinterpret_cast<void***>(*reinterpret_cast<void***>(esi3 + 28) + 8)) 
                    goto addr_410b7a_35;
                *reinterpret_cast<void***>(*reinterpret_cast<void***>(esi3 + 28)) = reinterpret_cast<void**>(13);
                edx33 = *reinterpret_cast<void***>(esi3 + 28);
                *reinterpret_cast<void***>(esi3 + 24) = reinterpret_cast<void**>("incorrect data check");
                *reinterpret_cast<void***>(edx33 + 4) = reinterpret_cast<void**>(5);
            case 12:
                goto 0x410b83;
            case 6:
                goto 0x410b56;
            case 5:
                goto 0x410b0e;
            case 4:
                goto 0x410ad5;
            case 3:
                goto 0x410a98;
            case 2:
                goto 0x410a60;
            case 13:
                goto 0x410b8d;
            }
        }
    }
    addr_410a60_37:
    if (*reinterpret_cast<void***>(esi3 + 4)) {
        ecx34 = *reinterpret_cast<void***>(esi3);
        eax35 = *reinterpret_cast<void***>(esi3 + 4) - 1;
        *reinterpret_cast<void***>(esi3 + 8) = *reinterpret_cast<void***>(esi3 + 8) + 1;
        edx36 = 0;
        *reinterpret_cast<void***>(esi3 + 4) = eax35;
        *reinterpret_cast<void***>(&edx36) = *reinterpret_cast<void***>(ecx34);
        edi5 = ebx6;
        *reinterpret_cast<void***>(*reinterpret_cast<void***>(esi3 + 28) + 8) = reinterpret_cast<void**>(edx36 << 24);
        ecx37 = *reinterpret_cast<void***>(esi3 + 28);
        *reinterpret_cast<void***>(esi3) = *reinterpret_cast<void***>(esi3) + 1;
        *reinterpret_cast<void***>(ecx37) = reinterpret_cast<void**>(3);
    } else {
        addr_410a67_7:
        return edi5;
    }
    if (*reinterpret_cast<void***>(esi3 + 4)) {
        edx38 = *reinterpret_cast<void***>(esi3);
        *reinterpret_cast<void***>(esi3 + 4) = *reinterpret_cast<void***>(esi3 + 4) - 1;
        ecx39 = 0;
        *reinterpret_cast<void***>(esi3 + 8) = *reinterpret_cast<void***>(esi3 + 8) + 1;
        *reinterpret_cast<void***>(&ecx39) = *reinterpret_cast<void***>(edx38);
        edi5 = ebx6;
        *reinterpret_cast<void***>(*reinterpret_cast<void***>(esi3 + 28) + 8) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(*reinterpret_cast<void***>(esi3 + 28) + 8)) + (ecx39 << 16));
        edx40 = *reinterpret_cast<void***>(esi3 + 28);
        *reinterpret_cast<void***>(esi3) = *reinterpret_cast<void***>(esi3) + 1;
        *reinterpret_cast<void***>(edx40) = reinterpret_cast<void**>(4);
    } else {
        return edi5;
    }
    if (*reinterpret_cast<void***>(esi3 + 4)) {
        ecx41 = *reinterpret_cast<void***>(esi3);
        *reinterpret_cast<void***>(esi3 + 4) = *reinterpret_cast<void***>(esi3 + 4) - 1;
        edx42 = 0;
        *reinterpret_cast<void***>(esi3 + 8) = *reinterpret_cast<void***>(esi3 + 8) + 1;
        *reinterpret_cast<void***>(&edx42) = *reinterpret_cast<void***>(ecx41);
        edi5 = ebx6;
        *reinterpret_cast<void***>(*reinterpret_cast<void***>(esi3 + 28) + 8) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(*reinterpret_cast<void***>(esi3 + 28) + 8)) + (edx42 << 8));
        *reinterpret_cast<void***>(esi3) = *reinterpret_cast<void***>(esi3) + 1;
        *reinterpret_cast<void***>(*reinterpret_cast<void***>(esi3 + 28)) = reinterpret_cast<void**>(5);
    } else {
        return edi5;
    }
    if (*reinterpret_cast<void***>(esi3 + 4)) {
        ecx43 = *reinterpret_cast<void***>(esi3);
        edx44 = *reinterpret_cast<void***>(esi3 + 8) + 1;
        *reinterpret_cast<void***>(esi3 + 4) = *reinterpret_cast<void***>(esi3 + 4) - 1;
        eax45 = *reinterpret_cast<void***>(esi3 + 28);
        *reinterpret_cast<void***>(esi3 + 8) = edx44;
        edx46 = reinterpret_cast<void*>(0);
        *reinterpret_cast<void***>(&edx46) = *reinterpret_cast<void***>(ecx43);
        *reinterpret_cast<void***>(eax45 + 8) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax45 + 8)) + reinterpret_cast<uint32_t>(edx46));
        *reinterpret_cast<void***>(esi3) = *reinterpret_cast<void***>(esi3) + 1;
        eax47 = *reinterpret_cast<void***>(esi3 + 28);
        *reinterpret_cast<void***>(esi3 + 48) = *reinterpret_cast<void***>(eax47 + 8);
        *reinterpret_cast<void***>(eax47) = reinterpret_cast<void**>(6);
        return 2;
    } else {
        return edi5;
    }
    *reinterpret_cast<void***>(*reinterpret_cast<void***>(esi3 + 28)) = reinterpret_cast<void**>(13);
    eax48 = *reinterpret_cast<void***>(esi3 + 28);
    *reinterpret_cast<void***>(esi3 + 24) = reinterpret_cast<void**>("need dictionary");
    *reinterpret_cast<void***>(eax48 + 4) = reinterpret_cast<void**>(0);
    goto addr_410b70_2;
    addr_410b83_49:
    return 1;
    return 0xfffffffd;
    addr_410a4e_16:
    ebx6 = v7;
    *reinterpret_cast<void***>(*reinterpret_cast<void***>(esi3 + 28)) = reinterpret_cast<void**>(2);
    goto addr_410a60_37;
    addr_410b7a_35:
    *reinterpret_cast<void***>(*reinterpret_cast<void***>(esi3 + 28)) = reinterpret_cast<void**>(12);
    goto addr_410b83_49;
}

int32_t WriteFile = 0x18fe6;

void** fun_401200(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, ...) {
    int32_t eax8;

    eax8 = reinterpret_cast<int32_t>(WriteFile());
    if (eax8) {
        goto a2;
    } else {
        GetLastError();
        goto a2;
    }
}

int32_t fun_4119f0(void** a1, void** a2);

int32_t fun_410620(void** a1) {
    void** eax2;
    void** ecx3;
    void** v4;

    if (!a1 || (!*reinterpret_cast<void***>(a1 + 28) || !*reinterpret_cast<void***>(a1 + 36))) {
        return -2;
    } else {
        eax2 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(a1 + 28) + 20);
        if (eax2) {
            fun_4119f0(eax2, a1);
        }
        ecx3 = *reinterpret_cast<void***>(a1 + 40);
        v4 = *reinterpret_cast<void***>(a1 + 28);
        *reinterpret_cast<void***>(a1 + 36)(ecx3, v4);
        *reinterpret_cast<void***>(a1 + 28) = reinterpret_cast<void**>(0);
        return 0;
    }
}

struct s15 {
    struct s15* f0;
    signed char[3] pad4;
    int32_t f4;
    struct s15* f8;
    signed char[3] pad12;
    struct s15* f12;
    signed char[11] pad24;
    struct s15* f24;
    signed char[3] pad28;
    struct s15* f28;
    signed char[3] pad32;
    struct s15* f32;
    signed char[3] pad36;
    struct s15* f36;
    signed char[3] pad40;
    struct s15* f40;
    signed char[3] pad44;
    struct s15* f44;
    signed char[3] pad48;
    struct s15* f48;
    signed char[3099] pad3148;
    struct s15* f3148;
    signed char[3] pad3152;
    struct s15* f3152;
    signed char[3] pad3156;
    struct s15* f3156;
    signed char[15] pad3172;
    struct s15* f3172;
};

int32_t fun_40d100();

void** fun_40d110(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10);

void fun_40d130(void** ecx, void** a2, void** a3, void** a4, void** a5);

void** fun_40d140(struct s15* a1, struct s15* a2, struct s15* a3) {
    int32_t eax4;
    struct s15* ebx5;
    struct s15* eax6;
    struct s15* eax7;

    eax4 = fun_40d100();
    if (eax4) {
        if (!a1 || ((ebx5 = a3, !!ebx5) && !reinterpret_cast<int1_t>(ebx5 == 1) || (reinterpret_cast<signed char>(a2) < reinterpret_cast<signed char>(0) || reinterpret_cast<signed char>(a2) > reinterpret_cast<signed char>(4)))) {
            return 0xfffffffe;
        } else {
            if (!a1->f36) {
                a1->f36 = reinterpret_cast<struct s15*>(fun_40d110);
            }
            if (!a1->f40) {
                a1->f40 = reinterpret_cast<struct s15*>(fun_40d130);
            }
            eax6 = a1->f44;
            eax7 = reinterpret_cast<struct s15*>(a1->f36(eax6, 0xfa74, 1));
            if (eax7) {
                *reinterpret_cast<struct s15**>(&eax7->f0) = a1;
                a1->f32 = eax7;
                eax7->f4 = 10;
                eax7->f32 = reinterpret_cast<struct s15*>(0);
                eax7->f28 = reinterpret_cast<struct s15*>(0);
                eax7->f3172 = reinterpret_cast<struct s15*>(0);
                a1->f8 = reinterpret_cast<struct s15*>(0);
                a1->f12 = reinterpret_cast<struct s15*>(0);
                a1->f24 = reinterpret_cast<struct s15*>(0);
                a1->f28 = reinterpret_cast<struct s15*>(0);
                eax7->f3156 = reinterpret_cast<struct s15*>(0);
                eax7->f3152 = reinterpret_cast<struct s15*>(0);
                eax7->f3148 = reinterpret_cast<struct s15*>(0);
                eax7->f44 = reinterpret_cast<struct s15*>(0);
                eax7->f48 = a2;
                eax7->f40 = ebx5;
                return 0;
            } else {
                return 0xfffffffd;
            }
        }
    } else {
        return 0xfffffff7;
    }
}

struct s17 {
    struct s16* f0;
    int32_t f4;
    unsigned char f8;
    signed char[3] pad12;
    void** f12;
    signed char[3] pad16;
    signed char f16;
    signed char[3] pad20;
    void** f20;
    signed char[3] pad24;
    void** f24;
    signed char[3] pad28;
    uint32_t f28;
    void** f32;
    signed char[3] pad36;
    uint32_t f36;
    signed char f40;
    signed char[3] pad44;
    int32_t f44;
    signed char[4] pad52;
    void** f52;
    signed char[3] pad56;
    void** f56;
    signed char[3] pad60;
    unsigned char f60;
    signed char[3] pad64;
    int32_t f64;
    signed char[1020] pad1088;
    void** f1088;
    signed char[3] pad1092;
    void** f1092;
    signed char[3] pad1096;
    int32_t f1096;
    signed char[1020] pad2120;
    int32_t f2120;
    signed char[1024] pad3148;
    void*** f3148;
    unsigned char* f3152;
    void*** f3156;
    uint32_t f3160;
    uint32_t f3164;
    uint32_t f3168;
    uint32_t f3172;
    void** f3176;
    signed char[3] pad3180;
    int32_t f3180;
    signed char[4620] pad7804;
    void* f7804;
    signed char[56] pad7864;
    void* f7864;
    signed char f7868;
    signed char[43743] pad51612;
    void** f51612;
    signed char[12383] pad63996;
    int32_t f63996;
    signed char[20] pad64020;
    void** f64020;
    signed char[3] pad64024;
    void** f64024;
    signed char[3] pad64028;
    void** f64028;
    signed char[3] pad64032;
    void** f64032;
    signed char[3] pad64036;
    void** f64036;
    signed char[3] pad64040;
    void** f64040;
    signed char[3] pad64044;
    void** f64044;
    signed char[3] pad64048;
    void** f64048;
    signed char[3] pad64052;
    void** f64052;
    signed char[3] pad64056;
    void** f64056;
    signed char[3] pad64060;
    void** f64060;
    signed char[3] pad64064;
    void** f64064;
    signed char[3] pad64068;
    void** f64068;
    signed char[3] pad64072;
    void** f64072;
    signed char[3] pad64076;
    void** f64076;
    signed char[3] pad64080;
    void** f64080;
    signed char[3] pad64084;
    void** f64084;
    signed char[3] pad64088;
    void** f64088;
    signed char[3] pad64092;
    void** f64092;
    signed char[3] pad64096;
    void** f64096;
    signed char[3] pad64100;
    void** f64100;
    signed char[3] pad64104;
    void** f64104;
    signed char[3] pad64108;
    void** f64108;
    signed char[3] pad64112;
    void** f64112;
};

struct s16 {
    signed char* f0;
    void** f4;
    signed char[3] pad8;
    void** f8;
    signed char[3] pad12;
    int32_t f12;
    unsigned char* f16;
    int32_t f20;
    uint32_t f24;
    int32_t f28;
    struct s17* f32;
    int32_t f36;
    signed char[4] pad44;
    int32_t f44;
};

void fun_40d350(struct s17* a1);

void fun_40d860(struct s17* a1);

void** fun_40dfc0(struct s17* a1);

struct s18 {
    signed char[4] pad4;
    void** f4;
};

void** fun_40d250(struct s16* a1) {
    struct s17* esi2;
    signed char al3;
    uint32_t ecx4;
    int1_t zf5;
    uint32_t eax6;
    void** eax7;
    uint32_t eax8;
    void* eax9;
    struct s18* eax10;

    if (!a1) {
        return 0xfffffffe;
    }
    esi2 = a1->f32;
    if (!esi2) {
        return 0xfffffffe;
    }
    if (esi2->f0 != a1) {
        return 0xfffffffe;
    }
    while (esi2->f4 != 1) {
        if (esi2->f4 == 2) {
            al3 = esi2->f40;
            if (!al3) {
                fun_40d350(esi2);
            } else {
                fun_40d860(esi2);
            }
            if (esi2->f1088 != esi2->f64064 + 1) 
                goto addr_40d324_13;
            if (esi2->f12) 
                goto addr_40d324_13;
            ecx4 = ~esi2->f3168;
            zf5 = ecx4 == esi2->f3160;
            esi2->f3168 = ecx4;
            if (!zf5) 
                goto addr_40d31b_16;
            eax6 = esi2->f3172;
            esi2->f4 = 14;
            esi2->f3172 = (eax6 >> 31 | eax6 + eax6) ^ ecx4;
        }
        if (esi2->f4 < 10) 
            continue;
        eax7 = fun_40dfc0(esi2);
        if (eax7 == 4) 
            goto addr_40d32a_20;
        if (esi2->f4 != 2) 
            goto addr_40d341_22;
    }
    return 0xffffffff;
    addr_40d32a_20:
    eax8 = esi2->f3172 - esi2->f3164;
    eax9 = reinterpret_cast<void*>(-eax8);
    eax10 = reinterpret_cast<struct s18*>(reinterpret_cast<uint32_t>(eax9) - (reinterpret_cast<uint32_t>(eax9) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(eax9) < reinterpret_cast<uint32_t>(eax9) + reinterpret_cast<uint1_t>(!!eax8))));
    *reinterpret_cast<unsigned char*>(&eax10) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax10) & 0xf8);
    eax7 = reinterpret_cast<void**>(&eax10->f4);
    addr_40d341_22:
    return eax7;
    addr_40d324_13:
    return 0;
    addr_40d31b_16:
    return 0xfffffffc;
}

int32_t fun_40df30(void** a1) {
    void** edi2;
    int32_t v3;
    void** v4;
    void** ecx5;
    int32_t v6;
    void** edx7;
    int32_t v8;
    void** ecx9;
    void** v10;

    if (a1) {
        edi2 = *reinterpret_cast<void***>(a1 + 32);
        if (edi2) {
            if (*reinterpret_cast<void***>(edi2) == a1) {
                if (*reinterpret_cast<int32_t*>(edi2 + 0xc4c)) {
                    v3 = *reinterpret_cast<int32_t*>(edi2 + 0xc4c);
                    v4 = *reinterpret_cast<void***>(a1 + 44);
                    *reinterpret_cast<void***>(a1 + 40)(v4, v3);
                }
                if (*reinterpret_cast<int32_t*>(edi2 + 0xc50)) {
                    ecx5 = *reinterpret_cast<void***>(a1 + 44);
                    v6 = *reinterpret_cast<int32_t*>(edi2 + 0xc50);
                    *reinterpret_cast<void***>(a1 + 40)(ecx5, v6);
                }
                if (*reinterpret_cast<int32_t*>(edi2 + 0xc54)) {
                    edx7 = *reinterpret_cast<void***>(a1 + 44);
                    v8 = *reinterpret_cast<int32_t*>(edi2 + 0xc54);
                    *reinterpret_cast<void***>(a1 + 40)(edx7, v8);
                }
                ecx9 = *reinterpret_cast<void***>(a1 + 44);
                v10 = *reinterpret_cast<void***>(a1 + 32);
                *reinterpret_cast<void***>(a1 + 40)(ecx9, v10);
                *reinterpret_cast<void***>(a1 + 32) = reinterpret_cast<void**>(0);
                return 0;
            } else {
                return -2;
            }
        } else {
            return -2;
        }
    } else {
        return -2;
    }
}

void** fun_4012c0(void** a1, void** a2, void** a3) {
    int32_t edi4;
    int32_t edi5;
    int32_t esi6;
    int32_t ebp7;
    int32_t ebx8;

    edi4 = SetFilePointer;
    edi4(a1, 0, 0, 1, edi5, esi6, ebp7, ebx8, __return_address());
    edi4();
    edi4();
    goto a1;
}

int32_t MessageBoxA = 0x1937e;

int32_t fun_4039c0(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31) {
    void** esi32;
    void** esi33;

    esi32 = g41f338;
    if (!esi32) {
    }
    fun_403a00(7, 0, a2, esi33, __return_address(), a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31);
    MessageBoxA();
    goto a1;
}

void** fun_403b10(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, ...) {
    return reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a1)) + reinterpret_cast<unsigned char>(a1);
}

void** g41f350 = reinterpret_cast<void**>(0);

void** g41f0d0 = reinterpret_cast<void**>(0);

void** fun_403e30(void** a1, void** a2, void** a3, void** a4, ...);

void** g41f36c = reinterpret_cast<void**>(0);

void** fun_4013d0(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16);

int32_t GetWindowsDirectoryA = 0x18f86;

uint32_t fun_40d0e8(void** a1, void** a2, void** a3, void** a4, void** a5, void* a6, void** a7, void* a8, void** a9, int32_t a10);

int32_t GetSystemDirectoryA = 0x18f70;

void** fun_401090(void** ecx, void** a2, void** a3);

struct s19 {
    signed char[1] pad1;
    void** f1;
};

struct s19* fun_408290(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17);

void** fun_4092d0(void** a1, void** a2, void** a3, void** a4, ...) {
    void** v5;
    void** ecx6;
    void** edx7;
    void** v8;
    void** ebx9;
    void** v10;
    void** ebp11;
    void** v12;
    void** esi13;
    void*** esp14;
    void** v15;
    void** edi16;
    void** v17;
    void** v18;
    void** al19;
    void** edi20;
    void** eax21;
    void** v22;
    void** eax23;
    void** eax24;
    void** ebp25;
    void** ecx26;
    void** edx27;
    void** al28;
    void** eax29;
    void** v30;
    void** eax31;
    void** ecx32;
    void** eax33;
    void** edi34;
    uint32_t ecx35;
    uint32_t ecx36;
    void*** esi37;
    void** edi38;
    uint32_t edx39;
    uint32_t ecx40;
    void** edi41;
    uint32_t ecx42;
    void** ecx43;
    int1_t zf44;
    void** eax45;
    void** v46;
    void** v47;
    void** eax48;
    void** ecx49;
    void** eax50;
    void** esi51;
    void** ebx52;
    void** ecx53;
    void* esp54;
    void* v55;
    void** edx56;
    void** ecx57;
    void* v58;
    void** v59;
    void** v60;
    void** v61;
    void** v62;
    uint32_t eax63;
    uint32_t eax64;
    void** eax65;
    void** edx66;
    void** al67;
    void** eax68;
    void** v69;
    void** edx70;
    void** eax71;
    void** eax72;
    void** edx73;
    void** eax74;
    void** v75;
    void** v76;
    void** ecx77;
    void** edx78;
    void** esi79;
    void** eax80;
    void** edx81;
    void** cl82;

    v5 = reinterpret_cast<void**>(__return_address());
    ecx6 = g41f350;
    edx7 = g41f0d0;
    v8 = ebx9;
    v10 = ebp11;
    v12 = esi13;
    esp14 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 20 - 4 - 4 - 4 - 4);
    v15 = edi16;
    v17 = reinterpret_cast<void**>(0);
    v18 = reinterpret_cast<void**>(0);
    do {
        al19 = *reinterpret_cast<void***>(ecx6);
        ++ecx6;
        *reinterpret_cast<void***>(edx7) = al19;
        ++edx7;
    } while (al19);
    edi20 = a1;
    eax21 = *reinterpret_cast<void***>(edi20 + 8);
    if (!(*reinterpret_cast<unsigned char*>(&eax21 + 1) & 1)) {
        v22 = reinterpret_cast<void**>(1);
        eax23 = fun_403e30(edi20, 0, v15, v12);
        eax24 = fun_4131d0(ecx6, eax23, 92, edi20, 0, v15, v12, v10, v8, 1);
        if (!eax24) {
            ebp25 = eax23;
        } else {
            ebp25 = eax24 + 1;
        }
        if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi20 + 16)) <= reinterpret_cast<unsigned char>(10)) 
            goto addr_40938d_8;
    } else {
        ecx26 = g41f36c;
        edx27 = g41f0d0;
        do {
            al28 = *reinterpret_cast<void***>(ecx26);
            ++ecx26;
            *reinterpret_cast<void***>(edx27) = al28;
            ++edx27;
        } while (al28);
        eax29 = g41f0d0;
        eax31 = fun_4131d0(ecx26, eax29, 92, v15, v12, v10, v8, v30, 0, 0);
        if (!eax31) 
            goto addr_409334_12; else 
            goto addr_409331_13;
    }
    addr_409514_14:
    ecx32 = g41f0d0;
    fun_402110(ecx32, ecx32, v15, v12, v10, v8);
    if (!v22) {
        eax33 = fun_403e30(edi20, 0, v15, v12);
        edi34 = eax33;
    } else {
        edi34 = ebp25;
    }
    ecx35 = 0xffffffff;
    do {
        if (!ecx35) 
            break;
        --ecx35;
        ++edi34;
    } while (*reinterpret_cast<void***>(edi34));
    ecx36 = ~ecx35;
    esi37 = reinterpret_cast<void***>(reinterpret_cast<unsigned char>(edi34) - ecx36);
    edi38 = g41f0d0;
    edx39 = ecx36;
    ecx40 = 0xffffffff;
    do {
        if (!ecx40) 
            break;
        --ecx40;
        ++edi38;
        ++esi37;
    } while (*reinterpret_cast<void***>(edi38));
    edi41 = edi38 - 1;
    ecx42 = edx39 >> 2;
    while (ecx42) {
        --ecx42;
        *reinterpret_cast<void***>(edi41) = *esi37;
        edi41 = edi41 + 4;
        esi37 = esi37 + 4;
    }
    ecx43 = reinterpret_cast<void**>(edx39 & 3);
    zf44 = v17 == 0;
    while (ecx43) {
        --ecx43;
        *reinterpret_cast<void***>(edi41) = *esi37;
        ++edi41;
        ++esi37;
    }
    if (zf44) {
        return v18;
    } else {
        eax45 = g41f0d0;
        eax48 = fun_4013d0(ecx43, eax45, v15, v12, v10, v8, v22, v17, v18, v46, v47, v5, a1, a2, a3, a4);
        return eax48;
    }
    addr_40938d_8:
    switch (*reinterpret_cast<void***>(edi20 + 16)) {
        addr_40944c_32:
    case 0:
        v22 = reinterpret_cast<void**>(0);
        break;
    case 1:
        ecx49 = g41f0d0;
        GetWindowsDirectoryA(ecx49, 0x104);
        break;
    case 2:
        eax50 = fun_4133d2(0x30c, 1, v15, v12, v10, v8);
        esi51 = eax50;
        ebx52 = esi51 + 0x208;
        if (esi51) {
            ecx53 = g41f0d0;
            fun_402150(ecx53, ecx53, v15, v12, v10, v8);
            GetWindowsDirectoryA(ebx52, 0x104);
            esp54 = reinterpret_cast<void*>(esp14 - 4 - 4 - 4 + 4 - 4 - 4 - 4 + 4 + 16 - 4 - 4 - 4 + 4 + 8 - 4 - 4 + 4 + 4 - 4 - 4 - 4 + 4);
            v55 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp54) + 28);
            edx56 = g41f0d0;
            ecx57 = esi51 + 0x104;
            v58 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp54) + 32);
            v59 = ecx57;
            v60 = edx56;
            v61 = ebx52;
            v62 = ebp25;
            v17 = reinterpret_cast<void**>(0x104);
            v18 = reinterpret_cast<void**>(0x104);
            eax63 = fun_40d0e8(1, v62, v61, v60, v59, v58, esi51, v55, ebx52, 0x104);
            eax64 = eax63 >> 1 & 1;
            if (!eax64) {
                v58 = reinterpret_cast<void*>(1);
            }
            if (!*reinterpret_cast<void***>(esi51)) {
                eax65 = g41f0d0;
                GetSystemDirectoryA(eax65, 0x104, 1, v62, v61, v60, v59, v58, eax64, v55, ebx52, 0x104);
            } else {
                edx66 = g41f0d0;
                ecx57 = esi51;
                do {
                    al67 = *reinterpret_cast<void***>(ecx57);
                    ++ecx57;
                    *reinterpret_cast<void***>(edx66) = al67;
                    ++edx66;
                } while (al67);
            }
            fun_413483(ecx57, esi51, 1, v62, v61, v60, v59, ecx57, esi51, 1, v62, v61, v60, v59);
        } else {
            eax68 = g41f0d0;
            GetSystemDirectoryA(eax68, 0x104);
        }
        edi20 = v69;
        break;
    case 3:
        edx70 = g41f0d0;
        fun_401090(ecx6, edx70, 20);
        v17 = reinterpret_cast<void**>(1);
        break;
    case 5:
        eax71 = g41f0d0;
        fun_401090(ecx6, eax71, 16);
        break;
    case 8:
        eax72 = fun_403e30(edi20, 9, v15, v12);
        edx73 = g41f0d0;
        do {
            ecx6 = *reinterpret_cast<void***>(eax72);
            ++eax72;
            *reinterpret_cast<void***>(edx73) = ecx6;
            ++edx73;
        } while (ecx6);
        eax74 = g41f0d0;
        fun_408290(ecx6, eax74, eax74, 0x104, v15, v12, v10, v8, 1, 0, 0, v75, v76, v5, a1, a2, a3);
        if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi20 + 12)) & 16) {
            v22 = reinterpret_cast<void**>(0);
            break;
        }
    case 9:
        ecx77 = g41f0d0;
        fun_401090(ecx77, ecx77, 5);
        v22 = reinterpret_cast<void**>(0);
        break;
    case 10:
        edx78 = g41f0d0;
        fun_401090(ecx6, edx78, 26);
        goto addr_40944c_32;
    case 4:
    case 6:
    case 7:
        goto 0x409514;
    }
    goto addr_409514_14;
    addr_409334_12:
    esi79 = g41f0d0;
    addr_40933a_53:
    eax80 = fun_403e30(edi20, 0, v15, v12);
    edx81 = esi79;
    do {
        cl82 = *reinterpret_cast<void***>(eax80);
        ++eax80;
        *reinterpret_cast<void***>(edx81) = cl82;
        ++edx81;
    } while (cl82);
    return 0;
    addr_409331_13:
    esi79 = eax31 + 1;
    goto addr_40933a_53;
}

int32_t FindFirstFileA = 0x18faa;

int32_t FindClose = 0x18f9e;

int32_t fun_401100(void** a1, void** a2) {
    int32_t eax3;
    int32_t v4;
    int32_t v5;

    eax3 = reinterpret_cast<int32_t>(FindFirstFileA(a1, reinterpret_cast<int32_t>(__zero_stack_offset()) - 0x140));
    if (eax3 == -1) {
        goto v4;
    } else {
        FindClose(eax3, a1, reinterpret_cast<int32_t>(__zero_stack_offset()) - 0x140);
        goto v5;
    }
}

int32_t fun_4021c0(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22);

void** fun_407ce0(void** ecx, void** a2);

struct s19* fun_408290(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17) {
    void** v18;
    void*** esp19;
    void** v20;
    void** esi21;
    void** esi22;
    void** v23;
    void** edi24;
    int32_t eax25;
    void** edi26;
    uint32_t ecx27;
    void** v28;
    void** ebp29;
    void** ebp30;
    void*** esp31;
    void** v32;
    void** ebx33;
    void** eax34;
    void** ebx35;
    void* esp36;
    void* eax37;
    void** edi38;
    void* edx39;
    void** eax40;
    uint32_t ecx41;
    void*** esp42;
    void** v43;
    void** eax44;
    void** esi45;
    void* edx46;
    void** edi47;
    void*** esp48;
    void** v49;
    void* ecx50;
    void* ebx51;
    uint32_t ecx52;
    void** ecx53;
    void** edi54;
    uint32_t ecx55;
    void** eax56;
    void* edx57;
    void** edi58;
    uint32_t ecx59;
    void** esi60;
    void** edi61;
    void* esp62;
    void** ecx63;
    struct s19* ebp64;
    void** eax65;
    void** edx66;
    uint32_t ecx67;
    void** eax68;
    void* edx69;

    v18 = reinterpret_cast<void**>(__return_address());
    esp19 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    v20 = esi21;
    esi22 = a3;
    v23 = edi24;
    eax25 = fun_4021c0(ecx, 0xffdc, esp19 + 12, v23, v20, v18, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);
    if (!eax25) {
        if (a2) {
            fun_413750(a4, a2, esi22, a4, v23, v20, v18, a2, a3);
        }
        edi26 = esi22;
        ecx27 = 0xffffffff;
        do {
            if (!ecx27) 
                break;
            --ecx27;
            ++edi26;
        } while (*reinterpret_cast<void***>(edi26));
        return ~ecx27 - 1;
    }
    v28 = ebp29;
    ebp30 = a3;
    esp31 = esp19 - 4 - 4 - 4 - 4 + 4 + 8 - 4 - 4;
    v32 = ebx33;
    while (eax34 = fun_413210(ecx, esi22, 35, v32, v28, v23, v20), ebx35 = eax34, esp36 = reinterpret_cast<void*>(esp31 - 4 - 4 - 4 + 4 + 8), !!ebx35) {
        eax37 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax34) - reinterpret_cast<unsigned char>(esi22));
        edi38 = ebp30;
        ebp30 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebp30) + reinterpret_cast<uint32_t>(eax37));
        edx39 = eax37;
        eax40 = ebx35 + 1;
        ecx41 = reinterpret_cast<uint32_t>(eax37) >> 2;
        while (ecx41) {
            --ecx41;
            *reinterpret_cast<void***>(edi38) = *reinterpret_cast<void***>(esi22);
            edi38 = edi38 + 4;
            esi22 = esi22 + 4;
        }
        ecx = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(edx39) & 3);
        esp42 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp36) - 4 - 4);
        v43 = eax40;
        while (ecx) {
            --ecx;
            *reinterpret_cast<void***>(edi38) = *reinterpret_cast<void***>(esi22);
            ++edi38;
            ++esi22;
        }
        *reinterpret_cast<void***>(ebp30) = reinterpret_cast<void**>(0);
        eax44 = fun_413210(ecx, v43, 35, v32, v28, v23, v20);
        esp36 = reinterpret_cast<void*>(esp42 - 4 + 4 + 8);
        if (!eax44) 
            goto addr_408363_17;
        esi45 = ebx35;
        edx46 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax44) - reinterpret_cast<unsigned char>(ebx35));
        edi47 = ebp30;
        esp48 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp36) - 4);
        v49 = ebp30;
        ecx50 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edx46) + 1);
        ebx51 = ecx50;
        ecx52 = reinterpret_cast<uint32_t>(ecx50) >> 2;
        while (ecx52) {
            --ecx52;
            *reinterpret_cast<void***>(edi47) = *reinterpret_cast<void***>(esi45);
            edi47 = edi47 + 4;
            esi45 = esi45 + 4;
        }
        ecx53 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ebx51) & 3);
        while (ecx53) {
            --ecx53;
            *reinterpret_cast<void***>(edi47) = *reinterpret_cast<void***>(esi45);
            ++edi47;
            ++esi45;
        }
        *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edx46) + reinterpret_cast<unsigned char>(ebp30) + 1) = 0;
        esi22 = eax44 + 1;
        fun_407ce0(ecx53, v49);
        edi54 = ebp30;
        ecx55 = 0xffffffff;
        esp31 = esp48 - 4 + 4 + 4;
        do {
            if (!ecx55) 
                break;
            --ecx55;
            ++edi54;
            ++esi22;
        } while (*reinterpret_cast<void***>(edi54));
        ecx = reinterpret_cast<void**>(~ecx55 - 1);
        ebp30 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebp30) + reinterpret_cast<unsigned char>(ecx));
    }
    eax56 = esi22;
    edx57 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ebp30) - reinterpret_cast<unsigned char>(esi22));
    do {
        ecx = *reinterpret_cast<void***>(eax56);
        *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(edx57) + reinterpret_cast<unsigned char>(eax56)) = ecx;
        ++eax56;
    } while (ecx);
    addr_408373_31:
    edi58 = ebp30;
    ecx59 = 0xffffffff;
    esi60 = a3;
    do {
        if (!ecx59) 
            break;
        --ecx59;
        ++edi58;
        ++esi60;
    } while (*reinterpret_cast<void***>(edi58));
    edi61 = a2;
    esp62 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp36) + 4);
    ecx63 = reinterpret_cast<void**>(~ecx59 - 1);
    ebp64 = reinterpret_cast<struct s19*>(reinterpret_cast<unsigned char>(ebp30) + reinterpret_cast<unsigned char>(ecx63) - reinterpret_cast<unsigned char>(esi60));
    if (edi61 && ((ecx63 = a4, !!ecx63) && (*reinterpret_cast<void***>(edi61) = reinterpret_cast<void**>(0), !!ebp64))) {
        eax65 = reinterpret_cast<void**>(&ebp64->f1);
        if (reinterpret_cast<unsigned char>(eax65) < reinterpret_cast<unsigned char>(ecx63)) {
            ecx63 = eax65;
        }
        edx66 = ecx63;
        ecx67 = reinterpret_cast<unsigned char>(ecx63) >> 2;
        while (ecx67) {
            --ecx67;
            *reinterpret_cast<void***>(edi61) = *reinterpret_cast<void***>(esi60);
            edi61 = edi61 + 4;
            esi60 = esi60 + 4;
        }
        ecx63 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx66) & 3);
        while (ecx63) {
            --ecx63;
            *reinterpret_cast<void***>(edi61) = *reinterpret_cast<void***>(esi60);
            ++edi61;
            ++esi60;
        }
    }
    fun_402200(ecx63, reinterpret_cast<int32_t>(esp62) + 20, v28, v23, v20, v18, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
    return ebp64;
    addr_408363_17:
    eax68 = ebx35;
    edx69 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ebp30) - reinterpret_cast<unsigned char>(ebx35));
    do {
        ecx = *reinterpret_cast<void***>(eax68);
        *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(edx69) + reinterpret_cast<unsigned char>(eax68)) = ecx;
        ++eax68;
    } while (ecx);
    goto addr_408373_31;
}

void** fun_412fb0(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, ...) {
    void** v8;
    void** ebx9;
    void** esi10;
    int1_t zf11;
    void** eax12;
    void** ebx13;
    void** edi14;
    void** eax15;
    void** al16;
    void** edi17;
    void* al18;
    void* cl19;
    void* al20;
    uint1_t cf21;
    void* eax22;
    uint1_t cf23;
    void* al24;

    v8 = ebx9;
    esi10 = a3;
    zf11 = g41f3e8 == 0;
    if (!zf11) {
        eax12 = reinterpret_cast<void**>(0xff);
        ebx13 = reinterpret_cast<void**>(0);
        edi14 = a2;
        do {
            if (!eax12) 
                break;
            eax12 = *reinterpret_cast<void***>(esi10);
            ++esi10;
            ebx13 = *reinterpret_cast<void***>(edi14);
            ++edi14;
        } while (eax12 == ebx13 || (eax15 = fun_4141af(ecx, ebx13, eax12), ebx13 = eax15, eax12 = fun_4141af(ecx, eax12, v8), ebx13 == eax12));
        goto addr_413032_5;
    } else {
        al16 = reinterpret_cast<void**>(0xff);
        edi17 = a2;
        do {
            if (!al16) 
                goto addr_412ffe_8;
            al16 = *reinterpret_cast<void***>(esi10);
            ++esi10;
            ++edi17;
        } while (*reinterpret_cast<void***>(edi17) == al16 || (al18 = reinterpret_cast<void*>(al16 - 65), cl19 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx)) - reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx)) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx)) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx)) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(al18) < 26))))) & 32), al20 = reinterpret_cast<void*>(*reinterpret_cast<void***>(edi17) - 65), *reinterpret_cast<void**>(&ecx) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(cl19) - reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(cl19) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(cl19) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(cl19) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(al20) < 26))))) & 32), al16 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(al20) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx))) + 65), al16 == reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(al18) + reinterpret_cast<unsigned char>(cl19)) + 65));
        goto addr_412ffa_10;
    }
    addr_413037_11:
    return eax12;
    addr_413032_5:
    cf21 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(eax12) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(eax12) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(ebx13) < reinterpret_cast<unsigned char>(eax12))));
    eax22 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax12) - (reinterpret_cast<unsigned char>(eax12) + cf21));
    eax12 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax22) - (1 - reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(eax22) < 1 - cf21)));
    goto addr_413037_11;
    addr_412ffe_8:
    eax12 = reinterpret_cast<void**>(static_cast<int32_t>(reinterpret_cast<signed char>(al16)));
    goto addr_413037_11;
    addr_412ffa_10:
    cf23 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(al16) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(al16) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(al16) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(al18) + reinterpret_cast<unsigned char>(cl19)) + 65))));
    al24 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(al16) - reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(al16) + cf23));
    al16 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(al24) - reinterpret_cast<unsigned char>(1 - reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(al24) < reinterpret_cast<unsigned char>(1 - cf23))));
    goto addr_412ffe_8;
}

int32_t fun_402cd0(void** ecx, void** a2, void** a3, void* a4);

int32_t Sleep = 0x190b2;

int32_t fun_402c40(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6) {
    int32_t eax7;
    void** eax8;
    void** v9;
    void** edi10;
    int32_t edi11;
    void** v12;
    void* esp13;
    int32_t eax14;
    void*** esp15;
    void** v16;
    void** esi17;
    int32_t esi18;
    void* esp19;
    int32_t eax20;

    eax7 = fun_402cd0(a2, a1, a2, reinterpret_cast<int32_t>(__zero_stack_offset()) + 8);
    if (!eax7) {
        return 0;
    } else {
        if (a3) {
            eax8 = g41f31c;
            v9 = edi10;
            edi11 = EnableWindow;
            v12 = eax8;
            edi11(v12, 0, v9);
            esp13 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4 + 4 + 12 - 4 - 4 - 4 - 4 + 4);
            eax14 = fun_402e40(reinterpret_cast<int32_t>(esp13) + 12, v12, 0, v9, __return_address(), a1);
            if (eax14) {
                esp15 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp13) - 4 - 4 + 4 + 4 - 4);
                v16 = esi17;
                esi18 = Sleep;
                do {
                    fun_404ef0(0, v16, v12, 0, v9);
                    esi18();
                    esp19 = reinterpret_cast<void*>(esp15 - 4 - 4 + 4 + 4 - 4 - 4 + 4);
                    eax20 = fun_402e40(reinterpret_cast<int32_t>(esp19) + 16, 0xc8, v16, v12, 0, v9);
                    esp15 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp19) - 4 - 4 + 4 + 4);
                } while (eax20);
            }
            edi11();
        }
        return 1;
    }
}

void** g41f0bc = reinterpret_cast<void**>(0);

struct s20 {
    void** f0;
    signed char[3] pad4;
    void** f4;
};

void** fun_405990(void** a1, void** a2) {
    void** edx3;
    void** esi4;
    int32_t eax5;
    struct s20* ecx6;
    void** eax7;
    void** esi8;
    void** edx9;
    void** edi10;
    uint32_t ecx11;

    edx3 = g41f0bc;
    if (!edx3) 
        goto addr_4059bb_2;
    esi4 = a1;
    eax5 = 0;
    do {
        if (!*reinterpret_cast<void***>(edx3 + eax5 * 8)) 
            goto addr_4059bb_2;
        if (*reinterpret_cast<void***>(edx3 + eax5 * 8) != esi4) 
            continue;
        ecx6 = *reinterpret_cast<struct s20**>(reinterpret_cast<uint32_t>(edx3 + eax5 * 8) + 4);
        if (ecx6) 
            break;
        ++eax5;
    } while (eax5 < 50);
    goto addr_4059bb_2;
    eax7 = ecx6->f0;
    if (eax7 == 0xffffffff) {
        addr_4059bb_2:
        return 0;
    } else {
        esi8 = a2;
        do {
            edx9 = reinterpret_cast<void**>(&ecx6->f4);
            if (esi8 == eax7) 
                break;
            edi10 = edx9;
            ecx11 = 0xffffffff;
            do {
                if (!ecx11) 
                    break;
                --ecx11;
                ++edi10;
                ++esi8;
            } while (*reinterpret_cast<void***>(edi10));
            ecx6 = reinterpret_cast<struct s20*>((reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(~ecx11) + 3) & 0xfffffffc) + reinterpret_cast<unsigned char>(edx9));
            eax7 = ecx6->f0;
        } while (!reinterpret_cast<int1_t>(eax7 == 0xffffffff));
        goto addr_4059ec_15;
    }
    return edx9;
    addr_4059ec_15:
    return 0;
}

int32_t ShellExecuteA = 0x1999a;

int32_t lstrcatA = 0x190a6;

int32_t lstrlenA = 0x1909a;

int32_t WinExec = 0x19090;

void** fun_4026d0(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6) {
    void** v7;
    void** v8;
    void** ebp9;
    void** v10;
    void** edi11;
    void** eax12;
    void** edi13;
    void** eax14;
    void** ebp15;
    void** v16;
    void** ebx17;
    void** ebx18;
    void** v19;
    void** esi20;
    void** esi21;
    void** eax22;
    void* edx23;
    void** ecx24;
    void** eax25;
    void** eax26;
    void** eax27;
    uint32_t eax28;
    int32_t eax29;
    int32_t ebx30;
    int32_t eax31;
    void** eax32;
    void** esi33;
    void** eax34;
    void* eax35;

    v7 = reinterpret_cast<void**>(__return_address());
    v8 = ebp9;
    v10 = edi11;
    eax12 = fun_4133d2(0x208, 1, v10, v8, v7, a1);
    edi13 = eax12;
    eax14 = fun_4133d2(0x208, 1, 0x208, 1, v10, v8);
    ebp15 = eax14;
    if (!edi13 || !ebp15) {
        addr_40280b_2:
        return eax14;
    } else {
        v16 = ebx17;
        ebx18 = a1;
        v19 = esi20;
        esi21 = reinterpret_cast<void**>(0);
        eax22 = ebx18;
        edx23 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ebp15) - reinterpret_cast<unsigned char>(ebx18));
        do {
            ecx24 = *reinterpret_cast<void***>(eax22);
            *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(edx23) + reinterpret_cast<unsigned char>(eax22)) = ecx24;
            ++eax22;
        } while (ecx24);
        eax25 = fun_413850(ebp15, "http://", 7);
        if (!eax25) 
            goto addr_402755_6;
        eax26 = fun_413850(ebp15, "https://", 8);
        if (!eax26) 
            goto addr_402755_6;
        eax27 = fun_4131d0(ecx24, ebp15, 92, v19, v16, v10, v8, v7, a1, a2);
        if (eax27) 
            goto addr_402750_9;
    }
    addr_402755_6:
    eax28 = reinterpret_cast<uint32_t>(ShellExecuteA());
    if (eax28 <= 32 && ((eax29 = fun_402810(0x80000000, v19, edi13, 0, "open", ebx18, 0, esi21, 5, v19, v16), !eax29) && (ebx30 = lstrcatA, ebx30(edi13, "\\shell\\open\\command"), eax31 = fun_402810(0x80000000, edi13, edi13, edi13, "\\shell\\open\\command", 0, "open", ebx18, 0, esi21, 5), !eax31))) {
        eax32 = fun_4136d0(edi13, "\"%1\"", edi13, "\\shell\\open\\command", 0, "open", ebx18, 0, esi21, 5);
        esi33 = eax32;
        if (esi33 || (eax34 = fun_4136d0(edi13, "%1", edi13, "\\shell\\open\\command", 0, "open", ebx18, 0, esi21, 5), esi33 = eax34, !!esi33)) {
            *reinterpret_cast<void***>(esi33) = reinterpret_cast<void**>(0);
        } else {
            eax35 = reinterpret_cast<void*>(lstrlenA(edi13, edi13, "\\shell\\open\\command"));
            esi33 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(eax35) + reinterpret_cast<unsigned char>(edi13) + 0xffffffff);
        }
        ebx30(esi33, " ", edi13, "\\shell\\open\\command");
        ecx24 = reinterpret_cast<void**>("open");
        ebx30(esi33, "open", esi33, " ", edi13, "\\shell\\open\\command");
        WinExec(edi13, 5, esi33, "open", esi33, " ", edi13, "\\shell\\open\\command");
    }
    fun_413483(ecx24, ebp15, 0, "open", ebx18, 0, esi21, ecx24, ebp15, 0, "open", ebx18, 0, esi21);
    eax14 = fun_413483(ecx24, edi13, ebp15, 0, "open", ebx18, 0, ecx24, edi13, ebp15, 0, "open", ebx18, 0);
    goto addr_40280b_2;
    addr_402750_9:
    *reinterpret_cast<void***>(eax27) = reinterpret_cast<void**>(0);
    esi21 = ebp15;
    goto addr_402755_6;
}

int32_t SetBkColor = 0x196ac;

int32_t ExtTextOutA = 0x1969e;

void fun_401490(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29) {
    int32_t esi30;

    SetBkColor(a1, a6, esi30, a2, a3, reinterpret_cast<unsigned char>(a2) + reinterpret_cast<unsigned char>(a4), reinterpret_cast<unsigned char>(a3) + reinterpret_cast<unsigned char>(a5), __return_address());
    ExtTextOutA();
    goto 0;
}

int32_t GetSysColor = 0x192b8;

int32_t CreateHalftonePalette = 0x1977c;

int32_t SelectPalette = 0x1976c;

int32_t RealizePalette = 0x1975a;

void* g8;

void* gc;

void fun_404290(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16) {
    void** v17;
    void** eax18;
    void** v19;
    void** esi20;
    void** v21;
    void** edi22;
    uint32_t ecx23;
    void** ebx24;
    int32_t esi25;
    void** eax26;
    void** eax27;
    void** ebp28;
    void* cx29;
    void** edx30;
    void** eax31;
    int32_t ebp32;
    void** eax33;
    void** ebp34;
    void** ebx35;
    void** eax36;
    int32_t eax37;
    void** eax38;
    void** ecx39;
    void** eax40;
    void** ecx41;
    void** edi42;
    void** ebp43;
    void* eax44;
    void* ecx45;
    void** eax46;
    void** v47;
    void** v48;
    void** v49;
    void** eax50;
    void** ecx51;
    void** v52;
    void** v53;
    void** v54;
    void** v55;
    void** v56;
    void** eax57;
    void** ecx58;
    void** edx59;
    void** v60;
    void** v61;
    void** v62;
    void** ecx63;
    void** eax64;
    void** edx65;

    v17 = reinterpret_cast<void**>(__return_address());
    eax18 = a6;
    v19 = esi20;
    v21 = edi22;
    if (!reinterpret_cast<int1_t>(eax18 == 0xffffffff)) {
        ecx23 = 0;
        *reinterpret_cast<signed char*>(&ecx23) = *reinterpret_cast<signed char*>(&eax18 + 1);
        ebx24 = reinterpret_cast<void**>(((reinterpret_cast<unsigned char>(eax18) >> 16 & 0xfe) << 8 | ecx23 & 0xfe) << 7 | (reinterpret_cast<unsigned char>(eax18) & 0xff) >> 1);
    } else {
        esi25 = GetSysColor;
        eax26 = reinterpret_cast<void**>(esi25(16));
        ebx24 = eax26;
        eax27 = reinterpret_cast<void**>(esi25(20, 16));
        v19 = eax27;
    }
    ebp28 = a4;
    if (ebp28) {
        cx29 = *reinterpret_cast<void**>(a3 + 14);
        edx30 = a3 + 40;
        a6 = edx30;
        if (reinterpret_cast<unsigned char>(cx29) <= reinterpret_cast<unsigned char>(8)) {
            eax31 = *reinterpret_cast<void***>(a3 + 32);
            if (!eax31) {
                a6 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(a6) + (4 << *reinterpret_cast<unsigned char*>(&cx29) & 0xffff));
            } else {
                *reinterpret_cast<int16_t*>(&eax31) = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&eax31) << 2);
                a6 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx30) + (reinterpret_cast<unsigned char>(eax31) & 0xffff));
            }
            ebp32 = GetDeviceCaps;
            eax33 = reinterpret_cast<void**>(ebp32(a2, 14));
            v17 = eax33;
            ebp32(a2, 12, a2, 14);
            if (!0 && (reinterpret_cast<int1_t>(*reinterpret_cast<void**>(a3 + 14) == 8) && (eax36 = fun_4014f0(0, a2, a3, a2, 12, a2, 14, ebp34, v21, v19, ebx35), v21 = eax36, !!eax36) || (eax36 = reinterpret_cast<void**>(CreateHalftonePalette(a2, a2, 12, a2, 14)), !!eax36))) {
                eax37 = reinterpret_cast<int32_t>(SelectPalette(a2, eax36, 0, a2, 12, a2, 14));
                RealizePalette(a2, a2, eax36, 0, a2, 12, a2, eax37);
            }
            ebp28 = v17;
        }
        eax38 = *reinterpret_cast<void***>(a3 + 8);
        ecx39 = *reinterpret_cast<void***>(a3 + 4);
        eax40 = *reinterpret_cast<void***>(ebp28 + 4);
        ecx41 = *reinterpret_cast<void***>(ebp28);
        StretchDIBits(a2, ecx41, eax40, ecx39);
        if (v21) {
            edi42 = *reinterpret_cast<void***>(ebp28);
            ebp43 = *reinterpret_cast<void***>(ebp28 + 4);
            eax44 = g8;
            ecx45 = gc;
            eax46 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(eax44) - reinterpret_cast<unsigned char>(edi42));
            v47 = eax46 - 1;
            v48 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ecx45) - reinterpret_cast<unsigned char>(ebp43));
            fun_401490(a2, edi42, ebp43, v47, 1, ebx24, a2, ecx41, eax40, ecx39, eax38, 0, 0, ecx39, eax38, a6, a3, v48, 0xcc0020, eax46, v21, v19, ebx35, 0xffffff, 0, 0, v17, a1, a2);
            v49 = v48 - 1;
            fun_401490(a2, edi42, ebp43, 1, v49, ebx24, a2, edi42, ebp43, v47, 1, ebx24, a2, ecx41, eax40, ecx39, eax38, 0, 0, ecx39, eax38, a6, a3, v48, 0xcc0020, eax46, v21, v19, ebx35);
            fun_401490(a2, edi42, reinterpret_cast<unsigned char>(v48) + reinterpret_cast<unsigned char>(ebp43) + 0xffffffff, eax46, 1, eax38, a2, edi42, ebp43, 1, v49, ebx24, a2, edi42, ebp43, v47, 1, ebx24, a2, ecx41, eax40, ecx39, eax38, 0, 0, ecx39, eax38, a6, a3);
            fun_401490(a2, reinterpret_cast<unsigned char>(eax46) + reinterpret_cast<unsigned char>(edi42) + 0xffffffff, ebp43, 1, v48, eax38, a2, ecx41, eax40, ecx39, eax38, 0, 0, ecx39, eax38, a6, a3, v48, 0xcc0020, eax46, v21, v19, ebx35, 0xffffff, 0, 0, v17, a1, a2);
        }
    }
    if (a5) {
        eax50 = *reinterpret_cast<void***>(a5);
        ecx51 = *reinterpret_cast<void***>(a5 + 8);
        if (ecx51 != eax50 + 2) {
            v52 = reinterpret_cast<void**>(1);
            v53 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx51) - reinterpret_cast<unsigned char>(eax50));
            v54 = *reinterpret_cast<void***>(a5 + 4);
            v55 = eax50;
            v56 = a2;
            fun_401490(v56, v55, v54, v53, 1, ebx24, v21, v19, ebx35, 0xffffff, 0, 0, v17, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
            eax57 = *reinterpret_cast<void***>(a5);
            ecx58 = *reinterpret_cast<void***>(a5 + 8);
            edx59 = *reinterpret_cast<void***>(a5 + 12);
            v60 = reinterpret_cast<void**>(1);
            v61 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx58) - reinterpret_cast<unsigned char>(eax57));
            v62 = edx59 - 1;
        } else {
            ecx63 = *reinterpret_cast<void***>(a5 + 4);
            v52 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a5 + 12)) - reinterpret_cast<unsigned char>(ecx63));
            v53 = reinterpret_cast<void**>(1);
            v54 = ecx63;
            v55 = eax50;
            v56 = a2;
            fun_401490(v56, v55, v54, 1, v52, ebx24, v21, v19, ebx35, 0xffffff, 0, 0, v17, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
            eax64 = *reinterpret_cast<void***>(a5 + 4);
            edx65 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a5 + 12)) - reinterpret_cast<unsigned char>(eax64));
            v60 = edx65;
            v61 = reinterpret_cast<void**>(1);
            v62 = eax64;
            eax57 = *reinterpret_cast<void***>(a5 + 8) - 1;
        }
        fun_401490(a2, eax57, v62, v61, v60, 0xffffff, v56, v55, v54, v53, v52, ebx24, v21, v19, ebx35, 0xffffff, 0, 0, v17, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
    }
    if (!1) {
        SelectPalette(a2, 0, 1);
        DeleteObject(0, a2, 0, 1);
    }
    goto v17;
}

void** g41f2c4 = reinterpret_cast<void**>(0);

int32_t CreateWindowExA = 0x193f4;

void** g41f2fc = reinterpret_cast<void**>(0);

int32_t SetWindowLongA = 0x1939c;

int32_t fun_404010(int32_t a1, int32_t a2);

void fun_4040c0(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12) {
    void** edi13;
    void** v14;
    int32_t eax15;
    uint32_t eax16;
    int32_t ecx17;
    int32_t ebx18;
    void** eax19;
    void** eax20;
    void** v21;
    int32_t eax22;
    void** eax23;
    void** eax24;
    int32_t ebp25;
    int32_t ebx26;
    int32_t eax27;
    void** eax28;
    void** eax29;
    uint32_t ebx30;

    if (!(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(a2) < reinterpret_cast<signed char>(0)) | reinterpret_cast<uint1_t>(a2 == 0))) {
        edi13 = a3;
        v14 = a2;
        while (1) {
            eax15 = 0;
            *reinterpret_cast<void***>(&eax15) = *reinterpret_cast<void***>(edi13);
            eax16 = reinterpret_cast<uint32_t>(eax15 - 1);
            if (eax16 > 14) 
                goto addr_404220_4;
            ecx17 = 0;
            *reinterpret_cast<signed char*>(&ecx17) = *reinterpret_cast<signed char*>(eax16 + 0x404250);
            switch (ecx17) {
            case 0:
                ebx18 = reinterpret_cast<int32_t>("STATIC");
                break;
            case 1:
                ebx18 = reinterpret_cast<int32_t>("EDIT");
                break;
            case 2:
                ebx18 = reinterpret_cast<int32_t>("BUTTON");
                break;
            case 3:
                ebx18 = reinterpret_cast<int32_t>("msctls_progress32");
                break;
            case 4:
                eax19 = g41f2c4;
                ebx18 = reinterpret_cast<int32_t>("RichEdit20A");
                if (!eax19) {
                    ebx18 = reinterpret_cast<int32_t>("RICHEDIT");
                }
            case 5:
                goto 0x404220;
            }
            if (reinterpret_cast<int1_t>(*reinterpret_cast<void***>(edi13 + 24) == 0xffff)) {
            }
            eax20 = *reinterpret_cast<void***>(edi13 + 8);
            v21 = *reinterpret_cast<void***>(edi13 + 4);
            eax22 = reinterpret_cast<int32_t>(CreateWindowExA(eax20, ebx18));
            if (!eax22) {
                addr_404220_4:
                edi13 = edi13 + 32;
                eax23 = v14 - 1;
                v14 = eax23;
                if (eax23) 
                    continue; else 
                    break;
            } else {
                eax24 = g41f2fc;
                ebp25 = SendMessageA;
                if (eax24) {
                    ebp25(eax22, 48, eax24, 0, eax20, ebx18);
                }
                if (!reinterpret_cast<int1_t>(*reinterpret_cast<void***>(edi13) == 15)) 
                    goto addr_404220_4;
            }
            ebx26 = SetWindowLongA;
            eax27 = reinterpret_cast<int32_t>(ebx26(eax22, 0xfc, fun_404010, eax20, ebx18));
            ebx26(eax22, 0xeb, eax27, eax22, 0xfc, fun_404010, eax20, ebx18);
            eax28 = reinterpret_cast<void**>(0x41f384);
            if (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi13 + 12)) & 1)) {
                if (1) 
                    goto addr_4041e2_20;
                eax28 = reinterpret_cast<void**>(GetSysColor(15, eax22, 0xeb, eax27, eax22, 0xfc, fun_404010, eax20, ebx18));
            } else {
                eax28 = v21;
            }
            if (eax28 == 0xffffffff) {
                addr_4041ed_24:
                eax29 = g41f2c4;
                ebx30 = 0;
                if (eax29) {
                    ebx30 = 0x4000000;
                    ebp25(eax22, 0x45b, 1, 0, eax22, 0xeb, eax27, eax22, 0xfc, fun_404010, eax20, ebx18);
                }
            } else {
                addr_4041e2_20:
                ebp25(eax22, 0x443, 0, eax28, eax22, 0xeb, eax27, eax22, 0xfc, fun_404010, eax20, ebx18);
                goto addr_4041ed_24;
            }
            if (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi13 + 12)) & 1)) {
                ebx30 = ebx30 | 0x80000;
            }
            ebp25(eax22, 0x445, 0, ebx30, eax22, 0xeb, eax27, eax22, 0xfc, fun_404010, eax20, ebx18);
            goto addr_404220_4;
        }
    }
    return;
}

int32_t fun_403a50(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33) {
    void** eax34;
    int32_t eax35;
    void** eax36;

    eax34 = fun_403a00(7, a1, __return_address(), a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33);
    if (!eax34 || (!*reinterpret_cast<void***>(eax34) || (eax35 = fun_4039c0(eax34, 36, __return_address(), a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28), eax35 == 6))) {
        if (a2 && ((eax36 = fun_403a00(7, a2, __return_address(), a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33), !!eax36) && *reinterpret_cast<void***>(eax36))) {
            fun_4039c0(eax36, 64, __return_address(), a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28);
        }
        return 1;
    } else {
        return 0;
    }
}

int32_t GetWindow = 0x1929c;

int32_t DestroyWindow = 0x19406;

void fun_404260(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7) {
    int32_t edi8;
    void** v9;
    int32_t eax10;
    int32_t v11;
    int32_t ebx12;
    int32_t ebx13;

    if (a2 && (edi8 = GetWindow, v9 = a2, eax10 = reinterpret_cast<int32_t>(edi8(v9, 5)), !!eax10)) {
        v11 = ebx12;
        ebx13 = DestroyWindow;
        do {
            ebx13(eax10, v11, v9, 5);
            eax10 = reinterpret_cast<int32_t>(edi8());
        } while (eax10);
    }
    goto a1;
}

void** g41f364 = reinterpret_cast<void**>(0);

void** g41f0ec = reinterpret_cast<void**>(0);

void fun_408a20(void** ecx, void** a2, void** a3);

void fun_408a70();

int16_t g41a2a6 = -1;

void** fun_409260(void** a1);

void** g41f0c8 = reinterpret_cast<void**>(0);

void fun_407960(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12);

void** fun_401140(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19);

void fun_4012a0(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8);

void** g41f110 = reinterpret_cast<void**>(0);

void** g41f10c = reinterpret_cast<void**>(0);

void** fun_407490(void** ecx, void** a2, void** a3, void** a4, void** a5);

void fun_401280(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11);

void** g41f358 = reinterpret_cast<void**>(0);

void** fun_403b20(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14);

int32_t WritePrivateProfileStringA = 0x191ce;

int32_t g41a2c4 = 0x80000001;

void** g41f2ec = reinterpret_cast<void**>(0);

int32_t RegCreateKeyExA = 0x198dc;

int32_t RegCreateKeyA = 0x198cc;

uint32_t RegSetValueExA = 0x1989a;

void** g41f34c = reinterpret_cast<void**>(0);

int32_t RegDeleteValueA = 0x198ba;

void** fun_408d00(void** ecx, signed char a2) {
    void** eax3;
    void*** esp4;
    void** v5;
    void** ebx6;
    int1_t zf7;
    void** v8;
    void* esp9;
    void** eax10;
    void** v11;
    void** v12;
    void** v13;
    void** v14;
    void** v15;
    void** v16;
    void** v17;
    void** v18;
    void** v19;
    void** v20;
    void** v21;
    void** v22;
    void** v23;
    void** v24;
    void** v25;
    void** v26;
    void** v27;
    int1_t zf28;
    int1_t zf29;
    void** eax30;
    void** v31;
    void** ebp32;
    void** v33;
    void** edi34;
    void** v35;
    void** v36;
    void** v37;
    void** v38;
    void** v39;
    void** v40;
    void** v41;
    void** v42;
    void** v43;
    void** esi44;
    void** v45;
    void** v46;
    void** v47;
    void** v48;
    void** v49;
    void** v50;
    void** v51;
    void** v52;
    void** v53;
    void** v54;
    void** v55;
    void** v56;
    void** v57;
    void** eax58;
    void** ebp59;
    void** eax60;
    void** esi61;
    void** eax62;
    void* esp63;
    void** v64;
    void** v65;
    void** eax66;
    void** edi67;
    void* esp68;
    void** v69;
    void** edx70;
    void* esp71;
    void** ecx72;
    void** edx73;
    void** v74;
    void** eax75;
    void** eax76;
    void** eax77;
    void** eax78;
    void*** esp79;
    void** v80;
    void** eax81;
    void* esp82;
    void** v83;
    void* esp84;
    void** v85;
    void** eax86;
    void* esp87;
    void** ebx88;
    int1_t zf89;
    void** v90;
    void** v91;
    void** v92;
    void** eax93;
    void** edx94;
    void** eax95;
    void** edx96;
    int32_t edi97;
    void** v98;
    void** ecx99;
    void** edx100;
    void** v101;
    void** edi102;
    uint32_t ecx103;
    int32_t ebx104;
    void** ecx105;
    void** edi106;
    void** ecx107;
    void** eax108;
    void** ecx109;
    void** edx110;
    int32_t eax111;
    void** ecx112;
    void** v113;
    int32_t v114;
    int32_t eax115;
    void** eax116;
    void** ecx117;
    void** edx118;
    int32_t v119;
    void** v120;
    void** edx121;
    void* esp122;
    void** eax123;
    void** v124;
    void** v125;
    void** v126;
    void** v127;
    void** v128;
    void** v129;
    void** v130;
    signed char* edi131;
    uint32_t ecx132;
    uint32_t ecx133;
    uint32_t edi134;
    void** edi135;
    uint32_t ecx136;
    uint32_t edx137;
    uint32_t ecx138;
    uint32_t ecx139;
    void** eax140;
    uint32_t ecx141;
    int32_t esi142;
    void** eax143;
    void* v144;
    int32_t eax145;
    int32_t edi146;
    void* esp147;
    void* v148;
    int32_t eax149;
    int32_t eax150;
    void** edi151;
    uint32_t ecx152;
    uint32_t esi153;
    void** v154;
    void* esp155;
    void** edx156;
    uint32_t ecx157;
    void** edi158;

    eax3 = g41f364;
    esp4 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 0x17c - 4);
    v5 = ebx6;
    if (eax3 || (zf7 = g41f0ec == 0, zf7)) {
        fun_408a20(ecx, v5, v8);
        esp9 = reinterpret_cast<void*>(esp4 - 4 + 4);
    } else {
        fun_408a70();
        esp9 = reinterpret_cast<void*>(esp4 - 4 + 4);
    }
    eax10 = g41a2bc;
    if (eax10 != 0xffffffff) {
        eax10 = fun_4013c0(eax10, v5, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27);
        esp9 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp9) - 4 - 4 + 4 + 4);
    }
    zf28 = g41f364 == 0;
    if (!zf28) {
        addr_409223_7:
        zf29 = g41a2a6 == -1;
        if (zf29 && (*reinterpret_cast<signed char*>(&eax10) = a2, !*reinterpret_cast<signed char*>(&eax10))) {
            eax10 = fun_409260(6);
        }
    } else {
        eax30 = g41f0c8;
        v31 = ebp32;
        v33 = edi34;
        if (!*reinterpret_cast<void***>(eax30)) {
            fun_407960(0xff, v33, v31, v5, v35, v36, v37, v38, v39, v40, v41, v42);
            goto addr_409092_11;
        } else {
            v43 = esi44;
            eax58 = fun_401140(eax30, 2, v43, v33, v31, v5, v45, v46, v47, v48, v49, v50, v51, v52, v53, v54, v55, v56, v57);
            ebp59 = eax58;
            fun_4012a0(ebp59, 0, eax30, 2, v43, v33, v31, v5);
            eax60 = fun_401240(ebp59, ebp59, 0, eax30, 2);
            esi61 = eax60;
            eax62 = g41f350;
            fun_402110(ecx, eax62, ebp59, ebp59, 0, eax30, ecx, eax62, ebp59, ebp59, 0, eax30);
            esp63 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp9) - 4 - 4 - 4 - 4 - 4 - 4 + 4 - 4 - 4 - 4 + 4 - 4 - 4 + 4 - 4 - 4 + 4);
            v64 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp63) + 44);
            v65 = reinterpret_cast<void**>(0);
            fun_401200(ebp59, v64, 4, eax62, ebp59, ebp59, 0, ebp59, v64, 4, eax62, ebp59, ebp59, 0);
            eax66 = g41f110;
            edi67 = g41f10c;
            esp68 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp63) - 4 - 4 - 4 - 4 + 4 + 36);
            v69 = reinterpret_cast<void**>(0);
            if (reinterpret_cast<unsigned char>(eax66) > reinterpret_cast<unsigned char>(0)) {
                while (1) {
                    fun_4092d0(edi67, v43, v33, v31, edi67, v43, v33, v31);
                    edx70 = g41f0d0;
                    esp71 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp68) - 4 - 4 + 4 + 4);
                    if (!*reinterpret_cast<void***>(edx70)) 
                        goto addr_408e47_14;
                    ecx72 = *reinterpret_cast<void***>(edi67 + 8);
                    if (!(*reinterpret_cast<unsigned char*>(&ecx72 + 1) & 2)) {
                        if (*reinterpret_cast<void***>(edi67 + 4) != 23 && (*reinterpret_cast<void***>(edi67 + 4) != 25 && (*reinterpret_cast<void***>(edi67 + 4) != 0x1f4 && !reinterpret_cast<int1_t>(*reinterpret_cast<void***>(edi67 + 4) == 0x1f5))) || *reinterpret_cast<signed char*>(&ecx72) < reinterpret_cast<signed char>(0)) {
                            addr_408e47_14:
                            edx73 = v69 + 1;
                            v69 = edx73;
                            eax75 = fun_403b10(edi67, v43, v33, v31, v5, v74, edi67, v43, v33, v31, v5, v74);
                            edi67 = eax75;
                            eax76 = g41f110;
                            esp68 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp71) - 4 - 4 + 4 + 4);
                            if (reinterpret_cast<unsigned char>(edx73) < reinterpret_cast<unsigned char>(eax76)) 
                                continue; else 
                                break;
                        } else {
                            eax77 = *reinterpret_cast<void***>(edi67 + 16);
                            *reinterpret_cast<unsigned char*>(&v74) = 0;
                            if (eax77 && *reinterpret_cast<unsigned char*>(&ecx72 + 1) & 4) {
                                *reinterpret_cast<unsigned char*>(&v74) = 1;
                            }
                            if (*reinterpret_cast<unsigned char*>(&ecx72) & 1) {
                                *reinterpret_cast<unsigned char*>(&v74) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&v74) | 8);
                            }
                            if (reinterpret_cast<int1_t>(eax77 == 3)) {
                                *reinterpret_cast<unsigned char*>(&v74) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&v74) | 2);
                            }
                            if (*reinterpret_cast<unsigned char*>(&ecx72 + 1) & 16 && (eax78 = *reinterpret_cast<void***>(edi67 + 12), !(*reinterpret_cast<unsigned char*>(&eax78 + 1) & 96))) {
                                *reinterpret_cast<unsigned char*>(&v74) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&v74) | 4);
                            }
                            esp79 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp71) - 4);
                            v80 = v74;
                        }
                    } else {
                        esp79 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp71) - 4);
                        v80 = reinterpret_cast<void**>(0);
                    }
                    fun_407490(ecx72, ebp59, v80, v43, v33);
                    esp71 = reinterpret_cast<void*>(esp79 - 4 - 4 + 4 + 8);
                    ++v65;
                    goto addr_408e47_14;
                }
            }
            eax81 = fun_401240(ebp59, v43, v33, v31, v5, ebp59, v43, v33, v31, v5);
            fun_401260(ebp59, esi61 + 0xfffffff8, ebp59, v43, v33, v31, v5);
            esp82 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp68) - 4 - 4 + 4 - 4 - 4 - 4 + 4);
            v83 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp82) + 40);
            fun_401200(ebp59, v83, 8, ebp59, esi61 + 0xfffffff8, ebp59, v43);
            esp84 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp82) - 4 - 4 - 4 - 4 + 4);
            v85 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp84) + 44);
            fun_401200(ebp59, v85, 4, ebp59, v83, 8, ebp59, ebp59, v85, 4, ebp59, v83, 8, ebp59);
            fun_401280(ebp59, reinterpret_cast<unsigned char>(eax81) - reinterpret_cast<unsigned char>(esi61) + 0xfffffffc, ebp59, v85, 4, ebp59, v83, 8, ebp59, esi61 + 0xfffffff8, ebp59);
            fun_407960(ebp59, ebp59, reinterpret_cast<unsigned char>(eax81) - reinterpret_cast<unsigned char>(esi61) + 0xfffffffc, ebp59, v85, 4, ebp59, v83, 8, ebp59, esi61 + 0xfffffff8, ebp59);
            eax86 = g41f258;
            esp87 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp84) - 4 - 4 - 4 - 4 + 4 - 4 - 4 - 4 + 4 - 4 - 4 + 4 + 48);
            ebx88 = *reinterpret_cast<void***>(eax86 + 10);
            if (!ebx88) 
                goto addr_40902e_29;
            if (!*reinterpret_cast<void***>(ebx88)) 
                goto addr_40902e_29;
            if (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax86)) & 32)) 
                goto addr_40902e_29; else 
                goto addr_408ed1_32;
        }
    }
    g41f0ec = reinterpret_cast<void**>(0);
    return eax10;
    addr_409092_11:
    zf89 = g41f358 == 0;
    if (!zf89) {
        addr_409211_34:
        eax10 = fun_403b20(0x1000000, 0, 1, v33, v31, v5, v74, v65, v69, 0x27f7f, 0, v90, v91, v92);
        goto addr_409223_7;
    } else {
        eax93 = g41f350;
        fun_402150(ecx, eax93, v33, v31, v5, v74);
        edx94 = g41f258;
        if (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx94)) & 4) || !*reinterpret_cast<void***>(edx94 + 22)) {
            addr_4091c7_36:
            if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx94)) & 8 && (*reinterpret_cast<void***>(edx94 + 38) && ((eax95 = *reinterpret_cast<void***>(edx94 + 42), !!eax95) && (edx96 = *reinterpret_cast<void***>(edx94 + 46), !!edx96)))) {
                edi97 = WritePrivateProfileStringA;
                v98 = *reinterpret_cast<void***>(edx94 + 38);
                ecx99 = g41f350;
                edi97(eax95, edx96, ecx99, v98);
                edx100 = g41f258;
                v101 = *reinterpret_cast<void***>(edx100 + 38);
                edi97(0, 0, 0, v101, eax95, edx96, ecx99, v98);
            }
        } else {
            edi102 = g41f350;
            ecx103 = 0xffffffff;
            ebx104 = g41a2c4;
            do {
                if (!ecx103) 
                    break;
                --ecx103;
                ++edi102;
            } while (*reinterpret_cast<void***>(edi102));
            if (*reinterpret_cast<uint32_t*>(edx94 + 18) >= 20) 
                goto addr_4090ec_42; else 
                goto addr_4090e5_43;
        }
    }
    ecx105 = g41f350;
    fun_402110(ecx105, ecx105, v33, v31, v5, v74);
    goto addr_409211_34;
    addr_4090ec_42:
    edi106 = reinterpret_cast<void**>(0);
    if (*reinterpret_cast<uint32_t*>(edx94 + 18) == 4) {
        ecx107 = *reinterpret_cast<void***>(edx94 + 26);
        eax108 = fun_413210(ecx107, ecx107, 92, v33, v31, v5, v74, ecx107, ecx107, 92, v33, v31, v5, v74);
        edi106 = eax108;
        if (edi106) {
            *reinterpret_cast<void***>(edi106) = reinterpret_cast<void**>(0);
        }
        edx94 = g41f258;
    }
    ecx109 = g41f2ec;
    if (ecx109 && reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx94 + 1)) & 64) {
    }
    edx110 = *reinterpret_cast<void***>(edx94 + 22);
    eax111 = reinterpret_cast<int32_t>(RegCreateKeyExA(ebx104, edx110, 0, 0));
    if (eax111) {
        edx94 = g41f258;
        if (*reinterpret_cast<uint32_t*>(edx94 + 18) != 4) {
            addr_4091b8_52:
            if (edi106) {
                *reinterpret_cast<void***>(edi106) = reinterpret_cast<void**>(92);
                edx94 = g41f258;
                goto addr_4091c7_36;
            }
        } else {
            if (edi106) {
            }
            ecx112 = *reinterpret_cast<void***>(edx94 + 22);
            v113 = ecx112;
            v114 = 0x80000001;
            eax115 = reinterpret_cast<int32_t>(RegCreateKeyA(0x80000001));
            if (!eax115) 
                goto addr_409190_57;
        }
    } else {
        eax116 = g41f350;
        ecx117 = g41f258;
        v113 = eax116;
        edx118 = *reinterpret_cast<void***>(ecx117 + 26);
        v114 = 1;
        v119 = 0;
        v120 = edx118;
        goto addr_40919c_59;
    }
    addr_4091b2_60:
    edx94 = g41f258;
    goto addr_4091b8_52;
    addr_409190_57:
    edx121 = g41f350;
    v119 = reinterpret_cast<int32_t>(~ecx103) - 1 + 1;
    v120 = edx121;
    addr_40919c_59:
    RegSetValueExA(0, v120, v119, v114);
    RegCloseKey(v113, 0, v120, v119, v114);
    goto addr_4091b2_60;
    addr_4090e5_43:
    ebx104 = *reinterpret_cast<int32_t*>(*reinterpret_cast<uint32_t*>(edx94 + 18) * 4 + 0x41a2c0);
    goto addr_4090ec_42;
    addr_40902e_29:
    ecx = g41f34c;
    esp122 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp87) + 4);
    eax123 = *reinterpret_cast<void***>(reinterpret_cast<unsigned char>(ecx) * 4 + 0x41f158);
    if (eax123) {
        ecx = *reinterpret_cast<void***>(reinterpret_cast<unsigned char>(ecx) * 4 + 0x41f118);
        fun_401200(ebp59, eax123, ecx, v33, v31, v5, v74);
        esp122 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp122) - 4 - 4 - 4 - 4 + 4 + 12);
    }
    fun_401240(ebp59, v33, v31, v5, v74);
    v124 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp122) - 4 - 4 + 4 + 28);
    fun_401200(ebp59, v124, 8, ebp59, v33, v31, v5, ebp59, v124, 8, ebp59, v33, v31, v5);
    fun_4013c0(ebp59, ebp59, v124, 8, ebp59, v33, v31, v5, v74, v65, v69, 0x27f7f, 0, v125, v126, v127, v128, v129, v130);
    goto addr_409092_11;
    addr_408ed1_32:
    edi131 = reinterpret_cast<signed char*>(0x41a354);
    ecx132 = 0xffffffff;
    do {
        if (!ecx132) 
            break;
        --ecx132;
        ++edi131;
    } while (*edi131);
    ecx133 = ~ecx132 + 0xfffffffe;
    edi134 = 0;
    if (!(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(ecx133) < reinterpret_cast<int32_t>(0)) | reinterpret_cast<uint1_t>(ecx133 == 0))) 
        goto addr_408eee_66;
    addr_408f07_67:
    edi135 = ebx88;
    ecx136 = 0xffffffff;
    do {
        if (!ecx136) 
            break;
        --ecx136;
        ++edi135;
    } while (*reinterpret_cast<void***>(edi135));
    edx137 = ~ecx136;
    ecx138 = 0xffffffff;
    do {
        if (!ecx138) 
            break;
        --ecx138;
    } while (0);
    ecx139 = edx137 >> 2;
    while (ecx139) {
        --ecx139;
    }
    eax140 = g41f2ec;
    ecx141 = edx137 & 3;
    while (ecx141) {
        --ecx141;
    }
    esi142 = 0x80000002;
    if (eax140 && ((eax143 = g41f258, !(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax143 + 1)) & 16)) && (v144 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp87) + 16), esi142 = 0x80000001, eax145 = reinterpret_cast<int32_t>(RegOpenKeyExA()), esp87 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp87) - 4 - 4 - 4 - 4 - 4 - 4 + 4), !eax145))) {
        edi146 = RegDeleteValueA;
        edi146(v144, "DisplayName");
        edi146(0, "UninstallString", v144, "DisplayName");
        RegCloseKey(0x80000002, 0, "UninstallString", v144, "DisplayName");
        esp87 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp87) - 4 - 4 - 4 + 4 - 4 - 4 - 4 + 4 - 4 - 4 + 4);
    }
    esp147 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp87) - 4 - 4 - 4 - 4 - 4 - 4);
    v148 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp147) + 60);
    eax149 = reinterpret_cast<int32_t>(RegCreateKeyExA(esi142, v148, 0, 0));
    esp87 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp147) - 4 - 4 - 4 - 4 + 4);
    if (!eax149 || (eax150 = reinterpret_cast<int32_t>(RegCreateKeyA(0x80000001, reinterpret_cast<int32_t>(esp87) + 36, reinterpret_cast<int32_t>(esp87) + 16, esi142, v148, 0, 0)), esp87 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp87) - 4 - 4 - 4 - 4 + 4), !eax150)) {
        edi151 = ebx88;
        ecx152 = 0xffffffff;
        esi153 = RegSetValueExA;
        do {
            if (!ecx152) 
                break;
            --ecx152;
            ++edi151;
            ++esi153;
        } while (*reinterpret_cast<void***>(edi151));
        v154 = ebx88;
        esi153(0, "DisplayName", 0, 1);
        esp155 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp87) - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4);
        edx156 = g41f0c8;
        ecx157 = 0xffffffff;
        edi158 = edx156;
        do {
            if (!ecx157) 
                break;
            --ecx157;
            ++edi158;
            ++esi153;
        } while (*reinterpret_cast<void***>(edi158));
        esi153(v154, "UninstallString", 0, 1);
        RegCloseKey(edx156, v154, "UninstallString", 0, 1);
        esp87 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp155) - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4 - 4 - 4 + 4);
        goto addr_40902e_29;
    }
    do {
        addr_408eee_66:
        ++edi134;
    } while (reinterpret_cast<int32_t>(edi134) < reinterpret_cast<int32_t>(ecx133));
    goto addr_408f07_67;
}

void** fun_406c80(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22);

void** fun_409b00(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20);

void** fun_40a230(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14) {
    void** v15;
    void** v16;
    void** v17;
    void** v18;
    void** v19;
    void** v20;
    void** v21;
    void** v22;
    void** eax23;
    void** v24;
    void** v25;
    void** v26;
    void** v27;
    void** v28;
    void** v29;
    void** v30;
    void** eax31;
    void** v32;
    void** ebx33;
    int32_t ebx34;
    void** v35;
    void** ebp36;
    int32_t ebp37;
    void** v38;
    void** esi39;
    int32_t esi40;
    void*** esp41;
    void** v42;
    void** edi43;
    int32_t edi44;
    void* esp45;
    void** v46;
    int32_t eax47;
    void* esp48;
    void* esp49;
    void* v50;
    int32_t eax51;
    void* esp52;
    void* v53;
    void* esp54;
    void* esp55;
    int32_t eax56;
    void** v57;
    void** v58;
    void** v59;
    void** v60;
    void** v61;
    void** v62;
    void** v63;
    void** eax64;
    void** v65;

    v15 = reinterpret_cast<void**>(__return_address());
    eax23 = fun_406c80(ecx, v16, v17, v18, v19, v20, v21, v22, v15, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
    if (eax23) {
        eax31 = fun_409b00(v24, v25, v26, v27, v28, v29, v30, v15, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
        if (eax31) {
            v32 = ebx33;
            ebx34 = TranslateMessage;
            v35 = ebp36;
            ebp37 = DispatchMessageA;
            v38 = esi39;
            esi40 = PeekMessageA;
            esp41 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 28 - 4 + 4 - 4 + 4 - 4 - 4 - 4 - 4);
            v42 = edi43;
            edi44 = GetMessageA;
            do {
                esp45 = reinterpret_cast<void*>(esp41 - 4 - 4 - 4);
                v46 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp45) + 28);
                eax47 = reinterpret_cast<int32_t>(esi40());
                esp48 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp45) - 4 - 4 - 4 + 4);
                if (eax47) {
                    do {
                        esp49 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp48) - 4 - 4);
                        v50 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp49) + 24);
                        eax51 = reinterpret_cast<int32_t>(edi44(v50, 0, 0, 0));
                        esp52 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp49) - 4 - 4 - 4 + 4);
                        if (eax51) {
                            v53 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp52) + 16);
                            ebx34(v53, v50, 0, 0, 0);
                            esp54 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp52) - 4 - 4 + 4);
                            ebp37(reinterpret_cast<int32_t>(esp54) + 16, v53, v50, 0, 0, 0);
                            esp52 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp54) - 4 - 4 + 4);
                        }
                        esp55 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp52) - 4 - 4 - 4);
                        ecx = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp55) + 28);
                        eax56 = reinterpret_cast<int32_t>(esi40(ecx, 0, 0, 0, 0, v50, 0, 0, 0));
                        esp48 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp55) - 4 - 4 - 4 + 4);
                    } while (eax56);
                }
                eax64 = fun_409b00(v46, 0, 0, 0, 0, v42, v38, v35, v32, v57, v58, v59, v60, v61, v62, v63, v15, a2, a3, a4);
                esp41 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp48) - 4 + 4);
            } while (eax64);
        }
        v65 = a2;
        eax23 = fun_408d00(ecx, *reinterpret_cast<signed char*>(&v65));
    }
    return eax23;
}

int32_t CreateFileA = 0x18fcc;

void** fun_401140(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19) {
    void** eax20;
    int32_t eax21;

    eax20 = a2 - 1;
    if (eax20) {
        if (!(eax20 - 1)) {
        }
    }
    eax21 = reinterpret_cast<int32_t>(CreateFileA());
    if (eax21 == -1) {
        GetLastError();
    }
    goto a1;
}

void** fun_413750(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9) {
    void** ecx10;
    void** ebx11;
    void** esi12;
    void** edi13;
    uint32_t ecx14;
    void** eax15;
    uint32_t ecx16;
    void** edx17;

    ecx10 = a4;
    if (!ecx10) {
        addr_4137d3_2:
        return a2;
    } else {
        ebx11 = ecx10;
        esi12 = a3;
        edi13 = a2;
        if (!(reinterpret_cast<unsigned char>(esi12) & 3)) {
            ecx14 = reinterpret_cast<unsigned char>(ecx10) >> 2;
            if (!ecx14) {
                goto addr_413795_6;
            }
        }
        do {
            eax15 = *reinterpret_cast<void***>(esi12);
            ++esi12;
            *reinterpret_cast<void***>(edi13) = eax15;
            ++edi13;
            --ecx10;
            if (!ecx10) 
                goto addr_4137a2_8;
            if (!eax15) 
                break;
        } while (reinterpret_cast<unsigned char>(esi12) & 3);
        goto addr_413789_11;
    }
    if (reinterpret_cast<unsigned char>(edi13) & 3) {
        do {
            *reinterpret_cast<void***>(edi13) = eax15;
            ++edi13;
            --ecx10;
            if (!ecx10) 
                goto addr_413846_14;
        } while (reinterpret_cast<unsigned char>(edi13) & 3);
    }
    ebx11 = ecx10;
    ecx16 = reinterpret_cast<unsigned char>(ecx10) >> 2;
    if (ecx16) 
        goto addr_413837_17; else 
        goto addr_4137cb_18;
    addr_413789_11:
    ebx11 = ecx10;
    ecx14 = reinterpret_cast<unsigned char>(ecx10) >> 2;
    if (ecx14) {
        do {
            edx17 = *reinterpret_cast<void***>(esi12);
            esi12 = esi12 + 4;
            if ((reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi12)) ^ 0xffffffff ^ reinterpret_cast<uint32_t>(*reinterpret_cast<void***>(esi12) + 0x7efefeff)) & 0x81010100) {
                if (!*reinterpret_cast<signed char*>(&edx17)) 
                    break;
                if (!*reinterpret_cast<signed char*>(&edx17 + 1)) 
                    goto addr_413821_22;
                if (!(reinterpret_cast<unsigned char>(edx17) & 0xff0000)) 
                    goto addr_413817_24;
                if (!(reinterpret_cast<unsigned char>(edx17) & 0xff000000)) 
                    goto addr_413813_26;
            }
            *reinterpret_cast<void***>(edi13) = edx17;
            edi13 = edi13 + 4;
            --ecx14;
        } while (ecx14);
        goto addr_413790_28;
    } else {
        addr_413790_28:
        ebx11 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebx11) & 3);
        if (!ebx11) {
            addr_4137a2_8:
            return a2;
        } else {
            do {
                addr_413795_6:
                eax15 = *reinterpret_cast<void***>(esi12);
                ++esi12;
                *reinterpret_cast<void***>(edi13) = eax15;
                ++edi13;
                if (!eax15) 
                    goto addr_4137ce_29;
                --ebx11;
            } while (ebx11);
            goto addr_4137a2_8;
        }
    }
    *reinterpret_cast<void***>(edi13) = reinterpret_cast<void**>(0);
    addr_41382f_32:
    edi13 = edi13 + 4;
    eax15 = reinterpret_cast<void**>(0);
    ecx16 = ecx14 - 1;
    if (!ecx16) {
        addr_413841_33:
        ebx11 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebx11) & 3);
        if (ebx11) {
            do {
                addr_4137cb_18:
                *reinterpret_cast<void***>(edi13) = eax15;
                ++edi13;
                addr_4137ce_29:
                --ebx11;
            } while (ebx11);
        } else {
            addr_413846_14:
            return a2;
        }
    } else {
        addr_413837_17:
        eax15 = reinterpret_cast<void**>(0);
        goto addr_413839_34;
    }
    goto addr_4137d3_2;
    do {
        addr_413839_34:
        *reinterpret_cast<void***>(edi13) = reinterpret_cast<void**>(0);
        edi13 = edi13 + 4;
        --ecx16;
    } while (ecx16);
    goto addr_413841_33;
    addr_413821_22:
    *reinterpret_cast<void***>(edi13) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx17) & 0xff);
    goto addr_41382f_32;
    addr_413817_24:
    *reinterpret_cast<void***>(edi13) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx17) & 0xffff);
    goto addr_41382f_32;
    addr_413813_26:
    *reinterpret_cast<void***>(edi13) = edx17;
    goto addr_41382f_32;
}

void** fun_405910(void** a1, void** a2, void** a3) {
    void** v4;
    void** eax5;
    void** v6;
    void** esi7;
    void** edx8;
    int32_t esi9;
    void** ecx10;
    void** edx11;
    void** v12;
    void** eax13;
    void** edx14;

    v4 = reinterpret_cast<void**>(__return_address());
    eax5 = g41f0bc;
    v6 = esi7;
    if (eax5 || (eax5 = fun_4133d2(1, 0x1a0, v6, v4, a1, a2), g41f0bc = eax5, !!eax5)) {
        edx8 = a1;
        esi9 = 0;
        do {
            ecx10 = *reinterpret_cast<void***>(eax5 + esi9 * 8);
            if (!ecx10) 
                break;
            if (ecx10 == edx8) 
                goto addr_405969_5;
            ++esi9;
        } while (esi9 < 50);
    } else {
        addr_405967_7:
        return eax5;
    }
    *reinterpret_cast<void***>(eax5 + esi9 * 8) = edx8;
    eax5 = g41f0bc;
    *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(eax5 + esi9 * 8) + 4) = a2;
    edx11 = g41f0bc;
    *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(edx11 + esi9 * 8) + 8) = 0;
    goto addr_405967_7;
    addr_405969_5:
    v12 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(eax5 + esi9 * 8) + 4);
    eax13 = fun_413483(ecx10, v12, v6, v4, a1, a2, a3);
    edx14 = g41f0bc;
    *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(edx14 + esi9 * 8) + 4) = a2;
    return eax13;
}

int32_t fun_4021c0(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22) {
    void** esi23;
    void** eax24;
    int32_t edx25;

    eax24 = fun_4133d2(a2, 1, esi23, __return_address(), a2, a3);
    if (!eax24) {
        fun_4132cc(ecx, esi23);
        eax24 = fun_4133d2(a2, 1, esi23, __return_address(), a2, a3);
    }
    edx25 = 0;
    *reinterpret_cast<unsigned char*>(&edx25) = reinterpret_cast<uint1_t>(!!eax24);
    *reinterpret_cast<void***>(a3) = eax24;
    return edx25;
}

int32_t GetDlgItem = 0x192e8;

void fun_406190(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33) {
    void** eax34;
    void** ecx35;
    int32_t ecx36;
    void** ecx37;
    void** ecx38;
    int32_t eax39;

    eax34 = fun_403a00(8, a2, __return_address(), a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33);
    ecx35 = a1 - 1;
    if (!ecx35) {
        ecx36 = 0x415;
    } else {
        ecx37 = ecx35 - 1;
        if (!ecx37) {
            ecx36 = 1;
        } else {
            if (ecx37 - 2) {
                addr_4061d7_6:
                goto __return_address();
            } else {
                ecx36 = 2;
            }
        }
    }
    ecx38 = g41f31c;
    eax39 = reinterpret_cast<int32_t>(GetDlgItem(ecx38, ecx36, eax34));
    SetWindowTextA(eax39, ecx38, ecx36, eax34);
    goto addr_4061d7_6;
}

int32_t g41f37c = 0;

void** g41f318 = reinterpret_cast<void**>(0);

void fun_406130() {
    void** eax1;
    int32_t esi2;
    int32_t eax3;
    int32_t ebx4;
    int32_t ebx5;
    int32_t esi6;
    int32_t v7;
    void** edx8;

    eax1 = g41f31c;
    eax3 = reinterpret_cast<int32_t>(GetDlgItem(eax1, 0x415, esi2));
    ebx4 = ebx5;
    esi6 = EnableWindow;
    g41f37c = ebx4;
    if (!(*reinterpret_cast<unsigned char*>(&ebx4) & 1)) {
        v7 = 0;
    } else {
        v7 = 1;
    }
    esi6(eax3, v7, eax1, 0x415, esi2);
    edx8 = g41f318;
    esi6();
    esi6();
    goto edx8;
}

struct s21 {
    signed char[4214320] pad4214320;
    signed char f4214320;
    signed char[24639] pad4238960;
    signed char f4238960;
};

void** g41f310 = reinterpret_cast<void**>(0);

void** g41f30c = reinterpret_cast<void**>(0);

struct s22 {
    signed char[4] pad4;
    void** f4;
    signed char[7] pad12;
    void** f12;
    signed char[3] pad16;
    uint32_t f16;
    signed char[24] pad44;
    int16_t f44;
    signed char[2] pad48;
    void* f48;
};

int32_t SetWindowPos = 0x19424;

struct s23 {
    signed char[4] pad4;
    int32_t f4;
    int32_t f8;
};

int32_t SetTextColor = 0x197f4;

struct s24 {
    signed char[8] pad8;
    int32_t f8;
    int32_t f12;
};

void** fun_403e70(void** ecx, void** a2, void** a3, void** a4, void** a5);

void** fun_404c50(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8) {
    struct s21* eax9;
    int32_t ecx10;
    void** eax11;
    int32_t esi12;
    void** eax13;
    void** edx14;
    void** eax15;
    struct s22* esi16;
    void** ebx17;
    void** v18;
    int32_t ebp19;
    void** eax20;
    void** edi21;
    void** v22;
    void** eax23;
    void** edx24;
    void** ebx25;
    void** ecx26;
    void** edi27;
    void** esi28;
    void** ebp29;
    void** ecx30;
    uint32_t esi31;
    void** ecx32;
    void** edx33;
    void** eax34;
    struct s23* esi35;
    int32_t v36;
    int32_t v37;
    void** eax38;
    void** eax39;
    void** ecx40;
    struct s24* esi41;
    int32_t v42;
    int32_t v43;
    void** eax44;
    void** eax45;

    eax9 = reinterpret_cast<struct s21*>(a2 + 0xffffff7e);
    if (reinterpret_cast<uint32_t>(eax9) <= 0xb6) {
        ecx10 = 0;
        *reinterpret_cast<signed char*>(&ecx10) = eax9->f4214320;
        switch (ecx10) {
        case 0:
            eax11 = g41f310;
            esi12 = DeleteObject;
            if (eax11) {
                esi12(eax11);
                g41f310 = reinterpret_cast<void**>(0);
            }
            eax13 = g41f30c;
            if (eax13) {
                esi12(eax13);
                g41f30c = reinterpret_cast<void**>(0);
            }
            g41f320 = reinterpret_cast<void**>(0);
            break;
        case 1:
            edx14 = g41f27c;
            eax15 = g41f29c;
            esi16 = *reinterpret_cast<struct s22**>(reinterpret_cast<uint32_t>(edx14 + reinterpret_cast<unsigned char>(eax15) * 4) + 0x7e);
            ebx17 = esi16->f4;
            if (ebx17 == 0xffffffff) {
                v18 = reinterpret_cast<void**>(15);
                GetSysColor(15);
            } else {
                v18 = ebx17;
            }
            ebp19 = CreateSolidBrush;
            eax20 = reinterpret_cast<void**>(ebp19(v18));
            g41f310 = eax20;
            edi21 = esi16->f12;
            if (edi21 == 0xffffffff) {
                v22 = reinterpret_cast<void**>(5);
                GetSysColor(5, v18);
            } else {
                v22 = edi21;
            }
            eax23 = reinterpret_cast<void**>(ebp19(v22, v18));
            g41f30c = eax23;
            edx24 = reinterpret_cast<void**>(0);
            g41f320 = ebx25;
            *reinterpret_cast<int16_t*>(&edx24) = esi16->f44;
            ecx26 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esi16->f48) + reinterpret_cast<uint32_t>(esi16));
            fun_4040c0(ebx25, edx24, ecx26, ebx17, edi21, v22, v18, edi27, esi28, ebp29, ebx25, __return_address());
            ecx30 = g41f27c;
            esi31 = esi16->f16;
            ecx32 = *reinterpret_cast<void***>(ecx30 + 12);
            SetWindowPos();
            goto reinterpret_cast<unsigned char>(ecx32) - esi31;
        case 2:
            edx33 = g41f27c;
            eax34 = g41f29c;
            esi35 = *reinterpret_cast<struct s23**>(reinterpret_cast<uint32_t>(edx33 + reinterpret_cast<unsigned char>(eax34) * 4) + 0x7e);
            if (esi35 && (esi35->f4 != -1 || esi35->f8 != -1)) {
                if (esi35->f8 != -1) {
                    v36 = esi35->f8;
                    SetTextColor(a3, v36);
                }
                if (esi35->f4 != -1) {
                    v37 = esi35->f4;
                    SetBkColor(a3, v37);
                }
                eax38 = g41f310;
                return eax38;
            }
        case 3:
            eax39 = g41f27c;
            ecx40 = g41f29c;
            esi41 = *reinterpret_cast<struct s24**>(reinterpret_cast<uint32_t>(eax39 + reinterpret_cast<unsigned char>(ecx40) * 4) + 0x7e);
            if (esi41 && (esi41->f12 != -1 || esi41->f8 != -1)) {
                if (esi41->f8 != -1) {
                    v42 = esi41->f8;
                    SetTextColor(a3, v42);
                }
                if (esi41->f12 != -1) {
                    v43 = esi41->f12;
                    SetBkColor(a3, v43);
                }
                eax44 = g41f30c;
                return eax44;
            }
        case 4:
            goto 0x404d52;
        }
    }
    eax45 = fun_403e70(a4, a1, a2, a3, a4);
    return eax45;
}

void** fun_4023b0(void** ecx, void** a2, void** a3) {
    void** v4;
    void** v5;
    void** ebx6;
    void** v7;
    void** ebp8;
    void** v9;
    void** esi10;
    void** esi11;
    void** v12;
    void** edi13;
    void** edi14;
    uint32_t ecx15;
    void** ecx16;
    void** v17;
    void** eax18;
    void** edi19;
    void** eax20;
    void* edx21;
    void** eax22;
    void** v23;
    void** eax24;
    void** esi25;
    void** eax26;
    void** ebx27;
    void** eax28;
    void** eax29;
    void* edx30;
    int32_t eax31;
    int32_t eax32;
    int32_t eax33;
    void** ebp34;
    void** v35;
    int32_t eax36;
    int32_t eax37;
    int32_t eax38;
    void** eax39;

    v4 = reinterpret_cast<void**>(__return_address());
    v5 = ebx6;
    v7 = ebp8;
    v9 = esi10;
    esi11 = a2;
    v12 = edi13;
    edi14 = esi11;
    ecx15 = 0xffffffff;
    do {
        if (!ecx15) 
            break;
        --ecx15;
        ++edi14;
        ++esi11;
    } while (*reinterpret_cast<void***>(edi14));
    ecx16 = reinterpret_cast<void**>(~ecx15 + 3);
    v17 = reinterpret_cast<void**>(0);
    eax18 = fun_4133d2(ecx16, 1, v12, v9, v7, v5);
    edi19 = eax18;
    if (!edi19) {
        return 0xffffffff;
    }
    eax20 = esi11;
    edx21 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(edi19) - reinterpret_cast<unsigned char>(esi11));
    do {
        ecx16 = *reinterpret_cast<void***>(eax20);
        *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(edx21) + reinterpret_cast<unsigned char>(eax20)) = ecx16;
        ++eax20;
    } while (ecx16);
    eax22 = fun_4131d0(ecx16, edi19, 92, v12, v9, v7, v5, 0, v4, a2);
    if (eax22) 
        goto addr_40240c_9;
    addr_402410_10:
    if (!reinterpret_cast<int1_t>(*reinterpret_cast<void***>(edi19) == 92) || !reinterpret_cast<int1_t>(*reinterpret_cast<void***>(edi19 + 1) == 92)) {
        if (!reinterpret_cast<int1_t>(*reinterpret_cast<void***>(edi19 + 1) == 58) || !reinterpret_cast<int1_t>(*reinterpret_cast<void***>(edi19 + 2) == 92)) {
            v23 = edi19;
        } else {
            ecx16 = edi19 + 3;
            v23 = ecx16;
        }
    } else {
        eax24 = fun_413210(ecx16, edi19 + 2, 92, v12, v9, v7, v5);
        esi25 = eax24;
        if (!esi25) {
            addr_402456_15:
            eax26 = fun_4133d2(0x104, 1, v12, v9, v7, v5);
            ebx27 = eax26;
            if (!ebx27) {
                fun_413483(ecx16, edi19, v12, v9, v7, v5, 0);
                return 0xffffffff;
            }
        } else {
            v23 = esi25 + 1;
        }
    }
    eax28 = fun_413210(ecx16, v23, 92, v12, v9, v7, v5);
    esi25 = eax28;
    goto addr_402456_15;
    if (!esi25) {
        eax29 = edi19;
        edx30 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ebx27) - reinterpret_cast<unsigned char>(edi19));
        do {
            ecx16 = *reinterpret_cast<void***>(eax29);
            *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(edx30) + reinterpret_cast<unsigned char>(eax29)) = ecx16;
            ++eax29;
        } while (ecx16);
        fun_402150(ecx16, ebx27, v12, v9, v7, v5);
        eax31 = fun_413518(ecx16, ebx27, ebx27, v12, v9, v7, v5);
        if (!eax31) 
            goto addr_40251c_23;
        eax32 = fun_4134ec(ecx16, ebx27);
        if (eax32) 
            goto addr_402518_25;
        eax33 = fun_413518(ecx16, ebx27, v12, v9, v7, v5, 0);
        if (eax33) 
            goto addr_402518_25;
    } else {
        ebp34 = edi19;
        do {
            v35 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi25) - reinterpret_cast<unsigned char>(ebp34));
            fun_4135a0(ebx27, ebp34, v35);
            eax36 = fun_413518(ecx16, ebx27, ebx27, ebp34, v35, v12, v9);
            if (eax36 && ((eax37 = fun_4134ec(ecx16, ebx27), !!eax37) || (eax38 = fun_413518(ecx16, ebx27, v12, v9, v7, v5, v17), !!eax38))) {
                v17 = reinterpret_cast<void**>(1);
            }
            ebp34 = esi25;
            eax39 = fun_413210(ecx16, esi25 + 1, 92, v12, v9, v7, v5);
            esi25 = eax39;
            if (!esi25) 
                break;
        } while (!v17);
        goto addr_4024d9_32;
    }
    addr_40251c_23:
    fun_413483(ecx16, ebx27, v12, v9, v7, v5, v17);
    fun_413483(ecx16, edi19, ebx27, v12, v9, v7, v5);
    return v17;
    addr_402518_25:
    v17 = reinterpret_cast<void**>(1);
    goto addr_40251c_23;
    addr_4024d9_32:
    goto addr_40251c_23;
    addr_40240c_9:
    *reinterpret_cast<void***>(eax22 + 1) = reinterpret_cast<void**>(0);
    goto addr_402410_10;
}

int32_t SHBrowseForFolderA = 0x19984;

int32_t fun_402630(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20) {
    void** v21;
    void** v22;
    void** ebx23;
    void** v24;
    int32_t eax25;
    int32_t v26;
    void** v27;
    void** esi28;
    void** v29;
    void** edi30;
    int32_t ecx31;
    void** v32;
    void** v33;
    void** v34;
    void** v35;
    void** v36;
    void** v37;
    void** v38;
    int32_t eax39;
    int32_t eax40;
    void** ecx41;

    v21 = reinterpret_cast<void**>(__return_address());
    v22 = ebx23;
    v24 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 36);
    eax25 = reinterpret_cast<int32_t>(SHGetMalloc());
    if (eax25 < 0) {
        addr_4026c1_2:
        goto v26;
    } else {
        v27 = esi28;
        v29 = edi30;
        ecx31 = 8;
        while (ecx31) {
            --ecx31;
        }
        fun_403a00(7, 1, v29, v27, v24, v22, v21, v32, a1, v33, v34, v35, v36, v37, v38, v21, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
        eax39 = reinterpret_cast<int32_t>(SHBrowseForFolderA());
        if (eax39) 
            goto addr_402699_7;
    }
    addr_4026b5_8:
    *reinterpret_cast<void***>(v21 + 8)();
    goto addr_4026c1_2;
    addr_402699_7:
    eax40 = reinterpret_cast<int32_t>(SHGetPathFromIDListA(eax39, a1));
    if (eax40 >= 0) {
    }
    ecx41 = *reinterpret_cast<void***>(v29);
    *reinterpret_cast<void***>(ecx41 + 20)(v29, eax39, eax39, a1);
    goto addr_4026b5_8;
}

uint32_t fun_402220(void** a1, int32_t* a2);

int32_t wsprintfA = 0x1934c;

void fun_4064c0(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10) {
    void** v11;
    void** ecx12;
    int32_t* esp13;
    uint32_t eax14;
    void** v15;
    void** ebx16;
    void** v17;
    void** ebp18;
    void** v19;
    void** esi20;
    void** v21;
    void** edi22;
    void** v23;
    void** v24;
    void** v25;
    void** v26;
    void** v27;
    void** v28;
    void** v29;
    void** v30;
    void** v31;
    void** v32;
    void** v33;
    void** v34;
    void** v35;
    void** v36;
    void** v37;
    void** v38;
    void** v39;
    void** v40;
    void** v41;
    void** v42;
    void** v43;
    void** v44;
    void** v45;
    void** v46;
    void** v47;
    void** v48;
    void** v49;
    void** eax50;
    int32_t ebx51;
    void* esp52;
    void** ebp53;
    void* esp54;
    void** v55;
    void** eax56;
    void** v57;
    void** v58;
    void** v59;
    void** v60;
    void** v61;
    void** v62;
    void** v63;
    void** v64;
    void** v65;
    void** v66;
    void** v67;
    void** v68;
    void** v69;
    void** v70;
    void** v71;
    void** v72;
    void** v73;
    void** v74;
    void** v75;
    void** v76;
    void** v77;
    void** v78;
    void** v79;
    void** v80;
    void** v81;
    void** v82;
    void** eax83;
    void** ecx84;
    void* esp85;
    void* esi86;
    uint32_t edi87;
    void** v88;
    void** edx89;
    void** eax90;
    void** eax91;
    void** v92;
    void** v93;
    void** v94;
    void** v95;
    void** v96;
    void** v97;
    void** v98;
    void** v99;
    void** v100;
    void** v101;
    void** v102;
    void** v103;
    void** v104;
    void** v105;
    void** v106;
    void** v107;
    void** v108;
    void** v109;
    void** v110;
    void** v111;
    void** v112;
    void** v113;
    void** v114;
    void** v115;
    void** v116;
    void** v117;
    void** eax118;
    void*** esp119;
    void** eax120;
    void** v121;
    void** v122;
    void** v123;
    void** v124;
    void** v125;
    void** v126;
    void** v127;
    void** v128;
    void** v129;
    void** v130;
    void** v131;
    void** v132;
    void** v133;
    void** v134;
    void** v135;
    void** v136;
    void** v137;
    void** v138;
    void** v139;
    void** v140;
    void** v141;
    void** v142;
    void** v143;
    void** v144;
    void** v145;
    int32_t v146;

    v11 = reinterpret_cast<void**>(__return_address());
    ecx12 = g41f350;
    esp13 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 0x68);
    eax14 = fun_402220(ecx12, esp13);
    if (eax14 == 0xffffffff) {
        eax14 = 0;
    }
    v15 = ebx16;
    v17 = ebp18;
    v19 = esi20;
    v21 = edi22;
    v23 = reinterpret_cast<void**>(eax14 + 0x3ff >> 10);
    eax50 = fun_403a00(3, 8, v23, v21, v19, v17, v15, v24, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41, v42, v43, v44, v45, v46, v47, v48, v49, v11, a1, a2);
    ebx51 = wsprintfA;
    esp52 = reinterpret_cast<void*>(esp13 - 1 - 1 - 1 + 1 + 2 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 + 1 + 2);
    ebx51(reinterpret_cast<int32_t>(esp52) + 24, eax50, v23, v21, v19);
    ebp53 = a1;
    esp54 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp52) - 4 - 4 - 4 + 4 + 12);
    v55 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp54) + 20);
    eax56 = reinterpret_cast<void**>(GetDlgItem(ebp53));
    fun_405a50(eax56, ebp53, 0x3fb, v55, v21, v19, v17, v15, v57, v58, v59, v60, v61, v62, v63, v64, v65, v66, v67, v68, v69, v70, v71, v72, v73, v74, v75, v76, v77, v78, v79, v80, v81, v82, v11, a1, a2);
    eax83 = g41f110;
    ecx84 = g41f10c;
    esp85 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp54) - 4 - 4 - 4 - 4 + 4 - 4 - 4 + 4 + 8);
    esi86 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(v17) << 10);
    edi87 = 0;
    if (eax83) {
        v88 = eax83;
        do {
            edx89 = *reinterpret_cast<void***>(ecx84 + 24);
            edi87 = edi87 + (reinterpret_cast<unsigned char>(edx89) + reinterpret_cast<uint32_t>(esi86) + 0xffffffff) / reinterpret_cast<uint32_t>(esi86) * reinterpret_cast<uint32_t>(esi86);
            eax90 = fun_403b10(ecx84, 0x3fb, v55, v21, v19, v17, ecx84, 0x3fb, v55, v21, v19, v17);
            ecx84 = eax90;
            esp85 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp85) - 4 - 4 + 4 + 4);
            eax91 = v88 - 1;
            v88 = eax91;
        } while (eax91);
    }
    v92 = reinterpret_cast<void**>(edi87 + 0xfffff >> 20);
    eax118 = fun_403a00(3, 8, v92, 0x3fb, v55, v21, v19, v17, v15, v93, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v104, v105, v106, v107, v108, v109, v110, v111, v112, v113, v114, v115, v116, v117, v88, v11);
    esp119 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp85) - 4 - 4 - 4 - 4 + 4 + 8 - 4);
    ebx51(esp119 + 28, eax118, v92);
    eax120 = reinterpret_cast<void**>(GetDlgItem(ebp53));
    fun_405a50(eax120, ebp53, 0x3f8, esp119 - 4 - 4 + 4 + 12 + 20, 0x3fb, v55, v21, v19, v17, v15, v121, v122, v123, v124, v125, v126, v127, v128, v129, v130, v131, v132, v133, v134, v135, v136, v137, v138, v139, v140, v141, v142, v143, v144, v145, v88, v11);
    goto v146;
}

void** fun_403ff0(void** a1, void** a2, void** a3, void** a4) {
    SetWindowLongA();
    goto a1;
}

void*** g41f354 = reinterpret_cast<void***>(0);

void fun_405420(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34) {
    void** eax35;
    void** cl36;
    void** edx37;
    void* edx38;
    void** cl39;
    void*** ecx40;

    eax35 = fun_403a00(7, a2, __return_address(), a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33);
    cl36 = *reinterpret_cast<void***>(eax35);
    edx37 = eax35;
    if (!cl36) {
        addr_40544a_2:
        edx38 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(a1) - reinterpret_cast<unsigned char>(eax35));
    } else {
        do {
            if (!reinterpret_cast<int1_t>(cl36 == 37)) 
                continue;
            if (*reinterpret_cast<void***>(edx37 + 1) == 0x73) 
                goto addr_40545b_5;
            cl36 = *reinterpret_cast<void***>(edx37 + 1);
            ++edx37;
        } while (cl36);
        goto addr_40544a_2;
    }
    do {
        cl39 = *reinterpret_cast<void***>(eax35);
        *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(edx38) + reinterpret_cast<unsigned char>(eax35)) = cl39;
        ++eax35;
    } while (cl39);
    return;
    addr_40545b_5:
    ecx40 = g41f354;
    wsprintfA(a1, eax35, ecx40);
    return;
}

int32_t GetFullPathNameA = 0x19162;

void** g41f360 = reinterpret_cast<void**>(0);

void** fun_4065c0(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29) {
    void** v30;
    void** eax31;
    void** eax32;
    void** edx33;
    void** v34;
    void** v35;
    void** v36;
    void** ecx37;
    void** edx38;
    void** al39;
    void** eax40;
    int32_t eax41;
    void** edx42;
    void** eax43;
    void** ecx44;
    int32_t eax45;
    void** ecx46;
    void** eax47;
    void** edx48;
    void** eax49;
    int32_t eax50;

    v30 = reinterpret_cast<void**>(__return_address());
    eax31 = g41f350;
    fun_402150(ecx, eax31, ecx, v30, a2, a3);
    eax32 = g41f350;
    if (!*reinterpret_cast<void***>(eax32)) {
        return 5;
    }
    edx33 = g41f0d0;
    v34 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 + 4 + 4);
    v35 = edx33;
    v36 = eax32;
    GetFullPathNameA();
    ecx37 = g41f0d0;
    if (*reinterpret_cast<void***>(ecx37)) {
        edx38 = g41f350;
        do {
            al39 = *reinterpret_cast<void***>(ecx37);
            ++ecx37;
            *reinterpret_cast<void***>(edx38) = al39;
            ++edx38;
        } while (al39);
    }
    eax40 = g41f350;
    eax41 = fun_413518(ecx37, eax40, v36, 0x104, v35, v34, 0);
    if (eax41) 
        goto addr_40662d_7;
    edx42 = g41f350;
    fun_402110(ecx37, edx42, v36, 0x104, v35, v34, ecx37, edx42, v36, 0x104, v35, v34);
    addr_4066b6_9:
    goto 0x104;
    addr_40662d_7:
    eax43 = fun_403a00(7, 6, v36, 0x104, v35, v34, 0, v30, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29);
    if (*reinterpret_cast<void***>(eax43) && ((ecx44 = g41f360, !ecx44) && (eax45 = fun_4039c0(eax43, 36, v36, 0x104, v35, v34, 0, v30, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24), eax45 != 6))) {
        goto 0x104;
    }
    ecx46 = g41f350;
    fun_402110(ecx46, ecx46, v36, 0x104, v35, v34, ecx46, ecx46, v36, 0x104, v35, v34);
    eax47 = g41f358;
    if (eax47) 
        goto addr_4066b6_9;
    edx48 = g41f350;
    fun_4023b0(ecx46, edx48, v36);
    eax49 = g41f350;
    fun_402150(ecx46, eax49, edx48, v36, 0x104, v35, ecx46, eax49, edx48, v36, 0x104, v35);
    ecx37 = g41f350;
    eax50 = fun_413518(ecx37, ecx37, eax49, edx48, v36, 0x104, v35, ecx37, ecx37, eax49, edx48, v36, 0x104, v35);
    if (eax50) {
        goto 0x104;
    }
}

void** g41f378 = reinterpret_cast<void**>(0);

int32_t fun_406350(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8) {
    void** ecx9;
    void** v10;
    void** ebx11;
    void*** esp12;
    void** v13;
    void** ebp14;
    void** v15;
    void** edi16;
    uint32_t eax17;
    void** ebp18;
    uint32_t ecx19;
    void** eax20;
    uint32_t v21;
    void** v22;
    void*** esp23;
    void** v24;
    void** esi25;
    void** ecx26;
    void** eax27;
    void** eax28;
    void* v29;
    int32_t eax30;
    void** eax31;
    void** ecx32;
    void** edx33;
    void** eax34;
    void** eax35;

    ecx9 = g41f350;
    v10 = ebx11;
    esp12 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 0x14c - 4 - 4);
    v13 = ebp14;
    v15 = edi16;
    eax17 = fun_402220(ecx9, esp12 + 8);
    ebp18 = g41f10c;
    ecx19 = eax17;
    eax20 = g41f110;
    v21 = ecx19;
    g41f378 = reinterpret_cast<void**>(0);
    v22 = reinterpret_cast<void**>(0);
    if (reinterpret_cast<unsigned char>(eax20) > reinterpret_cast<unsigned char>(0)) {
        esp23 = esp12 - 4 - 4 - 4 - 4 + 4 + 8 - 4;
        v24 = esi25;
        do {
            ecx26 = *reinterpret_cast<void***>(ebp18 + 8);
            if (!(*reinterpret_cast<unsigned char*>(&ecx26 + 1) & 3)) {
                eax27 = g41f258;
                if (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax27)) & 1) || (*reinterpret_cast<void***>(ebp18 + 16) == 3 || *reinterpret_cast<unsigned char*>(&ecx26) & 1)) {
                    fun_4092d0(ebp18, v24, v15, v13);
                    eax28 = g41f0d0;
                    esp23 = esp23 - 4 - 4 + 4 + 4;
                    if (*reinterpret_cast<void***>(eax28)) {
                        v29 = reinterpret_cast<void*>(esp23 + 28);
                        eax30 = reinterpret_cast<int32_t>(FindFirstFileA(eax28, v29));
                        esp23 = esp23 - 4 - 4 - 4 + 4;
                        if (eax30 != -1) {
                            if (!1) {
                            }
                            if (reinterpret_cast<unsigned char>(0) > reinterpret_cast<unsigned char>(v10)) {
                                v10 = reinterpret_cast<void**>(0);
                            }
                            FindClose(eax30, eax28, v29);
                            esp23 = esp23 - 4 - 4 + 4;
                            eax31 = *reinterpret_cast<void***>(ebp18 + 16);
                            if (reinterpret_cast<int1_t>(eax31 == 3)) {
                                ecx32 = *reinterpret_cast<void***>(ebp18 + 8);
                                *reinterpret_cast<unsigned char*>(&ecx32) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ecx32) | 0x80);
                                *reinterpret_cast<void***>(ebp18 + 8) = ecx32;
                            }
                            if (*reinterpret_cast<unsigned char*>(&v22) & 1 && eax31 != 3) {
                                g41f378 = reinterpret_cast<void**>(1);
                            }
                        }
                    }
                } else {
                    if (!1) {
                    }
                }
            }
            edx33 = v22 + 1;
            v22 = edx33;
            eax34 = fun_403b10(ebp18, v24, v15, v13, v10, v22);
            ebp18 = eax34;
            eax35 = g41f110;
            esp23 = esp23 - 4 - 4 + 4 + 4;
        } while (reinterpret_cast<unsigned char>(edx33) < reinterpret_cast<unsigned char>(eax35));
        ecx19 = v21;
    }
    if (ecx19 == 0xffffffff || 0 < ecx19) {
        return 0;
    } else {
        return 1;
    }
}

void** fun_405500(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13) {
    void** v14;
    void** v15;
    void** ebx16;
    void** v17;
    void** esi18;
    void** esi19;
    void** eax20;
    void* esp21;
    void** ecx22;
    void** ebx23;
    void** v24;
    void** v25;
    void** eax26;
    void* esp27;
    void** v28;
    void** ebp29;
    void** ebp30;
    void** v31;
    void*** esp32;
    void** v33;
    void** edi34;
    void** edi35;
    uint32_t edx36;
    void** eax37;
    uint32_t esi38;
    uint32_t edx39;
    uint32_t ecx40;
    void** eax41;
    uint32_t edx42;
    uint32_t ecx43;
    void** eax44;
    uint32_t edx45;
    uint32_t ecx46;
    void** eax47;
    void* edx48;
    uint32_t edx49;
    void** v50;
    void* ebx51;
    void** v52;
    void** eax53;

    v14 = reinterpret_cast<void**>(__return_address());
    v15 = ebx16;
    v17 = esi18;
    esi19 = reinterpret_cast<void**>(0);
    eax20 = fun_4012c0(a1, v17, v15);
    esp21 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 8 - 4 - 4 - 4 - 4 + 4);
    ecx22 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp21) + 12);
    ebx23 = eax20;
    eax26 = fun_402180(ecx22, 0x4000, ecx22, a1, v17, v15, v24, v25, v14);
    esp27 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp21) - 4 - 4 - 4 + 4 + 12);
    if (!eax26) {
        *reinterpret_cast<void***>(a2) = reinterpret_cast<void**>(0);
        *reinterpret_cast<void***>(a3) = reinterpret_cast<void**>(0);
        return a2;
    } else {
        if (ebx23) {
            v28 = ebp29;
            ebp30 = v31;
            esp32 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp27) - 4 - 4);
            v33 = edi34;
            do {
                edi35 = ebx23;
                if (reinterpret_cast<unsigned char>(ebx23) >= reinterpret_cast<unsigned char>(0x4000)) {
                    edi35 = reinterpret_cast<void**>(0x4000);
                }
                fun_4011c0(a1, ebp30, edi35, v33, v28);
                esp32 = esp32 - 4 - 4 - 4 - 4 + 4 + 12;
                edx36 = reinterpret_cast<unsigned char>(edi35) >> 2;
                eax37 = ebp30;
                ecx22 = esi19;
                if (edx36) {
                    esi38 = edx36;
                    do {
                        edx39 = 0;
                        *reinterpret_cast<void***>(&edx39) = *reinterpret_cast<void***>(eax37);
                        ecx40 = (reinterpret_cast<unsigned char>(ecx22) >> 31) + reinterpret_cast<unsigned char>(ecx22) * 2 + edx39;
                        eax41 = eax37 + 1;
                        edx42 = 0;
                        *reinterpret_cast<void***>(&edx42) = *reinterpret_cast<void***>(eax41);
                        ecx43 = (ecx40 >> 31) + ecx40 * 2 + edx42;
                        eax44 = eax41 + 1;
                        edx45 = 0;
                        *reinterpret_cast<void***>(&edx45) = *reinterpret_cast<void***>(eax44);
                        ecx46 = (ecx43 >> 31) + ecx43 * 2 + edx45;
                        eax47 = eax44 + 1;
                        edx48 = reinterpret_cast<void*>(0);
                        *reinterpret_cast<void***>(&edx48) = *reinterpret_cast<void***>(eax47);
                        ecx22 = reinterpret_cast<void**>((ecx46 >> 31) + ecx46 * 2 + reinterpret_cast<uint32_t>(edx48));
                        eax37 = eax47 + 1;
                        --esi38;
                    } while (esi38);
                }
                edx49 = reinterpret_cast<unsigned char>(edi35) & 3;
                if (edx49) {
                    do {
                        v50 = ebx23;
                        ebx51 = reinterpret_cast<void*>(0);
                        *reinterpret_cast<void***>(&ebx51) = *reinterpret_cast<void***>(eax37);
                        ebx23 = v50;
                        ecx22 = reinterpret_cast<void**>((reinterpret_cast<unsigned char>(ecx22) >> 31) + reinterpret_cast<unsigned char>(ecx22) * 2 + reinterpret_cast<uint32_t>(ebx51));
                        ++eax37;
                        --edx49;
                    } while (edx49);
                }
                ebx23 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebx23) - reinterpret_cast<unsigned char>(edi35));
                esi19 = ecx22;
            } while (ebx23);
            esp27 = reinterpret_cast<void*>(esp32 + 4 + 4);
        }
        eax53 = fun_402200(ecx22, reinterpret_cast<int32_t>(esp27) + 8, v17, v15, v52, v50, v14, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
        *reinterpret_cast<void***>(a2) = esi19;
        *reinterpret_cast<void***>(a3) = reinterpret_cast<void**>(0);
        return eax53;
    }
}

void** fun_40d0fa();

int32_t fun_40d0f4();

int32_t fun_40d0ee(void** a1, void** a2, void** a3, void** a4);

int32_t fun_409830(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16) {
    void* esp17;
    void** edi18;
    void** v19;
    void** v20;
    void** v21;
    int32_t eax22;
    void* esp23;
    void** edx24;
    void** ecx25;
    void** v26;
    void** eax27;
    void* esp28;
    void** ebp29;
    void** v30;
    void** v31;
    void** eax32;
    void** v33;
    void** edx34;
    void** v35;
    void** v36;
    int32_t eax37;
    void* esp38;
    int32_t ebx39;
    void** v40;
    void** v41;
    int32_t eax42;
    void** esi43;
    void** ebx44;
    void** v45;
    void** v46;
    void** eax47;
    void** v48;
    void** v49;
    int32_t eax50;
    void** eax51;
    void** v52;
    void** v53;
    int32_t eax54;
    void** v55;
    void** v56;
    void** eax57;
    void** v58;
    void** v59;
    int32_t eax60;
    void** v61;
    void** v62;
    int32_t v63;

    esp17 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 16);
    eax22 = fun_4021c0(ecx, 0x800, reinterpret_cast<int32_t>(esp17) + 8, edi18, 1, v19, v20, v21, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
    esp23 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp17) - 4 - 4 - 4 - 4 + 4 + 8);
    if (eax22) {
        edx24 = g41f0d0;
        ecx25 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp23) + 16);
        v26 = ecx25;
        eax27 = fun_40d0fa();
        esp28 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp23) - 4 - 4 - 4 - 4 + 4);
        if (eax27 && (eax32 = fun_413320(ecx25, eax27, edx24, v26, ebp29, edi18, 1, v30, v31, eax27, __return_address(), a2), esp28 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp28) - 4 - 4 + 4 + 4), !!eax32)) {
            ecx25 = v33;
            edx34 = g41f0d0;
            v35 = ecx25;
            v36 = edx34;
            eax37 = fun_40d0f4();
            esp38 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp28) - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4);
            if (eax37 && ((ebx39 = wsprintfA, !!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a2 + 8)) & 2)) && ((ecx25 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp38) + 20), v40 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp38) + 36), v41 = ecx25, eax42 = fun_40d0ee(eax32, "\\", v41, v40), esp38 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp38) - 4 - 4 - 4 - 4 - 4 + 4), !!eax42) && (((ecx25 = *reinterpret_cast<void***>(a2 + 40), reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(v35 + 8)) > reinterpret_cast<unsigned char>(ecx25)) || *reinterpret_cast<void***>(v35 + 8) == ecx25 && reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(v35 + 12)) > reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a2 + 44))) && ((eax47 = fun_403a00(7, 29, eax32, "\\", v41, v40, v36, v35, eax27, eax32, esi43, ebx44, edx24, v26, ebp29, edi18, 1, v45, v46, eax27, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16), ecx25 = *reinterpret_cast<void***>(eax47), esp38 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp38) - 4 - 4 - 4 + 4 + 8), ecx25 == 0) || ((ecx25 = g41f360, !!ecx25) || (ecx25 = g41f0d0, ebx39(edx24, eax47, ecx25, eax32, "\\", v41, v40), eax50 = fun_4039c0(edx24, 0x124, edx24, eax47, ecx25, eax32, "\\", v41, v40, v36, v35, eax27, eax32, esi43, ebx44, edx24, v26, ebp29, edi18, 1, v48, v49, eax27, __return_address(), a2, a3, a4, a5, a6, a7, a8), esp38 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp38) - 4 - 4 - 4 - 4 + 4 - 4 - 4 - 4 + 4 + 20), eax50 != 6))))) || (eax51 = g41f360, !eax51) && (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a2 + 8)) & 4 && ((v52 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp38) + 36), v53 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp38) + 20), eax54 = fun_40d0ee(eax32, "\\VarFileInfo\\Translation", v53, v52), esp38 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp38) - 4 - 4 - 4 - 4 - 4 + 4), !!eax54) && ((ecx25 = reinterpret_cast<void**>(0), ecx25 = *reinterpret_cast<void***>(v35), *reinterpret_cast<void***>(a2 + 56) != ecx25) && ((eax57 = fun_403a00(7, 30, eax32, "\\VarFileInfo\\Translation", v53, v52, v36, v35, eax27, eax32, esi43, ebx44, edx24, v26, ebp29, edi18, 1, v55, v56, eax27, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16), esp38 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp38) - 4 - 4 - 4 + 4 + 8), !!eax57) && (ecx25 = g41f0d0, ebx39(edx24, eax57, ecx25, eax32, "\\VarFileInfo\\Translation", v53, v52), eax60 = fun_4039c0(edx24, 0x124, edx24, eax57, ecx25, eax32, "\\VarFileInfo\\Translation", v53, v52, v36, v35, eax27, eax32, esi43, ebx44, edx24, v26, ebp29, edi18, 1, v58, v59, eax27, __return_address(), a2, a3, a4, a5, a6, a7, a8), esp38 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp38) - 4 - 4 - 4 - 4 + 4 - 4 - 4 - 4 + 4 + 20), eax60 != 6))))))) {
                v36 = reinterpret_cast<void**>(0);
            }
            fun_413483(ecx25, eax32, v36, v35, eax27, eax32, esi43, ecx25, eax32, v36, v35, eax27, eax32, esi43);
            esp28 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp38) - 4 - 4 + 4 + 4 + 4 + 4);
        }
        fun_402200(ecx25, reinterpret_cast<int32_t>(esp28) + 16, edx24, v26, ebp29, edi18, 1, v61, v62, eax27, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10);
        goto v63;
    } else {
        return 1;
    }
}

void fun_407050(void** a1, void** a2, void** a3, void** a4) {
    void** ecx5;
    void*** edx6;
    void** al7;

    ecx5 = a1;
    edx6 = g41f354;
    do {
        al7 = *reinterpret_cast<void***>(ecx5);
        ++ecx5;
        *edx6 = al7;
        ++edx6;
    } while (al7);
    return;
}

void fun_408cd0(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18) {
    void** eax19;

    eax19 = g41a2bc;
    if (eax19 != 0xffffffff) {
        fun_4013c0(eax19, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
    }
    fun_408a20(ecx, __return_address(), a2);
    g41f0ec = reinterpret_cast<void**>(0);
    return;
}

void fun_401280(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11) {
    SetFilePointer();
    goto a1;
}

void** g41f0e0 = reinterpret_cast<void**>(0);

void** g41f280 = reinterpret_cast<void**>(0);

void fun_4020a0(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6);

void** g41f100 = reinterpret_cast<void**>(0);

void* g41f104 = reinterpret_cast<void*>(0);

void** g41f0dc = reinterpret_cast<void**>(0);

void** g41f2b4 = reinterpret_cast<void**>(0);

void** fun_407070() {
    void** eax1;
    void** v2;
    void** ebx3;
    void** v4;
    void** ebp5;
    void** v6;
    void** esi7;
    void** v8;
    void** edi9;
    void** ebp10;
    void** v11;
    void** v12;
    void** v13;
    void** v14;
    void** v15;
    void** v16;
    void** v17;
    void** v18;
    void** v19;
    void** v20;
    void** v21;
    void** v22;
    void** v23;
    void** v24;
    void** eax25;
    int32_t ebx26;
    void* esp27;
    void** eax28;
    void** ecx29;
    void** eax30;
    void* esp31;
    void** eax32;
    void** ecx33;
    void* eax34;
    void** ebp35;
    void** eax36;
    void** v37;
    int32_t eax38;
    void* esp39;
    void** ecx40;
    void** v41;
    void** v42;
    void** v43;
    void** v44;
    void** v45;
    void** v46;
    void** v47;
    void** v48;
    void** v49;
    void** v50;
    void** v51;
    void** eax52;
    void** eax53;
    void** edx54;
    void** v55;
    void** v56;
    void** v57;
    void** v58;
    void** v59;
    void** v60;
    void** v61;
    void** v62;
    void** v63;
    void** v64;
    void** v65;
    void** v66;
    void** eax67;
    int1_t zf68;
    void** edx69;
    void** v70;
    void** v71;
    void** v72;
    void** v73;
    void** v74;
    void** v75;
    void** v76;
    void** v77;
    void** v78;
    void** v79;
    void** v80;
    void** v81;
    void** v82;
    void** v83;
    void** v84;
    void** v85;
    void** v86;
    void** v87;
    void** v88;
    void** v89;
    void** v90;
    void** v91;
    void** v92;
    void** v93;
    void** v94;
    void** v95;
    void** v96;
    void** v97;
    void** eax98;
    void*** esp99;
    void** v100;
    void* esp101;
    void** ecx102;
    void** v103;
    void** v104;
    void** v105;
    void** v106;
    void** v107;
    void** v108;
    void** v109;
    void** v110;
    void** v111;
    void** v112;
    void** v113;
    void** v114;
    void** v115;
    void** v116;
    void** v117;
    void** v118;
    void** v119;
    void** v120;
    void** v121;
    void** v122;
    int32_t eax123;
    void** v124;
    void** v125;
    void** v126;
    void** v127;
    void** v128;
    void** v129;
    void** v130;
    void** v131;
    void** v132;
    void** v133;
    void** v134;
    void** v135;
    void** v136;
    void** v137;
    void** v138;
    void** v139;
    void** v140;
    void** v141;
    void** v142;
    void** v143;
    void** v144;
    void** v145;
    void** v146;
    void** v147;
    void** v148;
    int32_t eax149;
    void** ecx150;
    void** v151;
    void** v152;
    void** v153;
    void** edx154;
    void** eax155;
    void** eax156;
    void** v157;
    void** v158;
    void** v159;
    void** v160;
    void** v161;
    void** v162;
    void** v163;
    void** v164;
    void** v165;
    void** v166;
    void** v167;
    void** v168;
    int32_t v169;
    int32_t v170;
    void** v171;
    void** v172;
    void** v173;
    void** v174;
    void** v175;
    void** v176;
    void** v177;
    void** v178;
    void** v179;
    void** v180;
    void** v181;
    int32_t v182;

    eax1 = g41a2bc;
    v2 = ebx3;
    v4 = ebp5;
    v6 = esi7;
    v8 = edi9;
    ebp10 = reinterpret_cast<void**>(0);
    fun_4013c0(eax1, v8, v6, v4, v2, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24);
    eax25 = g41a2b0;
    ebx26 = wsprintfA;
    esp27 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 0x210 - 4 - 4 - 4 - 4 - 4 - 4 + 4 + 4);
    g41a2bc = reinterpret_cast<void**>(0xffffffff);
    if (!eax25) {
        eax28 = g41f0e0;
        ecx29 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp27) + 16);
        eax30 = eax28 + 1;
        g41f0e0 = eax30;
        ebx26(ecx29, ".D%2.2d", eax30);
        esp31 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp27) - 4 - 4 - 4 - 4 + 4);
        eax32 = g41f280;
        fun_4020a0(ecx29, eax32, reinterpret_cast<int32_t>(esp31) + 28, ecx29, ".D%2.2d", eax30);
        ecx33 = g41f100;
        eax34 = g41f104;
        esp27 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp31) - 4 - 4 - 4 + 4 + 20);
        g41f104 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax34) + reinterpret_cast<unsigned char>(ecx33));
    } else {
        ebp35 = g41f100;
        ebp10 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebp35) - reinterpret_cast<unsigned char>(eax25));
    }
    while (1) {
        eax36 = g41f280;
        v37 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp27) + 0xe0);
        eax38 = reinterpret_cast<int32_t>(FindFirstFileA());
        esp39 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp27) - 4 - 4 - 4 + 4);
        if (eax38 != -1) {
            FindClose(eax38);
            esp39 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp39) - 4 - 4 + 4);
        }
        ecx40 = g41f280;
        eax52 = fun_401140(ecx40, 0, eax36, v37, v8, v6, v4, v2, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51);
        esp27 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp39) - 4 - 4 - 4 + 4 + 8);
        g41a2bc = eax52;
        if (!reinterpret_cast<int1_t>(eax52 == 0xffffffff)) {
            g41f100 = reinterpret_cast<void**>(0);
            eax53 = fun_4011c0(eax52, 0x41f100, 4, eax36, v37);
            esp27 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp27) - 4 - 4 - 4 - 4 + 4 + 12);
            if (eax53) {
                edx54 = g41a2bc;
                g41f100 = reinterpret_cast<void**>(0);
                fun_4013c0(edx54, eax36, v37, v8, v6, v4, v2, v55, v56, v57, v58, v59, v60, v61, v62, v63, v64, v65, v66);
                esp27 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp27) - 4 - 4 + 4 + 4);
                g41a2bc = reinterpret_cast<void**>(0xffffffff);
            }
            eax67 = g41f100;
            g41a2b0 = eax67;
            if (!eax53) 
                break;
        } else {
            zf68 = g41f0dc == 0;
            if (zf68) 
                goto addr_407252_11;
            edx69 = g41f0e0;
            v70 = edx69 + 1;
            eax98 = fun_403a00(7, 28, v70, eax36, v37, v8, v6, v4, v2, v71, v72, v73, v74, v75, v76, v77, v78, v79, v80, v81, v82, v83, v84, v85, v86, v87, v88, v89, v90, v91, v92, v93, v94, v95, v96, v97);
            esp99 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp27) - 4 - 4 - 4 - 4 + 4 + 8 - 4);
            v100 = reinterpret_cast<void**>(esp99 + 32);
            ebx26(v100, eax98, v70);
            esp101 = reinterpret_cast<void*>(esp99 - 4 - 4 + 4);
            ecx102 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp101) + 36);
            eax123 = fun_4039c0(ecx102, 65, v100, eax98, v70, eax36, v37, v8, v6, v4, v2, v103, v104, v105, v106, v107, v108, v109, v110, v111, v112, v113, v114, v115, v116, v117, v118, v119, v120, v121, v122);
            esp27 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp101) - 4 - 4 - 4 + 4 + 20);
            if (eax123 == 1) 
                continue;
            eax149 = fun_403a50(13, 0, eax36, v37, v8, v6, v4, v2, v124, v125, v126, v127, v128, v129, v130, v131, v132, v133, v134, v135, v136, v137, v138, v139, v140, v141, v142, v143, v144, v145, v146, v147, v148);
            esp27 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp27) - 4 - 4 - 4 + 4 + 8);
            if (eax149) 
                goto addr_407179_14;
        }
    }
    if (ebp10) {
        ecx150 = g41a2bc;
        fun_401280(ecx150, ebp10, eax36, v37, v8, v6, v4, v2, v151, v152, v153);
        edx154 = g41a2bc;
        eax155 = fun_401240(edx154, ecx150, ebp10, eax36, v37, edx154, ecx150, ebp10, eax36, v37);
        eax156 = g41a2bc;
        if (eax155 != ebp10 + 4) {
            g41f100 = reinterpret_cast<void**>(0);
            g41a2b0 = reinterpret_cast<void**>(0);
            fun_4013c0(eax156, eax36, v37, v8, v6, v4, v2, v157, v158, v159, v160, v161, v162, v163, v164, v165, v166, v167, v168);
            g41a2bc = reinterpret_cast<void**>(0xffffffff);
            goto v169;
        }
    }
    addr_407252_11:
    goto v170;
    addr_407179_14:
    g41f2e0 = reinterpret_cast<void**>(2);
    g41f364 = reinterpret_cast<void**>(15);
    fun_408cd0(ecx102, eax36, v37, v8, v6, v4, v2, v171, v172, v173, v174, v175, v176, v177, v178, v179, v180, v181);
    g41f2b4 = reinterpret_cast<void**>(1);
    goto v182;
}

int32_t CoCreateInstance = 0x199c4;

uint40_t g0;

struct s25 {
    int32_t f0;
    signed char[20] pad24;
    int32_t f24;
};

struct s25* g4184a8 = reinterpret_cast<struct s25*>(0x21401);

int32_t MultiByteToWideChar = 0x1914c;

void** gff;

int32_t WideCharToMultiByte = 0x19136;

int32_t CoGetMalloc = 0x199b6;

int32_t fun_405610(void* a1, void** a2, void** a3, void** a4, void* a5, int32_t a6, void** a7, void** a8) {
    int32_t v9;
    void** v10;
    void** ebx11;
    void** v12;
    void** ebp13;
    void*** esp14;
    void** v15;
    void** esi16;
    void** v17;
    void** edi18;
    void** v19;
    int32_t eax20;
    int32_t v21;
    void** esi22;
    void** v23;
    void** v24;
    void** v25;
    void** ecx26;
    void** v27;
    void* esp28;
    void** eax29;
    void* edx30;
    void** v31;
    void** eax32;
    void* esp33;
    signed char* v34;
    void** edx35;
    void** eax36;
    void** v37;
    void** v38;
    void** v39;
    void** v40;
    void** v41;
    void** ecx42;
    int32_t eax43;
    void** edx44;
    void* esp45;
    struct s25* ecx46;
    int32_t eax47;
    void** ebx48;
    void** v49;
    void** v50;
    void** ecx51;
    void** eax52;
    void** v53;
    uint32_t ecx54;
    void** edi55;
    void** ecx56;
    void** esi57;
    void** eax58;
    void** v59;
    void* esp60;
    void* v61;
    struct s25* ecx62;
    int32_t eax63;
    void* esp64;
    void** edx65;
    void* v66;
    void** ecx67;
    int32_t eax68;
    void* esp69;
    void** ecx70;
    void** v71;
    void** v72;
    void* esp73;
    void** v74;
    int32_t eax75;
    void* esp76;
    void** eax77;
    void* esp78;
    void** eax79;
    void** edx80;
    signed char* eax81;
    uint32_t edx82;
    signed char cl83;
    signed char* eax84;
    uint32_t edx85;
    signed char cl86;
    int32_t v87;
    void* v88;
    signed char* eax89;
    void* edx90;
    void** edi91;
    uint32_t ecx92;
    void** edi93;
    uint32_t ebp94;
    uint32_t ecx95;
    void** eax96;
    void** cl97;
    void** ecx98;

    v9 = reinterpret_cast<int32_t>(__return_address());
    v10 = ebx11;
    v12 = ebp13;
    esp14 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 0x428 - 4 - 4 - 4);
    v15 = esi16;
    v17 = edi18;
    v19 = reinterpret_cast<void**>(esp14 + 12);
    eax20 = reinterpret_cast<int32_t>(CoCreateInstance());
    if (eax20 < 0) {
        addr_4058fc_2:
        goto v21;
    } else {
        esi22 = v23;
        v24 = esi22;
        v25 = v19;
        ecx26 = v27;
        *reinterpret_cast<int32_t*>(ecx26 + 80)(v25, v24);
        esp28 = reinterpret_cast<void*>(esp14 - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4 - 4 - 4 - 4 + 4);
        eax29 = esi22;
        edx30 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp28) + 0x12c - reinterpret_cast<unsigned char>(esi22));
        do {
            ecx26 = *reinterpret_cast<void***>(eax29);
            *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(edx30) + reinterpret_cast<unsigned char>(eax29)) = ecx26;
            ++eax29;
        } while (ecx26);
        v31 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp28) + 0x12c);
        eax32 = fun_4131d0(ecx26, v31, 92, v25, v24, 0x4184a8, 0, 1, 0x418498, v19, ecx26, v31, 92, v25, v24, 0x4184a8, 0, 1, 0x418498, v19);
        esp33 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp28) - 4 - 4 - 4 + 4 + 8);
        if (eax32) 
            goto addr_405680_6;
    }
    addr_405695_7:
    if (v34 && *v34) {
        edx35 = *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&g0) + 1);
        *reinterpret_cast<void***>(edx35 + 44)(1, v34, v25, v24);
        esp33 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp33) - 4 - 4 - 4 + 4);
    }
    eax36 = v37;
    if (v38 || eax36 && *reinterpret_cast<void***>(eax36)) {
        if (!eax36 || !*reinterpret_cast<void***>(eax36)) {
            eax36 = esi22;
        }
        v39 = v38;
        v40 = eax36;
        v41 = reinterpret_cast<void**>(1);
        esi22 = *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&g0) + 1);
        *reinterpret_cast<uint32_t*>(esi22 + 68)();
        esp33 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp33) - 4 - 4 - 4 - 4 + 4);
    }
    ecx42 = reinterpret_cast<void**>(1);
    eax43 = v9 - 1;
    if (!eax43) {
        ecx42 = reinterpret_cast<void**>(7);
    } else {
        if (!(eax43 - 1)) {
            ecx42 = reinterpret_cast<void**>(3);
        }
    }
    v39 = ecx42;
    v40 = reinterpret_cast<void**>(1);
    edx44 = *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&g0) + 1);
    *reinterpret_cast<void***>(edx44 + 60)(1);
    esp45 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp33) - 4 - 4 - 4 + 4);
    v41 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp45) + 24);
    ecx46 = g4184a8;
    eax47 = reinterpret_cast<int32_t>(ecx46->f0());
    ebx48 = v49;
    if (eax47 < 0) {
        addr_405863_18:
        v50 = v39;
        ecx51 = *reinterpret_cast<void***>(v39);
        *reinterpret_cast<void***>(ecx51 + 8)();
        if (1) {
            addr_4058fa_19:
            goto addr_4058fc_2;
        } else {
            eax52 = fun_401140(ebx48, 0, v50, 0x4184a8, 0x4184b8, v41, v40, v39, v25, v24, 0x4184a8, 0, 1, 0x418498, v19, v17, v15, v12, v10);
            if (!reinterpret_cast<int1_t>(eax52 == 0xffffffff)) {
                addr_4058f1_21:
                fun_4013c0(eax52, v50, 0x4184a8, 0x4184b8, v41, v40, v39, v25, v24, 0x4184a8, 0, 1, 0x418498, v19, v17, v15, v12, v10, v53);
                goto addr_4058fa_19;
            } else {
                ecx54 = reinterpret_cast<unsigned char>(ecx51) | reinterpret_cast<unsigned char>(eax52);
                edi55 = ebx48;
                do {
                    if (!ecx54) 
                        break;
                    --ecx54;
                    ++edi55;
                } while (*reinterpret_cast<void***>(edi55));
                ecx56 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(~ecx54) - 1 - 4);
                if (reinterpret_cast<signed char>(ecx56) < reinterpret_cast<signed char>(0)) 
                    goto addr_4058fa_19;
                esi57 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx56) + reinterpret_cast<unsigned char>(ebx48));
                eax58 = fun_412fb0(ecx56, esi57, ".lnk", v50, 0x4184a8, 0x4184b8, v41, ecx56, esi57, ".lnk", v50, 0x4184a8, 0x4184b8, v41);
                if (eax58) 
                    goto addr_4058fa_19;
            }
        }
    } else {
        v59 = ebx48;
        MultiByteToWideChar(0, 0, v59);
        esp60 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp45) - 4 - 4 - 4 - 4 + 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4);
        v61 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp60) + 0x230);
        ecx62 = g4184a8;
        eax63 = reinterpret_cast<int32_t>(ecx62->f24(0x4184a8, v61, 1, 0, 0, v59));
        esp64 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp60) - 4 - 4 - 4 - 4 + 4);
        if (eax63 < 0) {
            addr_405859_28:
            edx65 = gff;
            *reinterpret_cast<void***>(edx65 + 8)(0xff, 0x4184a8, v61, 1, 0, 0, v59);
            goto addr_405863_18;
        } else {
            v66 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp64) + 32);
            ecx67 = gff;
            eax68 = reinterpret_cast<int32_t>(*reinterpret_cast<void***>(ecx67 + 32)(0xff));
            esp64 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp64) - 4 - 4 - 4 + 4);
            if (eax68 < 0) {
                goto addr_405859_28;
            } else {
                esp69 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp64) - 4 - 4);
                ecx70 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp69) + 48);
                v71 = ecx70;
                v72 = reinterpret_cast<void**>(0xff);
                WideCharToMultiByte(0, 0, 0xff);
                esp73 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp69) - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4);
                v74 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp73) + 20);
                eax75 = reinterpret_cast<int32_t>(CoGetMalloc(1, v74, 0, 0, 0xff));
                esp76 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp73) - 4 - 4 - 4 + 4);
                if (eax75 >= 0) {
                    ecx70 = gff;
                    *reinterpret_cast<void***>(ecx70 + 20)(0xff, 0, 1, v74, 0, 0, 0xff);
                    esp76 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp76) - 4 - 4 - 4 + 4);
                }
                if (!0) {
                    ecx70 = gff;
                    *reinterpret_cast<void***>(ecx70 + 8)(0xff, 1, v74, 0, 0, 0xff);
                    esp76 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp76) - 4 - 4 + 4);
                    v72 = reinterpret_cast<void**>(0);
                }
                eax77 = fun_4131d0(ecx70, ebx48, 46, 1, v74, 0, 0, v72, 0xff, v71);
                esp78 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp76) - 4 - 4 - 4 + 4);
                esi22 = eax77;
                eax79 = fun_4131d0(ecx70, reinterpret_cast<int32_t>(esp78) + 48, 46, ebx48, 46, 1, v74, 0, 0, v72);
                esp64 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp78) - 4 - 4 - 4 + 4 + 16);
                edx80 = eax79;
                if (!esi22) 
                    goto addr_405830_36;
                if (!edx80) 
                    goto addr_405830_36; else 
                    goto addr_405802_38;
            }
        }
    }
    eax81 = ".pif";
    edx82 = reinterpret_cast<unsigned char>(esi57) - reinterpret_cast<uint32_t>(".pif");
    do {
        cl83 = *eax81;
        *reinterpret_cast<signed char*>(edx82 + reinterpret_cast<uint32_t>(eax81)) = cl83;
        ++eax81;
    } while (cl83);
    eax52 = fun_401140(ebx48, 0, v50, 0x4184a8, 0x4184b8, v41, v40, v39, v25, v24, 0x4184a8, 0, 1, 0x418498, v19, v17, v15, v12, v10);
    if (!reinterpret_cast<int1_t>(eax52 == 0xffffffff)) 
        goto addr_4058f1_21;
    eax84 = ".lnk";
    edx85 = reinterpret_cast<unsigned char>(esi57) - reinterpret_cast<uint32_t>(".lnk");
    do {
        cl86 = *eax84;
        *reinterpret_cast<signed char*>(edx85 + reinterpret_cast<uint32_t>(eax84)) = cl86;
        ++eax84;
    } while (cl86);
    goto v87;
    addr_405830_36:
    if (v88) {
        eax89 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esp64) + 40);
        edx90 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(v88) - (reinterpret_cast<int32_t>(esp64) + 40));
        do {
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edx90) + reinterpret_cast<int32_t>(eax89)) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&v66) + 3);
            ++eax89;
        } while (*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&v66) + 3));
        goto addr_405859_28;
    }
    addr_405802_38:
    edi91 = edx80;
    ecx92 = 0xffffffff;
    do {
        if (!ecx92) 
            break;
        --ecx92;
        ++edi91;
        ++esi22;
    } while (*reinterpret_cast<void***>(edi91));
    edi93 = esi22;
    ebp94 = reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(~ecx92) - 1);
    ecx95 = 0xffffffff;
    do {
        if (!ecx95) 
            break;
        --ecx95;
        ++edi93;
        ++esi22;
    } while (*reinterpret_cast<void***>(edi93));
    if (ebp94 <= reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(~ecx95) - 1)) 
        goto addr_40581e_54;
    addr_40582c_55:
    goto addr_405830_36;
    addr_40581e_54:
    eax96 = edx80;
    esi22 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi22) - reinterpret_cast<unsigned char>(edx80));
    do {
        cl97 = *reinterpret_cast<void***>(eax96);
        *reinterpret_cast<void***>(reinterpret_cast<unsigned char>(esi22) + reinterpret_cast<unsigned char>(eax96)) = cl97;
        ++eax96;
    } while (cl97);
    goto addr_40582c_55;
    addr_405680_6:
    *reinterpret_cast<void***>(eax32) = reinterpret_cast<void**>(0);
    ecx98 = *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&g0) + 1);
    *reinterpret_cast<void***>(ecx98 + 36)(1, reinterpret_cast<int32_t>(esp33) + 0x12c, v25, v24);
    esp33 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp33) - 4 - 4 - 4 + 4);
    goto addr_405695_7;
}

void** fun_4075a0(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10) {
    void** v11;
    void** v12;
    void** esi13;
    void** esi14;
    void*** esp15;
    void** v16;
    void** edi17;
    void** edi18;
    uint32_t ecx19;
    void** eax20;

    v11 = reinterpret_cast<void**>(__return_address());
    v12 = esi13;
    esi14 = a3;
    esp15 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4);
    v16 = edi17;
    edi18 = esi14;
    ecx19 = 0xffffffff;
    do {
        if (!ecx19) 
            break;
        --ecx19;
        ++edi18;
        ++esi14;
    } while (*reinterpret_cast<void***>(edi18));
    fun_401200(a2, esp15 + 16, 2, v16, v12, v11, a2);
    eax20 = reinterpret_cast<void**>(~ecx19 - 1);
    if (*reinterpret_cast<int16_t*>(&eax20)) {
        eax20 = fun_401200(a2, esi14, reinterpret_cast<unsigned char>(eax20) & 0xffff, v16, v12, v11, a2);
    }
    return eax20;
}

void** fun_403e30(void** a1, void** a2, void** a3, void** a4, ...) {
    void** edx5;
    void** eax6;
    void** esi7;
    void** edi8;
    uint32_t ecx9;

    edx5 = a1 + 40;
    eax6 = *reinterpret_cast<void***>(a1 + 8);
    if (*reinterpret_cast<unsigned char*>(&eax6) & 6) {
        edx5 = edx5 + 20;
    }
    if (*reinterpret_cast<unsigned char*>(&eax6) & 8) {
        edx5 = edx5 + 24;
    }
    esi7 = a2;
    if (!(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(esi7) < reinterpret_cast<signed char>(0)) | reinterpret_cast<uint1_t>(esi7 == 0))) {
        do {
            edi8 = edx5;
            ecx9 = 0xffffffff;
            do {
                if (!ecx9) 
                    break;
                --ecx9;
                ++edi8;
                ++esi7;
            } while (*reinterpret_cast<void***>(edi8));
            --esi7;
            edx5 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx5) + (~ecx9 - 1) + 1);
        } while (esi7);
    }
    return edx5;
}

void fun_4078d0(void** a1, void** a2, void** a3, void** a4) {
    void** v5;
    void** v6;
    void** ebx7;
    void** ebx8;
    void** v9;
    void** edi10;
    void** edi11;
    void** eax12;
    void** edx13;
    void** ecx14;
    void** al15;
    void** al16;
    void** eax17;
    void** esi18;
    uint32_t ecx19;
    uint32_t ecx20;
    void*** esi21;
    uint32_t edx22;
    void** edi23;
    uint32_t ecx24;
    void** edi25;
    uint32_t ecx26;
    uint32_t ecx27;

    v5 = reinterpret_cast<void**>(__return_address());
    v6 = ebx7;
    ebx8 = a1;
    v9 = edi10;
    edi11 = a2;
    *reinterpret_cast<void***>(ebx8) = reinterpret_cast<void**>(0);
    if (!edi11 || !*reinterpret_cast<void***>(edi11)) {
        addr_407955_2:
        return;
    } else {
        eax12 = a3;
        edx13 = ebx8;
        if (!(*reinterpret_cast<unsigned char*>(&eax12 + 1) & 1)) {
            ecx14 = g41f350;
            do {
                al15 = *reinterpret_cast<void***>(ecx14);
                ++ecx14;
                *reinterpret_cast<void***>(edx13) = al15;
                ++edx13;
            } while (al15);
        } else {
            ecx14 = g41f36c;
            do {
                al16 = *reinterpret_cast<void***>(ecx14);
                ++ecx14;
                *reinterpret_cast<void***>(edx13) = al16;
                ++edx13;
            } while (al16);
            eax17 = fun_4131d0(ecx14, ebx8, 92, v9, v6, v5, a1, a2, a3, a4);
            if (eax17) 
                goto addr_407910_9;
        }
    }
    addr_407925_10:
    fun_402110(ecx14, ebx8, esi18, v9, v6, v5);
    ecx19 = 0xffffffff;
    do {
        if (!ecx19) 
            break;
        --ecx19;
        ++edi11;
    } while (*reinterpret_cast<void***>(edi11));
    ecx20 = ~ecx19;
    esi21 = reinterpret_cast<void***>(reinterpret_cast<unsigned char>(edi11) - ecx20);
    edx22 = ecx20;
    edi23 = ebx8;
    ecx24 = 0xffffffff;
    do {
        if (!ecx24) 
            break;
        --ecx24;
        ++edi23;
        ++esi21;
    } while (*reinterpret_cast<void***>(edi23));
    edi25 = edi23 - 1;
    ecx26 = edx22 >> 2;
    while (ecx26) {
        --ecx26;
        *reinterpret_cast<void***>(edi25) = *esi21;
        edi25 = edi25 + 4;
        esi21 = esi21 + 4;
    }
    ecx27 = edx22 & 3;
    while (ecx27) {
        --ecx27;
        *reinterpret_cast<void***>(edi25) = *esi21;
        ++edi25;
        ++esi21;
    }
    goto addr_407955_2;
    addr_407910_9:
    *reinterpret_cast<void***>(eax17) = reinterpret_cast<void**>(0);
    goto addr_407925_10;
}

void** g41f2e4 = reinterpret_cast<void**>(0);

int32_t fun_4075f0(void** ecx, void** a2, void** a3, void** a4, void** a5, void* a6, int32_t a7, void** a8, uint32_t a9, void** a10) {
    void** v11;
    void** ebx12;
    void** v13;
    void** ebp14;
    void** v15;
    void** esi16;
    void** esi17;
    void** v18;
    void** edi19;
    void** ebp20;
    void** eax21;
    void* esp22;
    void** eax23;
    void** eax24;
    void* esp25;
    void** ecx26;
    void** edi27;
    uint32_t ecx28;
    uint32_t ebx29;
    uint32_t ecx30;
    void** v31;
    uint32_t ecx32;
    void** edi33;
    uint32_t ecx34;
    void** eax35;
    void** v36;
    void* esp37;
    void** ecx38;
    int32_t eax39;
    void* esp40;
    void** v41;
    void* esp42;
    void** v43;
    void* esp44;
    int32_t eax45;
    void** v46;
    void* esp47;
    uint32_t ecx48;
    void** v49;
    void** edi50;
    void* ebp51;
    uint32_t ecx52;
    uint32_t ebx53;
    uint32_t ecx54;
    void** v55;
    uint32_t ecx56;
    void* edx57;
    void*** esp58;
    void** v59;
    void** eax60;
    uint32_t ecx61;
    void** esp62;
    void** ecx63;
    void*** esp64;
    int32_t eax65;
    void** ebx66;
    void** eax67;
    void** ecx68;
    void** eax69;
    signed char v70;
    void** edi71;
    uint32_t ecx72;
    void* edx73;
    uint32_t ecx74;
    void** v75;
    void* ecx76;
    void** ecx77;
    void** esi78;
    void** eax79;
    void** ecx80;
    void* esp81;
    void** v82;
    void* esp83;
    void** v84;
    void** ecx85;

    v11 = ebx12;
    v13 = ebp14;
    v15 = esi16;
    esi17 = a3;
    v18 = edi19;
    ebp20 = reinterpret_cast<void**>(2);
    eax21 = fun_413850(esi17, "#Start Menu#", 12);
    esp22 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 0x20c - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4 + 12);
    if (eax21) {
        eax23 = fun_412fb0(ecx, esi17, "#Startup#", v18, v15, v13, v11);
        esp22 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp22) - 4 - 4 - 4 + 4 + 8);
        if (!eax23) {
            ebp20 = reinterpret_cast<void**>(7);
            esi17 = reinterpret_cast<void**>(0);
            goto addr_4076a9_4;
        }
        eax24 = fun_413850(esi17, "#Desktop#", 9);
        esp22 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp22) - 4 - 4 - 4 - 4 + 4 + 12);
        if (!eax24) 
            goto addr_407667_6;
    } else {
        esi17 = esi17 + 12;
        ebp20 = reinterpret_cast<void**>(11);
        if (reinterpret_cast<int1_t>(*reinterpret_cast<void***>(esi17 + 12) == 92)) {
            ++esi17;
        }
        if (!*reinterpret_cast<void***>(esi17)) 
            goto addr_407634_10;
    }
    addr_407680_11:
    if (!esi17) {
        addr_4076a9_4:
        fun_401090(ecx, reinterpret_cast<int32_t>(esp22) + 20, ebp20);
        esp25 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp22) - 4 - 4 - 4 + 4 + 8);
        if (esi17 && *reinterpret_cast<void***>(esi17)) {
            ecx26 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp25) + 20);
            fun_402110(ecx26, ecx26, v18, v15, v13, v11);
            edi27 = esi17;
            ecx28 = 0xffffffff;
            esp25 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp25) - 4 - 4 + 4 + 4);
            do {
                if (!ecx28) 
                    break;
                --ecx28;
                ++edi27;
            } while (*reinterpret_cast<void***>(edi27));
            ebx29 = ~ecx28;
            ecx30 = 0xffffffff;
            do {
                if (!ecx30) 
                    break;
                --ecx30;
            } while (v31);
            ecx32 = ebx29 >> 2;
            while (ecx32) {
                --ecx32;
            }
            ecx = reinterpret_cast<void**>(ebx29 & 3);
            while (ecx) {
                --ecx;
            }
        }
    } else {
        edi33 = esi17;
        ecx34 = 0xffffffff;
        eax35 = reinterpret_cast<void**>(0);
        do {
            if (!ecx34) 
                break;
            --ecx34;
            ++edi33;
            ++esi17;
        } while (*reinterpret_cast<void***>(edi33));
        ecx = reinterpret_cast<void**>(~ecx34 - 1);
        if (reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(ecx) < reinterpret_cast<signed char>(0)) | reinterpret_cast<uint1_t>(ecx == 0)) 
            goto addr_4076a9_4; else 
            goto addr_407694_28;
    }
    v36 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp25) + 20);
    fun_402150(ecx, v36, v18, v15, v13, v11);
    esp37 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp25) - 4 - 4 + 4);
    ecx38 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp37) + 24);
    eax39 = fun_413518(ecx38, ecx38, v36, v18, v15, v13, v11);
    esp40 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp37) - 4 - 4 + 4 + 8);
    if (!eax39 || (v41 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp40) + 20), fun_402110(ecx38, v41, v18, v15, v13, v11), esp42 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp40) - 4 - 4 + 4), v43 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp42) + 24), fun_4023b0(ecx38, v43, v41), esp44 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp42) - 4 - 4 + 4), ecx38 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp44) + 28), eax45 = fun_413518(ecx38, ecx38, v43, v41, v18, v15, v13), esp40 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp44) - 4 - 4 + 4 + 12), !eax45)) {
        v46 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp40) + 20);
        fun_402110(ecx38, v46, v18, v15, v13, v11);
        esp47 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp40) - 4 - 4 + 4);
        ecx48 = 0xffffffff;
        do {
            if (!ecx48) 
                break;
            --ecx48;
        } while (v49);
        edi50 = a4;
        ebp51 = reinterpret_cast<void*>(~ecx48 - 1);
        ecx52 = 0xffffffff;
        do {
            if (!ecx52) 
                break;
            --ecx52;
            ++edi50;
        } while (*reinterpret_cast<void***>(edi50));
        ebx53 = ~ecx52;
        ecx54 = 0xffffffff;
        do {
            if (!ecx54) 
                break;
            --ecx54;
        } while (v55);
        ecx56 = ebx53 >> 2;
        while (ecx56) {
            --ecx56;
        }
        edx57 = a6;
        esp58 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp47) - 4);
        v59 = a8;
        eax60 = a5;
        ecx61 = ebx53 & 3;
        while (ecx61) {
            --ecx61;
        }
        esp62 = reinterpret_cast<void**>(esp58 - 4 - 4);
        ecx63 = reinterpret_cast<void**>(esp62 + 9);
        esp64 = reinterpret_cast<void***>(esp62 - 1 - 1);
        eax65 = fun_405610(esp64 + 0x130, a2, ecx63, eax60, edx57, a7, v59, v46);
        esp40 = reinterpret_cast<void*>(esp64 - 4 - 4 - 4 + 4 + 32);
        if (eax65 < 0) 
            goto addr_4078b6_46;
    } else {
        addr_4078b6_46:
        return 0;
    }
    ebx66 = a10;
    if (ebx66 == 0xffffffff) {
        fun_401000(ecx63, v18);
        return 1;
    }
    eax67 = g41f2e4;
    if (!eax67 || (ecx68 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp40) + 0x118), eax69 = fun_412fb0(ecx68, reinterpret_cast<int32_t>(esp40) + 20, ecx68, v18, v15, v13, v11), esp40 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp40) - 4 - 4 - 4 + 4 + 8), eax69 == 0)) {
        addr_40784c_50:
        goto addr_407854_51;
    } else {
        if (!v70) {
            addr_407854_51:
            if (ebp51) {
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esp40) + reinterpret_cast<uint32_t>(ebp51) + 19) = 0;
            }
        } else {
            edi71 = a4;
            ecx72 = 0xffffffff;
            do {
                if (!ecx72) 
                    break;
                --ecx72;
                ++edi71;
            } while (*reinterpret_cast<void***>(edi71));
            edx73 = reinterpret_cast<void*>(~ecx72 - 1);
            ecx74 = 0xffffffff;
            do {
                if (!ecx74) 
                    break;
                --ecx74;
            } while (v75);
            ecx76 = reinterpret_cast<void*>(~ecx74 - 1);
            if (reinterpret_cast<int32_t>(ecx76) <= reinterpret_cast<int32_t>(edx73)) 
                goto addr_40784c_50;
            ecx77 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ecx76) - reinterpret_cast<uint32_t>(edx73));
            esi78 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp40) + reinterpret_cast<unsigned char>(ecx77) + 0x118);
            eax79 = fun_412fb0(ecx77, reinterpret_cast<int32_t>(esp40) + reinterpret_cast<uint32_t>(ebp51) + 20, esi78, v18, v15, v13, v11);
            esp40 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp40) - 4 - 4 - 4 + 4 + 8);
            if (eax79) 
                goto addr_40784c_50; else 
                goto addr_407847_62;
        }
    }
    ecx80 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp40) + 19);
    fun_401200(ebx66, ecx80, 1, v18, v15, v13, v11);
    esp81 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp40) - 4 - 4 - 4 - 4 + 4);
    v82 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp81) + 32);
    fun_4075a0(ecx80, ebx66, v82, ebx66, ecx80, 1, v18, v15, v13, v11);
    esp83 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp81) - 4 - 4 - 4 + 4);
    v84 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp83) + 0x12c);
    fun_4075a0(ecx80, ebx66, v84, ebx66, v82, ebx66, ecx80, 1, v18, v15);
    ecx85 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp83) - 4 - 4 - 4 + 4 + reinterpret_cast<uint32_t>(ebp51) + 48);
    fun_4075a0(ecx85, ebx66, ecx85, ebx66, v84, ebx66, v82, ebx66, ecx80, 1);
    return 1;
    addr_407847_62:
    *reinterpret_cast<void***>(esi78 + 0xffffffff) = eax79;
    goto addr_407854_51;
    addr_407694_28:
    do {
        if (*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(eax35) + reinterpret_cast<unsigned char>(esi17)) == 92) {
        }
        ++eax35;
    } while (reinterpret_cast<signed char>(eax35) < reinterpret_cast<signed char>(ecx));
    goto addr_4076a9_4;
    addr_407667_6:
    esi17 = esi17 + 9;
    ebp20 = reinterpret_cast<void**>(16);
    if (*reinterpret_cast<signed char*>(esi17 + 9) == 92) {
        ++esi17;
    }
    if (*reinterpret_cast<void***>(esi17)) 
        goto addr_407680_11;
    esi17 = reinterpret_cast<void**>(0);
    goto addr_4076a9_4;
    addr_407634_10:
    esi17 = reinterpret_cast<void**>(0);
    goto addr_4076a9_4;
}

void fun_4012a0(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8) {
    SetFilePointer();
    goto a1;
}

void** fun_401090(void** ecx, void** a2, void** a3) {
    void*** esp4;
    int32_t eax5;
    int32_t eax6;
    void* v7;
    int32_t eax8;
    void** eax9;
    void** edx10;
    void** ecx11;

    esp4 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax5 = reinterpret_cast<int32_t>(SHGetSpecialFolderLocation());
    if (!eax5 && ecx) {
        eax6 = reinterpret_cast<int32_t>(SHGetPathFromIDListA());
        if (eax6) {
        }
        v7 = reinterpret_cast<void*>(esp4 - 4 - 4 - 4 - 4 - 4 + 4 - 4 - 4 - 4 + 4 + 4);
        eax8 = reinterpret_cast<int32_t>(SHGetMalloc(v7));
        if (!eax8 && (eax9 = ecx, !!eax9)) {
            if (a3) {
                edx10 = *reinterpret_cast<void***>(eax9);
                *reinterpret_cast<void***>(edx10 + 20)(eax9);
                eax9 = a3;
            }
            ecx11 = *reinterpret_cast<void***>(eax9);
            *reinterpret_cast<void***>(ecx11 + 8)(eax9, v7);
        }
    }
    goto esp4 + 12;
}

int32_t GetLocalTime = 0x19176;

struct s26 {
    void** f0;
    signed char[1] pad2;
    void** f2;
};

void** g41a82c = reinterpret_cast<void**>(65);

void** g41a830 = reinterpret_cast<void**>(0x69);

void** g41a834 = reinterpret_cast<void**>(0x69);

void** g41a838 = reinterpret_cast<void**>(68);

void** g41a83c = reinterpret_cast<void**>(0);

int32_t RegQueryValueExA = 0x19864;

void** g41a884 = reinterpret_cast<void**>(67);

void** g41a888 = reinterpret_cast<void**>(0x6f);

void** g41a88c = reinterpret_cast<void**>(0x69);

void** g41a890 = reinterpret_cast<void**>(0);

void** fun_407ce0(void** ecx, void** a2) {
    void** v3;
    void** ebp4;
    void** ebp5;
    void** v6;
    void** esi7;
    void** v8;
    void** edi9;
    void** v10;
    void** eax11;
    void** v12;
    void** eax13;
    void** v14;
    void** eax15;
    void** eax16;
    void** v17;
    void** eax18;
    void* esp19;
    void** v20;
    void** eax21;
    void* esp22;
    void** v23;
    void** eax24;
    void* esp25;
    void** v26;
    void** eax27;
    void** v28;
    void** eax29;
    void** v30;
    void** eax31;
    void** v32;
    void** eax33;
    void** v34;
    void** eax35;
    void** v36;
    void** v37;
    void** eax38;
    void** v39;
    void** eax40;
    void* esp41;
    void** v42;
    void** eax43;
    void* esp44;
    void** v45;
    void** eax46;
    void* esp47;
    void** v48;
    void** eax49;
    void* v50;
    uint32_t v51;
    uint32_t v52;
    void* v53;
    uint32_t v54;
    uint32_t eax55;
    uint32_t v56;
    uint32_t eax57;
    uint32_t eax58;
    uint32_t v59;
    uint32_t eax60;
    uint32_t v61;
    void** edx62;
    void** al63;
    void** v64;
    void** v65;
    void** v66;
    void** v67;
    void** edx68;
    void** eax69;
    void** v70;
    void** v71;
    void* edx72;
    void** eax73;
    void** eax74;
    void** v75;
    void** v76;
    void** v77;
    void** v78;
    void** eax79;
    uint32_t ecx80;
    void** edi81;
    struct s26* esi82;
    void** edi83;
    void** eax84;
    void** edi85;
    void** edx86;
    void* edx87;
    void** eax88;
    uint32_t ecx89;
    void** edi90;
    void*** esi91;
    void** edi92;
    void** ecx93;
    void** edi94;
    void** edx95;
    void** dl96;
    void* esp97;
    void* v98;
    int32_t v99;
    void* v100;
    void* v101;
    int32_t v102;
    int32_t esi103;
    void*** esp104;
    void** v105;
    void** v106;
    void* v107;
    void** v108;
    void** v109;
    int32_t v110;
    int32_t v111;
    int32_t eax112;
    void* esp113;
    void** ecx114;
    void** v115;
    void** edi116;
    uint32_t ecx117;
    void** edi118;
    void** edx119;
    void** eax120;
    void** v121;

    v3 = ebp4;
    ebp5 = a2;
    v6 = esi7;
    v8 = edi9;
    eax11 = fun_412fb0(ecx, ebp5, "#Windows#", v8, v6, v3, v10);
    if (!eax11) 
        goto addr_407cfc_2;
    eax13 = fun_412fb0(ecx, ebp5, "#System#", v8, v6, v3, v12);
    if (!eax13 || (eax15 = fun_412fb0(ecx, ebp5, "#System64#", v8, v6, v3, v14), eax15 == 0)) {
        eax16 = reinterpret_cast<void**>(GetSystemDirectoryA(ebp5, 0x104));
    } else {
        eax18 = fun_412fb0(ecx, ebp5, "#CommonFiles#", v8, v6, v3, v17);
        esp19 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 24 - 4 - 4 - 4 - 4 - 4 - 4 + 4 + 8 - 4 - 4 - 4 + 4 + 8 - 4 - 4 - 4 + 4 + 8 - 4 - 4 - 4 + 4 + 8);
        if (eax18) {
            eax21 = fun_412fb0(ecx, ebp5, "#Program Files#", v8, v6, v3, v20);
            esp22 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp19) - 4 - 4 - 4 + 4 + 8);
            if (eax21) {
                eax24 = fun_412fb0(ecx, ebp5, "#Program Files (x64)#", v8, v6, v3, v23);
                esp25 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp22) - 4 - 4 - 4 + 4 + 8);
                if (eax24) {
                    eax27 = fun_412fb0(ecx, ebp5, "#MyDocuments#", v8, v6, v3, v26);
                    if (eax27) {
                        eax29 = fun_412fb0(ecx, ebp5, "#Desktop#", v8, v6, v3, v28);
                        if (eax29) {
                            eax31 = fun_412fb0(ecx, ebp5, "#AppData#", v8, v6, v3, v30);
                            if (eax31) {
                                eax33 = fun_412fb0(ecx, ebp5, "#LocalAppData#", v8, v6, v3, v32);
                                if (eax33) {
                                    eax35 = fun_412fb0(ecx, ebp5, "#UserDir#", v8, v6, v3, v34);
                                    if (eax35) {
                                        eax16 = fun_412fb0(ecx, ebp5, "#InstallDir#", v8, v6, v3, v36);
                                        if (eax16) {
                                            eax38 = fun_412fb0(ecx, ebp5, "#SourceDir#", v8, v6, v3, v37);
                                            if (eax38) {
                                                eax40 = fun_412fb0(ecx, ebp5, "#Date#", v8, v6, v3, v39);
                                                esp41 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp25) - 4 - 4 - 4 + 4 + 8 - 4 - 4 - 4 + 4 + 8 - 4 - 4 - 4 + 4 + 8 - 4 - 4 - 4 + 4 + 8 - 4 - 4 - 4 + 4 + 8 - 4 - 4 - 4 + 4 + 8 - 4 - 4 - 4 + 4 + 8 - 4 - 4 - 4 + 4 + 8);
                                                if (eax40) {
                                                    eax43 = fun_412fb0(ecx, ebp5, "#Year#", v8, v6, v3, v42);
                                                    esp44 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp41) - 4 - 4 - 4 + 4 + 8);
                                                    if (eax43) {
                                                        eax46 = fun_412fb0(ecx, ebp5, "#Month#", v8, v6, v3, v45);
                                                        esp47 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp44) - 4 - 4 - 4 + 4 + 8);
                                                        if (eax46) {
                                                            eax49 = fun_412fb0(ecx, ebp5, "#Day#", v8, v6, v3, v48);
                                                            if (eax49) {
                                                                *reinterpret_cast<void***>(ebp5) = reinterpret_cast<void**>(0);
                                                                return eax49;
                                                            } else {
                                                                v50 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp47) - 4 - 4 - 4 + 4 + 8 + 20);
                                                                GetLocalTime(v50);
                                                                ecx = reinterpret_cast<void**>(v51 & 0xffff);
                                                                goto addr_4081a2_21;
                                                            }
                                                        } else {
                                                            ecx = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp47) + 20);
                                                            GetLocalTime(ecx);
                                                            eax16 = reinterpret_cast<void**>(wsprintfA(ebp5, "%lu", v52 & 0xffff, ecx));
                                                        }
                                                    } else {
                                                        v53 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp44) + 20);
                                                        GetLocalTime(v53);
                                                        eax16 = reinterpret_cast<void**>(wsprintfA(ebp5, "%lu", v54 & 0xffff, v53));
                                                    }
                                                } else {
                                                    v50 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp41) + 20);
                                                    GetLocalTime(v50);
                                                    eax55 = v56 & 0xffff;
                                                    eax57 = eax55 + eax55 * 4;
                                                    eax58 = (v59 & 0xffff) + (eax57 + eax57 * 4) * 4;
                                                    eax60 = eax58 + eax58 * 4;
                                                    ecx = reinterpret_cast<void**>((v61 & 0xffff) + (eax60 + eax60 * 4) * 4);
                                                    goto addr_4081a2_21;
                                                }
                                            } else {
                                                ecx = g41f36c;
                                                edx62 = ebp5;
                                                do {
                                                    al63 = *reinterpret_cast<void***>(ecx);
                                                    ++ecx;
                                                    *reinterpret_cast<void***>(edx62) = al63;
                                                    ++edx62;
                                                } while (al63);
                                                eax16 = fun_4131d0(ecx, ebp5, 92, v8, v6, v3, v64, v65, v66, v67);
                                                if (eax16) 
                                                    goto addr_40814f_28;
                                            }
                                        } else {
                                            ecx = g41f350;
                                            edx68 = ebp5;
                                            do {
                                                eax16 = *reinterpret_cast<void***>(ecx);
                                                ++ecx;
                                                *reinterpret_cast<void***>(edx68) = eax16;
                                                ++edx68;
                                            } while (eax16);
                                        }
                                    } else {
                                        eax16 = fun_401090(ecx, ebp5, 40);
                                        if (!eax16) {
                                            eax69 = g41f2ec;
                                            if (!eax69) {
                                                addr_407cfc_2:
                                                eax16 = reinterpret_cast<void**>(GetWindowsDirectoryA(ebp5, 0x104));
                                            } else {
                                                fun_401090(ecx, ebp5, 26);
                                                eax16 = fun_4131d0(ecx, ebp5, 92, ebp5, 26, v8, v6, v3, v70, v71);
                                                if (eax16) {
                                                    addr_40814f_28:
                                                    *reinterpret_cast<void***>(eax16) = reinterpret_cast<void**>(0);
                                                } else {
                                                    eax16 = reinterpret_cast<void**>("c:\\");
                                                    edx72 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ebp5) - reinterpret_cast<unsigned char>("c:\\"));
                                                    do {
                                                        ecx = *reinterpret_cast<void***>(eax16);
                                                        *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(edx72) + reinterpret_cast<unsigned char>(eax16)) = ecx;
                                                        ++eax16;
                                                    } while (ecx);
                                                }
                                            }
                                        }
                                    }
                                } else {
                                    eax16 = fun_401090(ecx, ebp5, 28);
                                    if (!eax16) {
                                        eax73 = g41f2ec;
                                        if (!eax73 || ((eax74 = fun_401090(ecx, ebp5, 26), eax74 == 0) || (eax16 = fun_4131d0(ecx, ebp5, 92, v8, v6, v3, v75, v76, v77, v78), eax16 == 0))) {
                                            GetWindowsDirectoryA(ebp5, 0x104);
                                            fun_402110(ecx, ebp5, ebp5, 0x104, v8, v6);
                                            eax79 = g41f2ec;
                                            ecx80 = 0xffffffff;
                                            edi81 = ebp5;
                                            if (eax79) {
                                                eax16 = reinterpret_cast<void**>(0);
                                                esi82 = reinterpret_cast<struct s26*>("Profiles\\Administrator\\Local Settings\\Application Data");
                                                do {
                                                    if (!ecx80) 
                                                        break;
                                                    --ecx80;
                                                    ++edi81;
                                                    esi82 = reinterpret_cast<struct s26*>(&esi82->pad2);
                                                } while (*reinterpret_cast<void***>(edi81));
                                                edi83 = edi81 - 1;
                                                ecx = reinterpret_cast<void**>(13);
                                                while (ecx) {
                                                    --ecx;
                                                    *reinterpret_cast<void***>(edi83) = esi82->f0;
                                                    edi83 = edi83 + 4;
                                                    esi82 = reinterpret_cast<struct s26*>(reinterpret_cast<uint32_t>(esi82) + 4);
                                                }
                                                *reinterpret_cast<void***>(edi83) = esi82->f0;
                                                *reinterpret_cast<void***>(edi83 + 2) = esi82->f2;
                                            } else {
                                                do {
                                                    if (!ecx80) 
                                                        break;
                                                    --ecx80;
                                                    ++edi81;
                                                } while (*reinterpret_cast<void***>(edi81));
                                                eax84 = g41a82c;
                                                edi85 = edi81 - 1;
                                                *reinterpret_cast<void***>(edi85) = eax84;
                                                ecx = g41a830;
                                                *reinterpret_cast<void***>(edi85 + 4) = ecx;
                                                edx86 = g41a834;
                                                *reinterpret_cast<void***>(edi85 + 8) = edx86;
                                                eax16 = g41a838;
                                                *reinterpret_cast<void***>(edi85 + 12) = eax16;
                                                ecx = g41a83c;
                                                *reinterpret_cast<void***>(edi85 + 16) = ecx;
                                            }
                                        } else {
                                            ecx = reinterpret_cast<void**>("\\Local Settings\\Application Data");
                                            edx87 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax16) - reinterpret_cast<unsigned char>("\\Local Settings\\Application Data"));
                                            do {
                                                eax16 = *reinterpret_cast<void***>(ecx);
                                                *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(edx87) + reinterpret_cast<unsigned char>(ecx)) = eax16;
                                                ++ecx;
                                            } while (eax16);
                                        }
                                    }
                                }
                            } else {
                                eax16 = fun_401090(ecx, ebp5, 26);
                                if (!eax16) {
                                    GetWindowsDirectoryA(ebp5, 0x104);
                                    fun_402110(ecx, ebp5, ebp5, 0x104, v8, v6);
                                    eax88 = g41f2ec;
                                    ecx89 = 0xffffffff;
                                    edi90 = ebp5;
                                    if (eax88) {
                                        eax16 = reinterpret_cast<void**>(0);
                                        esi91 = reinterpret_cast<void***>("Profiles\\Administrator\\Application Data");
                                        do {
                                            if (!ecx89) 
                                                break;
                                            --ecx89;
                                            ++edi90;
                                            ++esi91;
                                        } while (*reinterpret_cast<void***>(edi90));
                                        edi92 = edi90 - 1;
                                        ecx = reinterpret_cast<void**>(10);
                                        while (ecx) {
                                            --ecx;
                                            *reinterpret_cast<void***>(edi92) = *esi91;
                                            edi92 = edi92 + 4;
                                            esi91 = esi91 + 4;
                                        }
                                    } else {
                                        do {
                                            if (!ecx89) 
                                                break;
                                            --ecx89;
                                            ++edi90;
                                        } while (*reinterpret_cast<void***>(edi90));
                                        ecx93 = g41a82c;
                                        edi94 = edi90 - 1;
                                        *reinterpret_cast<void***>(edi94) = ecx93;
                                        edx95 = g41a830;
                                        *reinterpret_cast<void***>(edi94 + 4) = edx95;
                                        eax16 = g41a834;
                                        *reinterpret_cast<void***>(edi94 + 8) = eax16;
                                        ecx = g41a838;
                                        *reinterpret_cast<void***>(edi94 + 12) = ecx;
                                        dl96 = g41a83c;
                                        *reinterpret_cast<void***>(edi94 + 16) = dl96;
                                    }
                                }
                            }
                        } else {
                            eax16 = fun_401090(ecx, ebp5, 16);
                        }
                    } else {
                        eax16 = fun_401090(ecx, ebp5, 5);
                    }
                } else {
                    eax16 = reinterpret_cast<void**>(RegOpenKeyExA(0x80000002, "Software\\Microsoft\\Windows\\CurrentVersion", eax24, 0x20119, reinterpret_cast<int32_t>(esp25) + 40));
                    esp97 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp25) - 4 - 4 - 4 - 4 - 4 - 4 + 4);
                    if (!eax16) {
                        ecx = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp97) + 12);
                        v98 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp97) + 16);
                        RegQueryValueExA(v99, "ProgramFilesDir", 0, ecx, ebp5, v98, 0x80000002, "Software\\Microsoft\\Windows\\CurrentVersion", eax24, eax16);
                        eax16 = reinterpret_cast<void**>(RegCloseKey(0x104, v99, "ProgramFilesDir", 0, ecx, ebp5, v98, 0x80000002, "Software\\Microsoft\\Windows\\CurrentVersion", eax24, eax16));
                    }
                }
            } else {
                eax16 = reinterpret_cast<void**>(RegOpenKeyExA(0x80000002, "Software\\Microsoft\\Windows\\CurrentVersion", 0, 0x20019, reinterpret_cast<int32_t>(esp22) + 40));
                esp97 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp22) - 4 - 4 - 4 - 4 - 4 - 4 + 4);
                if (!eax16) {
                    v100 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp97) + 16);
                    v101 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp97) + 12);
                    RegQueryValueExA(v102, "ProgramFilesDir", eax16, v101, ebp5, v100, 0x80000002, "Software\\Microsoft\\Windows\\CurrentVersion", 0, eax16);
                    ecx = reinterpret_cast<void**>(0x104);
                    eax16 = reinterpret_cast<void**>(RegCloseKey(0x104, v102, "ProgramFilesDir", eax16, v101, ebp5, v100, 0x80000002, "Software\\Microsoft\\Windows\\CurrentVersion", 0, eax16));
                }
            }
        } else {
            eax16 = reinterpret_cast<void**>(RegOpenKeyExA(0x80000002, "Software\\Microsoft\\Windows\\CurrentVersion", 0, 0x20019, reinterpret_cast<int32_t>(esp19) + 40));
            esp97 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp19) - 4 - 4 - 4 - 4 - 4 - 4 + 4);
            if (!eax16) {
                ecx = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp97) + 12);
                esi103 = RegQueryValueExA;
                esp104 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp97) - 4);
                v105 = ecx;
                v106 = ebp5;
                v107 = reinterpret_cast<void*>(esp104 + 20);
                v108 = eax16;
                v109 = eax16;
                v110 = v111;
                eax112 = reinterpret_cast<int32_t>(esi103(v110, "CommonFilesDir", v109, v107, v106, v105, 0x80000002, "Software\\Microsoft\\Windows\\CurrentVersion", 0, 0x104));
                esp113 = reinterpret_cast<void*>(esp104 - 4 - 4 - 4 - 4 - 4 - 4 + 4);
                if (eax112) {
                    ecx114 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp113) + 12);
                    v115 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp113) - 4 + 20);
                    esi103(v108, "ProgramFilesDir", 0, v115, ebp5, ecx114, v110, "CommonFilesDir", v109, v107, v106, v105, 0x80000002, "Software\\Microsoft\\Windows\\CurrentVersion", 0, 0x104);
                    fun_402110(ecx114, ebp5, v108, "ProgramFilesDir", 0, v115, ecx114, ebp5, v108, "ProgramFilesDir", 0, v115);
                    edi116 = ebp5;
                    ecx117 = 0xffffffff;
                    do {
                        if (!ecx117) 
                            break;
                        --ecx117;
                        ++edi116;
                    } while (*reinterpret_cast<void***>(edi116));
                    ecx = g41a884;
                    edi118 = edi116 - 1;
                    *reinterpret_cast<void***>(edi118) = ecx;
                    edx119 = g41a888;
                    *reinterpret_cast<void***>(edi118 + 4) = edx119;
                    eax120 = g41a88c;
                    *reinterpret_cast<void***>(edi118 + 8) = eax120;
                    ecx = g41a890;
                    *reinterpret_cast<void***>(edi118 + 12) = ecx;
                }
                eax16 = reinterpret_cast<void**>(RegCloseKey(v108, v110, "CommonFilesDir", v109, v107, v106, v105, 0x80000002, "Software\\Microsoft\\Windows\\CurrentVersion", 0, 0x104));
            }
        }
    }
    addr_40826b_87:
    if (*reinterpret_cast<void***>(ebp5)) {
        eax16 = fun_402150(ecx, ebp5, v8, v6, v3, v121);
    }
    return eax16;
    addr_4081a2_21:
    eax16 = reinterpret_cast<void**>(wsprintfA(ebp5, "%lu", ecx, v50));
    goto addr_40826b_87;
}

int32_t SetErrorMode = 0x19186;

void** g41a8dc = reinterpret_cast<void**>(0x72);

void** g41a8e0 = reinterpret_cast<void**>(0x76);

void** g41a8e4 = reinterpret_cast<void**>(34);

void** g41a8e8 = reinterpret_cast<void**>(32);

void* g41a8ea = reinterpret_cast<void*>(0);

void** g41a8ec = reinterpret_cast<void**>(0x72);

void** g41a8f0 = reinterpret_cast<void**>(0x76);

void** g41a8f4 = reinterpret_cast<void**>(46);

void** g41a8f8 = reinterpret_cast<void**>(0);

void** g41a694 = reinterpret_cast<void**>(34);

int32_t CreateProcessA = 0x190ba;

int32_t LoadLibraryA = 0x19080;

int32_t GetProcAddress = 0x1906e;

int32_t FreeLibrary = 0x19060;

void fun_4083d0(void** ecx, int32_t a2, void** a3, void** a4, void** a5, void** a6, void** a7) {
    void* esp8;
    void* ebp9;
    void** eax10;
    void** v11;
    void** v12;
    void** ebx13;
    void** v14;
    void** esi15;
    void** v16;
    void** edi17;
    int32_t v18;
    void** eax19;
    void** ebx20;
    void** eax21;
    void** ecx22;
    void** v23;
    signed char* eax24;
    uint32_t edx25;
    void** edi26;
    uint32_t ecx27;
    void** edi28;
    void** edx29;
    void** eax30;
    void** dx31;
    void* al32;
    void** v33;
    void** edi34;
    uint32_t ecx35;
    void** edi36;
    void** eax37;
    void** ecx38;
    void** edx39;
    void** al40;
    int32_t eax41;
    void** edi42;
    uint32_t ecx43;
    uint32_t ecx44;
    void*** esi45;
    uint32_t edx46;
    void** edi47;
    uint32_t ecx48;
    void** edi49;
    uint32_t ecx50;
    uint32_t ecx51;
    void** edi52;
    uint32_t ecx53;
    void** ax54;
    void* v55;
    void* v56;
    void** v57;
    int32_t eax58;
    int32_t edi59;
    int32_t esi60;
    int32_t eax61;
    int32_t v62;
    void** ecx63;
    void** v64;
    void** v65;
    void** eax66;
    void* edx67;
    void** v68;
    void** eax69;
    void** edx70;
    uint32_t eax71;
    int32_t eax72;
    int32_t eax73;

    esp8 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    ebp9 = esp8;
    eax10 = *reinterpret_cast<void***>(&g0);
    v11 = eax10;
    *reinterpret_cast<void***>(&g0) = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp8) - 4 - 4 - 4);
    v12 = ebx13;
    v14 = esi15;
    v16 = edi17;
    v18 = 0;
    SetErrorMode(0x8001, v16, v14, v12);
    eax19 = fun_4133d2(0x208, 1, 0x8001, v16, v14, v12);
    ebx20 = eax19;
    if (!ebx20) 
        goto addr_4085ba_2;
    eax21 = g41f2e4;
    if (eax21) {
        addr_408479_4:
        *reinterpret_cast<void***>(ebx20) = reinterpret_cast<void**>(34);
        ecx22 = ebx20 + 1;
        v23 = ecx22;
        GetSystemDirectoryA();
        fun_402110(ecx22, ebx20, v23, 0x104, 0x8001, v16, ecx22, ebx20, v23, 0x104, 0x8001, v16);
        if (!a2) {
            eax24 = "regsvr32\" /u /s \"";
            edx25 = reinterpret_cast<unsigned char>(ebx20) - reinterpret_cast<uint32_t>("regsvr32\" /u /s \"");
            do {
                *reinterpret_cast<signed char*>(&ecx22) = *eax24;
                *reinterpret_cast<signed char*>(edx25 + reinterpret_cast<uint32_t>(eax24)) = *reinterpret_cast<signed char*>(&ecx22);
                ++eax24;
            } while (*reinterpret_cast<signed char*>(&ecx22));
        } else {
            edi26 = ebx20;
            ecx27 = 0xffffffff;
            do {
                if (!ecx27) 
                    break;
                --ecx27;
                ++edi26;
            } while (*reinterpret_cast<void***>(edi26));
            edi28 = edi26 - 1;
            edx29 = g41a8dc;
            *reinterpret_cast<void***>(edi28) = edx29;
            eax30 = g41a8e0;
            *reinterpret_cast<void***>(edi28 + 4) = eax30;
            ecx22 = g41a8e4;
            *reinterpret_cast<void***>(edi28 + 8) = ecx22;
            dx31 = g41a8e8;
            *reinterpret_cast<void***>(edi28 + 12) = dx31;
            al32 = g41a8ea;
            *reinterpret_cast<void**>(edi28 + 14) = al32;
        }
    } else {
        v23 = ebx20;
        GetSystemDirectoryA();
        v33 = ebx20;
        fun_402110(ecx, v33, v23, 0x104, 0x8001, v16, ecx, v33, v23, 0x104, 0x8001, v16);
        edi34 = ebx20;
        ecx35 = 0xffffffff;
        do {
            if (!ecx35) 
                break;
            --ecx35;
            ++edi34;
        } while (*reinterpret_cast<void***>(edi34));
        edi36 = edi34 - 1;
        eax37 = g41a8ec;
        *reinterpret_cast<void***>(edi36) = eax37;
        ecx38 = g41a8f0;
        *reinterpret_cast<void***>(edi36 + 4) = ecx38;
        edx39 = g41a8f4;
        *reinterpret_cast<void***>(edi36 + 8) = edx39;
        al40 = g41a8f8;
        *reinterpret_cast<void***>(edi36 + 12) = al40;
        eax41 = fun_401100(ebx20, v33);
        if (!eax41) 
            goto addr_4085a6_15; else 
            goto addr_408479_4;
    }
    edi42 = g41f0d0;
    ecx43 = 0xffffffff;
    do {
        if (!ecx43) 
            break;
        --ecx43;
        ++edi42;
    } while (*reinterpret_cast<void***>(edi42));
    ecx44 = ~ecx43;
    esi45 = reinterpret_cast<void***>(reinterpret_cast<unsigned char>(edi42) - ecx44);
    edx46 = ecx44;
    edi47 = ebx20;
    ecx48 = 0xffffffff;
    do {
        if (!ecx48) 
            break;
        --ecx48;
        ++edi47;
        ++esi45;
    } while (*reinterpret_cast<void***>(edi47));
    edi49 = edi47 - 1;
    ecx50 = edx46 >> 2;
    while (ecx50) {
        --ecx50;
        *reinterpret_cast<void***>(edi49) = *esi45;
        edi49 = edi49 + 4;
        esi45 = esi45 + 4;
    }
    ecx51 = edx46 & 3;
    while (ecx51) {
        --ecx51;
        *reinterpret_cast<void***>(edi49) = *esi45;
        ++edi49;
        ++esi45;
    }
    edi52 = ebx20;
    ecx53 = 0xffffffff;
    do {
        if (!ecx53) 
            break;
        --ecx53;
        ++edi52;
    } while (*reinterpret_cast<void***>(edi52));
    ax54 = g41a694;
    *reinterpret_cast<void***>(edi52 + 0xffffffff) = ax54;
    ecx38 = reinterpret_cast<void**>(17);
    while (ecx38) {
        --ecx38;
    }
    v55 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ebp9) - 40);
    v56 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ebp9) - 0x6c);
    v57 = ebx20;
    eax58 = reinterpret_cast<int32_t>(CreateProcessA(0, v57, 0, 0, 1, 32, 0, 0, v56, v55));
    if (eax58) {
        if (!1) {
            edi59 = GetExitCodeProcess;
            esi60 = Sleep;
            do {
                ecx38 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebp9) + 0xffffff90);
                eax61 = reinterpret_cast<int32_t>(edi59(0, ecx38, 0, v57, 0, 0, 1, 32, 0, 0, v56, v55));
                if (!eax61) 
                    break;
                esi60(0xfa, 0, ecx38, 0, v57, 0, 0, 1, 32, 0, 0, v56, v55);
            } while (v62 == 0x103);
            CloseHandle(0, 0, ecx38, 0, v57, 0, 0, 1, 32, 0, 0, v56, v55);
        }
        v18 = 1;
    }
    addr_4085a6_15:
    fun_413483(ecx38, ebx20, v23, 0x104, 0x8001, v16, v14, ecx38, ebx20, v23, 0x104, 0x8001, v16, v14);
    if (v18) {
        addr_408691_41:
        SetErrorMode();
        *reinterpret_cast<void***>(&g0) = v11;
        return;
    } else {
        addr_4085ba_2:
        ecx63 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebp9) + 0xfffffe88);
        v64 = ecx63;
        GetCurrentDirectoryA();
        v65 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebp9) + 0xfffffe88);
        fun_402150(ecx63, v65, 0x104, v64, 0x8001, v16, ecx63, v65, 0x104, v64, 0x8001, v16);
        eax66 = g41f0d0;
        edx67 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ebp9) - 0x280 - reinterpret_cast<unsigned char>(eax66));
    }
    do {
        ecx63 = *reinterpret_cast<void***>(eax66);
        *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(edx67) + reinterpret_cast<unsigned char>(eax66)) = ecx63;
        ++eax66;
    } while (ecx63);
    eax69 = fun_4131d0(ecx63, reinterpret_cast<int32_t>(ebp9) + 0xfffffd80, 92, 0x104, v64, 0x8001, v16, v14, v12, v68);
    if (eax69) {
        *reinterpret_cast<void***>(eax69) = reinterpret_cast<void**>(0);
        SetCurrentDirectoryA(reinterpret_cast<int32_t>(ebp9) - 0x280);
    }
    edx70 = g41f0d0;
    eax71 = reinterpret_cast<uint32_t>(LoadLibraryA(edx70));
    if (eax71 >= 32) {
        eax72 = reinterpret_cast<int32_t>("DllRegisterServer");
        if (!a2) {
            eax72 = reinterpret_cast<int32_t>("DllUnregisterServer");
        }
        eax73 = reinterpret_cast<int32_t>(GetProcAddress(eax71, eax72, edx70));
        if (eax73) {
            eax73(eax71, eax72, edx70);
        }
        FreeLibrary(eax71, eax71, eax72, edx70);
    }
    if (!1) {
        SetCurrentDirectoryA(reinterpret_cast<int32_t>(ebp9) - 0x178, edx70);
        goto addr_408691_41;
    }
}

int32_t DeleteFileA = 0x19af2;

int32_t fun_413dd1(void** ecx, void** a2, void** a3, void** a4) {
    int32_t eax5;
    uint32_t eax6;

    eax5 = reinterpret_cast<int32_t>(DeleteFileA());
    if (eax5) {
        eax6 = 0;
    } else {
        eax6 = reinterpret_cast<uint32_t>(GetLastError());
    }
    if (!eax6) {
        return 0;
    } else {
        fun_41427a(ecx, eax6, __return_address(), __return_address());
        return -1;
    }
}

int32_t fun_41317d(void** ecx, unsigned char a2, int32_t a3, void** a4, void** a5);

void** fun_4013d0(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16) {
    void** v17;
    void** edi18;
    void** esi19;
    int32_t eax20;
    void** eax21;
    int1_t zf22;
    void** v23;
    void** v24;
    int32_t eax25;
    int1_t zf26;
    void** eax27;
    void** v28;
    void** v29;

    v17 = a2;
    eax20 = fun_41317d(ecx, *reinterpret_cast<unsigned char*>(&v17), 2, edi18, esi19);
    if (!eax20) {
        eax21 = fun_401140(a2, 2, edi18, esi19, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
        if (!reinterpret_cast<int1_t>(eax21 == 0xffffffff)) {
            fun_4013c0(eax21, edi18, esi19, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
            return 0;
        } else {
            return 1;
        }
    } else {
        zf22 = reinterpret_cast<int1_t>(g41f388 == 13);
        if (zf22) {
            v23 = a2;
            fun_41303c(ecx, *reinterpret_cast<unsigned char*>(&v23), 0x180, edi18, esi19);
            v24 = a2;
            eax25 = fun_41317d(ecx, *reinterpret_cast<unsigned char*>(&v24), 2, v23, 0x180);
            if (!eax25 || (zf26 = reinterpret_cast<int1_t>(g41f388 == 13), !zf26)) {
                eax27 = fun_401140(a2, 2, edi18, esi19, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
                if (!reinterpret_cast<int1_t>(eax27 == 0xffffffff)) {
                    fun_4013c0(eax27, edi18, esi19, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
                    v28 = a2;
                    fun_41303c(ecx, *reinterpret_cast<unsigned char*>(&v28), 0x100, edi18, esi19);
                    return 0;
                } else {
                    v29 = a2;
                    fun_41303c(ecx, *reinterpret_cast<unsigned char*>(&v29), 0x100, edi18, esi19);
                    return 1;
                }
            } else {
                return 1;
            }
        } else {
            return 0;
        }
    }
}

int32_t MoveFileExA = 0x1920c;

int32_t GetShortPathNameA = 0x19112;

int32_t fun_40b590(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, ...) {
    void*** esp7;
    void** v8;
    void** esi9;
    void** v10;
    void** v11;
    void** eax12;
    int32_t v13;
    int32_t v14;
    void** v15;
    void** ebp16;
    void*** esp17;
    void** v18;
    void** edi19;
    int32_t edi20;
    void** v21;
    void** v22;
    void* esp23;
    void** v24;
    void* esp25;
    void** v26;
    void* esp27;
    int32_t esi28;
    int32_t v29;
    void** v30;
    void** v31;
    void** v32;
    void* esp33;
    void** v34;
    void* esp35;
    void** eax36;
    void** ebp37;
    int32_t v38;
    void** v39;
    void** ebx40;
    void** eax41;
    void* esp42;
    void** v43;
    void** ecx44;
    void** eax45;
    void** eax46;
    void* esp47;
    void** ebx48;
    void** edx49;
    void** ecx50;
    void** eax51;
    signed char v52;
    signed char v53;
    uint32_t ecx54;
    signed char v55;
    int32_t ecx56;

    esp7 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 0x318 - 4);
    v8 = esi9;
    if (a2) {
        v10 = a2;
        fun_41303c(ecx, *reinterpret_cast<unsigned char*>(&v10), 0x180, v8, v11);
        esp7 = esp7 - 4 - 4 - 4 + 4 + 8;
    }
    eax12 = g41f2ec;
    if (eax12) {
        if (a2) {
            MoveFileExA();
            goto v13;
        } else {
            MoveFileExA();
            goto v14;
        }
    }
    v15 = ebp16;
    esp17 = esp7 - 4 - 4;
    v18 = edi19;
    edi20 = GetShortPathNameA;
    v21 = reinterpret_cast<void**>(esp17 + 0x11c);
    v22 = a3;
    edi20(v22, v21, 0x104, v18, v15);
    esp23 = reinterpret_cast<void*>(esp17 - 4 - 4 - 4 - 4 + 4);
    if (a2) {
        edi20(a2, reinterpret_cast<int32_t>(esp23) + 0x220, 0x104, v22, v21, 0x104, v18, v15);
        esp23 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp23) - 4 - 4 - 4 - 4 + 4);
    }
    v24 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp23) + 24);
    GetWindowsDirectoryA(v24, 0x104, v22, v21, 0x104, v18, v15);
    esp25 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp23) - 4 - 4 - 4 + 4);
    v26 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp25) + 24);
    lstrcatA(v26, "\\WININIT.INI", v24, 0x104, v22, v21, 0x104, v18, v15);
    esp27 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp25) - 4 - 4 - 4 + 4);
    esi28 = WritePrivateProfileStringA;
    if (a2) {
        esi28("Rename", reinterpret_cast<int32_t>(esp27) - 4 + 0x224, reinterpret_cast<int32_t>(esp27) + 0x11c, reinterpret_cast<int32_t>(esp27) + 24, v26, "\\WININIT.INI", v24, 0x104, v22, v21, 0x104, v18, v15);
        esi28();
        goto v29;
    }
    v30 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp27) + 24);
    v31 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp27) + 0x11c);
    v32 = reinterpret_cast<void**>("xyz");
    esi28("Rename", "xyz", v31, v30, v26, "\\WININIT.INI", v24, 0x104, v22, v21, 0x104, v18, v15);
    esp33 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp27) - 4 - 4 - 4 - 4 - 4 + 4);
    v34 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp33) + 24);
    esi28();
    esp35 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp33) - 4 - 4 - 4 - 4 - 4 + 4);
    eax36 = fun_401140(reinterpret_cast<int32_t>(esp35) + 24, 2, 0, 0, 0, v34, "Rename", "xyz", v31, v30, v26, "\\WININIT.INI", v24, 0x104, v22, v21, 0x104, v18, v15);
    ebp37 = eax36;
    if (ebp37 != 0xffffffff) 
        goto addr_40b6d0_12;
    addr_40b7a8_13:
    goto v38;
    addr_40b6d0_12:
    v39 = ebx40;
    eax41 = fun_4012c0(ebp37, v39, 0);
    esp42 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp35) - 4 - 4 - 4 + 4 + 8 - 4 - 4 - 4 + 4);
    v43 = eax41;
    ecx44 = eax41 + 0x200;
    eax45 = fun_402180(ecx44, ecx44, reinterpret_cast<int32_t>(esp42) + 20, ebp37, v39, 0, 0, 0, v34);
    if (!eax45) {
        addr_40b79e_14:
        fun_4013c0(ebp37, v39, 0, 0, 0, v34, v43, v32, v31, v30, v26, "\\WININIT.INI", v24, 0x104, v22, v21, 0x104, v18, v15);
        goto addr_40b7a8_13;
    } else {
        eax46 = fun_4011c0(ebp37, v34, eax41, v39, 0);
        esp47 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp42) - 4 - 4 - 4 + 4 + 12 - 4 - 4 - 4 - 4 + 4 + 12);
        if (eax46 || (ebx48 = eax41 + 0xfffffffc, edx49 = v34, static_cast<uint32_t>(reinterpret_cast<uint1_t>(ebx48 == 0)))) {
            addr_40b791_16:
            ecx50 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp47) + 16);
            fun_402200(ecx50, ecx50, v39, 0, 0, 0, v34, v43, v32, v31, v30, v26, "\\WININIT.INI", v24, 0x104, v22, v21, 0x104, v18, v15);
            goto addr_40b79e_14;
        } else {
            eax51 = reinterpret_cast<void**>(-2 - reinterpret_cast<unsigned char>(v34));
            v32 = eax51;
            do {
                if (reinterpret_cast<int1_t>((&v8)[1] == 0x78) && (*reinterpret_cast<signed char*>(&v8 + 3) == 0x79 && (v52 == 0x7a && v53 == 61))) {
                    ecx54 = 0xffffffff;
                    do {
                        if (!ecx54) 
                            break;
                        --ecx54;
                    } while (v55);
                    ecx56 = reinterpret_cast<int32_t>(~ecx54) - 1;
                    while (ecx56) {
                        --ecx56;
                    }
                    if (1) 
                        goto addr_40b76b_26;
                    eax51 = v32;
                }
                ++edx49;
            } while (reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(eax51) + reinterpret_cast<unsigned char>(edx49) + 2) < reinterpret_cast<unsigned char>(ebx48));
        }
    }
    goto addr_40b791_16;
    addr_40b76b_26:
    fun_401260(ebp37, 0, v39, 0, 0, 0, v34);
    fun_401200(ebp37, v34, v43, ebp37, 0, v39, 0, ebp37, v34, v43, ebp37, 0, v39, 0);
    esp47 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp47) - 4 - 4 - 4 + 4 - 4 - 4 - 4 - 4 + 4 + 20);
    goto addr_40b791_16;
}

void fun_409a50(void** a1, void** a2, void** a3) {
    int32_t eax4;
    int32_t eax5;
    void** eax6;

    eax4 = reinterpret_cast<int32_t>(RegOpenKeyExA(0x80000002, "Software\\Microsoft\\Windows\\CurrentVersion\\SharedDLLs"));
    if (!eax4) {
        eax5 = reinterpret_cast<int32_t>(RegQueryValueExA());
        if (eax5) {
        }
        eax6 = g41f0d0;
        RegSetValueExA(0, eax6);
        RegCloseKey(0, 0, eax6);
    }
    goto reinterpret_cast<int32_t>(__zero_stack_offset()) - 16 + 8;
}

void** fun_402950(void** a1, void** a2, int32_t a3, void** a4, void** a5);

int32_t AddFontResourceA = 0x19810;

int32_t RegOpenKeyA = 0x198ac;

int32_t g41f0a8 = 0;

int32_t SendMessageTimeoutA = 0x19358;

void fun_402860(void** ecx, void** a2, void** a3, void** a4, void** a5) {
    void* esp6;
    void** edi7;
    void** v8;
    int32_t eax9;
    signed char v10;
    void** esi11;
    void** v12;
    void** v13;
    void** v14;
    void** v15;
    void** eax16;
    void* esp17;
    void** esi18;
    void* esp19;
    void** ecx20;
    int32_t eax21;
    void* v22;
    int32_t eax23;
    void*** esp24;
    void** edi25;
    uint32_t ecx26;
    void* v27;
    int32_t v28;

    esp6 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 0x20c);
    fun_402950(a2, reinterpret_cast<int32_t>(esp6) + 4, 0x208, edi7, v8);
    eax9 = reinterpret_cast<int32_t>(AddFontResourceA());
    if (eax9) {
        if (v10) {
            eax16 = fun_4131d0(ecx, a2, 92, esi11, a2, edi7, v12, v13, v14, v15);
            esp17 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp6) - 4 - 4 - 4 - 4 - 4 + 4 + 12 - 4 - 4 + 4 - 4 - 4 - 4 - 4 + 4 + 8);
            if (!eax16) {
                esi18 = a2;
            } else {
                esi18 = eax16 + 1;
            }
            lstrcatA(reinterpret_cast<int32_t>(esp17) + 12, " (TrueType)", esi11);
            esp19 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp17) - 4 - 4 - 4 + 4);
            ecx20 = g41f2ec;
            eax21 = reinterpret_cast<int32_t>("Software\\Microsoft\\Windows\\CurrentVersion\\Fonts");
            if (ecx20) {
                eax21 = reinterpret_cast<int32_t>("Software\\Microsoft\\Windows NT\\CurrentVersion\\Fonts");
            }
            v22 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp19) + 8);
            eax23 = reinterpret_cast<int32_t>(RegOpenKeyA(0x80000002, eax21));
            esp24 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp19) - 4 - 4 - 4 - 4 + 4);
            if (!eax23) {
                edi25 = esi18;
                ecx26 = 0xffffffff;
                do {
                    if (!ecx26) 
                        break;
                    --ecx26;
                    ++edi25;
                } while (*reinterpret_cast<void***>(edi25) != *reinterpret_cast<void***>(&eax23));
                v27 = reinterpret_cast<void*>(esp24 - 4 - 4 - 4 - 4 + 28);
                RegSetValueExA(v22, v27);
                RegCloseKey(eax23, v22, v27);
            }
        }
        g41f0a8 = 0;
        SendMessageTimeoutA();
    }
    goto v28;
}

void** g41f0cc = reinterpret_cast<void**>(0);

struct s27 {
    signed char[4] pad4;
    void** f4;
    signed char[31] pad36;
    void** f36;
};

void fun_413cd2(void** ecx, void** a2, void** a3, void** a4);

struct s28 {
    signed char[8] pad8;
    int32_t f8;
};

struct s28* g41a928 = reinterpret_cast<struct s28*>(0x64616f4c);

int32_t g41f0c0 = 0;

struct s29 {
    signed char[12] pad12;
    int32_t f12;
};

int32_t fun_4086b0(void** ecx, void** a2, void** a3, void** a4, void** a5) {
    void** v6;
    void** ebx7;
    void** esi8;
    void*** esp9;
    void** eax10;
    void** eax11;
    void*** esp12;
    void** v13;
    int32_t ebp14;
    int32_t eax15;
    int32_t eax16;
    void* esp17;
    struct s27* v18;
    void** eax19;
    void* esp20;
    void* esp21;
    void* v22;
    int32_t eax23;
    struct s28* edx24;
    void** v25;
    int32_t v26;
    void** eax27;
    void** v28;
    int32_t v29;
    void** edi30;
    void** esi31;
    void** ebp32;
    signed char* edi33;
    uint32_t ecx34;
    int32_t ecx35;
    int32_t esi36;
    int32_t eax37;
    void* esp38;
    int32_t eax39;
    int32_t v40;
    int32_t eax41;
    int32_t v42;
    int32_t esi43;
    int32_t edi44;
    void* esp45;
    int32_t edx46;
    void* esp47;
    void** v48;
    int32_t eax49;
    void** edx50;
    void** esp51;
    uint32_t ecx52;
    void* esp53;
    signed char v54;
    int32_t eax55;
    int32_t eax56;
    struct s29* v57;
    int32_t v58;
    int32_t v59;

    v6 = ebx7;
    esi8 = a2;
    esp9 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 0x3b8 - 4 - 4 - 4 - 4);
    eax10 = *reinterpret_cast<void***>(esi8 + 12);
    if (*reinterpret_cast<unsigned char*>(&eax10 + 1) & 32) {
        if (!reinterpret_cast<int1_t>(*reinterpret_cast<void***>(esi8 + 4) == 0x1f4) || ((eax11 = *reinterpret_cast<void***>(esi8 + 36), eax11 == 0) || !*reinterpret_cast<void***>(eax11)) && (eax11 = g41f0cc, !*reinterpret_cast<void***>(eax11))) {
            eax11 = g41f0d0;
        }
        esp12 = esp9 - 4;
        v13 = reinterpret_cast<void**>(esp12 + 92);
        wsprintfA(v13, "-s \"%s\"", eax11);
        fun_402c40("regedit", esp12 - 4 - 4 - 4 + 4 + 100, 1, v13, "-s \"%s\"", eax11);
        return 1;
    }
    if (*reinterpret_cast<unsigned char*>(&eax10 + 1) & 64) {
        ebp14 = 0;
        eax15 = reinterpret_cast<int32_t>(LoadLibraryA());
        esp9 = esp9 - 4 - 4 + 4;
        if (eax15) {
            eax16 = reinterpret_cast<int32_t>(GetProcAddress());
            esp17 = reinterpret_cast<void*>(esp9 - 4 - 4 - 4 + 4);
            if (eax16) {
                if (!reinterpret_cast<int1_t>(v18->f4 == 0x1f4) || ((eax19 = v18->f36, eax19 == 0) || !*reinterpret_cast<void***>(eax19)) && (eax19 = g41f0cc, !*reinterpret_cast<void***>(eax19))) {
                    eax19 = g41f0d0;
                }
                esp20 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp17) - 4);
                fun_413cd2(ecx, reinterpret_cast<int32_t>(esp20) + 0x1c4, eax19, 0x104);
                esp21 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp20) - 4 - 4 - 4 + 4 + 12);
                ecx = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp21) + 0x1c0);
                v22 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp21) + 16);
                eax23 = reinterpret_cast<int32_t>(eax16(ecx, 1, v22));
                esp17 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp21) - 4 - 4 - 4 - 4 + 4);
                if (eax23 >= 0) {
                    edx24 = g41a928;
                    edx24->f8("LoadTypeLibEx", ecx, 1, v22);
                    esp17 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp17) - 4 - 4 + 4);
                    ebp14 = 1;
                }
            }
            FreeLibrary();
            esp9 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp17) - 4 - 4 + 4);
            if (!ebp14) {
                esi8 = v25;
            } else {
                goto v26;
            }
        }
        if (*reinterpret_cast<void***>(esi8 + 4) == 0x1f4) {
            v6 = reinterpret_cast<void**>("regtlib -q");
        } else {
            eax27 = g41f0d0;
            v28 = reinterpret_cast<void**>(esp9 + 88);
            wsprintfA(v28, "-q \"%s\"", eax27);
            fun_402c40("regtlib", esp9 - 4 - 4 - 4 - 4 + 4 + 100, 1, v28, "-q \"%s\"", eax27);
            goto v29;
        }
    }
    if (!reinterpret_cast<int1_t>(*reinterpret_cast<void***>(esi8 + 4) == 0x1f4)) {
        if (*reinterpret_cast<void***>(esi8 + 4) == 23 || reinterpret_cast<int1_t>(*reinterpret_cast<void***>(esi8 + 4) == 25)) {
            fun_4083d0(ecx, 1, edi30, esi31, ebp32, v6, "regsvr32 /s");
        }
        return 1;
    }
    edi33 = reinterpret_cast<signed char*>(0x41a314);
    ecx34 = 0xffffffff;
    do {
        if (!ecx34) 
            break;
        --ecx34;
        ++edi33;
    } while (*edi33);
    ecx35 = reinterpret_cast<int32_t>(~ecx34) - 2;
    esi36 = 0;
    if (ecx35 > 0) 
        goto addr_408863_26;
    addr_40887d_27:
    eax37 = reinterpret_cast<int32_t>(RegCreateKeyExA());
    esp38 = reinterpret_cast<void*>(esp9 - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4);
    if (eax37 && (eax39 = reinterpret_cast<int32_t>(RegCreateKeyA()), esp38 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp38) - 4 - 4 - 4 - 4 + 4), !!eax39)) {
        goto v40;
    }
    eax41 = g41f0c0;
    if (eax41 >= 100) {
        addr_4089dd_30:
        RegCloseKey();
        goto v42;
    } else {
        esi43 = wsprintfA;
        edi44 = RegQueryValueExA;
        do {
            esp45 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp38) - 4 - 4);
            esi43(reinterpret_cast<int32_t>(esp45) + 44, "%s%3.3d", "ICLaunch", eax41);
            edx46 = g41f0c0;
            esp47 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp45) - 4 - 4 - 4 + 4 + 16);
            g41f0c0 = edx46 + 1;
            v48 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp47) + 28);
            eax49 = reinterpret_cast<int32_t>(edi44());
            esp38 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp47) - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4);
            if (eax49) 
                break;
            eax41 = g41f0c0;
        } while (eax41 < 100);
        goto addr_408947_34;
    }
    edx50 = g41f0d0;
    esp51 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp38) - 4 - 4);
    esi43(esp51 + 24, "%s \"%s\"", reinterpret_cast<int32_t>(esp47) + 88, edx50);
    ecx52 = 0xffffffff;
    esp53 = reinterpret_cast<void*>(esp51 - 1 - 1 - 1 + 1 + 4);
    do {
        if (!ecx52) 
            break;
        --ecx52;
    } while (v54);
    eax55 = reinterpret_cast<int32_t>(RegSetValueExA());
    if (eax55) {
        goto addr_4089dd_30;
    } else {
        eax56 = v57->f12;
        if (!(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax56) + 1) & 96)) {
            fun_4083d0(v48, 0, v48, reinterpret_cast<int32_t>(esp53) - 4 - 4 - 4 + 48, 0, 1, reinterpret_cast<int32_t>(esp53) + 88);
            RegCloseKey();
            goto v58;
        }
    }
    addr_408947_34:
    RegCloseKey();
    goto v59;
    do {
        addr_408863_26:
        ++esi36;
    } while (esi36 < ecx35);
    goto addr_40887d_27;
}

void fun_408a20(void** ecx, void** a2, void** a3) {
    void** v4;
    void** eax5;
    void** v6;
    void** esi7;
    void** esi8;
    void** v9;
    void** edi10;
    void** edi11;
    void** v12;
    void** v13;
    void** eax14;
    void** eax15;

    v4 = reinterpret_cast<void**>(__return_address());
    eax5 = g41f110;
    v6 = esi7;
    esi8 = g41f10c;
    v9 = edi10;
    edi11 = reinterpret_cast<void**>(0);
    if (eax5) {
        do {
            if (*reinterpret_cast<void***>(esi8 + 36)) {
                v12 = *reinterpret_cast<void***>(esi8 + 36);
                fun_413dd1(ecx, v12, v9, v6);
                v13 = *reinterpret_cast<void***>(esi8 + 36);
                fun_413483(ecx, v13, v12, v9, v6, v4, a2);
                *reinterpret_cast<void***>(esi8 + 36) = reinterpret_cast<void**>(0);
            }
            ++edi11;
            eax14 = fun_403b10(esi8, v9, v6, v4, a2, a3);
            esi8 = eax14;
            eax15 = g41f110;
        } while (reinterpret_cast<unsigned char>(edi11) < reinterpret_cast<unsigned char>(eax15));
    }
    return;
}

int32_t OpenFile = 0x191c2;

void fun_4095c0(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7);

void** g41f35c = reinterpret_cast<void**>(0);

void fun_408a70() {
    void** eax1;
    void** v2;
    void** esi3;
    void** esi4;
    void** v5;
    void** v6;
    void** ebx7;
    void** v8;
    void** ebp9;
    void*** esp10;
    void** v11;
    void** edi12;
    void** edx13;
    void** eax14;
    void** eax15;
    void** eax16;
    void** edx17;
    void** ecx18;
    void* esp19;
    void** v20;
    void** v21;
    int32_t eax22;
    void* esp23;
    void** v24;
    void** v25;
    void** v26;
    void** v27;
    void** v28;
    void** eax29;
    void** eax30;
    void** eax31;
    void** eax32;
    void** v33;
    void* esp34;
    void** eax35;
    uint32_t ebp36;
    void** edi37;
    uint32_t eax38;
    void** eax39;
    void** edx40;
    int32_t eax41;
    void** v42;
    void** eax43;
    void** v44;
    int32_t eax45;

    eax1 = g41f110;
    v2 = esi3;
    esi4 = g41f10c;
    v5 = reinterpret_cast<void**>(0);
    if (eax1) {
        v6 = ebx7;
        v8 = ebp9;
        esp10 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 0x8c - 4 - 4 - 4 - 4);
        v11 = edi12;
        while (1) {
            if (!*reinterpret_cast<void***>(esi4 + 36)) {
                addr_408c5f_4:
                edx13 = v5 + 1;
                v5 = edx13;
                eax14 = fun_403b10(esi4, v11, v8, v6, v2, v5, esi4, v11, v8, v6, v2, v5);
                esi4 = eax14;
                eax15 = g41f110;
                esp10 = esp10 - 4 - 4 + 4 + 4;
                if (reinterpret_cast<unsigned char>(edx13) < reinterpret_cast<unsigned char>(eax15)) 
                    continue; else 
                    break;
            } else {
                eax16 = g41f364;
                if (eax16) 
                    goto addr_408c40_6;
                fun_4092d0(esi4, v11, v8, v6, esi4, v11, v8, v6);
                edx17 = g41f0d0;
                esp10 = esp10 - 4 - 4 + 4 + 4;
                if (!*reinterpret_cast<void***>(edx17)) 
                    goto addr_408c40_6;
                ecx18 = reinterpret_cast<void**>(34);
                esp19 = reinterpret_cast<void*>(esp10 - 4);
                while (ecx18) {
                    --ecx18;
                    esi4 = esi4 + 4;
                }
                *reinterpret_cast<signed char*>(&v20) = 0x88;
                v21 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp19) + 24);
                eax22 = reinterpret_cast<int32_t>(OpenFile(edx17, v21, 0x4000));
                esp23 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp19) - 4 - 4 - 4 + 4);
                if (eax22 == -1) 
                    goto addr_408b31_12;
                ecx18 = g41f0d0;
                eax29 = fun_4013d0(ecx18, ecx18, edx17, v21, 0x4000, v11, v8, v6, v2, v5, v20, v24, v25, v26, v27, v28);
                esp23 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp23) - 4 - 4 + 4 + 4);
                if (eax29) 
                    goto addr_408b05_14;
            }
            addr_408b31_12:
            if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi4 + 8)) & 0x1000 && (eax30 = *reinterpret_cast<void***>(esi4 + 12), !(*reinterpret_cast<unsigned char*>(&eax30 + 1) & 96))) {
                fun_4083d0(ecx18, 0, edx17, v21, 0x4000, v11, v8);
                esp23 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp23) - 4 - 4 + 4 + 4);
            }
            ecx18 = *reinterpret_cast<void***>(esi4 + 36);
            fun_4095c0(ecx18, esi4, ecx18, edx17, v21, 0x4000, v11);
            esp10 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp23) - 4 - 4 - 4 + 4 + 8);
            if (*reinterpret_cast<void***>(esi4 + 4) == 27) {
                eax31 = g41f0d0;
                g41f364 = reinterpret_cast<void**>(22);
                fun_407050(eax31, edx17, v21, 0x4000);
                esp10 = esp10 - 4 - 4 + 4 + 4;
                if (!(0x1000 & reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi4 + 8))) || (eax32 = *reinterpret_cast<void***>(esi4 + 12), !!(*reinterpret_cast<unsigned char*>(&eax32 + 1) & 96))) {
                    addr_408c40_6:
                    v33 = *reinterpret_cast<void***>(esi4 + 36);
                    fun_413dd1(ecx18, v33, v11, v8);
                    esp10 = esp10 - 4 - 4 + 4 + 4;
                    goto addr_408c4c_18;
                } else {
                    fun_4083d0(ecx18, 1, edx17, v21, 0x4000, v11, v8);
                    esp34 = reinterpret_cast<void*>(esp10 - 4 - 4 + 4);
                }
            } else {
                addr_408b60_20:
                eax35 = *reinterpret_cast<void***>(esi4 + 12);
                ebp36 = 0x80;
                if (0x1000 & reinterpret_cast<unsigned char>(eax35)) {
                    ebp36 = 0x81;
                    goto addr_408b71_22;
                }
            }
            addr_408c3d_23:
            esp10 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp34) + 4);
            goto addr_408c40_6;
            addr_408b71_22:
            if (*reinterpret_cast<unsigned char*>(&eax35 + 1) & 8) {
                ebp36 = ebp36 | 2;
            }
            if (ebp36 != 0x80) {
                edi37 = g41f0d0;
                if (reinterpret_cast<int1_t>(*reinterpret_cast<void***>(esi4 + 4) == 0x1f4)) {
                    edi37 = *reinterpret_cast<void***>(esi4 + 36);
                }
                eax38 = reinterpret_cast<uint32_t>(GetFileAttributesA(edi37, edx17, v21, 0x4000));
                esp10 = esp10 - 4 - 4 + 4;
                if (eax38 != 0xffffffff) {
                    *reinterpret_cast<unsigned char*>(&eax38) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax38) & 0xfc);
                    SetFileAttributesA(edi37, eax38 | ebp36, edi37, edx17, v21, 0x4000);
                    esp10 = esp10 - 4 - 4 - 4 + 4;
                }
            }
            if (*reinterpret_cast<void***>(esi4 + 16) && ((eax39 = *reinterpret_cast<void***>(esi4 + 8), !!(*reinterpret_cast<unsigned char*>(&eax39 + 1) & 4)) && (*reinterpret_cast<void***>(esi4 + 4) == 23 || (*reinterpret_cast<void***>(esi4 + 4) == 25 || (*reinterpret_cast<void***>(esi4 + 4) == 0x1f5 || reinterpret_cast<int1_t>(*reinterpret_cast<void***>(esi4 + 4) == 0x1f4)))))) {
                fun_409a50(edx17, v21, 0x4000);
                esp10 = esp10 - 4 + 4;
            }
            if (reinterpret_cast<int1_t>(*reinterpret_cast<void***>(esi4 + 16) == 3) && (*reinterpret_cast<void***>(esi4 + 4) == 23 || reinterpret_cast<int1_t>(*reinterpret_cast<void***>(esi4 + 4) == 25))) {
                edx40 = g41f0d0;
                fun_402860(ecx18, edx40, edx17, v21, 0x4000);
                esp10 = esp10 - 4 - 4 + 4 + 4;
            }
            if (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi4 + 8)) & 0x1000) || (*reinterpret_cast<void***>(esi4 + 4) != 23 && (*reinterpret_cast<void***>(esi4 + 4) != 25 && !reinterpret_cast<int1_t>(*reinterpret_cast<void***>(esi4 + 4) == 0x1f4)) || (eax41 = fun_4086b0(ecx18, esi4, edx17, v21, 0x4000), esp10 = esp10 - 4 - 4 + 4 + 4, !!eax41))) {
                addr_408c4c_18:
                v42 = *reinterpret_cast<void***>(esi4 + 36);
                fun_413483(ecx18, v42, v11, v8, v6, v2, v5, ecx18, v42, v11, v8, v6, v2, v5);
                esp10 = esp10 - 4 - 4 + 4 + 4;
                *reinterpret_cast<void***>(esi4 + 36) = reinterpret_cast<void**>(0);
                goto addr_408c5f_4;
            } else {
                ecx18 = g41f0d0;
                g41f364 = reinterpret_cast<void**>(22);
                fun_407050(ecx18, edx17, v21, 0x4000);
                esp34 = reinterpret_cast<void*>(esp10 - 4 - 4 + 4);
                goto addr_408c3d_23;
            }
            addr_408b05_14:
            eax43 = g41f0d0;
            v44 = *reinterpret_cast<void***>(esi4 + 36);
            eax45 = fun_40b590(ecx18, eax43, v44, edx17, v21, 0x4000, ecx18, eax43, v44, edx17, v21, 0x4000);
            esp10 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp23) - 4 - 4 - 4 + 4 + 8);
            if (!eax45) {
                g41f364 = reinterpret_cast<void**>(22);
                goto addr_408c40_6;
            } else {
                g41f35c = reinterpret_cast<void**>(1);
                *reinterpret_cast<void***>(esi4 + 4) = reinterpret_cast<void**>(0x1f4);
                goto addr_408b60_20;
            }
        }
    }
    return;
}

uint32_t g41f2f0 = 0;

void fun_40d0b0();

void fun_407960(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12) {
    void** eax13;
    void** v14;
    void** esi15;
    void** esi16;
    void** v17;
    void** edi18;
    void** v19;
    void** v20;
    void** v21;
    void** v22;
    void** ebx23;
    void*** esp24;
    void** v25;
    void** ebp26;
    uint32_t eax27;
    void** ecx28;
    void** eax29;
    void** v30;
    void** eax31;
    void** v32;
    void** eax33;
    void** v34;
    void** v35;
    void** eax36;
    void** eax37;
    void* esp38;
    void** v39;
    void** v40;
    void* esp41;
    void** eax42;
    void** ebp43;
    void** eax44;
    void** v45;
    void** ebx46;
    void** v47;
    void** v48;
    uint32_t ebx49;
    void** eax50;
    void* esp51;
    void** ecx52;
    struct s19* eax53;
    void** eax54;
    void** eax55;
    void** eax56;
    void** edi57;
    int32_t eax58;
    void*** esp59;
    int32_t eax60;
    void** eax61;
    void** edi62;
    void** ebp63;
    void** v64;
    void** eax65;
    void*** esp66;
    void* esp67;
    struct s19* eax68;
    void** eax69;
    void** eax70;
    int1_t sf71;
    void*** esp72;
    void** ecx73;
    int32_t eax74;
    void** edx75;
    void** eax76;
    void** eax77;
    void** eax78;
    void*** esp79;
    void** v80;
    void** v81;

    eax13 = g41f110;
    v14 = esi15;
    esi16 = g41f10c;
    v17 = edi18;
    v19 = reinterpret_cast<void**>(0);
    *reinterpret_cast<int16_t*>(&v20) = 0;
    *reinterpret_cast<int16_t*>(&v20 + 2) = 0;
    v21 = reinterpret_cast<void**>(0);
    if (reinterpret_cast<unsigned char>(eax13) <= reinterpret_cast<unsigned char>(0)) {
        addr_407cd2_2:
        return;
    } else {
        v22 = ebx23;
        esp24 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 0x130 - 4 - 4 - 4 - 4);
        v25 = ebp26;
        while (1) {
            eax27 = g41f2f0;
            ecx28 = *reinterpret_cast<void***>(esi16 + 8);
            if (eax27 & reinterpret_cast<unsigned char>(ecx28)) {
                eax29 = fun_403e30(esi16, 2, v25, v22, esi16, 2, v25, v22);
                v30 = eax29;
                eax31 = fun_403e30(esi16, 5, esi16, 2);
                ecx28 = *reinterpret_cast<void***>(eax29);
                esp24 = esp24 - 4 - 4 - 4 + 4 - 4 - 4 - 4 + 4 + 16;
                v32 = eax31;
                if (ecx28 || *reinterpret_cast<void***>(eax31)) {
                    fun_4092d0(esi16, v25, v22, v17);
                    eax33 = *reinterpret_cast<void***>(esi16 + 8);
                    esp24 = esp24 - 4 - 4 + 4 + 4;
                    if (*reinterpret_cast<unsigned char*>(&eax33 + 1) & 2 && (ecx28 = g41f0d0, eax36 = fun_4131d0(ecx28, ecx28, 92, v25, v22, v17, v14, v34, v35, v19), esp24 = esp24 - 4 - 4 - 4 + 4 + 8, !!eax36)) {
                        *reinterpret_cast<void***>(eax36) = reinterpret_cast<void**>(0);
                    }
                    if (!*reinterpret_cast<int16_t*>(&v20) && a1 != 0xffffffff) {
                        eax37 = fun_401240(a1, v25, v22, v17, v14);
                        esp38 = reinterpret_cast<void*>(esp24 - 4 - 4 + 4);
                        v39 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp38) + 32);
                        v40 = eax37;
                        *reinterpret_cast<int16_t*>(&v20) = 0x1236;
                        fun_401200(a1, v39, 8, a1, v25, v22, v17);
                        esp41 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp38) - 4 - 4 - 4 - 4 + 4);
                        fun_401200(a1, reinterpret_cast<int32_t>(esp41) + 40, 4, a1, v39, 8, a1);
                        esp24 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp41) - 4 - 4 - 4 - 4 + 4 + 28);
                    }
                }
                if (*reinterpret_cast<void***>(eax29)) {
                    eax42 = fun_403e30(esi16, 1, v25, v22, esi16, 1, v25, v22);
                    ebp43 = eax42;
                    eax44 = fun_403e30(esi16, 3, esi16, 1);
                    v45 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi16 + 12)) & 3);
                    ebx46 = *reinterpret_cast<void***>(esi16 + 8);
                    v47 = *reinterpret_cast<void***>(esi16 + 8);
                    v48 = eax44;
                    ebx49 = reinterpret_cast<unsigned char>(ebx46) >> 22 & 1;
                    eax50 = fun_403e30(esi16, 4, v47, v25, esi16, 4, v47, v25);
                    esp51 = reinterpret_cast<void*>(esp24 - 4 - 4 - 4 + 4 - 4 - 4 - 4 + 4 + 16 - 4 - 4 - 4 - 4 + 4 + 8);
                    ecx52 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp51) + 64);
                    fun_4078d0(ecx52, eax50, v47, v25);
                    esp24 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp51) - 4 - 4 - 4 + 4 + 12);
                    v35 = eax44;
                    if (eax44 && *reinterpret_cast<void***>(eax44)) {
                        eax53 = fun_408290(ecx52, 0, eax44, 0xffdc, v25, v22, v17, v14, v34, v35, v19, v20, 0, v48, v32, v21, v45);
                        eax54 = reinterpret_cast<void**>(&eax53->f1);
                        eax55 = fun_413320(ecx52, eax54, 0, eax44, 0xffdc, v25, v22, v17, v14, eax54, v35, v19);
                        v35 = eax55;
                        fun_408290(ecx52, eax55, eax44, eax54, eax54, 0, eax44, 0xffdc, v25, v22, v17, v14, eax54, v35, v19, v20, 0);
                        esp24 = esp24 - 4 - 4 - 4 - 4 + 4 - 4 - 4 + 4 - 4 - 4 - 4 - 4 + 4 + 28;
                    }
                    do {
                        eax56 = fun_413210(ecx52, ebp43, 59, v25, v22, v17, v14);
                        edi57 = eax56;
                        if (edi57) {
                            *reinterpret_cast<void***>(edi57) = reinterpret_cast<void**>(0);
                        }
                        v34 = a1;
                        if (reinterpret_cast<signed char>(*reinterpret_cast<void***>(esi16 + 8)) < reinterpret_cast<signed char>(0)) {
                            v34 = reinterpret_cast<void**>(0xffffffff);
                        }
                        eax58 = 0;
                        *reinterpret_cast<void***>(&eax58) = *reinterpret_cast<void***>(esi16 + 6);
                        esp59 = esp24 - 4 - 4 - 4 + 4 + 8 - 4 - 4 - 4;
                        ecx52 = g41f0d0;
                        eax60 = fun_4075f0(ecx52, ecx52, ebp43, v30, v35, esp59 + 72, eax58, v45, ebx49, v34);
                        esp24 = esp59 - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4 + 36;
                        if (edi57 && (ebp43 = edi57 + 1, *reinterpret_cast<void***>(edi57) = reinterpret_cast<void**>(59), !*reinterpret_cast<void***>(ebp43))) {
                            edi57 = reinterpret_cast<void**>(0);
                        }
                        if (v34 == 0xffffffff || !eax60) {
                            fun_40d0b0();
                            esp24 = esp24 - 4 + 4;
                        } else {
                            ++v19;
                        }
                    } while (edi57);
                    ecx28 = v48;
                    if (v35 != ecx28) {
                        fun_413483(ecx28, v35, v25, v22, v17, v14, v34);
                        esp24 = esp24 - 4 - 4 + 4 + 4;
                    }
                }
                if (*reinterpret_cast<void***>(v32)) {
                    eax61 = fun_403e30(esi16, 6, v25, v22, esi16, 6, v25, v22);
                    edi62 = *reinterpret_cast<void***>(esi16 + 12);
                    ebp63 = *reinterpret_cast<void***>(esi16 + 8);
                    v64 = *reinterpret_cast<void***>(esi16 + 8);
                    eax65 = fun_403e30(esi16, 7, v64, v25, esi16, 7, v64, v25);
                    esp66 = esp24 - 4 - 4 - 4 + 4 + 8 - 4 - 4 - 4 - 4 + 4 + 8 - 4;
                    fun_4078d0(esp66 + 68, eax65, v64, v25);
                    esp67 = reinterpret_cast<void*>(esp66 - 4 - 4 + 4 + 12);
                    v34 = eax61;
                    if (eax61 && *reinterpret_cast<void***>(eax61)) {
                        eax68 = fun_408290(ecx28, 0, eax61, 0xffdc, v25, v22, v17, v14, v34, v35, v19, v20, 0, v48, v32, v21, v45);
                        eax69 = reinterpret_cast<void**>(&eax68->f1);
                        v48 = eax69;
                        eax70 = fun_413320(ecx28, eax69, 0, eax61, 0xffdc, v25, v22, v17, v14, v34, v35, v19);
                        v34 = eax70;
                        fun_408290(v48, eax70, eax61, v48, eax69, 0, eax61, 0xffdc, v25, v22, v17, v14, v34, v35, v19, v20, 0);
                        esp67 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp67) - 4 - 4 - 4 - 4 + 4 - 4 - 4 + 4 - 4 - 4 - 4 - 4 + 4 + 28);
                    }
                    sf71 = reinterpret_cast<signed char>(*reinterpret_cast<void***>(esi16 + 8)) < reinterpret_cast<signed char>(0);
                    v35 = a1;
                    if (sf71) {
                        v35 = reinterpret_cast<void**>(0xffffffff);
                    }
                    esp72 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp67) - 4 - 4 - 4);
                    ecx73 = g41f0d0;
                    eax74 = fun_4075f0(ecx73, ecx73, "#Desktop#", v32, v34, esp72 + 72, 0, reinterpret_cast<unsigned char>(edi62) >> 2 & 3, reinterpret_cast<unsigned char>(ebp63) >> 23 & 1, v35);
                    esp24 = esp72 - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4 + 36;
                    if (eax74 && v35 != 0xffffffff) {
                        ++v19;
                    }
                    if (v34 != eax61) {
                        fun_413483(ecx73, v34, v25, v22, v17, v14, v34);
                        esp24 = esp24 - 4 - 4 + 4 + 4;
                    }
                }
            }
            edx75 = v21 + 1;
            v21 = edx75;
            eax76 = fun_403b10(esi16, v25, v22, v17, v14, v34);
            esi16 = eax76;
            eax77 = g41f110;
            esp24 = esp24 - 4 - 4 + 4 + 4;
            if (reinterpret_cast<unsigned char>(edx75) >= reinterpret_cast<unsigned char>(eax77)) 
                break;
        }
        if (!*reinterpret_cast<int16_t*>(&v20)) 
            goto addr_407cd2_2;
        eax78 = fun_401240(a1, v17, v14, v34, v35);
        fun_401260(a1, v40, a1, v17, v14, v34, v35);
        esp79 = esp24 + 4 + 4 - 4 - 4 + 4 - 4 - 4 - 4 + 4 + 12;
        if (!(reinterpret_cast<unsigned char>(eax78) + (-8 - reinterpret_cast<unsigned char>(v40)))) 
            goto addr_407cd2_2;
    }
    v80 = reinterpret_cast<void**>(esp79 + 20);
    fun_401200(a1, v80, 8, v17, v14, v34, v35);
    v81 = reinterpret_cast<void**>(esp79 - 4 - 4 - 4 - 4 + 4 + 28);
    fun_401200(a1, v81, 4, a1, v80, 8, v17);
    fun_4012a0(a1, 0, a1, v81, 4, a1, v80, 8);
    goto addr_407cd2_2;
}

void* g41f374 = reinterpret_cast<void*>(0);

void** fun_409260(void** a1) {
    void** edx2;
    void* ecx3;
    void** eax4;
    void** esi5;
    void** eax6;

    edx2 = g41f258;
    ecx3 = reinterpret_cast<void*>(0);
    *reinterpret_cast<signed char*>(&eax4) = *reinterpret_cast<signed char*>(edx2 + 50);
    if (*reinterpret_cast<signed char*>(&eax4) == -1) {
        addr_409286_2:
        return eax4;
    } else {
        esi5 = a1;
        do {
            eax4 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax4) & 0xff);
            if (eax4 == esi5) 
                break;
            *reinterpret_cast<signed char*>(&eax4) = *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(edx2) + reinterpret_cast<uint32_t>(ecx3) + 51);
            ecx3 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx3) + 1);
        } while (*reinterpret_cast<signed char*>(&eax4) != -1);
        goto addr_409286_2;
    }
    g41f374 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx3) - 1);
    eax6 = reinterpret_cast<void**>(1);
    if (0) {
        g41f2e0 = reinterpret_cast<void**>(0x415);
    } else {
        if (1) {
            g41f2e0 = reinterpret_cast<void**>(1);
            return 0;
        } else {
            eax6 = reinterpret_cast<void**>(0xfffffffe);
            if (!1) {
                g41f2e0 = reinterpret_cast<void**>(2);
                return 0xfffffffe;
            }
        }
    }
    return eax6;
}

int32_t fun_4096b0(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11) {
    void** v12;
    void** eax13;
    void** v14;
    void** edi15;
    void** v16;
    void** v17;
    void** v18;
    void** v19;
    void** eax20;
    void** edi21;
    void** v22;
    void** eax23;
    void** ecx24;
    void** v25;
    int32_t eax26;
    void** v27;
    void** ebx28;
    void** v29;
    void** esi30;
    void** eax31;
    void** esi32;
    void** v33;
    void** eax34;
    void** ebx35;
    void** v36;
    void** v37;
    void** ebp38;
    void** eax39;
    void** ebp40;
    void** ebx41;
    void** eax42;
    void** edi43;
    void** eax44;
    void** esi45;
    int1_t zf46;
    void** eax47;

    v12 = reinterpret_cast<void**>(__return_address());
    eax13 = g41f0d0;
    v14 = edi15;
    v16 = reinterpret_cast<void**>(0);
    eax20 = fun_401140(eax13, 0, v14, v17, v18, v19, 0, v12, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
    edi21 = eax20;
    v22 = edi21;
    if (edi21 == 0xffffffff) {
        eax23 = g41f0d0;
        eax26 = fun_40b590(ecx24, eax23, a2, v14, v25, v22);
        if (eax26) {
            g41f35c = reinterpret_cast<void**>(1);
            *reinterpret_cast<void***>(a1 + 4) = reinterpret_cast<void**>(0x1f4);
        }
    } else {
        v27 = ebx28;
        v29 = esi30;
        eax31 = fun_4012c0(edi21, v29, v27);
        ecx24 = a1;
        esi32 = eax31;
        v25 = esi32;
        if (esi32 != *reinterpret_cast<void***>(ecx24 + 24) || (eax34 = fun_401140(a2, 0, v29, v27, v14, v25, v22, v33, 0, v12, a1, a2, a3, a4, a5, a6, a7, a8, a9), ebx35 = eax34, v36 = ebx35, ebx35 == 0xffffffff)) {
            addr_4097ba_5:
            fun_4013c0(edi21, v29, v27, v14, v25, v22, v36, v16, v12, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
            if (v16) {
                fun_413dd1(ecx24, a2, v14, v25);
                *reinterpret_cast<void***>(a1 + 4) = reinterpret_cast<void**>(23);
                return 5;
            }
        } else {
            v37 = ebp38;
            eax39 = fun_413320(ecx24, 0x4000, v37, v29, v27, v14, v25, v22, v36, 0, v12, a1);
            ebp40 = eax39;
            if (!ebp40) {
                addr_4097b0_8:
                fun_4013c0(ebx35, v37, v29, v27, v14, v25, v22, v36, v16, v12, a1, a2, a3, a4, a5, a6, a7, a8, a9);
                goto addr_4097ba_5;
            } else {
                if (!esi32) 
                    goto addr_409797_10;
                while (1) {
                    ebx41 = esi32;
                    if (reinterpret_cast<unsigned char>(esi32) >= reinterpret_cast<unsigned char>(0x2000)) {
                        ebx41 = reinterpret_cast<void**>(0x2000);
                    }
                    eax42 = fun_4011c0(v22, ebp40, ebx41, v37, v29);
                    if (eax42) 
                        goto addr_409793_15;
                    ecx24 = v36;
                    edi43 = ebp40 + 0x2000;
                    eax44 = fun_4011c0(ecx24, edi43, ebx41, v37, v29);
                    if (eax44) 
                        goto addr_409793_15;
                    ecx24 = reinterpret_cast<void**>(0x800);
                    esi45 = ebp40;
                    zf46 = 1;
                    while (ecx24) {
                        --ecx24;
                        zf46 = *reinterpret_cast<void***>(esi45) == *reinterpret_cast<void***>(edi43);
                        *reinterpret_cast<void***>(edi43) = *reinterpret_cast<void***>(esi45);
                        edi43 = edi43 + 4;
                        esi45 = esi45 + 4;
                    }
                    if (!zf46) 
                        goto addr_40978f_21;
                    eax47 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v25) - reinterpret_cast<unsigned char>(ebx41));
                    v25 = eax47;
                    if (!eax47) 
                        goto addr_40978d_23;
                    esi32 = v25;
                }
            }
        }
    }
    return 5;
    addr_409793_15:
    if (esi32) {
        addr_40979f_26:
        fun_413483(ecx24, ebp40, v37, v29, v27, v14, v25);
        edi21 = v22;
        ebx35 = v36;
        goto addr_4097b0_8;
    } else {
        addr_409797_10:
        v16 = reinterpret_cast<void**>(1);
        goto addr_40979f_26;
    }
    addr_40978f_21:
    esi32 = v25;
    goto addr_409793_15;
    addr_40978d_23:
    goto addr_409797_10;
}

int32_t GetFileVersionInfoA = 0x19a26;

int32_t fun_40d0f4() {
    goto GetFileVersionInfoA;
}

int32_t VerQueryValueA = 0x19a14;

int32_t fun_40d0ee(void** a1, void** a2, void** a3, void** a4) {
    goto VerQueryValueA;
}

void** g41f0b0 = reinterpret_cast<void**>(0);

void** fun_401f80(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32) {
    void** v33;
    void** esp34;
    void** v35;
    void** eax36;
    void** ecx37;
    void** edx38;
    void** al39;
    void** eax40;
    void** eax41;
    void** ecx42;

    v33 = reinterpret_cast<void**>(__return_address());
    esp34 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    v35 = ecx;
    eax36 = g41f0b0;
    if (eax36 && (eax36 = fun_402180(ecx, 0x104, esp34, v35, v33, a2, a3, a4, a5), esp34 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp34 - 4) - 4 - 4 + 4 + 8), !!eax36)) {
        ecx37 = a2;
        edx38 = v35;
        do {
            al39 = *reinterpret_cast<void***>(ecx37);
            ++ecx37;
            *reinterpret_cast<void***>(edx38) = al39;
            ++edx38;
        } while (al39);
        fun_401ff0(v35, v35, 30);
        eax40 = g41f0b0;
        eax41 = reinterpret_cast<void**>(GetDlgItem(eax40, 0x3f0, v35));
        fun_405a50(eax41, eax40, 0x3f0, v35, v35, v33, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32);
        ecx42 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp34 - 4) - 4 - 4 + 4 + 8 - 4 - 4 - 4 - 4 + 4 - 4 - 4 + 4 + 8);
        eax36 = fun_402200(ecx42, ecx42, eax41, eax40, 0x3f0, v35, v35, v33, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
    }
    return eax36;
}

void fun_4020a0(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6) {
    void** ebx7;
    void** edi8;
    void** esi9;
    void** ebx10;
    void** eax11;
    void** eax12;
    void** edi13;
    uint32_t ecx14;
    uint32_t ecx15;
    void*** esi16;
    uint32_t edx17;
    void** edi18;
    uint32_t ecx19;
    void** edi20;
    uint32_t ecx21;
    uint32_t ecx22;
    void** eax23;
    void* edx24;
    void** cl25;

    ebx7 = a2;
    eax11 = fun_4131d0(ecx, ebx7, 46, edi8, esi9, ebx10, __return_address(), a2, a3, a4);
    if (!eax11 || (eax12 = fun_413210(ecx, eax11, 92, edi8, esi9, ebx10, __return_address()), !!eax12)) {
        edi13 = a3;
        ecx14 = 0xffffffff;
        do {
            if (!ecx14) 
                break;
            --ecx14;
            ++edi13;
        } while (*reinterpret_cast<void***>(edi13));
        ecx15 = ~ecx14;
        esi16 = reinterpret_cast<void***>(reinterpret_cast<unsigned char>(edi13) - ecx15);
        edx17 = ecx15;
        edi18 = ebx7;
        ecx19 = 0xffffffff;
        do {
            if (!ecx19) 
                break;
            --ecx19;
            ++edi18;
            ++esi16;
        } while (*reinterpret_cast<void***>(edi18));
        edi20 = edi18 - 1;
        ecx21 = edx17 >> 2;
        while (ecx21) {
            --ecx21;
            *reinterpret_cast<void***>(edi20) = *esi16;
            edi20 = edi20 + 4;
            esi16 = esi16 + 4;
        }
        ecx22 = edx17 & 3;
        while (ecx22) {
            --ecx22;
            *reinterpret_cast<void***>(edi20) = *esi16;
            ++edi20;
            ++esi16;
        }
        return;
    } else {
        eax23 = a3;
        edx24 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax11) - reinterpret_cast<unsigned char>(eax23));
        do {
            cl25 = *reinterpret_cast<void***>(eax23);
            *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(edx24) + reinterpret_cast<unsigned char>(eax23)) = cl25;
            ++eax23;
        } while (cl25);
        return;
    }
}

void** fun_401190(void** a1) {
    int32_t eax2;

    eax2 = reinterpret_cast<int32_t>(CreateFileA());
    if (eax2 == -1) {
        GetLastError();
    }
    goto a1;
}

struct s30 {
    signed char[4] pad4;
    void** f4;
};

void** g41f108 = reinterpret_cast<void**>(0);

void** fun_407260(void** a1) {
    void** v2;
    void** eax3;
    void* ecx4;
    void** v5;
    void** esi6;
    void** esi7;
    void** v8;
    void** edi9;
    void* ecx10;
    void** eax11;
    struct s30* esi12;
    struct s30* tmp32_13;
    void** eax14;
    void** edx15;
    void* eax16;
    void** edx17;
    void** eax18;
    void** ecx19;
    void** edx20;
    int1_t zf21;
    void** ecx22;

    v2 = reinterpret_cast<void**>(__return_address());
    eax3 = g41f100;
    ecx4 = g41f104;
    v5 = esi6;
    esi7 = a1;
    v8 = edi9;
    if (reinterpret_cast<unsigned char>(esi7) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(eax3) + reinterpret_cast<uint32_t>(ecx4))) {
        addr_40729a_2:
        ecx10 = g41f104;
        eax11 = g41f0e0;
        esi12 = reinterpret_cast<struct s30*>(reinterpret_cast<unsigned char>(esi7) - reinterpret_cast<uint32_t>(ecx10));
        if (!eax11) {
            tmp32_13 = reinterpret_cast<struct s30*>(reinterpret_cast<uint32_t>(esi12) + reinterpret_cast<unsigned char>(g41f108));
            esi12 = tmp32_13;
        }
    } else {
        do {
            g41a2b0 = reinterpret_cast<void**>(0);
            eax14 = fun_407070();
            if (eax14 == 0xffffffff) 
                goto addr_4072e8_5;
            edx15 = g41f100;
            eax16 = g41f104;
        } while (reinterpret_cast<unsigned char>(esi7) >= reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(edx15) + reinterpret_cast<uint32_t>(eax16)));
        goto addr_40729a_2;
    }
    edx17 = g41a2bc;
    eax18 = fun_401240(edx17, v8, v5, v2, a1);
    ecx19 = g41a2bc;
    fun_401260(ecx19, &esi12->f4, edx17, v8, v5, v2, a1);
    edx20 = g41a2b0;
    g41a2b0 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx20) + (reinterpret_cast<unsigned char>(eax18) - reinterpret_cast<uint32_t>(esi12)) + 0xfffffffc);
    return 0;
    addr_4072e8_5:
    zf21 = g41f0dc == 0;
    if (!zf21) {
        return 15;
    } else {
        ecx22 = g41f280;
        g41f364 = reinterpret_cast<void**>(18);
        fun_407050(ecx22, v8, v5, v2);
        goto addr_40729a_2;
    }
}

void** fun_407400(void** a1, void** a2, void** a3) {
    void** eax4;
    void** esi5;
    void** esi6;
    void** eax7;

    eax4 = a1 - 2;
    if (!eax4) {
        esi5 = reinterpret_cast<void**>(12);
        if (a2) {
            fun_407050(a2, esi6, __return_address(), a1);
            return 12;
        }
    } else {
        eax7 = eax4 - 1;
        if (!eax7) {
            esi5 = reinterpret_cast<void**>(18);
            if (a2) {
                fun_407050(a2, esi6, __return_address(), a1);
                return 18;
            }
        } else {
            if (!(eax7 - 1)) {
                esi5 = reinterpret_cast<void**>(19);
                if (a3) {
                    fun_407050(a3, esi6, __return_address(), a1);
                    return 19;
                }
            } else {
                esi5 = reinterpret_cast<void**>(31);
                if (a2) {
                    fun_407050(a2, esi6, __return_address(), a1);
                    return 31;
                }
            }
        }
    }
    fun_407050(0x41f380, esi6, __return_address(), a1);
    return esi5;
}

void** fun_402ef0(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6);

int32_t fun_4032a0(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6);

void** fun_403500(void** a1, void** a2, void** a3, void** a4, void* a5, void** a6, void** a7) {
    void* esp8;
    void** eax9;
    void** eax10;
    void** edi11;

    if (a6) {
        *reinterpret_cast<void***>(a6) = reinterpret_cast<void**>(0);
    }
    if (a7) {
        *reinterpret_cast<void***>(a7) = reinterpret_cast<void**>(0);
    }
    esp8 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4);
    eax9 = fun_407320(reinterpret_cast<int32_t>(esp8) - 4 + 28, reinterpret_cast<int32_t>(esp8) + 12, 1, 1);
    if (!eax9) {
        eax10 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(a5) - 1);
        if (reinterpret_cast<int1_t>(eax10 == 0xffffffff)) {
            eax10 = fun_4012c0(a4, edi11, __return_address());
        }
        if (eax10) {
            if (0) {
                fun_402ef0(0xffffffff, a3, a4, eax10, a6, a7);
            } else {
                if (0) {
                    fun_4032a0(a3, a3, a4, eax10, a6, a7);
                    goto a2;
                } else {
                    goto a2;
                }
            }
        } else {
            goto a2;
        }
    }
    goto a2;
}

void** g41f0d4 = reinterpret_cast<void**>(0);

int32_t fun_4099d0(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31) {
    void** eax32;
    void** esi33;
    void** eax34;
    void** eax35;
    void** edi36;
    void** eax37;
    int32_t eax38;
    void** ecx39;

    eax32 = g41f0d4;
    if (!eax32) {
        eax34 = fun_413320(ecx, 0x400, esi33, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9);
        if (!eax34 || (eax35 = g41f0d0, eax37 = fun_403a00(7, 32, eax35, edi36, esi33, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31), wsprintfA(eax34, eax37, eax35), eax38 = fun_4039c0(eax34, 36, eax34, eax37, eax35, edi36, esi33, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24), fun_413483(ecx, eax34, eax34, 36, eax34, eax37, eax35), eax38 != 6)) {
            ecx39 = g41f0d0;
            g41f364 = reinterpret_cast<void**>(21);
            fun_407050(ecx39, esi33, __return_address(), a2);
            return 0;
        } else {
            return 1;
        }
    } else {
        return 1;
    }
}

int32_t RemoveFontResourceA = 0x19824;

void fun_402b70(void** ecx, void** a2, void** a3) {
    void* esp4;
    void** edi5;
    void** esi6;
    int32_t eax7;
    signed char v8;
    void** v9;
    void** v10;
    void** v11;
    void** v12;
    void* esp13;
    void* esp14;
    void** ecx15;
    int32_t eax16;
    void* v17;
    int32_t v18;

    esp4 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 0x20c);
    fun_402950(a2, reinterpret_cast<int32_t>(esp4) + 4, 0x208, edi5, esi6);
    eax7 = reinterpret_cast<int32_t>(RemoveFontResourceA());
    if (v8) {
        fun_4131d0(ecx, a2, 92, a2, edi5, esi6, v9, v10, v11, v12);
        esp13 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp4) - 4 - 4 - 4 - 4 - 4 - 4 + 4 + 12 - 4 - 4 + 4 - 4 - 4 - 4 + 4 + 8);
        lstrcatA(reinterpret_cast<int32_t>(esp13) + 12, " (TrueType)");
        esp14 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp13) - 4 - 4 - 4 + 4);
        ecx15 = g41f2ec;
        if (ecx15) {
        }
        eax16 = reinterpret_cast<int32_t>(RegOpenKeyA());
        if (!eax16) {
            v17 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp14) - 4 - 4 - 4 - 4 + 4 + 12);
            RegDeleteValueA(reinterpret_cast<int32_t>(esp14) + 8, v17);
            RegCloseKey(0x80000002, reinterpret_cast<int32_t>(esp14) + 8, v17);
        }
    }
    if (eax7) {
        SendMessageTimeoutA(0xffff, 29, 0, 0, 0, 0x1388, 0x41f0a8, esi6);
    }
    goto v18;
}

void** g41f0e8 = reinterpret_cast<void**>(0);

void** g41f0e4 = reinterpret_cast<void**>(0);

void** g41f0c4 = reinterpret_cast<void**>(0);

void** g41f25c = reinterpret_cast<void**>(0);

void fun_401f00(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29);

void** g41f294 = reinterpret_cast<void**>(0);

void** g41f0f8 = reinterpret_cast<void**>(0);

void** g41f264 = reinterpret_cast<void**>(0);

void** g41f260 = reinterpret_cast<void**>(0);

uint32_t g41a2e8 = 0xb525b0;

int32_t SetFileTime = 0x191ec;

void** g41f334 = reinterpret_cast<void**>(0);

int32_t SetTimer = 0x19560;

void** fun_409b00(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20) {
    void** v21;
    void** eax22;
    void** v23;
    void** ebx24;
    void** v25;
    void** ebp26;
    void** v27;
    void** esi28;
    void*** esp29;
    void** v30;
    void** edi31;
    void** v32;
    void** v33;
    void** eax34;
    void** ecx35;
    void** eax36;
    void** ebp37;
    void** eax38;
    void** eax39;
    void** v40;
    void** eax41;
    void** v42;
    void** eax43;
    void* eax44;
    void** eax45;
    void** v46;
    void** eax47;
    int1_t zf48;
    void** edx49;
    void** al50;
    void** ecx51;
    void** edx52;
    void** al53;
    void** eax54;
    int32_t edi55;
    void** eax56;
    int32_t eax57;
    void** ecx58;
    void** v59;
    void** v60;
    void** v61;
    void** eax62;
    void** eax63;
    void* esp64;
    void** v65;
    void** v66;
    void** v67;
    void** v68;
    void** edx69;
    void** eax70;
    void** v71;
    void** v72;
    void** v73;
    void** eax74;
    void* esp75;
    void** v76;
    void** v77;
    void** v78;
    int16_t v79;
    unsigned char v80;
    void** edx81;
    void** eax82;
    void** v83;
    void** v84;
    void** v85;
    void** ebx86;
    void** edx87;
    void** eax88;
    void** v89;
    void** v90;
    void** v91;
    void** edx92;
    void** eax93;
    void** eax94;
    void** eax95;
    void** eax96;
    void** eax97;
    void** eax98;
    void** v99;
    void** v100;
    void** v101;
    void** eax102;
    void* esp103;
    void** eax104;
    void** v105;
    void** v106;
    void** v107;
    void** ecx108;
    void** ecx109;
    void** edx110;
    void* esp111;
    void** al112;
    void** edx113;
    void** eax114;
    void** v115;
    void** v116;
    void** v117;
    void** eax118;
    void* esp119;
    void** v120;
    void** v121;
    void** v122;
    void** v123;
    void* esp124;
    void** esi125;
    uint32_t ecx126;
    void** edi127;
    void** edi128;
    void* esp129;
    uint32_t ecx130;
    signed char dl131;
    void** eax132;
    void** v133;
    void** v134;
    void** v135;
    void** eax136;
    void** v137;
    void** eax138;
    void** eax139;
    void** eax140;
    void** eax141;
    void** eax142;
    void** v143;
    void** v144;
    void** v145;
    void** eax146;
    void** eax147;
    void** v148;
    void** v149;
    void** v150;
    void** edx151;
    void** eax152;
    void** v153;
    void** v154;
    void** eax155;
    void** v156;
    void** eax157;
    uint32_t ecx158;
    signed char* edx159;
    uint32_t ecx160;
    signed char* edi161;
    int32_t ecx162;
    void** edx163;
    void** eax164;
    struct s0* eax165;
    void** v166;
    void** v167;
    void** v168;
    int1_t zf169;
    void** v170;
    void** v171;
    void** v172;
    void** v173;
    int32_t eax174;
    void** eax175;
    void** eax176;
    void** eax177;
    void** edi178;
    uint32_t ecx179;
    void** ecx180;
    void** v181;
    void** eax182;
    void** edx183;
    void** al184;
    void** eax185;
    void** edx186;
    int32_t eax187;
    void** eax188;
    uint32_t edi189;
    void** esi190;
    uint32_t eax191;
    void** edx192;
    void** eax193;
    void** eax194;
    void** eax195;
    void** v196;
    void** v197;
    void** eax198;
    void** eax199;
    void** eax200;

    v21 = reinterpret_cast<void**>(__return_address());
    eax22 = g41f0cc;
    v23 = ebx24;
    v25 = ebp26;
    v27 = esi28;
    esp29 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 36 - 4 - 4 - 4 - 4);
    v30 = edi31;
    v32 = reinterpret_cast<void**>(0);
    v33 = reinterpret_cast<void**>(0xffffffff);
    *reinterpret_cast<void***>(eax22) = reinterpret_cast<void**>(0);
    do {
        addr_409b24_2:
        eax34 = g41f0e8;
        ecx35 = g41f110;
        eax36 = eax34 + 1;
        g41f0e8 = eax36;
        if (reinterpret_cast<unsigned char>(eax36) >= reinterpret_cast<unsigned char>(ecx35)) 
            goto addr_40a204_3;
        ebp37 = g41f0e4;
        eax38 = fun_403b10(ebp37, v30, v27, v25, v23, 0xffffffff);
        g41f0e4 = eax38;
        eax39 = reinterpret_cast<void**>(0);
        eax39 = *reinterpret_cast<void***>(ebp37 + 4);
        v40 = eax39;
        *reinterpret_cast<void***>(ebp37 + 4) = reinterpret_cast<void**>(0);
        eax41 = fun_4092d0(ebp37, ebp37, v30, v27);
        ecx35 = g41f0d0;
        v42 = eax41;
        esp29 = esp29 - 4 - 4 + 4 - 4 - 4 + 4 + 8;
        if (!*reinterpret_cast<void***>(ecx35)) 
            goto addr_409b24_2;
        if (!(*reinterpret_cast<unsigned char*>(&v40) & 2)) {
            addr_409c1b_6:
            eax43 = g41f0e8;
            eax44 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax43 + reinterpret_cast<unsigned char>(eax43) * 4) + 5);
            eax45 = reinterpret_cast<void**>((reinterpret_cast<uint32_t>(eax44) + reinterpret_cast<uint32_t>(eax44) * 4 << 2) / reinterpret_cast<unsigned char>(g41f110));
            v46 = eax45;
            eax47 = *reinterpret_cast<void***>(ebp37 + 8);
            if (*reinterpret_cast<unsigned char*>(&eax47 + 1) & 1) 
                break;
            zf48 = (g41f2f0 & reinterpret_cast<unsigned char>(eax47)) == 0;
            if (zf48) 
                break;
        } else {
            edx49 = g41f0c8;
            do {
                al50 = *reinterpret_cast<void***>(ecx35);
                ++ecx35;
                *reinterpret_cast<void***>(edx49) = al50;
                ++edx49;
            } while (al50);
            ecx51 = g41f0d0;
            edx52 = g41f0c4;
            do {
                al53 = *reinterpret_cast<void***>(ecx51);
                ++ecx51;
                *reinterpret_cast<void***>(edx52) = al53;
                ++edx52;
            } while (al53);
            ecx35 = g41f0c4;
            eax54 = fun_4131d0(ecx35, ecx35, 92, v30, v27, v25, v23, 0xffffffff, 0, v40);
            esp29 = esp29 - 4 - 4 - 4 + 4 + 8;
            if (!eax54) 
                goto addr_409bc0_13; else 
                goto addr_409bbc_14;
        }
        if (*reinterpret_cast<unsigned char*>(&eax47 + 1) & 2) 
            goto addr_409dd5_16;
        edi55 = 1;
        if (!(*reinterpret_cast<unsigned char*>(&eax47) & 64) || (eax56 = g41f0d0, eax57 = fun_401100(eax56, v30), esp29 = esp29 - 4 - 4 + 4 + 4, !eax57)) {
            if (!v42) {
                addr_409cd3_19:
                g41f364 = reinterpret_cast<void**>(0);
                if (!edi55) 
                    goto addr_409de9_20; else 
                    continue;
            } else {
                ecx58 = g41f0d0;
                eax62 = fun_401140(ecx58, 0, v30, v27, v25, v23, 0xffffffff, 0, v40, 0, v42, v59, v46, v60, v61, v21, a1, a2, a3);
                esp29 = esp29 - 4 - 4 - 4 + 4 + 8;
                if (eax62 != 0xffffffff) {
                    eax63 = fun_4012c0(eax62, v30, v27);
                    esp64 = reinterpret_cast<void*>(esp29 - 4 - 4 + 4 + 4);
                    if (eax63 == *reinterpret_cast<void***>(ebp37 + 24)) {
                        fun_405500(eax62, reinterpret_cast<int32_t>(esp64) + 28, reinterpret_cast<int32_t>(esp64) + 36, v30, v27, v25, v23, 0xffffffff, 0, v40, 0, v42, v65);
                        esp64 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp64) - 4 - 4 - 4 - 4 + 4 + 12);
                    }
                    fun_4013c0(eax62, v30, v27, v25, v23, 0xffffffff, 0, v40, 0, v42, v66, v46, v67, v68, v21, a1, a2, a3, a4);
                    esp29 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp64) - 4 - 4 + 4 + 4);
                }
                ecx35 = reinterpret_cast<void**>(0);
                if (*reinterpret_cast<void***>(ebp37 + 20)) 
                    goto addr_409cd3_19; else 
                    goto addr_409cd1_26;
            }
        } else {
            addr_409cd1_26:
            edi55 = 0;
            goto addr_409cd3_19;
        }
        addr_409bc0_13:
        edx69 = g41f258;
        if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx69)) & 16) {
            eax70 = g41f0d0;
            eax74 = fun_401140(eax70, 0, v30, v27, v25, v23, 0xffffffff, 0, v40, 0, v42, v71, v46, v72, v73, v21, a1, a2, a3);
            esp29 = esp29 - 4 - 4 - 4 + 4 + 8;
            if (eax74 == 0xffffffff) 
                goto addr_409c12_28;
            fun_4012a0(eax74, 0xf8, v30, v27, v25, v23, 0xffffffff, 0);
            esp75 = reinterpret_cast<void*>(esp29 - 4 - 4 - 4 + 4);
            ecx35 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp75) + 52);
            fun_4011c0(eax74, ecx35, 8, eax74, 0xf8);
            fun_4013c0(eax74, eax74, ecx35, 8, eax74, 0xf8, v30, v27, v25, v23, 0xffffffff, 0, v40, 0, v42, v76, v46, v77, v78);
            esp29 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp75) - 4 - 4 - 4 - 4 + 4 - 4 - 4 + 4 + 24);
            if (v79 != 0x7f7f) 
                goto addr_409c12_28;
            if (v80 & 2) 
                goto addr_409b24_2;
            addr_409c12_28:
            edx81 = g41f0c8;
            *reinterpret_cast<void***>(edx81) = reinterpret_cast<void**>(48);
            goto addr_409c1b_6;
        }
        addr_409bbc_14:
        *reinterpret_cast<void***>(eax54 + 1) = reinterpret_cast<void**>(0);
        goto addr_409bc0_13;
        eax82 = g41f25c;
    } while (!eax82);
    goto addr_409cf2_32;
    addr_40a1d5_33:
    ecx35 = v46;
    fun_401f00(ecx35, v30, v27, v25, v23, v33, 0, v40, 0, v42, v83, v46, v84, v85, v21, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
    ebx86 = v33;
    v32 = reinterpret_cast<void**>(1);
    addr_40a1eb_34:
    goto addr_40a1ee_35;
    addr_409dd5_16:
    edx87 = g41f0d0;
    fun_4023b0(ecx35, edx87, v30);
    goto addr_40a1d5_33;
    addr_409de9_20:
    ebx86 = reinterpret_cast<void**>(0xffffffff);
    *reinterpret_cast<void***>(ebp37 + 4) = reinterpret_cast<void**>(0x1f5);
    addr_40a117_36:
    eax88 = g41f364;
    if (eax88) {
        addr_40a1ee_35:
        if (ebx86 != 0xffffffff) {
            fun_4013c0(ebx86, v30, v27, v25, v23, v33, v32, v40, 0, v42, v89, v46, v90, v91, v21, a1, a2, a3, a4);
        }
    } else {
        edx92 = g41f0cc;
        *reinterpret_cast<void***>(edx92) = reinterpret_cast<void**>(0);
        if (*reinterpret_cast<unsigned char*>(&v40) & 2) {
            *reinterpret_cast<void***>(ebp37 + 4) = reinterpret_cast<void**>(0);
        }
        if (*reinterpret_cast<void***>(ebp37 + 16) && ((eax93 = *reinterpret_cast<void***>(ebp37 + 8), !!(*reinterpret_cast<unsigned char*>(&eax93 + 1) & 4)) && (*reinterpret_cast<void***>(ebp37 + 4) == 23 || (*reinterpret_cast<void***>(ebp37 + 4) == 25 || (*reinterpret_cast<void***>(ebp37 + 4) == 0x1f5 || reinterpret_cast<int1_t>(*reinterpret_cast<void***>(ebp37 + 4) == 0x1f4)))))) {
            fun_409a50(v30, v27, v25);
        }
        if (reinterpret_cast<int1_t>(*reinterpret_cast<void***>(ebp37 + 16) == 3) && (*reinterpret_cast<void***>(ebp37 + 4) == 23 || reinterpret_cast<int1_t>(*reinterpret_cast<void***>(ebp37 + 4) == 25))) {
            eax94 = g41f0d0;
            fun_402860(ecx35, eax94, v30, v27, v25);
        }
        eax95 = *reinterpret_cast<void***>(ebp37 + 8);
        if (*reinterpret_cast<unsigned char*>(&eax95 + 1) & 16 && ((eax96 = g41f294, !!eax96) && *reinterpret_cast<void***>(ebp37 + 4) == 0x1f5 || (*reinterpret_cast<void***>(ebp37 + 4) == 23 || (*reinterpret_cast<void***>(ebp37 + 4) == 25 || reinterpret_cast<int1_t>(*reinterpret_cast<void***>(ebp37 + 4) == 0x1f4))))) {
            fun_4086b0(ecx35, ebp37, v30, v27, v25);
        }
        eax97 = *reinterpret_cast<void***>(ebp37 + 8);
        if (*reinterpret_cast<unsigned char*>(&eax97 + 1) & 8) {
            g41f0f8 = ebp37;
            goto addr_40a1d5_33;
        }
    }
    if (v32) {
        addr_40a217_49:
        return v32;
    } else {
        addr_40a204_3:
        eax98 = g41f0cc;
        if (*reinterpret_cast<void***>(eax98)) {
            fun_413dd1(ecx35, eax98, v30, v27);
            goto addr_40a217_49;
        }
    }
    addr_409cf2_32:
    eax102 = fun_403a00(5, 2, v30, v27, v25, v23, 0xffffffff, 0, v40, 0, v42, v99, v46, v100, v101, v21, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
    esp103 = reinterpret_cast<void*>(esp29 - 4 - 4 - 4 + 4 + 8);
    if (eax102 && *reinterpret_cast<void***>(eax102)) {
        eax104 = g41f0d0;
        fun_401f80(ecx35, eax104, v30, v27, v25, v23, 0xffffffff, 0, v40, 0, v42, v105, v46, v106, v107, v21, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
        esp103 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp103) - 4 - 4 + 4 + 4);
    }
    ecx108 = g41f0d0;
    fun_4023b0(ecx108, ecx108, v30);
    ecx109 = g41f0d0;
    edx110 = g41f0cc;
    esp111 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp103) - 4 - 4 + 4 + 4);
    do {
        al112 = *reinterpret_cast<void***>(ecx109);
        ++ecx109;
        *reinterpret_cast<void***>(edx110) = al112;
        ++edx110;
    } while (al112);
    edx113 = g41f0cc;
    fun_4020a0(ecx109, edx113, ".$$A", v30, v27, v25);
    eax114 = g41f0cc;
    eax118 = fun_401140(eax114, 0, edx113, ".$$A", v30, v27, v25, v23, 0xffffffff, 0, v40, 0, v42, v115, v46, v116, v117, v21, a1);
    esp119 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp111) - 4 - 4 - 4 + 4 - 4 - 4 - 4 + 4 + 16);
    if (eax118 != 0xffffffff) {
        do {
            v120 = eax118;
            fun_4013c0(v120, v30, v27, v25, v23, 0xffffffff, 0, v40, 0, v42, v121, v46, v122, v123, v21, a1, a2, a3, a4);
            esp124 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp119) - 4 - 4 + 4);
            esi125 = g41f0cc;
            ecx126 = 0xffffffff;
            edi127 = esi125;
            do {
                if (!ecx126) 
                    break;
                --ecx126;
                ++edi127;
                ++esi125;
            } while (*reinterpret_cast<void***>(edi127));
            edi128 = esi125;
            esp129 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp124) - 4);
            ecx130 = 0xffffffff;
            dl131 = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(~ecx126) - 1 + reinterpret_cast<unsigned char>(esi125) - 1) + 1);
            do {
                if (!ecx130) 
                    break;
                --ecx130;
                ++edi128;
                ++esi125;
            } while (*reinterpret_cast<void***>(edi128));
            *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(~ecx130 - 1) + reinterpret_cast<unsigned char>(esi125) + 0xffffffff) = dl131;
            eax132 = g41f0cc;
            eax118 = fun_401140(eax132, 0, v120, v30, v27, v25, v23, 0xffffffff, 0, v40, 0, v42, v133, v46, v134, v135, v21, a1, a2);
            esp119 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp129) - 4 - 4 + 4 + 12);
        } while (!reinterpret_cast<int1_t>(eax118 == 0xffffffff));
    }
    ecx35 = g41f0cc;
    eax136 = fun_401190(ecx35);
    ebx86 = eax136;
    v33 = ebx86;
    if (!reinterpret_cast<int1_t>(ebx86 == 0xffffffff)) {
        if (!(*reinterpret_cast<unsigned char*>(&v40) & 2)) {
            v137 = *reinterpret_cast<void***>(ebp37 + 28);
            eax138 = fun_407260(v137);
            esp29 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp119) - 4 - 4 + 4 + 4 - 4 - 4 + 4 + 4);
            g41f364 = eax138;
            if (eax138) 
                goto addr_40a1ee_35;
            eax139 = g41a2bc;
            ecx35 = *reinterpret_cast<void***>(ebp37 + 32);
            eax140 = fun_403500(ebx86, eax139, ecx35, esp29 - 4 + 32, esp29 + 36, v30, v27);
            eax141 = g41f2e0;
            if (eax140) 
                goto addr_409f3b_66;
        } else {
            ecx35 = g41f264;
            if (!ecx35 || (eax142 = g41f260, eax142 == 0)) {
                addr_409fd0_68:
                if (!reinterpret_cast<int1_t>(*reinterpret_cast<void***>(ebp37 + 16) == 3) || (ecx35 = g41f0d0, eax146 = fun_401140(ecx35, 0, v30, v27, v25, v23, v33, 0, v40, 0, v42, v143, v46, v144, v145, v21, a1, a2, a3), eax146 == 0xffffffff)) {
                    eax147 = v42;
                    goto addr_40a012_70;
                } else {
                    fun_4013c0(eax146, v30, v27, v25, v23, v33, 0, v40, 0, v42, v148, v46, v149, v150, v21, a1, a2, a3, a4);
                    edx151 = g41f0d0;
                    fun_402b70(ecx35, edx151, eax146);
                    eax152 = g41f0d0;
                    eax147 = fun_4013d0(ecx35, eax152, edx151, eax146, v30, v27, v25, v23, v33, 0, v40, 0, v42, v153, v46, v154);
                    goto addr_40a012_70;
                }
            } else {
                eax155 = fun_401200(ebx86, ecx35, eax142, v30, v27, v25, v23);
                g41f364 = eax155;
                if (eax155) 
                    goto addr_40a1ee_35;
                v156 = *reinterpret_cast<void***>(ebp37 + 28);
                eax157 = fun_407260(v156);
                g41f364 = eax157;
                if (eax157) 
                    goto addr_40a1ee_35;
                ecx158 = g41a2e8;
                edx159 = reinterpret_cast<signed char*>(ecx158 - 0x738580);
                ecx160 = 0xffffffff;
                edi161 = edx159;
                do {
                    if (!ecx160) 
                        break;
                    --ecx160;
                    ++edi161;
                } while (*edi161 != *reinterpret_cast<signed char*>(&eax157));
                ecx162 = reinterpret_cast<int32_t>(~ecx160) - 2;
                if (ecx162 < 20) 
                    goto addr_409e72_78;
                if (*reinterpret_cast<signed char*>(ecx162 + reinterpret_cast<uint32_t>(edx159)) == 0x9a) 
                    goto addr_409e85_80; else 
                    goto addr_409e72_78;
            }
        }
    } else {
        edx163 = g41f0cc;
        g41f364 = reinterpret_cast<void**>(17);
        fun_407050(edx163, v30, v27, v25);
        goto addr_40a1eb_34;
    }
    if (eax141 == 2) 
        goto addr_40a1ee_35;
    eax164 = *reinterpret_cast<void***>(ebp37 + 8);
    if (*reinterpret_cast<unsigned char*>(&eax164) & 8) {
        eax165 = reinterpret_cast<struct s0*>(ebp37 + 60);
        if (!(*reinterpret_cast<unsigned char*>(&eax164) & 6)) {
            eax165 = reinterpret_cast<struct s0*>(ebp37 + 40);
        }
        ecx35 = reinterpret_cast<void**>(&eax165->f8);
        SetFileTime(ebx86, eax165, ecx35, reinterpret_cast<uint32_t>(eax165) + 16);
    }
    fun_4013c0(ebx86, v30, v27, v25, v23, v33, 0, v40, 0, v42, v166, v46, v167, v168, v21, a1, a2, a3, a4);
    ebx86 = reinterpret_cast<void**>(0xffffffff);
    zf169 = 0 == *reinterpret_cast<void***>(ebp37 + 24);
    v33 = reinterpret_cast<void**>(0xffffffff);
    if (!zf169) 
        goto addr_409fbf_88;
    ecx35 = *reinterpret_cast<void***>(ebp37 + 20);
    if (v170 == ecx35) 
        goto addr_409fd0_68;
    addr_409fbf_88:
    eax174 = fun_4099d0(ecx35, v30, v27, v25, v23, 0xffffffff, 0, v40, 0, v42, v171, v46, v172, v173, v21, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
    if (!eax174) 
        goto addr_40a204_3;
    ebx86 = reinterpret_cast<void**>(0xffffffff);
    goto addr_409fd0_68;
    addr_409f3b_66:
    if (eax141 != 2) {
        eax175 = fun_403e30(ebp37, 0, v30, v27);
        eax176 = fun_403e30(ebp37, 0, eax175, v30);
        eax177 = fun_407400(eax140, eax176, eax175);
        g41f364 = eax177;
        goto addr_40a1ee_35;
    }
    addr_40a012_70:
    if (*reinterpret_cast<void***>(ebp37 + 16) == 2 || (ecx35 = *reinterpret_cast<void***>(ebp37 + 8), !!(*reinterpret_cast<unsigned char*>(&ecx35 + 1) & 16))) {
        edi178 = g41f0cc;
        ecx179 = 0xffffffff;
        do {
            if (!ecx179) 
                break;
            --ecx179;
            ++edi178;
        } while (*reinterpret_cast<void***>(edi178));
        ecx180 = reinterpret_cast<void**>(~ecx179 + 1);
        eax182 = fun_413320(ecx180, ecx180, v30, v27, v25, v23, v33, 0, v40, 0, v42, v181);
        *reinterpret_cast<void***>(ebp37 + 36) = eax182;
        ecx35 = g41f0cc;
        edx183 = eax182;
        do {
            al184 = *reinterpret_cast<void***>(ecx35);
            ++ecx35;
            *reinterpret_cast<void***>(edx183) = al184;
            ++edx183;
        } while (al184);
        *reinterpret_cast<void***>(ebp37 + 4) = reinterpret_cast<void**>(0x1f6);
        goto addr_40a117_36;
    } else {
        if (!eax147) {
            eax185 = g41f0cc;
            fun_4095c0(ecx35, ebp37, eax185, v30, v27, v25, v23);
        } else {
            ecx35 = g41f0cc;
            edx186 = g41f0d0;
            eax187 = fun_40b590(ecx35, edx186, ecx35, v30, v27, v25);
            if (!eax187) {
                *reinterpret_cast<void***>(ebp37 + 4) = reinterpret_cast<void**>(27);
            } else {
                g41f35c = reinterpret_cast<void**>(1);
                *reinterpret_cast<void***>(ebp37 + 4) = reinterpret_cast<void**>(0x1f4);
            }
        }
        ecx35 = *reinterpret_cast<void***>(ebp37 + 4);
        if (reinterpret_cast<int1_t>(ecx35 == 27)) 
            goto addr_40a079_104;
    }
    eax188 = *reinterpret_cast<void***>(ebp37 + 12);
    edi189 = 0x80;
    if (*reinterpret_cast<unsigned char*>(&eax188 + 1) & 16) {
        edi189 = 0x81;
    }
    if (*reinterpret_cast<unsigned char*>(&eax188 + 1) & 8) {
        edi189 = edi189 | 2;
    }
    if (edi189 != 0x80) {
        esi190 = g41f0d0;
        if (reinterpret_cast<int1_t>(ecx35 == 0x1f4)) {
            esi190 = g41f0cc;
        }
        eax191 = reinterpret_cast<uint32_t>(GetFileAttributesA(esi190));
        if (eax191 != 0xffffffff) {
            *reinterpret_cast<unsigned char*>(&eax191) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax191) & 0xfc);
            SetFileAttributesA(esi190, eax191 | edi189, esi190);
            goto addr_40a117_36;
        }
    }
    addr_40a079_104:
    ecx35 = g41f0d0;
    g41f364 = reinterpret_cast<void**>(22);
    fun_407050(ecx35, v30, v27, v25);
    goto addr_40a1eb_34;
    addr_409e72_78:
    edx192 = g41f334;
    SetTimer(edx192, 11, 100, 0);
    addr_409e85_80:
    eax193 = *reinterpret_cast<void***>(ebp37 + 32);
    ecx35 = g41a2bc;
    eax194 = fun_403500(ebx86, ecx35, eax193, 0, 0, v30, v27);
    eax195 = g41f2e0;
    if (!eax194) {
        if (eax195 == 2) 
            goto addr_40a1ee_35;
        fun_4013c0(ebx86, v30, v27, v25, v23, v33, 0, v40, 0, v42, 0, v46, v196, v197, v21, a1, a2, a3, a4);
        ebx86 = reinterpret_cast<void**>(0xffffffff);
        v33 = reinterpret_cast<void**>(0xffffffff);
        goto addr_409fd0_68;
    } else {
        if (eax195 != 2) {
            eax198 = fun_403e30(ebp37, 0, v30, v27);
            eax199 = fun_403e30(ebp37, 0, eax198, v30);
            eax200 = fun_407400(eax194, eax199, eax198);
            g41f364 = eax200;
            goto addr_40a1ee_35;
        }
    }
}

void** fun_403e70(void** ecx, void** a2, void** a3, void** a4, void** a5) {
    void** v6;
    void** esi7;
    void** ebx8;
    void** v9;
    void** v10;
    void** eax11;
    void** ebx12;
    void** eax13;
    void** v14;
    void** edi15;
    void** v16;
    void** v17;
    void** eax18;
    uint32_t eax19;
    int32_t edi20;
    void** edx21;
    void** edx22;
    void** eax23;
    void** v24;
    void** v25;
    void** v26;
    void** edi27;
    uint32_t ecx28;
    void** ecx29;
    void** eax30;
    int32_t v31;
    int32_t v32;
    void** eax33;
    int32_t eax34;

    v6 = esi7;
    if (!reinterpret_cast<int1_t>(a3 == 78) || (!*reinterpret_cast<void***>(a5) || (*reinterpret_cast<void***>(a5 + 8) != 0x70b && !reinterpret_cast<int1_t>(*reinterpret_cast<void***>(a5 + 8) == 0x702) || (eax11 = fun_4133d2(0x1f4, 1, v6, ebx8, v9, v10), ebx12 = eax11, ebx12 == 0)))) {
        addr_403fe4_2:
        return 0;
    } else {
        eax13 = *reinterpret_cast<void***>(a5);
        v14 = edi15;
        v16 = ebx12;
        v17 = eax13;
        GetClassNameA();
        *reinterpret_cast<void***>(ebx12 + 8) = reinterpret_cast<void**>(0);
        eax18 = fun_412fb0(ecx, ebx12, "RichEdit", v17, v16, 0x12b, v14);
        if (eax18) 
            goto addr_403fda_4;
        eax19 = reinterpret_cast<uint32_t>(*reinterpret_cast<void***>(a5 + 8) - 0x702);
        if (eax19) 
            goto addr_403ef5_6;
    }
    ecx = *reinterpret_cast<void***>(a5);
    edi20 = SendMessageA;
    edi20(ecx, 0xb1, 0xff, 0);
    edx21 = *reinterpret_cast<void***>(a5);
    edi20(edx21, 0x43f, 1, 0, ecx, 0xb1, 0xff, 0);
    goto addr_403fda_4;
    addr_403ef5_6:
    if (eax19 - 9) 
        goto addr_403fda_4;
    if (!reinterpret_cast<int1_t>(*reinterpret_cast<void***>(a5 + 12) == 0x202)) 
        goto addr_403fda_4;
    ecx = *reinterpret_cast<void***>(a5 + 24);
    edx22 = *reinterpret_cast<void***>(a5);
    eax23 = fun_405990(edx22, ecx);
    if (!eax23) 
        goto addr_403f1e_10;
    fun_408290(ecx, ebx12, eax23, 0x1f4, v17, v16, 0x12b, v14, v6, ebx8, v24, v25, v26, __return_address(), a2, a3, a4);
    addr_403f5e_12:
    edi27 = ebx12;
    ecx28 = 0xffffffff;
    do {
        if (!ecx28) 
            break;
        --ecx28;
        ++edi27;
    } while (*reinterpret_cast<void***>(edi27));
    ecx29 = reinterpret_cast<void**>(~ecx28 - 1);
    if (reinterpret_cast<signed char>(ecx29) < reinterpret_cast<signed char>(4) || (eax30 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx29) + reinterpret_cast<unsigned char>(ebx12) + 0xfffffffc), *reinterpret_cast<signed char*>(&ecx29) = *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(ecx29) + reinterpret_cast<unsigned char>(ebx12) + 0xfffffffc), *reinterpret_cast<signed char*>(&ecx29) != 46)) {
        fun_4026d0(ebx12, ".htm", v17, v16, 0x12b, v14);
        fun_413483(ecx29, ebx12, v17, v16, 0x12b, v14, v6);
        goto v31;
    } else {
        fun_4026d0(ebx12, eax30, v17, v16, 0x12b, v14);
        fun_413483(ecx29, ebx12, v17, v16, 0x12b, v14, v6);
        goto v32;
    }
    addr_403f1e_10:
    ecx = *reinterpret_cast<void***>(a5 + 28);
    v14 = *reinterpret_cast<void***>(a5 + 24);
    eax33 = *reinterpret_cast<void***>(a5);
    v6 = ecx;
    eax34 = reinterpret_cast<int32_t>(SendMessageA(eax33, 0x44b, 0, reinterpret_cast<int32_t>(__zero_stack_offset()) - 12 - 4 - 4 - 4 - 4 - 4 + 4 + 8 - 4 - 4 - 4 - 4 - 4 + 4 - 4 - 4 - 4 + 4 + 8 - 4 - 4 - 4 + 4 + 8 + 12));
    if (!eax34) {
        addr_403fda_4:
        fun_413483(ecx, ebx12, v17, v16, 0x12b, v14, v6);
        goto addr_403fe4_2;
    } else {
        goto addr_403f5e_12;
    }
}

struct s31 {
    signed char f0;
    signed char f1;
};

int32_t GetClientRect = 0x19310;

int32_t BeginPaint = 0x19302;

int32_t EndPaint = 0x192f6;

int32_t CreateCompatibleDC = 0x19744;

struct s32 {
    int32_t f0;
    int32_t f4;
    int32_t f8;
};

void fun_401db0(struct s4* ecx, void** a2, signed char* a3, struct s32* a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14);

int32_t CreateCompatibleBitmap = 0x1972a;

int32_t BitBlt = 0x19710;

int32_t DeleteDC = 0x196f4;

void fun_4015f0(void** a1, void** a2, void** a3, struct s31* a4, int32_t a5, void** a6) {
    void** ebp7;
    void* esp8;
    void** v9;
    void* esp10;
    void** v11;
    void** v12;
    void** eax13;
    int32_t v14;
    int32_t esi15;
    void** eax16;
    void** v17;
    uint32_t eax18;
    void* esp19;
    void** ecx20;
    void** eax21;
    void** eax22;
    void** eax23;
    void* esp24;
    struct s4* ecx25;
    struct s2* v26;
    unsigned char v27;
    signed char* v28;
    struct s32* v29;
    void** v30;
    void* ebp31;
    void** v32;
    void* esi33;
    void** eax34;
    void* esp35;
    int32_t ebp36;
    void** eax37;
    void* esp38;
    struct s4* ecx39;
    struct s2* v40;
    void* esp41;
    unsigned char v42;
    unsigned char* v43;
    signed char* v44;
    struct s32* v45;
    int32_t v46;

    ebp7 = reinterpret_cast<void**>(0);
    esp8 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 96 - 4 - 4 - 4 - 4);
    if (a3) {
        ebp7 = a3 + 14;
    }
    v9 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp8) + 32);
    GetClientRect();
    esp10 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp8) - 4 - 4 - 4 + 4);
    v11 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp10) + 48);
    v12 = a1;
    eax13 = reinterpret_cast<void**>(BeginPaint());
    if (!eax13) {
        addr_4017eb_4:
        EndPaint();
        goto v14;
    } else {
        esi15 = GetDeviceCaps;
        eax16 = reinterpret_cast<void**>(esi15(eax13, 14));
        v17 = eax13;
        eax18 = reinterpret_cast<uint32_t>(esi15(v17, 12, eax13, 14));
        esp19 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp10) - 4 - 4 - 4 + 4 - 4 - 4 - 4 + 4 - 4 - 4 - 4 + 4);
        ecx20 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(a1) * eax18);
        if (reinterpret_cast<signed char>(ecx20) <= reinterpret_cast<signed char>(8) && (ebp7 && (reinterpret_cast<int1_t>(*reinterpret_cast<void**>(ebp7 + 14) == 8) && (eax21 = fun_4014f0(ecx20, eax13, ebp7, v17, 12, eax13, 14, v12, v11, a1, v9), esp19 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp19) - 4 - 4 - 4 + 4 + 8), v11 = eax21, !!eax21)) || (eax21 = reinterpret_cast<void**>(CreateHalftonePalette(eax13, v17, 12, eax13, 14)), esp19 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp19) - 4 - 4 + 4), v12 = eax21, !!eax21))) {
            eax22 = reinterpret_cast<void**>(SelectPalette(eax13, eax21, 0, v17, 12, eax13, 14));
            v12 = eax22;
            RealizePalette(eax13, eax13, eax21, 0, v17, 12, eax13, 14);
            esp19 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp19) - 4 - 4 - 4 - 4 + 4 - 4 - 4 + 4);
        }
        eax23 = reinterpret_cast<void**>(CreateCompatibleDC(eax13, v17, 12, eax13, 14));
        esp24 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp19) - 4 - 4 + 4);
        if (eax23) 
            goto addr_4016b2_8;
    }
    addr_401787_9:
    ecx25 = reinterpret_cast<struct s4*>(reinterpret_cast<int32_t>(esp24) + 56);
    fun_401810(eax13, v26, reinterpret_cast<int32_t>(esp24) + 32, ecx25, eax13, v17, 12, eax13, 14, v12, v11, a1, v9, eax16);
    if (ebp7) {
        ecx25 = reinterpret_cast<struct s4*>(reinterpret_cast<int32_t>(esp24) - 4 - 4 - 4 - 4 - 4 + 4 + 16 + 32);
        v27 = v26->f0;
        fun_401bb0(eax13, ebp7, ecx25, v27, eax13, v17, 12, eax13, 14, v12, v11, a1, v9, eax16);
    }
    fun_401db0(ecx25, eax13, v28, v29, eax13, v17, 12, eax13, 14, v12, v11, a1, v9, eax16);
    addr_4017ce_12:
    if (v12) {
        SelectPalette(eax13, a1, 1, eax13, v17, 12, eax13, 14);
        DeleteObject(v12, eax13, a1, 1, eax13, v17, 12, eax13, 14);
        goto addr_4017eb_4;
    }
    addr_4016b2_8:
    v30 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebp31) - reinterpret_cast<unsigned char>(eax16));
    v32 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esi33) - reinterpret_cast<unsigned char>(v9));
    eax34 = reinterpret_cast<void**>(CreateCompatibleBitmap(eax13, v32));
    esp35 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp24) - 4 - 4 - 4 - 4 + 4);
    if (eax34) {
        ebp36 = SelectObject;
        eax37 = reinterpret_cast<void**>(ebp36(eax23, eax34, eax13, v32));
        esp38 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp35) - 4 - 4 - 4 + 4);
        ecx39 = reinterpret_cast<struct s4*>(reinterpret_cast<int32_t>(esp38) + 56);
        v17 = eax37;
        fun_401810(eax23, v40, reinterpret_cast<int32_t>(esp38) + 32, ecx39, eax23, eax34, eax13, v32, v30, eax13, v17, 12, eax13, 14);
        esp41 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp38) - 4 - 4 - 4 - 4 - 4 + 4 + 16);
        if (v30) {
            ecx39 = reinterpret_cast<struct s4*>(reinterpret_cast<int32_t>(esp41) + 32);
            v42 = *v43;
            fun_401bb0(eax23, v30, ecx39, v42, eax23, eax34, eax13, v32, v30, eax13, v17, 12, eax13, 14);
            esp41 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp41) - 4 - 4 - 4 - 4 - 4 + 4 + 16);
        }
        fun_401db0(ecx39, eax23, v44, v45, eax23, eax34, eax13, v32, v30, eax13, v17, 12, eax13, 14);
        BitBlt(eax13);
        ebp36(eax23, eax16, eax13);
        DeleteObject(eax34, eax23, eax16, eax13);
        esp35 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp41) - 4 - 4 - 4 - 4 + 4 + 12 - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4 - 4 - 4 - 4 + 4 - 4 - 4 + 4);
        ebp7 = eax16;
    }
    DeleteDC(eax23, eax13, v32);
    esp24 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp35) - 4 - 4 + 4);
    if (v46) 
        goto addr_4017ce_12; else 
        goto addr_401787_9;
}

void** g41ee7c = reinterpret_cast<void**>(1);

void** g41ec70 = reinterpret_cast<void**>(0x7a);

void** fun_4160ba(void** ecx, void** a2, void** a3);

void** fun_415e6b(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, int32_t a8, void** a9, void** a10, void** a11, void** a12, ...);

void** fun_413e29(void** ecx, void** a2) {
    void*** ebp3;
    void** v4;
    int1_t zf5;
    int1_t less_or_equal6;
    void** eax7;
    void** eax8;
    void** edx9;
    int32_t eax10;
    void** v11;
    void** v12;
    void** v13;
    void** v14;
    void** ebx15;
    void** ebp16;
    void** eax17;
    void** eax18;

    ebp3 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    v4 = ecx;
    zf5 = g41f3e8 == 0;
    if (!zf5) {
        if (reinterpret_cast<signed char>(a2) < reinterpret_cast<signed char>(0x100)) {
            less_or_equal6 = reinterpret_cast<signed char>(g41ee7c) <= reinterpret_cast<signed char>(1);
            if (less_or_equal6) {
                eax7 = g41ec70;
                eax7 = *reinterpret_cast<void***>(eax7 + reinterpret_cast<unsigned char>(a2) * 2);
                eax8 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax7) & 2);
            } else {
                eax8 = fun_4160ba(ecx, a2, 2);
            }
            if (!eax8) 
                goto addr_413e83_7;
        }
        edx9 = g41ec70;
        eax10 = reinterpret_cast<signed char>(a2) >> 8;
        if (!(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(edx9 + *reinterpret_cast<unsigned char*>(&eax10) * 2) + 1) & 0x80)) {
            v11 = reinterpret_cast<void**>(1);
        } else {
            v11 = reinterpret_cast<void**>(2);
        }
        v12 = reinterpret_cast<void**>(ebp3 + 0xfffffffc);
        v13 = reinterpret_cast<void**>(ebp3 + 8);
        v14 = g41f3e8;
        eax17 = fun_415e6b(v14, 0x200, v13, v11, v12, 3, 0, 1, ebx15, v4, ebp16, __return_address(), v14, 0x200, v13, v11, v12, 3, 0, 1, ebx15, v4, ebp16, __return_address());
        if (!eax17) {
            addr_413e83_7:
            eax18 = a2;
        } else {
            if (!reinterpret_cast<int1_t>(eax17 == 1)) {
                eax18 = reinterpret_cast<void**>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&v4 + 1)) << 8 | static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&v4)));
            } else {
                eax18 = reinterpret_cast<void**>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&v4)));
            }
        }
    } else {
        eax18 = a2;
        if (reinterpret_cast<signed char>(eax18) >= reinterpret_cast<signed char>(97) && reinterpret_cast<signed char>(eax18) <= reinterpret_cast<signed char>(0x7a)) {
            eax18 = eax18 - 32;
        }
    }
    return eax18;
}

void** fun_40b150(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14);

void** g41f288 = reinterpret_cast<void**>(0);

void** g41f284 = reinterpret_cast<void**>(0);

void** g41f2b8 = reinterpret_cast<void**>(0);

int32_t g407b0c = 0x448b5048;

struct s33 {
    signed char[2] pad2;
    unsigned char f2;
    signed char[1] pad4;
    void** f4;
};

void** fun_401300(void** a1, struct s33* a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13);

uint32_t g41f0fc = 0;

struct s34 {
    signed char f0;
    signed char f1;
};

struct s31* g41f270 = reinterpret_cast<struct s31*>(0);

struct s35 {
    signed char f0;
    signed char f1;
};

struct s36 {
    signed char f0;
    signed char f1;
};

struct s37 {
    signed char f0;
    signed char f1;
};

struct s19* fun_40cc30(void** ecx, void** a2, void** a3, void** a4, void** a5);

int32_t GetSystemMetrics = 0x19338;

struct s38 {
    void** f0;
    signed char[3] pad4;
    void** f4;
};

void** g41f348 = reinterpret_cast<void**>(0);

void fun_40b0d0(void** a1);

void** fun_40c510(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16) {
    void** v17;
    void** ecx18;
    void** edx19;
    void** v20;
    void** ebx21;
    void** v22;
    void** esi23;
    void*** esp24;
    void** v25;
    void** edi26;
    void** edi27;
    void** v28;
    void** v29;
    void** v30;
    void** al31;
    void** eax32;
    void** v33;
    void** v34;
    void** v35;
    void** v36;
    void** v37;
    void** v38;
    void** v39;
    void** v40;
    void** v41;
    void** v42;
    void** eax43;
    void** ebx44;
    void** v45;
    void** v46;
    void** v47;
    void** v48;
    void** v49;
    void** v50;
    void** eax51;
    void** v52;
    void** v53;
    void** v54;
    void** v55;
    void** v56;
    void** v57;
    void** v58;
    void** v59;
    void** v60;
    void** ecx61;
    void** v62;
    void** ebp63;
    void** v64;
    void* esp65;
    void** v66;
    void** eax67;
    void** esi68;
    void** v69;
    int32_t v70;
    void** eax71;
    void** v72;
    void** v73;
    void** eax74;
    void** eax75;
    void** edx76;
    void** eax77;
    void*** esp78;
    void** eax79;
    void** ecx80;
    void** edx81;
    void** eax82;
    void** ecx83;
    void** v84;
    void** v85;
    void** eax86;
    uint32_t edi87;
    uint32_t v88;
    void** ebp89;
    uint32_t ecx90;
    uint32_t edx91;
    void** eax92;
    uint32_t esi93;
    int32_t edx94;
    uint32_t ecx95;
    void** eax96;
    int32_t edx97;
    uint32_t ecx98;
    void** eax99;
    int32_t edx100;
    uint32_t ecx101;
    void** eax102;
    int32_t edx103;
    uint32_t edi104;
    uint32_t edx105;
    void** v106;
    int32_t ebx107;
    int32_t ecx108;
    struct s34* eax109;
    void** eax110;
    void* esp111;
    void** v112;
    void** v113;
    void** eax114;
    void** eax115;
    void* esp116;
    void** v117;
    void** v118;
    void** eax119;
    void* esp120;
    void** v121;
    void** v122;
    void** eax123;
    struct s31* edx124;
    struct s31* edi125;
    uint32_t ecx126;
    uint32_t ecx127;
    uint32_t edi128;
    struct s31* eax129;
    uint32_t edx130;
    uint32_t esi131;
    int32_t ecx132;
    uint32_t edx133;
    struct s35* eax134;
    int32_t ecx135;
    uint32_t edx136;
    struct s36* eax137;
    int32_t ecx138;
    uint32_t edx139;
    struct s37* eax140;
    int32_t ecx141;
    uint32_t edi142;
    uint32_t ecx143;
    int32_t ebx144;
    void*** esp145;
    void** v146;
    void** ecx147;
    void** v148;
    void** v149;
    void** eax150;
    void** eax151;
    void** eax152;
    void* esp153;
    void** v154;
    void** v155;
    void** eax156;
    void* esp157;
    void** eax158;
    void** esi159;
    void** v160;
    void** v161;
    void** eax162;
    void** esi163;
    void** edi164;
    void** eax165;
    void** ecx166;
    void** edx167;
    void** al168;
    uint32_t* eax169;
    int32_t edx170;
    void* eax171;
    void* esp172;
    void** v173;
    void** v174;
    void** eax175;
    void** eax176;
    void** ecx177;
    void* esp178;
    void** v179;
    void** v180;
    void** eax181;
    int32_t esi182;
    void** ebx183;
    struct s38* edi184;
    void** v185;
    void** eax186;
    void** ebp187;
    void** eax188;
    void* esp189;
    void** esi190;
    void** v191;
    void** edx192;
    void** v193;
    void** v194;
    void** v195;
    void** v196;
    void** v197;
    void** v198;
    void** v199;
    void** v200;
    void** eax201;
    void** ecx202;
    void** v203;
    void** v204;
    void** v205;
    void** v206;

    v17 = reinterpret_cast<void**>(__return_address());
    ecx18 = g41f36c;
    edx19 = g41f280;
    v20 = ebx21;
    v22 = esi23;
    esp24 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 56 - 4 - 4 - 4);
    v25 = edi26;
    edi27 = reinterpret_cast<void**>(0xffffffff);
    v28 = reinterpret_cast<void**>(0xffffffff);
    v29 = reinterpret_cast<void**>(0);
    v30 = reinterpret_cast<void**>(0xffffffff);
    do {
        al31 = *reinterpret_cast<void***>(ecx18);
        ++ecx18;
        *reinterpret_cast<void***>(edx19) = al31;
        ++edx19;
    } while (al31);
    eax32 = g41f280;
    eax43 = fun_401140(eax32, 0, v25, v22, v20, v33, 0xffffffff, v34, v35, 0xffffffff, 0, v36, 0, v37, v38, v39, v40, v41, v42);
    ebx44 = eax43;
    v45 = ebx44;
    if (reinterpret_cast<int1_t>(ebx44 == 0xffffffff)) {
        return 0;
    }
    eax51 = fun_40b150(ecx18, ebx44, v25, v22, v20, v46, 0xffffffff, v47, v48, 0xffffffff, 0, v49, 0, v50);
    if (!eax51) {
        fun_4013c0(ebx44, v25, v22, v20, v52, 0xffffffff, v53, v54, 0xffffffff, 0, v55, 0, v56, v57, v45, v58, v59, v60, v17);
        return 0;
    }
    ecx61 = g41f288;
    v62 = ebp63;
    fun_401260(ebx44, ecx61, v62, v25, v22, v20, v64);
    esp65 = reinterpret_cast<void*>(esp24 - 4 - 4 - 4 + 4 + 8 - 4 - 4 + 4 + 4 - 4 - 4 - 4 - 4 + 4 + 8);
    *reinterpret_cast<int16_t*>(&v66) = 0;
    while (1) {
        do {
            eax67 = fun_4011c0(ebx44, reinterpret_cast<int32_t>(esp65) + 64, 8, v62, v25);
            esi68 = eax67;
            esp65 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp65) - 4 - 4 - 4 - 4 + 4 + 12);
            v69 = esi68;
            if (esi68) 
                goto addr_40cb61_10;
        } while (static_cast<int1_t>(!v70));
        eax71 = fun_401240(ebx44, v62, v25, v22, v20);
        esp65 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp65) - 4 - 4 + 4 + 4);
        v72 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax71) + reinterpret_cast<unsigned char>(v73));
        if (0) 
            goto addr_40cb2c_13;
        if (0) {
            eax74 = fun_401240(ebx44, v62, v25, v22, v20);
            g41f108 = eax74;
            g41f284 = eax74 + 4;
            eax75 = fun_4011c0(ebx44, 0x41f100, 4, ebx44, v62);
            edx76 = g41f100;
            esi68 = eax75;
            eax77 = g41f2b8;
            v69 = esi68;
            g41a2b0 = edx76;
            g41f104 = reinterpret_cast<void*>(0);
            esp78 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp65) - 4 - 4 + 4 - 4 - 4 - 4 - 4 + 4 + 16 - 4);
            if (!eax77) {
                eax79 = fun_4012c0(ebx44, v62, v25);
                ecx80 = g41f108;
                edx81 = g41f100;
                esp65 = reinterpret_cast<void*>(esp78 - 4 + 4 + 4);
                if (reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(edx81) + reinterpret_cast<unsigned char>(ecx80) + 4) > reinterpret_cast<unsigned char>(eax79)) {
                    addr_40cb2c_13:
                    if (esi68) 
                        break;
                } else {
                    addr_40cb28_17:
                    v29 = reinterpret_cast<void**>(1);
                    goto addr_40cb2c_13;
                }
            } else {
                eax82 = fun_4012c0(ebx44, v62, v25);
                ecx83 = g41f284;
                esp65 = reinterpret_cast<void*>(esp78 - 4 + 4 + 4);
                if (ecx83 != eax82) 
                    goto addr_40cb2c_13;
                goto addr_40cb28_17;
            }
        } else {
            if (1) 
                goto addr_40cb2c_13;
            goto g407b0c;
        }
        addr_40cb30_22:
        if (0) 
            break;
        fun_401260(ebx44, v72, v62, v25, v22, v20, v69);
        esp65 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp65) - 4 - 4 - 4 + 4 + 8);
        if (0) 
            break;
        edi27 = v28;
        continue;
        eax86 = fun_401300(ebx44, reinterpret_cast<int32_t>(esp65) + 64, 0x41f27c, reinterpret_cast<int32_t>(esp65) + 48, v62, v25, v22, v20, v69, v30, v84, v85, v28);
        esp65 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp65) - 4 - 4 - 4 - 4 - 4 + 4 + 16);
        v69 = eax86;
        if (eax86) 
            break;
        edi87 = v88;
        ebp89 = g41f27c;
        ecx90 = g41f0fc;
        edx91 = edi87 >> 2;
        eax92 = ebp89;
        if (edx91) {
            esi93 = edx91;
            do {
                edx94 = 0;
                *reinterpret_cast<void***>(&edx94) = *reinterpret_cast<void***>(eax92);
                ecx95 = (ecx90 >> 31) + ecx90 * 2 + edx94;
                eax96 = eax92 + 1;
                edx97 = 0;
                *reinterpret_cast<void***>(&edx97) = *reinterpret_cast<void***>(eax96);
                ecx98 = (ecx95 >> 31) + ecx95 * 2 + edx97;
                eax99 = eax96 + 1;
                edx100 = 0;
                *reinterpret_cast<void***>(&edx100) = *reinterpret_cast<void***>(eax99);
                ecx101 = (ecx98 >> 31) + ecx98 * 2 + edx100;
                eax102 = eax99 + 1;
                edx103 = 0;
                *reinterpret_cast<void***>(&edx103) = *reinterpret_cast<void***>(eax102);
                ecx90 = (ecx101 >> 31) + ecx101 * 2 + edx103;
                eax92 = eax102 + 1;
                --esi93;
            } while (esi93);
        }
        edi104 = edi87 & 3;
        edx105 = edi104;
        if (edi104) {
            do {
                v106 = ebx44;
                ebx107 = 0;
                *reinterpret_cast<void***>(&ebx107) = *reinterpret_cast<void***>(eax92);
                ebx44 = v106;
                ecx90 = (ecx90 >> 31) + ecx90 * 2 + ebx107;
                ++eax92;
                --edx105;
            } while (edx105);
        }
        g41f0fc = ecx90;
        ecx108 = 0;
        do {
            if (*reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(ebp89 + ecx108 * 4) + 0x7e)) {
                *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(ebp89 + ecx108 * 4) + 0x7e) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(ebp89 + ecx108 * 4) + 0x7e) + reinterpret_cast<unsigned char>(ebp89);
                ebp89 = g41f27c;
            }
            ++ecx108;
        } while (ecx108 < 10);
        eax109 = reinterpret_cast<struct s34*>(0x40100a);
        while (eax109->f0 != -2 || eax109->f1 != -5) {
            eax109 = reinterpret_cast<struct s34*>(&eax109->f1);
        }
        *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(ebp89 + ecx108 * 4) + 0x7e) = reinterpret_cast<int32_t>(eax109 + 1);
        goto addr_40cb30_22;
        eax110 = g41f2b8;
        if (!eax110) {
            esp111 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp65) - 4);
            eax114 = fun_401300(ebx44, reinterpret_cast<int32_t>(esp111) + 68, 0x41f278, 0, v62, v25, v22, v20, v69, v30, v112, v113, v28);
            esi68 = eax114;
            esp65 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp111) - 4 - 4 - 4 - 4 + 4 + 16);
            v69 = esi68;
            goto addr_40cb2c_13;
        }
        eax115 = g41f2b8;
        if (!eax115) {
            if (!v30) {
                esp116 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp65) - 4);
                eax119 = fun_401300(ebx44, reinterpret_cast<int32_t>(esp116) + 68, 0x41f274, 0, v62, v25, v22, v20, v69, v30, v117, v118, v28);
                esi68 = eax119;
                esp65 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp116) - 4 - 4 - 4 - 4 + 4 + 16);
                v69 = esi68;
                v30 = reinterpret_cast<void**>(0xffffffff);
                goto addr_40cb2c_13;
            } else {
                --v30;
                goto addr_40cb2c_13;
            }
        }
        esp120 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp65) - 4);
        eax123 = fun_401300(ebx44, reinterpret_cast<int32_t>(esp120) + 68, 0x41f270, 0, v62, v25, v22, v20, v69, v30, v121, v122, v28);
        edx124 = g41f270;
        esp65 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp120) - 4 - 4 - 4 - 4 + 4 + 16);
        esi68 = eax123;
        v69 = esi68;
        if (!edx124) 
            goto addr_40cb2c_13;
        edi125 = edx124;
        ecx126 = 0xffffffff;
        do {
            if (!ecx126) 
                break;
            --ecx126;
            edi125 = reinterpret_cast<struct s31*>(&edi125->f1);
            ++esi68;
        } while (edi125->f0);
        ecx127 = reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(~ecx126) - 1);
        edi128 = ecx127;
        if (!ecx127) 
            goto addr_40cb2c_13;
        eax129 = edx124;
        edx130 = g41f0fc;
        esi131 = edi128 >> 2;
        if (esi131) {
            do {
                ecx132 = 0;
                *reinterpret_cast<signed char*>(&ecx132) = eax129->f0;
                edx133 = (edx130 >> 31) + edx130 * 2 + ecx132;
                eax134 = reinterpret_cast<struct s35*>(&eax129->f1);
                ecx135 = 0;
                *reinterpret_cast<signed char*>(&ecx135) = eax134->f0;
                edx136 = (edx133 >> 31) + edx133 * 2 + ecx135;
                eax137 = reinterpret_cast<struct s36*>(&eax134->f1);
                ecx138 = 0;
                *reinterpret_cast<signed char*>(&ecx138) = eax137->f0;
                edx139 = (edx136 >> 31) + edx136 * 2 + ecx138;
                eax140 = reinterpret_cast<struct s37*>(&eax137->f1);
                ecx141 = 0;
                *reinterpret_cast<signed char*>(&ecx141) = eax140->f0;
                edx130 = (edx139 >> 31) + edx139 * 2 + ecx141;
                eax129 = reinterpret_cast<struct s31*>(&eax140->f1);
                --esi131;
            } while (esi131);
        }
        edi142 = edi128 & 3;
        ecx143 = edi142;
        if (edi142) {
            do {
                v106 = ebx44;
                ebx144 = 0;
                *reinterpret_cast<signed char*>(&ebx144) = eax129->f0;
                ebx44 = v106;
                edx130 = (edx130 >> 31) + edx130 * 2 + ebx144;
                eax129 = reinterpret_cast<struct s31*>(&eax129->f1);
                --ecx143;
            } while (ecx143);
        }
        esi68 = v69;
        g41f0fc = edx130;
        goto addr_40cb2c_13;
        esp145 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp65) - 4);
        v146 = reinterpret_cast<void**>(0);
        ecx147 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi27) * 4 + 0x41f218);
        addr_40ca25_56:
        eax150 = fun_401300(ebx44, esp145 + 68, ecx147, v146, v62, v25, v22, v20, v69, v30, v148, v149, v28);
        esi68 = eax150;
        esp65 = reinterpret_cast<void*>(esp145 - 4 - 4 - 4 - 4 + 4 + 16);
        v69 = esi68;
        goto addr_40cb2c_13;
        g41f358 = reinterpret_cast<void**>(1);
        eax151 = fun_4011c0(ebx44, 0x41a2a6, 2, v62, v25);
        esi68 = eax151;
        esp65 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp65) - 4 - 4 - 4 - 4 + 4 + 12);
        v69 = esi68;
        if (!esi68) {
            eax152 = fun_4011c0(ebx44, reinterpret_cast<int32_t>(esp65) + 44, 2, v62, v25);
            esi68 = eax152;
            esp65 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp65) - 4 - 4 - 4 - 4 + 4 + 12);
            v69 = esi68;
            goto addr_40cb28_17;
        }
        esp153 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp65) - 4);
        eax156 = fun_401300(ebx44, reinterpret_cast<int32_t>(esp153) + 68, 0x41f26c, 0, v62, v25, v22, v20, v69, v30, v154, v155, v28);
        esi68 = eax156;
        esp65 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp153) - 4 - 4 - 4 - 4 + 4 + 16);
        v69 = esi68;
        goto addr_40cb2c_13;
        esp157 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp65) - 4);
        eax158 = v28 + 1;
        v28 = eax158;
        esi159 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax158) * 4 + 0x41f1d8);
        eax162 = fun_401300(ebx44, reinterpret_cast<int32_t>(esp157) + 68, esi159, 0, v62, v25, v22, v20, v69, v30, v160, v161, v28);
        v69 = eax162;
        if (eax162) 
            break;
        esi163 = *reinterpret_cast<void***>(esi159);
        if (*reinterpret_cast<void***>(esi163 + 10)) {
            *reinterpret_cast<void***>(esi163 + 10) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi163 + 10)) + reinterpret_cast<unsigned char>(esi163));
        }
        if (*reinterpret_cast<void**>(esi163 + 14)) {
            *reinterpret_cast<void**>(esi163 + 14) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(esi163 + 14)) + reinterpret_cast<unsigned char>(esi163));
        }
        if (*reinterpret_cast<void***>(esi163 + 30)) {
            *reinterpret_cast<void***>(esi163 + 30) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi163 + 30)) + reinterpret_cast<unsigned char>(esi163));
        }
        if (*reinterpret_cast<void***>(esi163 + 22)) {
            *reinterpret_cast<void***>(esi163 + 22) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi163 + 22)) + reinterpret_cast<unsigned char>(esi163));
        }
        if (*reinterpret_cast<void***>(esi163 + 26)) {
            *reinterpret_cast<void***>(esi163 + 26) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi163 + 26)) + reinterpret_cast<unsigned char>(esi163));
        }
        if (*reinterpret_cast<void***>(esi163 + 38)) {
            *reinterpret_cast<void***>(esi163 + 38) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi163 + 38)) + reinterpret_cast<unsigned char>(esi163));
        }
        if (*reinterpret_cast<void***>(esi163 + 42)) {
            *reinterpret_cast<void***>(esi163 + 42) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi163 + 42)) + reinterpret_cast<unsigned char>(esi163));
        }
        if (*reinterpret_cast<void***>(esi163 + 46)) {
            *reinterpret_cast<void***>(esi163 + 46) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi163 + 46)) + reinterpret_cast<unsigned char>(esi163));
        }
        edi164 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v28) * 4 + 0x41f198);
        eax165 = fun_402180(v73, 0x104, edi164, v62, v25, v22, v20, v69, v30);
        if (!eax165) 
            goto addr_40cb59_78;
        fun_40cc30(v73, esi163, v62, v25, v22);
        ecx166 = g41f350;
        edx167 = *reinterpret_cast<void***>(edi164);
        esp65 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp157) - 4 - 4 - 4 - 4 + 4 + 16 - 4 - 4 - 4 + 4 + 8 - 4 - 4 + 4 + 4);
        do {
            al168 = *reinterpret_cast<void***>(ecx166);
            ++ecx166;
            *reinterpret_cast<void***>(edx167) = al168;
            ++edx167;
        } while (al168);
        eax169 = reinterpret_cast<uint32_t*>(esi163 + 62);
        edx170 = 10;
        do {
            if (*eax169) {
                *eax169 = *eax169 + reinterpret_cast<unsigned char>(esi163);
            }
            ++eax169;
            --edx170;
        } while (edx170);
        eax171 = reinterpret_cast<void*>(0);
        do {
            if (*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(esi163) + reinterpret_cast<uint32_t>(eax171) + 50) == -1) 
                break;
            eax171 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax171) + 1);
        } while (reinterpret_cast<int32_t>(eax171) < reinterpret_cast<int32_t>(11));
        goto addr_40ca08_88;
        *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax171) + reinterpret_cast<unsigned char>(esi163) + 50) = 10;
        *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax171) + reinterpret_cast<unsigned char>(esi163) + 51) = -1;
        goto addr_40cb30_22;
        addr_40ca08_88:
        goto addr_40cb30_22;
        esp172 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp65) - 4);
        eax175 = fun_401300(ebx44, reinterpret_cast<int32_t>(esp172) + 68, 0x41f264, 0x41f260, v62, v25, v22, v20, v69, v30, v173, v174, v28);
        esi68 = eax175;
        esp65 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp172) - 4 - 4 - 4 - 4 + 4 + 16);
        v69 = esi68;
        goto addr_40cb2c_13;
        eax176 = g41f2b8;
        if (eax176) 
            goto addr_40cb2c_13;
        ecx177 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp65) + 40);
        esp178 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp65) - 4);
        v106 = reinterpret_cast<void**>(0);
        eax181 = fun_401300(ebx44, reinterpret_cast<int32_t>(esp178) + 68, ecx177, 0, v62, v25, v22, v20, v69, v30, v179, v180, v28);
        v69 = eax181;
        if (eax181) 
            break;
        esi182 = GetSystemMetrics;
        ebx183 = *reinterpret_cast<void***>(&g0);
        edi184 = reinterpret_cast<struct s38*>(4);
        v185 = ebx183;
        eax186 = reinterpret_cast<void**>(esi182(0));
        ebp187 = eax186;
        eax188 = reinterpret_cast<void**>(esi182(1, 0));
        esp189 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp178) - 4 - 4 - 4 - 4 + 4 + 16 - 4 - 4 + 4 - 4 - 4 + 4);
        esi190 = reinterpret_cast<void**>(0);
        if (!(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(ebx183) < reinterpret_cast<signed char>(0)) | reinterpret_cast<uint1_t>(ebx183 == 0))) 
            goto addr_40c856_94;
        addr_40c8b9_95:
        fun_413483(ecx177, v28, 1, 0, v62, v25, v22);
        ebx44 = v191;
        esp65 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp189) - 4 - 4 + 4 + 4);
        goto addr_40cb30_22;
        addr_40c856_94:
        while ((ecx177 = edi184->f0, edx192 = edi184->f4, edi184 = reinterpret_cast<struct s38*>(&edi184->f4 + 4), ecx177 != ebp187) || edx192 != eax188) {
            if (v20 == 0xffffffff) 
                goto addr_40c89e_97;
            if (reinterpret_cast<signed char>(ecx177) >= reinterpret_cast<signed char>(ebp187) || reinterpret_cast<signed char>(edx192) >= reinterpret_cast<signed char>(eax188)) {
                if (reinterpret_cast<signed char>(ecx177) < reinterpret_cast<signed char>(v69) && reinterpret_cast<signed char>(edx192) < reinterpret_cast<signed char>(v30) || reinterpret_cast<signed char>(v69) < reinterpret_cast<signed char>(ebp187) && reinterpret_cast<signed char>(v30) < reinterpret_cast<signed char>(eax188)) {
                    addr_40c89e_97:
                    v20 = esi190;
                    v69 = ecx177;
                    v30 = edx192;
                    goto addr_40c8aa_100;
                } else {
                    addr_40c8aa_100:
                    ecx177 = reinterpret_cast<void**>(0);
                    ++esi190;
                    if (reinterpret_cast<signed char>(esi190) >= reinterpret_cast<signed char>(0)) 
                        goto addr_40c8b3_101;
                }
            } else {
                if (reinterpret_cast<signed char>(ecx177) <= reinterpret_cast<signed char>(v69)) 
                    goto addr_40c8aa_100;
                if (reinterpret_cast<signed char>(edx192) <= reinterpret_cast<signed char>(v30)) 
                    goto addr_40c8aa_100;
                goto addr_40c89e_97;
            }
        }
        v20 = esi190;
        goto addr_40c8b9_95;
        addr_40c8b3_101:
        goto addr_40c8b9_95;
        ecx147 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi27) * 4 + 0x41f158);
        esp145 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp65) - 4);
        v146 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi27) * 4 + 0x41f118);
        goto addr_40ca25_56;
    }
    addr_40cb61_10:
    fun_4013c0(ebx44, v62, v25, v22, v20, v69, v30, v193, v194, v28, v29, v106, 0, v195, v185, v45, v72, v66, v196);
    if (!v69) {
        g41f348 = v28 + 1;
        fun_40b0d0(0);
        if (v29) {
            return 1;
        } else {
            eax201 = fun_403a00(7, 31, v25, v22, v20, v69, v30, v197, v198, v28, v29, v106, 0, v199, v185, v45, v72, v66, v200, v17, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
            if (eax201 && (*reinterpret_cast<void***>(eax201) && (ecx202 = g41f360, !ecx202))) {
                fun_4039c0(eax201, 64, v25, v22, v20, v69, v30, v203, v204, v28, v29, v106, 0, v205, v185, v45, v72, v66, v206, v17, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
            }
            return 0;
        }
    } else {
        return 0;
    }
    addr_40cb59_78:
    v69 = reinterpret_cast<void**>(12);
    goto addr_40cb61_10;
}

void** g41f330 = reinterpret_cast<void**>(0);

int32_t LoadIconA = 0x19670;

int32_t LoadCursorA = 0x19662;

int32_t GetStockObject = 0x1983a;

int32_t RegisterClassA = 0x19650;

int32_t fun_40c2e0() {
    void** eax1;
    int32_t eax2;
    int32_t eax3;
    int32_t eax4;

    eax1 = g41f330;
    eax2 = reinterpret_cast<int32_t>(LoadIconA(eax1, 0x320, 3, 0x40af10, 0, 0, eax1));
    eax3 = reinterpret_cast<int32_t>(LoadCursorA(0, 0x7f00, eax1, 0x320, 3, 0x40af10, 0, eax2, eax1));
    eax4 = reinterpret_cast<int32_t>(GetStockObject(5, 0, 0x7f00, eax1, 0x320, 3, 0x40af10, eax3, eax2, eax1));
    RegisterClassA(reinterpret_cast<int32_t>(__zero_stack_offset()) - 40 - 4 - 4 - 4 + 4 - 4 - 4 - 4 + 4 - 4 - 4 + 4, 5, 0, 0x7f00, eax1, 0x320, 3, 0x40af10, eax4, 0);
    goto "InstItClass";
}

void** fun_405480(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11);

void** g41a9e8 = reinterpret_cast<void**>(32);

void** g41a9ec = reinterpret_cast<void**>(0);

void** g41a9e0 = reinterpret_cast<void**>(34);

void** g41a9e4 = reinterpret_cast<void**>(69);

void** g41a9e6 = reinterpret_cast<void**>(0);

void** g41a2b8 = reinterpret_cast<void**>(1);

void** g41a9f0 = reinterpret_cast<void**>(32);

int32_t fun_40b7c0(int32_t a1, int32_t a2, void** a3, void** a4, void** a5, void** a6) {
    void** eax7;
    void** v8;
    void** ebx9;
    void** v10;
    void** ebp11;
    void** v12;
    void** esi13;
    void** v14;
    void** edi15;
    void** v16;
    void** v17;
    void** v18;
    void** v19;
    void** v20;
    void** eax21;
    void** ebx22;
    void** ecx23;
    void** v24;
    void** v25;
    void** v26;
    void** v27;
    void** v28;
    void** v29;
    void** v30;
    void** v31;
    void** v32;
    void** v33;
    void** v34;
    void** v35;
    void** v36;
    void** eax37;
    void** esi38;
    void* esp39;
    void** v40;
    void** v41;
    void** v42;
    void** v43;
    void** v44;
    void** v45;
    void** v46;
    void** v47;
    void** v48;
    void** v49;
    void** v50;
    void** v51;
    void** v52;
    void** v53;
    void** v54;
    void** v55;
    void** v56;
    void** v57;
    void** v58;
    void** v59;
    void** v60;
    void** v61;
    void** eax62;
    void** edx63;
    void** v64;
    void** v65;
    void** eax66;
    int32_t v67;
    void** eax68;
    void* esp69;
    void* v70;
    void** v71;
    void** edi72;
    void** eax73;
    void** v74;
    void* esp75;
    void** ecx76;
    void** eax77;
    void* esp78;
    void** v79;
    void* esp80;
    void** v81;
    void** v82;
    void** v83;
    void** v84;
    void** v85;
    void** v86;
    void** v87;
    void** v88;
    void** v89;
    void** v90;
    void** v91;
    void** v92;
    void** v93;
    void** v94;
    void** v95;
    void** v96;
    void** v97;
    void** v98;
    void** v99;
    void** v100;
    void** v101;
    void** v102;
    void** v103;
    void** v104;
    void** v105;
    void** v106;
    void** v107;
    void** v108;
    void** v109;
    void** v110;
    void** v111;
    void** v112;
    uint32_t ecx113;
    void** edi114;
    void** edx115;
    void** edi116;
    uint32_t ecx117;
    void** al118;
    void** edi119;
    uint32_t ecx120;
    void*** esi121;
    void** edi122;
    uint32_t edx123;
    uint32_t ecx124;
    void** edi125;
    uint32_t ecx126;
    uint32_t ecx127;
    void** edi128;
    uint32_t ecx129;
    void** eax130;
    void** edi131;
    void** cx132;
    void** dl133;
    void** eax134;
    void** edx135;
    void** edi136;
    void*** esp137;
    void** v138;
    int32_t ebx139;
    void** eax140;
    void* esp141;
    void** eax142;
    void* esp143;
    signed char* edi144;
    uint32_t ecx145;
    int32_t esi146;
    int32_t ecx147;
    int32_t eax148;
    void* esp149;
    int32_t eax150;
    int32_t eax151;
    int32_t v152;
    int32_t esi153;
    void* esp154;
    int32_t eax155;
    void* esp156;
    void* v157;
    int32_t eax158;
    int32_t v159;
    void** edx160;
    uint32_t ecx161;
    void** edi162;
    int32_t v163;
    void** edi164;
    uint32_t ecx165;
    void** ecx166;

    eax7 = g41f0cc;
    v8 = ebx9;
    v10 = ebp11;
    v12 = esi13;
    v14 = edi15;
    eax21 = fun_405480(eax7, "_inst%d.exe", v14, v12, v10, v8, v16, v17, v18, v19, v20);
    ebx22 = eax21;
    if (ebx22 == 0xffffffff) 
        goto addr_40bb57_2;
    ecx23 = g41f36c;
    eax37 = fun_401140(ecx23, 0, v14, v12, v10, v8, v24, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35, v36);
    esi38 = eax37;
    esp39 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 0x24c - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4 + 8 - 4 - 4 - 4 + 4 + 8);
    if (esi38 == 0xffffffff) {
        fun_4013c0(ebx22, v14, v12, v10, v8, v40, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51, v52, v53);
        goto addr_40bb57_2;
    }
    if (!a2) {
        eax62 = fun_40b150(ecx23, esi38, v14, v12, v10, v8, v54, v55, v56, v57, v58, v59, v60, v61);
        esp39 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp39) - 4 - 4 + 4 + 4);
        if (!eax62) 
            goto addr_40bb57_2;
        edx63 = g41f288;
        fun_401260(esi38, edx63, v14, v12, v10, v8, v64);
        esp39 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp39) - 4 - 4 - 4 + 4 + 8);
        *reinterpret_cast<int16_t*>(&v65) = 0;
        do {
            addr_40b844_8:
            eax66 = fun_4011c0(esi38, reinterpret_cast<int32_t>(esp39) + 20, 8, v14, v12);
            esp39 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp39) - 4 - 4 - 4 - 4 + 4 + 12);
            if (eax66) 
                goto addr_40bb57_2;
            if (v67) 
                goto addr_40b86b_10;
            if (1) 
                goto addr_40b844_8;
            addr_40b86b_10:
            eax68 = fun_401240(esi38, v14, v12, v10, v8);
            esp69 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp39) - 4 - 4 + 4 + 4);
            if (0) 
                break;
            fun_401260(esi38, reinterpret_cast<unsigned char>(eax68) + reinterpret_cast<uint32_t>(v70), v14, v12, v10, v8, v71);
            esp39 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp69) - 4 - 4 - 4 + 4 + 8);
        } while (1);
        goto addr_40b892_13;
    } else {
        edi72 = g41f284;
        goto addr_40b8ad_15;
    }
    eax73 = fun_401240(esi38, v14, v12, v10, v8);
    esp39 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp69) - 4 - 4 + 4 + 4);
    edi72 = eax73 + 4;
    addr_40b8ad_15:
    if (!edi72) {
        addr_40bb57_2:
        return 0;
    } else {
        fun_401260(esi38, 0, v14, v12, v10, v8, v74);
        esp75 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp39) - 4 - 4 - 4 + 4);
        ecx76 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp75) + 24);
        eax77 = fun_402180(ecx76, edi72, ecx76, esi38, 0, v14, v12, v10, v8);
        esp78 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp75) - 4 - 4 - 4 + 4 + 16);
        if (eax77) {
            fun_4011c0(esi38, v79, edi72, v14, v12);
            fun_401200(ebx22, v79, edi72, esi38, v79, edi72, v14);
            esp80 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp78) - 4 - 4 - 4 - 4 + 4 - 4 - 4 - 4 - 4 + 4);
            fun_402200(ecx76, reinterpret_cast<int32_t>(esp80) + 40, ebx22, v79, edi72, esi38, v79, edi72, v14, v12, v10, v8, v81, v65, v82, v83, v84, v85, v86, v87);
            esp78 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp80) - 4 - 4 + 4 + 28);
        }
        fun_4013c0(esi38, v14, v12, v10, v8, v88, v65, v89, v90, v91, v92, v93, v94, v95, v96, v97, v98, v99, v100);
        fun_4013c0(ebx22, esi38, v14, v12, v10, v8, v101, v65, v102, v103, v104, v105, v106, v107, v108, v109, v110, v111, v112);
        ecx113 = 0xffffffff;
        if (a2) 
            goto addr_40b911_20;
    }
    edi114 = g41f0cc;
    do {
        if (!ecx113) 
            break;
        --ecx113;
        ++edi114;
    } while (*reinterpret_cast<void***>(edi114));
    edx115 = g41a9e8;
    edi116 = edi114 - 1;
    ecx117 = 0xffffffff;
    *reinterpret_cast<void***>(edi116) = edx115;
    al118 = g41a9ec;
    *reinterpret_cast<void***>(edi116 + 4) = al118;
    edi119 = g41f36c;
    do {
        if (!ecx117) 
            break;
        --ecx117;
        ++edi119;
    } while (*reinterpret_cast<void***>(edi119));
    ecx120 = ~ecx117;
    esi121 = reinterpret_cast<void***>(reinterpret_cast<unsigned char>(edi119) - ecx120);
    edi122 = g41f0cc;
    edx123 = ecx120;
    ecx124 = 0xffffffff;
    do {
        if (!ecx124) 
            break;
        --ecx124;
        ++edi122;
        ++esi121;
    } while (*reinterpret_cast<void***>(edi122));
    edi125 = edi122 - 1;
    ecx126 = edx123 >> 2;
    while (ecx126) {
        --ecx126;
        *reinterpret_cast<void***>(edi125) = *esi121;
        edi125 = edi125 + 4;
        esi121 = esi121 + 4;
    }
    ecx127 = edx123 & 3;
    while (ecx127) {
        --ecx127;
        *reinterpret_cast<void***>(edi125) = *esi121;
        ++edi125;
        ++esi121;
    }
    edi128 = g41f0cc;
    ecx129 = 0xffffffff;
    do {
        if (!ecx129) 
            break;
        --ecx129;
        ++edi128;
    } while (*reinterpret_cast<void***>(edi128));
    eax130 = g41a9e0;
    edi131 = edi128 - 1;
    *reinterpret_cast<void***>(edi131) = eax130;
    cx132 = g41a9e4;
    *reinterpret_cast<void***>(edi131 + 4) = cx132;
    dl133 = g41a9e6;
    *reinterpret_cast<void***>(edi131 + 6) = dl133;
    WinExec();
    goto addr_40bb3e_40;
    addr_40b911_20:
    eax134 = g41f34c;
    edx135 = g41f0cc;
    edi136 = edx135;
    esp137 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp78) - 4 - 4 + 4 - 4 - 4 + 4 + 8 - 4);
    v138 = eax134 + 1;
    do {
        if (!ecx113) 
            break;
        --ecx113;
        ++edi136;
    } while (*reinterpret_cast<void***>(edi136));
    ebx139 = wsprintfA;
    ebx139(reinterpret_cast<int32_t>(~ecx113) - 1 + reinterpret_cast<unsigned char>(edx135), " /B%d /DEL", v138);
    eax140 = g41a2b8;
    esp141 = reinterpret_cast<void*>(esp137 - 4 - 4 - 4 + 4 + 12);
    if (!eax140) 
        goto addr_40b943_44;
    addr_40b959_45:
    eax142 = g41f0cc;
    GetShortPathNameA(eax142);
    esp143 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp141) - 4 - 4 - 4 - 4 + 4);
    edi144 = reinterpret_cast<signed char*>(0x41a314);
    ecx145 = 0xffffffff;
    esi146 = 0;
    do {
        if (!ecx145) 
            break;
        --ecx145;
        ++edi144;
        ++esi146;
    } while (*edi144);
    ecx147 = reinterpret_cast<int32_t>(~ecx145) - 2;
    if (!(reinterpret_cast<uint1_t>(ecx147 < 0) | reinterpret_cast<uint1_t>(ecx147 == 0))) {
        do {
            ++esi146;
        } while (esi146 < ecx147);
    }
    eax148 = reinterpret_cast<int32_t>(RegCreateKeyExA());
    esp149 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp143) - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4);
    if (!eax148 || (eax150 = reinterpret_cast<int32_t>(RegCreateKeyA(0x80000001, reinterpret_cast<int32_t>(esp149) + 84, reinterpret_cast<int32_t>(esp149) + 16)), esp149 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp149) - 4 - 4 - 4 - 4 + 4), !eax150)) {
        eax151 = g41f0c0;
        if (eax151 >= 100) {
            addr_40ba9d_52:
            RegCloseKey();
            goto v152;
        } else {
            esi153 = RegQueryValueExA;
            do {
                esp154 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp149) - 4 - 4);
                ebx139(reinterpret_cast<int32_t>(esp154) + 40, "%s%3.3d", "ICLaunch", eax151);
                eax155 = g41f0c0;
                esp156 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp154) - 4 - 4 - 4 + 4 + 16);
                g41f0c0 = eax155 + 1;
                v157 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp156) + 0x158);
                eax158 = reinterpret_cast<int32_t>(esi153());
                esp149 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp156) - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4);
                if (eax158) 
                    break;
                eax151 = g41f0c0;
            } while (eax151 < 100);
            goto addr_40ba5b_56;
        }
    } else {
        addr_40bb3e_40:
        goto v159;
    }
    edx160 = g41f0cc;
    ecx161 = 0xffffffff;
    edi162 = edx160;
    do {
        if (!ecx161) 
            break;
        --ecx161;
        ++edi162;
    } while (*reinterpret_cast<void***>(edi162));
    RegSetValueExA(v157, reinterpret_cast<int32_t>(esp149) - 4 - 4 - 4 - 4 + 48, 0, 1, edx160, reinterpret_cast<int32_t>(~ecx161) - 1);
    goto addr_40ba9d_52;
    addr_40ba5b_56:
    RegCloseKey();
    goto v163;
    addr_40b943_44:
    edi164 = g41f0cc;
    ecx165 = 0xffffffff;
    do {
        if (!ecx165) 
            break;
        --ecx165;
        ++edi164;
    } while (*reinterpret_cast<void***>(edi164));
    ecx166 = g41a9f0;
    *reinterpret_cast<void***>(edi164 + 0xffffffff) = ecx166;
    goto addr_40b959_45;
    addr_40b892_13:
    return 0;
}

int32_t g41f0a0 = 0;

void fun_402c30() {
    int32_t eax1;

    eax1 = g41f0a0;
    if (eax1) {
        eax1(1);
    }
    return;
}

void** g41f2d4 = reinterpret_cast<void**>(0);

void** g41f2d0 = reinterpret_cast<void**>(0);

int32_t AdjustWindowRectEx = 0x195b0;

struct s39 {
    signed char[13238272] pad13238272;
    void** f13238272;
};

int32_t g41f2dc = 0;

int32_t g41f2d8 = 0;

int32_t CreateDialogParamA = 0x194c2;

int32_t ShowWindow = 0x19416;

int32_t UpdateWindow = 0x194fc;

int32_t fun_40c360(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15) {
    void** eax16;
    void** v17;
    void** ebp18;
    void** v19;
    void** esi20;
    void** ebx21;
    void** edi22;
    void** ecx23;
    void** eax24;
    void** v25;
    void** ecx26;
    void** esi27;
    void** edx28;
    void** eax29;
    void** edx30;
    void* edx31;
    void** ebx32;
    void** eax33;
    int32_t edx34;
    struct s39* eax35;
    void** edi36;
    void** edx37;
    void** eax38;
    void** eax39;
    void** eax40;
    void** eax41;

    eax16 = g41f27c;
    v17 = ebp18;
    v19 = esi20;
    ebx21 = reinterpret_cast<void**>(0);
    edi22 = reinterpret_cast<void**>(0);
    ecx23 = *reinterpret_cast<void***>(eax16);
    if (*reinterpret_cast<unsigned char*>(&ecx23) & 2) {
        eax24 = reinterpret_cast<void**>(0x2cf0000);
        if (!(*reinterpret_cast<unsigned char*>(&ecx23) & 16)) {
            v25 = reinterpret_cast<void**>(0x82000000);
            eax24 = reinterpret_cast<void**>(0x82000000);
        }
        if (*reinterpret_cast<unsigned char*>(&ecx23) & 8) {
            eax24 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax24) | 0x1000000);
        }
        ecx26 = g41f2d4;
        esi27 = g41f2d0;
    } else {
        edx28 = *reinterpret_cast<void***>(eax16 + 16);
        v25 = reinterpret_cast<void**>(0xca0000);
        AdjustWindowRectEx(reinterpret_cast<int32_t>(__zero_stack_offset()) - 20 - 4 - 4 - 4 - 4 - 4 - 4 + 28, 0xca0000, 0, 0);
        eax29 = g41f2d4;
        __asm__("cdq ");
        edx30 = reinterpret_cast<void**>(0);
        *reinterpret_cast<unsigned char*>(&edx30) = __undefined();
        edx31 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(edx30 - 1) & reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(eax29) - reinterpret_cast<unsigned char>(ebx32) + reinterpret_cast<unsigned char>(v19) - reinterpret_cast<unsigned char>(edx28)) >> 1));
        eax33 = g41f2d0;
        __asm__("cdq ");
        edx34 = 0;
        *reinterpret_cast<unsigned char*>(&edx34) = __undefined();
        edi22 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v19) + reinterpret_cast<uint32_t>(edx31));
        eax35 = reinterpret_cast<struct s39*>(reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(reinterpret_cast<uint32_t>(eax33 - 0xca0000) + reinterpret_cast<unsigned char>(v17) - reinterpret_cast<uint32_t>(edx31)) >> 1) & reinterpret_cast<uint32_t>(edx34 - 1));
        ecx26 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebx32) + reinterpret_cast<uint32_t>(edx31));
        ebx21 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v17) + reinterpret_cast<uint32_t>(eax35));
        esi27 = reinterpret_cast<void**>(&eax35->f13238272);
        eax24 = edi36;
        v19 = edi22;
        v17 = ebx21;
    }
    edx37 = g41f330;
    fun_403a00(7, 0, eax24, edi22, ebx21, reinterpret_cast<unsigned char>(ecx26) - reinterpret_cast<unsigned char>(edi22), reinterpret_cast<unsigned char>(esi27) - reinterpret_cast<unsigned char>(ebx21), 0, 0, edx37, 0, edi36, v19, v17, ebx32, v25, 0, 0, ecx26, esi27, __return_address(), a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
    eax38 = reinterpret_cast<void**>(CreateWindowExA());
    g41f334 = eax38;
    if (eax38) {
        eax39 = g41f2d4;
        __asm__("cdq ");
        g41f2dc = reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(eax39) - reinterpret_cast<unsigned char>(edx37)) >> 1;
        eax40 = g41f2d0;
        __asm__("cdq ");
        g41f2d8 = reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(eax40) - reinterpret_cast<unsigned char>(edx37)) >> 1;
        eax41 = reinterpret_cast<void**>(CreateDialogParamA());
        g41f338 = eax41;
        if (eax41) {
            ShowWindow();
            UpdateWindow();
            goto "InstItClass";
        } else {
            DestroyWindow();
            goto eax24;
        }
    } else {
        goto 0;
    }
}

int32_t fun_404ff0(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27);

void fun_405310(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21) {
    void** v22;
    int16_t dx23;
    void* eax24;
    void** v25;
    void** ebx26;
    void** v27;
    void** esi28;
    void** v29;
    void** edi30;
    void** edx31;
    void** ecx32;
    void** eax33;
    void** v34;
    int32_t eax35;
    int32_t eax36;
    void* eax37;
    void** edi38;
    int1_t zf39;
    int32_t eax40;
    int1_t zf41;
    int1_t zf42;

    v22 = reinterpret_cast<void**>(__return_address());
    dx23 = g41a2a6;
    eax24 = g41f374;
    v25 = ebx26;
    v27 = esi28;
    v29 = edi30;
    do {
        if (dx23 == -1) {
            edx31 = g41f258;
            ecx32 = reinterpret_cast<void**>(0);
            *reinterpret_cast<signed char*>(&ecx32) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax24) + reinterpret_cast<unsigned char>(edx31) + 50);
            eax33 = ecx32;
        } else {
            eax33 = reinterpret_cast<void**>(0);
            *reinterpret_cast<int16_t*>(&eax33) = dx23;
        }
        g41f29c = eax33;
        v34 = *reinterpret_cast<void***>(reinterpret_cast<unsigned char>(eax33) * 4 + 0x41a3a8);
        eax35 = fun_404ff0(ecx32, v34, v29, v27, v25, v22, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21);
        dx23 = g41a2a6;
        if (dx23 != -1) 
            break;
        eax36 = eax35 - 1;
        if (!eax36) {
            eax37 = g41f374;
            edi38 = g41f258;
            eax24 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax37) + 1);
            g41f374 = eax24;
            *reinterpret_cast<signed char*>(&ecx32) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax24) + reinterpret_cast<unsigned char>(edi38) + 50);
            if (*reinterpret_cast<signed char*>(&ecx32) == -1) 
                goto addr_405411_8;
            if (*reinterpret_cast<signed char*>(&ecx32) != 6) 
                continue;
            zf39 = reinterpret_cast<int1_t>(g41f29c == 5);
            if (zf39) 
                continue;
            if (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi38 + 2)) & 32)) 
                continue;
            ecx32 = g41f364;
            if (ecx32) 
                continue;
        } else {
            eax40 = eax36 - 1;
            if (!eax40) {
                zf41 = reinterpret_cast<int1_t>(g41f29c == 10);
                if (zf41) 
                    goto addr_405411_8;
                eax24 = g41f374;
                ecx32 = g41f258;
                if (*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax24) + reinterpret_cast<unsigned char>(ecx32) + 50) == 10) 
                    continue; else 
                    goto addr_4053a5_16;
            } else {
                eax24 = g41f374;
                if (!(eax40 - 0x413) && !(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(eax24) < reinterpret_cast<int32_t>(0)) | reinterpret_cast<uint1_t>(eax24 == 0))) {
                    eax24 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax24) - 1);
                    g41f374 = eax24;
                    continue;
                }
            }
        }
        fun_40a230(ecx32, 1, v29, v27, v25, v22, a1, a2, a3, a4, a5, a6, a7, a8);
        dx23 = g41a2a6;
        eax24 = g41f374;
        continue;
        do {
            addr_4053a5_16:
            eax24 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax24) + 1);
            g41f374 = eax24;
        } while (*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(ecx32) + reinterpret_cast<uint32_t>(eax24) + 50) != 10);
        zf42 = reinterpret_cast<int1_t>(g41f29c == 0xffffffff);
    } while (!zf42);
    goto addr_40540d_22;
    addr_405417_23:
    return;
    addr_405411_8:
    g41f29c = reinterpret_cast<void**>(0xffffffff);
    goto addr_405417_23;
    addr_40540d_22:
    return;
}

int32_t fun_403ab0(void** a1, void** a2) {
    void** v3;
    void** ecx4;
    void** eax5;
    void** v6;
    void** esi7;
    void** v8;
    void** edi9;
    void** esi10;
    uint32_t ecx11;
    void** ecx12;

    v3 = reinterpret_cast<void**>(__return_address());
    ecx4 = g41f110;
    eax5 = g41f10c;
    v6 = esi7;
    v8 = edi9;
    esi10 = reinterpret_cast<void**>(0);
    if (!ecx4) {
        addr_403afa_2:
        return 0;
    } else {
        do {
            ecx11 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax5 + 8)) & 0x7000000;
            if (!ecx11) 
                continue;
            if (ecx11 == 0x1000000) 
                goto addr_403ae2_5;
            if (ecx11 != 0x2000000) 
                break;
            addr_403ae2_5:
            if (reinterpret_cast<signed char>(*reinterpret_cast<void***>(eax5 + 8)) < reinterpret_cast<signed char>(0)) 
                break;
            ++esi10;
            eax5 = fun_403b10(eax5, v8, v6, v3, a1, a2);
            ecx12 = g41f110;
        } while (reinterpret_cast<unsigned char>(esi10) < reinterpret_cast<unsigned char>(ecx12));
        goto addr_403afa_2;
    }
    return 1;
}

void** g41a390 = reinterpret_cast<void**>(0x88);

void** g41a690 = reinterpret_cast<void**>(34);

void** g41a692 = reinterpret_cast<void**>(0);

void** fun_403b20(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14) {
    void** v15;
    void** eax16;
    void** v17;
    void** edi18;
    void** edi19;
    void** v20;
    void** v21;
    void** v22;
    void** ebx23;
    void** v24;
    void** ebp25;
    void** v26;
    void** esi27;
    void** ecx28;
    uint32_t esi29;
    int1_t zf30;
    void** eax31;
    void** edx32;
    void** eax33;
    void** v34;
    void** ecx35;
    void** eax36;
    void** esi37;
    void** ebp38;
    void** v39;
    struct s19* eax40;
    void** edi41;
    void** eax42;
    void** v43;
    void** edx44;
    uint32_t ecx45;
    void** edi46;
    void** ecx47;
    void** ebx48;
    void** eax49;
    int32_t eax50;
    void** ecx51;
    void** v52;
    void** eax53;
    void** esi54;
    void** edx55;
    void** eax56;
    void** ecx57;
    void** edx58;
    void** eax59;
    void** ecx60;
    void** eax61;
    void** edi62;
    uint32_t ecx63;
    void** ecx64;
    void** v65;
    void** eax66;
    void** ebx67;
    signed char* eax68;
    uint32_t edx69;
    void** edi70;
    uint32_t ecx71;
    uint32_t ecx72;
    void*** esi73;
    uint32_t edx74;
    void** edi75;
    uint32_t ecx76;
    void** edi77;
    uint32_t ecx78;
    uint32_t ecx79;
    uint32_t ecx80;
    void** edi81;
    void** edi82;
    void** dl83;
    uint32_t ecx84;
    void** edi85;
    uint32_t ecx86;
    void*** esi87;
    uint32_t edx88;
    void** edi89;
    uint32_t ecx90;
    void** edi91;
    uint32_t ecx92;
    uint32_t ecx93;
    void** ax94;
    void** eax95;

    v15 = reinterpret_cast<void**>(__return_address());
    eax16 = g41f358;
    v17 = edi18;
    if (!eax16 && (eax16 = g41f110, edi19 = g41f10c, v20 = reinterpret_cast<void**>(0), v21 = edi19, !!eax16)) {
        v22 = ebx23;
        v24 = ebp25;
        v26 = esi27;
        while (1) {
            ecx28 = *reinterpret_cast<void***>(edi19 + 8);
            esi29 = reinterpret_cast<unsigned char>(ecx28) >> 27 & 1;
            if (!esi29) {
                zf30 = reinterpret_cast<int1_t>(a2 == 2);
            } else {
                zf30 = reinterpret_cast<int1_t>(a2 == 1);
            }
            if (zf30) 
                goto addr_403dfd_7;
            if (!reinterpret_cast<int1_t>((reinterpret_cast<unsigned char>(ecx28) & 0x7000000) == a1)) 
                goto addr_403dfd_7;
            if (reinterpret_cast<unsigned char>(a1) > reinterpret_cast<unsigned char>(0x3000000)) {
                if (!reinterpret_cast<int1_t>(a1 == 0x4000000)) 
                    goto addr_403be8_11;
                if (esi29) 
                    goto addr_403be8_11; else 
                    goto addr_403bd3_13;
            }
            if (a1 == 0x3000000) {
                addr_403bd3_13:
                if (!a3 || (eax31 = g41f35c, !eax31)) {
                    addr_403be8_11:
                    fun_4092d0(edi19, v26, v24, v22);
                    if (!esi29) {
                        edx32 = g41f350;
                        fun_402150(ecx28, edx32, v26, v24, v22, v17, ecx28, edx32, v26, v24, v22, v17);
                        eax33 = g41f350;
                        v34 = eax33;
                        SetCurrentDirectoryA(v34);
                        ecx35 = g41f350;
                        fun_402110(ecx35, ecx35, v34, v26, v24, v22);
                        eax36 = fun_403e30(edi19, 8, ecx35, v34);
                        esi37 = eax36;
                        v20 = esi37;
                        ebp38 = esi37;
                        if (*reinterpret_cast<void***>(esi37)) {
                            eax40 = fun_408290(ecx35, 0, esi37, 0xffdc, v34, v26, v24, v22, v17, v21, v20, v39, v15, a1, a2, a3, a4);
                            edi41 = reinterpret_cast<void**>(&eax40->f1);
                            eax42 = fun_413320(ecx35, edi41, 0, esi37, 0xffdc, v34, v26, v24, v22, v17, v21, v20);
                            ebp38 = eax42;
                            fun_408290(ecx35, ebp38, esi37, edi41, edi41, 0, esi37, 0xffdc, v34, v26, v24, v22, v17, v21, v20, v43, v15);
                        }
                        edx44 = g41f0d0;
                        ecx45 = 0xffffffff;
                        edi46 = edx44;
                        do {
                            if (!ecx45) 
                                break;
                            --ecx45;
                            ++edi46;
                            ++esi37;
                        } while (*reinterpret_cast<void***>(edi46));
                        ecx47 = reinterpret_cast<void**>(~ecx45 - 1);
                        ebx48 = ecx47;
                        if (reinterpret_cast<signed char>(ebx48) > reinterpret_cast<signed char>(3)) 
                            goto addr_403cd4_21;
                    } else {
                        eax49 = g41f0d0;
                        eax50 = fun_401100(eax49, v26);
                        if (eax50) {
                            ecx51 = g41f0d0;
                            eax53 = fun_4131d0(ecx51, ecx51, 46, v26, v24, v22, v17, v21, v20, v52);
                            esi54 = eax53;
                            if (!esi54) {
                                esi54 = g41a390;
                            }
                            edx55 = g41f0cc;
                            eax56 = g41f0d0;
                            GetShortPathNameA(eax56, edx55, 0x104);
                            ecx57 = g41f0cc;
                            fun_4026d0(ecx57, esi54, eax56, edx55, 0x104, v26);
                            goto addr_403dfd_7;
                        }
                    }
                } else {
                    addr_403dfd_7:
                    edx58 = v20 + 1;
                    v20 = edx58;
                    eax59 = fun_403b10(edi19, v26, v24, v22, v17, v21);
                    v21 = eax59;
                    eax16 = g41f110;
                    if (reinterpret_cast<unsigned char>(edx58) < reinterpret_cast<unsigned char>(eax16)) 
                        goto addr_403b55_26; else 
                        break;
                }
            } else {
                if (a1 == 0x1000000) 
                    goto addr_403ba3_28;
                if (!reinterpret_cast<int1_t>(a1 == 0x2000000)) 
                    goto addr_403be8_11;
                addr_403ba3_28:
                if (!a3) 
                    goto addr_403bbe_30; else 
                    goto addr_403bab_31;
            }
            addr_403dd4_32:
            ecx60 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(v17 + 8)) >> 28 & 1);
            fun_402c40(edx44, ebp38, ecx60, v34, v26, v24);
            addr_403dec_33:
            if (ebp38 != esi37) {
                fun_413483(ecx60, ebp38, v34, v26, v24, v22, v17, ecx60, ebp38, v34, v26, v24, v22, v17);
            }
            edi19 = v17;
            goto addr_403dfd_7;
            addr_403cd4_21:
            eax61 = fun_412fb0(ecx47, reinterpret_cast<unsigned char>(edx44) + reinterpret_cast<unsigned char>(ebx48) + 0xfffffffc, ".msi", v34, v26, v24, v22);
            if (eax61) {
                addr_403dce_36:
                edx44 = g41f0d0;
                goto addr_403dd4_32;
            } else {
                edi62 = ebp38;
                ecx63 = 0xffffffff;
                do {
                    if (!ecx63) 
                        break;
                    --ecx63;
                    ++edi62;
                    ++esi37;
                } while (*reinterpret_cast<void***>(edi62) != eax61);
                ecx64 = reinterpret_cast<void**>(~ecx63 - 1);
                eax66 = fun_413320(ecx64, reinterpret_cast<unsigned char>(ecx64) + reinterpret_cast<unsigned char>(ebx48) + 7, v34, v26, v24, v22, v17, v21, v20, v65, v15, a1);
                ebx67 = eax66;
                if (!ebx67) 
                    goto addr_403dce_36;
            }
            eax68 = "/i \"";
            edx69 = reinterpret_cast<unsigned char>(ebx67) - reinterpret_cast<uint32_t>("/i \"");
            do {
                *reinterpret_cast<signed char*>(&ecx64) = *eax68;
                *reinterpret_cast<signed char*>(edx69 + reinterpret_cast<uint32_t>(eax68)) = *reinterpret_cast<signed char*>(&ecx64);
                ++eax68;
            } while (*reinterpret_cast<signed char*>(&ecx64));
            edi70 = g41f0d0;
            ecx71 = 0xffffffff;
            do {
                if (!ecx71) 
                    break;
                --ecx71;
                ++edi70;
            } while (*reinterpret_cast<void***>(edi70));
            ecx72 = ~ecx71;
            esi73 = reinterpret_cast<void***>(reinterpret_cast<unsigned char>(edi70) - ecx72);
            edx74 = ecx72;
            edi75 = ebx67;
            ecx76 = 0xffffffff;
            do {
                if (!ecx76) 
                    break;
                --ecx76;
                ++edi75;
                ++esi73;
            } while (*reinterpret_cast<void***>(edi75));
            edi77 = edi75 - 1;
            ecx78 = edx74 >> 2;
            while (ecx78) {
                --ecx78;
                *reinterpret_cast<void***>(edi77) = *esi73;
                edi77 = edi77 + 4;
                esi73 = esi73 + 4;
            }
            ecx79 = edx74 & 3;
            while (ecx79) {
                --ecx79;
                *reinterpret_cast<void***>(edi77) = *esi73;
                ++edi77;
                ++esi73;
            }
            ecx80 = 0xffffffff;
            edi81 = ebx67;
            if (!*reinterpret_cast<void***>(ebp38)) 
                goto addr_403d59_56;
            do {
                if (!ecx80) 
                    break;
                --ecx80;
                ++edi81;
            } while (*reinterpret_cast<void***>(edi81));
            *reinterpret_cast<void***>(&ecx80) = g41a690;
            edi82 = edi81 - 1;
            *reinterpret_cast<void***>(edi82) = *reinterpret_cast<void***>(&ecx80);
            dl83 = g41a692;
            ecx84 = 0xffffffff;
            *reinterpret_cast<void***>(edi82 + 2) = dl83;
            edi85 = ebp38;
            do {
                if (!ecx84) 
                    break;
                --ecx84;
                ++edi85;
            } while (*reinterpret_cast<void***>(edi85));
            ecx86 = ~ecx84;
            esi87 = reinterpret_cast<void***>(reinterpret_cast<unsigned char>(edi85) - ecx86);
            edx88 = ecx86;
            edi89 = ebx67;
            ecx90 = 0xffffffff;
            do {
                if (!ecx90) 
                    break;
                --ecx90;
                ++edi89;
                ++esi87;
            } while (*reinterpret_cast<void***>(edi89));
            edi91 = edi89 - 1;
            ecx92 = edx88 >> 2;
            while (ecx92) {
                --ecx92;
                *reinterpret_cast<void***>(edi91) = *esi87;
                edi91 = edi91 + 4;
                esi87 = esi87 + 4;
            }
            ecx93 = edx88 & 3;
            while (ecx93) {
                --ecx93;
                *reinterpret_cast<void***>(edi91) = *esi87;
                ++edi91;
                ++esi87;
            }
            addr_403da6_72:
            ecx60 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(v17 + 8)) >> 28 & 1);
            fun_402c40("msiexec", ebx67, ecx60, v34, v26, v24);
            fun_413483(ecx60, ebx67, "msiexec", ebx67, ecx60, v34, v26);
            esi37 = v20;
            goto addr_403dec_33;
            addr_403d59_56:
            do {
                if (!ecx80) 
                    break;
                --ecx80;
                ++edi81;
            } while (*reinterpret_cast<void***>(edi81));
            ax94 = g41a694;
            *reinterpret_cast<void***>(edi81 + 0xffffffff) = ax94;
            goto addr_403da6_72;
            addr_403b55_26:
            edi19 = v21;
            continue;
            addr_403bbe_30:
            if (reinterpret_cast<signed char>(ecx28) >= reinterpret_cast<signed char>(0)) 
                goto addr_403dfd_7;
            goto addr_403be8_11;
            addr_403bab_31:
            eax95 = g41f35c;
            if (!eax95) 
                goto addr_403be8_11;
            if (reinterpret_cast<signed char>(ecx28) < reinterpret_cast<signed char>(0)) 
                goto addr_403dfd_7;
            goto addr_403be8_11;
        }
    }
    return eax16;
}

void fun_40b2d0(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17) {
    void** v18;
    void** v19;
    void** esi20;
    void** eax21;
    void** esi22;
    void** v23;
    void** v24;
    void** eax25;

    v18 = reinterpret_cast<void**>(__return_address());
    v19 = esi20;
    fun_402200(ecx, 0x41f278, v19, v18, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);
    fun_402200(ecx, 0x41f274, 0x41f278, v19, v18, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
    fun_402200(ecx, 0x41f264, 0x41f274, 0x41f278, v19, v18, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
    fun_402200(ecx, 0x41f26c, 0x41f264, 0x41f274, 0x41f278, v19, v18, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
    fun_402200(ecx, 0x41f270, 0x41f26c, 0x41f264, 0x41f274, 0x41f278, v19, v18, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
    fun_402200(ecx, 0x41f268, 0x41f270, 0x41f26c, 0x41f264, 0x41f274, 0x41f278, v19, v18, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
    fun_402200(ecx, 0x41f27c, 0x41f268, 0x41f270, 0x41f26c, 0x41f264, 0x41f274, 0x41f278, v19, v18, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
    eax21 = g41f348;
    esi22 = reinterpret_cast<void**>(0);
    if (!(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(eax21) < reinterpret_cast<signed char>(0)) | reinterpret_cast<uint1_t>(eax21 == 0))) {
        do {
            v23 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi22) * 4 + 0x41f218);
            fun_402200(ecx, v23, v19, v18, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);
            ecx = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi22) * 4 + 0x41f1d8);
            fun_402200(ecx, ecx, v23, v19, v18, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
            v24 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi22) * 4 + 0x41f198);
            fun_402200(ecx, v24, ecx, v23, v19, v18, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
            fun_402200(ecx, reinterpret_cast<unsigned char>(esi22) * 4 + 0x41f158, v24, ecx, v23, v19, v18, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
            eax25 = g41f348;
            ++esi22;
        } while (reinterpret_cast<signed char>(esi22) < reinterpret_cast<signed char>(eax25));
    }
    return;
}

int32_t g41f2c8 = 0;

void** fun_405a00(void** a1, void** a2, void** a3);

void fun_402eb0(void** a1);

int32_t OleUninitialize = 0x199e8;

void fun_40c260(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18) {
    int32_t eax19;

    fun_402200(ecx, 0x41f36c, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
    fun_402200(ecx, 0x41f280, 0x41f36c, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);
    fun_402200(ecx, 0x41f350, 0x41f280, 0x41f36c, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
    fun_402200(ecx, 0x41f0d0, 0x41f350, 0x41f280, 0x41f36c, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
    fun_402200(ecx, 0x41f0cc, 0x41f0d0, 0x41f350, 0x41f280, 0x41f36c, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
    fun_402200(ecx, 0x41f354, 0x41f0cc, 0x41f0d0, 0x41f350, 0x41f280, 0x41f36c, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
    fun_402200(ecx, 0x41f0c8, 0x41f354, 0x41f0cc, 0x41f0d0, 0x41f350, 0x41f280, 0x41f36c, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
    fun_402200(ecx, 0x41f0c4, 0x41f0c8, 0x41f354, 0x41f0cc, 0x41f0d0, 0x41f350, 0x41f280, 0x41f36c, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
    eax19 = g41f2c8;
    if (eax19) {
        FreeLibrary(eax19, __return_address());
    }
    fun_405a00(__return_address(), a2, a3);
    fun_402eb0(__return_address());
    goto OleUninitialize;
}

void** fun_405a00(void** a1, void** a2, void** a3) {
    void** v4;
    void** ecx5;
    void** v6;
    void** esi7;
    void* esi8;
    void** v9;
    void** eax10;

    v4 = reinterpret_cast<void**>(__return_address());
    ecx5 = g41f0bc;
    if (ecx5) {
        v6 = esi7;
        esi8 = reinterpret_cast<void*>(0);
        do {
            if (!*reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esi8) + reinterpret_cast<unsigned char>(ecx5))) 
                break;
            if (*reinterpret_cast<void***>(reinterpret_cast<int32_t>(esi8) + reinterpret_cast<unsigned char>(ecx5) + 4)) {
                v9 = *reinterpret_cast<void***>(reinterpret_cast<int32_t>(esi8) + reinterpret_cast<unsigned char>(ecx5) + 4);
                fun_413483(ecx5, v9, v6, v4, a1, a2, a3);
                ecx5 = g41f0bc;
            }
            esi8 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esi8) + 8);
        } while (reinterpret_cast<int32_t>(esi8) < 0x190);
        eax10 = fun_413483(ecx5, ecx5, v6, v4, a1, a2, a3);
        g41f0bc = reinterpret_cast<void**>(0);
    }
    return eax10;
}

int32_t g41f0b8 = 0;

int32_t g41f0a4 = 0;

void fun_402eb0(void** a1) {
    int32_t eax2;
    int32_t eax3;

    eax2 = g41f0b8;
    if (eax2) {
        DeleteObject(eax2);
    }
    eax3 = g41f0a4;
    if (eax3) {
        FreeLibrary(eax3);
        g41f0a4 = 0;
    }
    return;
}

void** fun_401300(void** a1, struct s33* a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13) {
    void** ebp14;
    void** eax15;
    int1_t zf16;
    void** v17;
    void** edi18;
    void** esi19;
    void** eax20;
    void** ebp21;
    void** ebx22;
    void** eax23;
    void** ecx24;
    void** edx25;
    void** eax26;
    void** eax27;
    void** ecx28;
    int32_t eax29;

    ebp14 = reinterpret_cast<void**>(0);
    eax15 = a2->f4;
    zf16 = (a2->f2 & 1) == 0;
    v17 = eax15;
    if (!zf16) {
        eax20 = fun_4011c0(a1, reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4 + 24, 4, edi18, esi19);
        ebp14 = eax20;
        eax15 = v17;
    }
    if (a4) {
        *reinterpret_cast<void***>(a4) = eax15;
    }
    if (!ebp14) {
        eax23 = fun_402180(a4, eax15, a3, edi18, esi19, ebp21, ebx22, __return_address(), a1);
        if (eax23) {
            ecx24 = a2->f4;
            if (!(a2->f2 & 1)) {
                edx25 = *reinterpret_cast<void***>(a3);
                eax26 = fun_4011c0(a1, edx25, ecx24, edi18, esi19);
                if (eax26) {
                    fun_402200(ecx24, a3, edi18, esi19, ebp21, ebx22, __return_address(), a1, v17, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
                }
                return eax26;
            } else {
                eax27 = *reinterpret_cast<void***>(a3);
                ecx28 = ecx24 - 4;
                eax29 = fun_4038d0(eax27, a1, v17, ecx28, edi18);
                if (eax29) {
                    fun_402200(ecx28, a3, edi18, esi19, ebp21, ebx22, __return_address(), a1, v17, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
                    return 31;
                }
            }
        } else {
            return 5;
        }
    }
    return ebp14;
}

void fun_40cf20(void** ecx, void** a2);

int32_t GetPrivateProfileStringA = 0x19272;

struct s19* fun_40cc30(void** ecx, void** a2, void** a3, void** a4, void** a5) {
    void** v6;
    void** eax7;
    void** v8;
    void** ebx9;
    void** v10;
    void** ebp11;
    void** v12;
    void** esi13;
    void** esi14;
    void*** esp15;
    void** v16;
    void** edi17;
    void** eax18;
    void** v19;
    void** eax20;
    void** ecx21;
    void** edx22;
    void** al23;
    void** ecx24;
    uint32_t eax25;
    int32_t edi26;
    void** ebx27;
    void** ecx28;
    void** eax29;
    void** ecx30;
    uint32_t eax31;
    void* v32;
    int32_t ebp33;
    int32_t eax34;
    void** eax35;
    void** eax36;
    void** v37;
    void** v38;
    struct s19* eax39;
    void** esi40;
    void** v41;
    int32_t v42;
    int32_t eax43;
    void** v44;
    void** eax45;
    void** eax46;
    void** v47;
    int32_t v48;
    int32_t eax49;
    void** v50;
    void** eax51;
    void** al52;
    void** eax53;
    void** al54;
    void** v55;
    void** v56;
    struct s19* eax57;
    void** edi58;
    void** v59;
    void** eax60;
    void** edx61;
    void** ebx62;
    void** v63;
    void** v64;
    void** ecx65;
    void** edx66;
    void** al67;
    void** eax68;
    void** ecx69;
    void** edx70;
    int32_t eax71;
    void** eax72;
    void** edi73;
    void** edx74;
    int32_t eax75;
    void** ecx76;
    void* v77;
    void* v78;
    void** edx79;
    void** esp80;
    void* v81;
    void** ecx82;
    void* v83;
    int32_t v84;
    int32_t eax85;
    int32_t edi86;

    v6 = reinterpret_cast<void**>(__return_address());
    eax7 = g41f0cc;
    v8 = ebx9;
    v10 = ebp11;
    v12 = esi13;
    esi14 = a2;
    *reinterpret_cast<void***>(eax7) = reinterpret_cast<void**>(0);
    esp15 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 16 - 4 - 4 - 4 - 4);
    v16 = edi17;
    eax18 = *reinterpret_cast<void***>(esi14 + 30);
    v19 = reinterpret_cast<void**>(0);
    if (eax18) {
        eax20 = fun_412fb0(ecx, eax18, "#parent#", v16, v12, v10, v8);
        esp15 = esp15 - 4 - 4 - 4 + 4 + 8;
        if (!eax20) {
            v19 = reinterpret_cast<void**>(1);
        } else {
            ecx21 = *reinterpret_cast<void***>(esi14 + 30);
            edx22 = g41f350;
            do {
                al23 = *reinterpret_cast<void***>(ecx21);
                ++ecx21;
                *reinterpret_cast<void***>(edx22) = al23;
                ++edx22;
            } while (al23);
        }
    }
    if (!*reinterpret_cast<void***>(esi14 + 22)) {
        addr_40cd9d_8:
        ecx24 = g41f0cc;
        if (*reinterpret_cast<void***>(ecx24)) 
            goto addr_40ce44_9;
    } else {
        eax25 = *reinterpret_cast<uint32_t*>(esi14 + 18);
        edi26 = g41a2c4;
        if (eax25 < 20) {
            edi26 = *reinterpret_cast<int32_t*>(eax25 * 4 + 0x41a2c0);
        }
        ebx27 = reinterpret_cast<void**>(0);
        if (eax25 == 4 && (ecx28 = *reinterpret_cast<void***>(esi14 + 26), eax29 = fun_413210(ecx28, ecx28, 92, v16, v12, v10, v8), ebx27 = eax29, esp15 = esp15 - 4 - 4 - 4 + 4 + 8, !!ebx27)) {
            *reinterpret_cast<void***>(ebx27) = reinterpret_cast<void**>(0);
        }
        ecx30 = g41f2ec;
        eax31 = 0;
        if (ecx30 && reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi14 + 1)) & 64) {
            eax31 = 0x100;
        }
        v32 = reinterpret_cast<void*>(esp15 + 36);
        ebp33 = RegOpenKeyExA;
        eax34 = reinterpret_cast<int32_t>(ebp33());
        esp15 = esp15 - 4 - 4 - 4 - 4 - 4 - 4 + 4;
        if (eax34) 
            goto addr_40cd39_17; else 
            goto addr_40ccf3_18;
    }
    eax35 = *reinterpret_cast<void***>(esi14 + 38);
    if (!eax35 || (!*reinterpret_cast<void***>(esi14 + 42) || !*reinterpret_cast<void***>(esi14 + 46))) {
        addr_40ce3b_20:
        if (!*reinterpret_cast<void***>(ecx24)) {
            addr_40cef8_21:
            eax36 = g41f350;
            eax39 = fun_408290(ecx24, eax36, eax36, 0x104, v16, v12, v10, v8, v37, v19, 0, v38, v6, a2, a3, a4, a5);
            return eax39;
        } else {
            addr_40ce44_9:
            esi40 = ecx24;
            if (!reinterpret_cast<int1_t>(*reinterpret_cast<void***>(esi40) == 34)) {
                addr_40ce71_22:
                eax43 = fun_413518(ecx24, esi40, v16, v12, v10, v8, v41, ecx24, esi40, v16, v12, v10, v8, v42);
                if (!eax43 || (eax45 = fun_4131d0(ecx24, esi40, 92, v16, v12, v10, v8, v44, v19, 0), !!eax45) && ((ecx24 = eax45 + 1, eax46 = fun_413210(ecx24, ecx24, 46, v16, v12, v10, v8), !!eax46) && (*reinterpret_cast<void***>(eax45) = reinterpret_cast<void**>(0), eax49 = fun_413518(ecx24, esi40, v16, v12, v10, v8, v47, ecx24, esi40, v16, v12, v10, v8, v48), eax49 == 0))) {
                    if (*reinterpret_cast<void***>(esi40)) {
                        if (v19 && (eax51 = fun_4131d0(ecx24, esi40, 92, v16, v12, v10, v8, v50, v19, 0), !!eax51)) {
                            *reinterpret_cast<void***>(eax51) = reinterpret_cast<void**>(0);
                        }
                        ecx24 = g41f350;
                        do {
                            al52 = *reinterpret_cast<void***>(esi40);
                            ++esi40;
                            *reinterpret_cast<void***>(ecx24) = al52;
                            ++ecx24;
                        } while (al52);
                        eax53 = g41f350;
                        if (*reinterpret_cast<void***>(eax53)) {
                            fun_40cf20(ecx24, eax53);
                            goto addr_40cef8_21;
                        }
                    }
                } else {
                    *reinterpret_cast<void***>(esi40) = reinterpret_cast<void**>(0);
                    goto addr_40cef8_21;
                }
            } else {
                al54 = *reinterpret_cast<void***>(esi40 + 1);
                ++esi40;
                ecx24 = esi40;
                if (al54 == 34) {
                    addr_40ce66_32:
                    if (!reinterpret_cast<int1_t>(*reinterpret_cast<void***>(ecx24) == 34)) {
                        --esi40;
                        goto addr_40ce71_22;
                    } else {
                        *reinterpret_cast<void***>(ecx24) = reinterpret_cast<void**>(0);
                        goto addr_40ce71_22;
                    }
                } else {
                    do {
                        if (!al54) 
                            goto addr_40ce66_32;
                        al54 = *reinterpret_cast<void***>(ecx24 + 1);
                        ++ecx24;
                    } while (!reinterpret_cast<int1_t>(al54 == 34));
                }
            }
        }
    } else {
        eax57 = fun_408290(ecx24, 0, eax35, 0xffdc, v16, v12, v10, v8, v55, v19, 0, v56, v6, a2, a3, a4, a5);
        edi58 = reinterpret_cast<void**>(&eax57->f1);
        eax60 = fun_413320(ecx24, edi58, 0, eax35, 0xffdc, v16, v12, v10, v8, v59, v19, 0);
        edx61 = *reinterpret_cast<void***>(esi14 + 38);
        ebx62 = eax60;
        fun_408290(ecx24, ebx62, edx61, edi58, edi58, 0, eax35, 0xffdc, v16, v12, v10, v8, v63, v19, 0, v64, v6);
        ecx65 = g41f350;
        edx66 = g41f0cc;
        do {
            al67 = *reinterpret_cast<void***>(ecx65);
            ++ecx65;
            *reinterpret_cast<void***>(edx66) = al67;
            ++edx66;
        } while (al67);
        eax68 = g41f0cc;
        ecx69 = *reinterpret_cast<void***>(esi14 + 46);
        edx70 = *reinterpret_cast<void***>(esi14 + 42);
        eax71 = reinterpret_cast<int32_t>(GetPrivateProfileStringA(edx70, ecx69, 0x41f384, eax68, 0x104, ebx62));
        if (eax71) 
            goto addr_40ce2c_40; else 
            goto addr_40ce24_41;
    }
    *reinterpret_cast<void***>(ecx24) = reinterpret_cast<void**>(0);
    goto addr_40ce71_22;
    addr_40ce2c_40:
    fun_413483(ecx69, ebx62, edx70, ecx69, 0x41f384, eax68, 0x104, ecx69, ebx62, edx70, ecx69, 0x41f384, eax68, 0x104);
    ecx24 = g41f0cc;
    goto addr_40ce3b_20;
    addr_40ce24_41:
    eax72 = g41f0cc;
    *reinterpret_cast<void***>(eax72) = reinterpret_cast<void**>(0);
    goto addr_40ce2c_40;
    addr_40cd39_17:
    if (*reinterpret_cast<uint32_t*>(esi14 + 18) == 4) {
        edi73 = *reinterpret_cast<void***>(esi14 + 26);
        if (ebx27) {
            edi73 = ebx27 + 1;
        }
        edx74 = *reinterpret_cast<void***>(esi14 + 22);
        eax75 = reinterpret_cast<int32_t>(ebp33(0x80000001, edx74, 0));
        esp15 = esp15 - 4 - 4 - 4 - 4 - 4 - 4 + 4;
        if (!eax75) {
            ecx76 = g41f0cc;
            v77 = reinterpret_cast<void*>(esp15 + 16);
            v78 = reinterpret_cast<void*>(esp15 - 4 + 32);
            RegQueryValueExA(v32, edi73, 0, v78, ecx76, v77, 0x80000001, edx74, 0);
            RegCloseKey(0x20019, v32, edi73, 0, v78, ecx76, v77, 0x80000001, edx74, 0);
        }
    }
    addr_40cd96_47:
    if (ebx27) {
        *reinterpret_cast<void***>(ebx27) = reinterpret_cast<void**>(92);
        goto addr_40cd9d_8;
    }
    addr_40ccf3_18:
    edx79 = g41f0cc;
    esp80 = reinterpret_cast<void**>(esp15 - 4);
    v81 = reinterpret_cast<void*>(esp15 + 16);
    ecx82 = *reinterpret_cast<void***>(esi14 + 26);
    v83 = reinterpret_cast<void*>(esp80 + 8);
    v32 = reinterpret_cast<void*>(0x104);
    eax85 = reinterpret_cast<int32_t>(RegQueryValueExA(v84, ecx82, 0, v83, edx79, v81));
    edi86 = 1;
    if (eax85) {
        edi86 = edi26;
    }
    RegCloseKey(eax31 | 0x20019, v84, ecx82, 0, v83, edx79, v81);
    esp15 = reinterpret_cast<void***>(esp80 - 1 - 1 - 1 - 1 - 1 - 1 + 1 - 1 - 1 + 1);
    if (edi86) 
        goto addr_40cd96_47; else 
        goto addr_40cd39_17;
}

void** fun_413ef5(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6);

void fun_40cf20(void** ecx, void** a2) {
    void** esp3;
    void** v4;
    void** ebx5;
    void** ebx6;
    void** v7;
    void** ebp8;
    void** v9;
    void** esi10;
    void** v11;
    void** edi12;
    uint32_t ecx13;
    void* esp14;
    signed char v15;
    void** ecx16;
    void** esi17;
    void** eax18;
    int32_t ebp19;
    void** ebx20;
    void* esp21;
    uint32_t ecx22;
    uint32_t ecx23;
    void** edx24;
    void** v25;
    uint32_t ecx26;
    void*** esp27;
    void** v28;
    void** ecx29;
    void*** esp30;
    void** edi31;
    void** v32;
    void* esp33;
    void** v34;
    void** v35;
    void** eax36;
    void* esp37;
    void* edi38;
    void** v39;
    void** eax40;
    void** ax41;
    uint32_t ecx42;
    void** v43;
    void** eax44;
    void* edi45;
    void* edx46;
    void** cl47;
    void** ecx48;
    int32_t eax49;
    signed char* ecx50;
    void* esi51;
    signed char v52;
    signed char* eax53;
    void* edx54;
    void* v55;
    signed char v56;
    int32_t v57;

    esp3 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 0x244);
    v4 = ebx5;
    ebx6 = a2;
    v7 = ebp8;
    v9 = esi10;
    v11 = edi12;
    fun_413ef5(ecx, ebx6, esp3, 0, 0, 0);
    ecx13 = 0xffffffff;
    esp14 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp3 - 4) - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4 + 20);
    do {
        if (!ecx13) 
            break;
        --ecx13;
    } while (v15);
    ecx16 = reinterpret_cast<void**>(~ecx13 - 1);
    esi17 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx16) + reinterpret_cast<unsigned char>(ebx6));
    if (reinterpret_cast<int1_t>(*reinterpret_cast<void***>(esi17) == 92)) {
        do {
            ++esi17;
        } while (*reinterpret_cast<void***>(esi17 + 1) == 92);
    }
    eax18 = fun_413210(ecx16, esi17, 92, v11, v9, v7, v4);
    ebp19 = FindFirstFileA;
    ebx20 = eax18;
    esp21 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp14) - 4 - 4 - 4 + 4 + 8);
    if (!ebx20) {
        addr_40d00d_7:
        ecx22 = 0xffffffff;
    } else {
        do {
            ecx23 = 0xffffffff;
            edx24 = ebx20;
            do {
                if (!ecx23) 
                    break;
                --ecx23;
                ++esi17;
            } while (*reinterpret_cast<signed char*>(&v25));
            *reinterpret_cast<void***>(&ecx23) = g41a5e0;
            v25 = *reinterpret_cast<void***>(&ecx23);
            ecx26 = 0xffffffff;
            esp27 = reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp21) - 4);
            v28 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx24) - reinterpret_cast<unsigned char>(esi17));
            do {
                if (!ecx26) 
                    break;
                --ecx26;
                ++esi17;
            } while (*reinterpret_cast<signed char*>(&v25));
            ecx29 = reinterpret_cast<void**>(~ecx26 - 1);
            esp30 = esp27 - 4;
            edi31 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp30) + reinterpret_cast<unsigned char>(ecx29) + 24);
            fun_413750(ecx29, edi31, esi17, v28, v11, v9, v7, v4, v32);
            esp33 = reinterpret_cast<void*>(esp30 - 4 - 4 + 4 + 12);
            v34 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp33) + 0x114);
            v35 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp33) + 16);
            *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(edi31) - reinterpret_cast<unsigned char>(esi17) + reinterpret_cast<unsigned char>(ebx20)) = 0;
            eax36 = reinterpret_cast<void**>(ebp19());
            esp37 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp33) - 4 - 4 - 4 + 4);
            if (eax36 == 0xffffffff) 
                goto addr_40d0a3_15;
            ecx16 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp37) + 0x140);
            edi38 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(edi31) - (reinterpret_cast<uint32_t>(esp37) + 0x140));
            do {
                *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(edi38) + reinterpret_cast<unsigned char>(ecx16)) = v39;
                ++ecx16;
            } while (v39);
            FindClose(eax36);
            esi17 = ebx20 + 1;
            eax40 = fun_413210(ecx16, esi17, 92, eax36, v35, v34, v11);
            ebx20 = eax40;
            esp21 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp37) - 4 - 4 + 4 - 4 - 4 - 4 + 4 + 8);
        } while (ebx20);
        goto addr_40d00d_7;
    }
    do {
        if (!ecx22) 
            break;
        --ecx22;
        ++esi17;
    } while (*reinterpret_cast<signed char*>(&v25));
    ax41 = g41a5e0;
    ecx42 = 0xffffffff;
    v43 = ax41;
    do {
        if (!ecx42) 
            break;
        --ecx42;
        ++esi17;
    } while (*reinterpret_cast<signed char*>(&v43));
    eax44 = esi17;
    edi45 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp21) + (reinterpret_cast<int32_t>(~ecx42) - 1) + 16);
    edx46 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edi45) - reinterpret_cast<unsigned char>(esi17));
    do {
        cl47 = *reinterpret_cast<void***>(eax44);
        *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(edx46) + reinterpret_cast<unsigned char>(eax44)) = cl47;
        ++eax44;
    } while (cl47);
    ecx48 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp21) + 16);
    fun_402150(ecx48, ecx48, v11, v9, v7, v4);
    eax49 = reinterpret_cast<int32_t>(ebp19());
    esp37 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp21) - 4 - 4 + 4 + 4 - 4 - 4 - 4 + 4);
    if (eax49 != -1) {
        ecx50 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esp37) + 0x140);
        esi51 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edi45) - (reinterpret_cast<uint32_t>(esp37) + 0x140));
        do {
            *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi51) + reinterpret_cast<uint32_t>(ecx50)) = v52;
            ++ecx50;
        } while (v52);
        FindClose(eax49);
        esp37 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp37) - 4 - 4 + 4);
        eax53 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esp37) + 16);
        edx54 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(v55) - (reinterpret_cast<uint32_t>(esp37) + 16));
        do {
            *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edx54) + reinterpret_cast<uint32_t>(eax53)) = v56;
            ++eax53;
        } while (v56);
    }
    addr_40d0a3_15:
    goto v57;
}

unsigned char fun_40d220(void** a1, void*** a2, void** a3, void*** a4);

void fun_40d860(struct s17* a1) {
    void*** v2;
    void*** esi3;
    struct s17* esi4;
    void** v5;
    void** edi6;
    uint32_t ecx7;
    void** eax8;
    void** edx9;
    unsigned char cl10;
    void*** edi11;
    unsigned char eax12;
    void*** edx13;
    void** eax14;
    uint32_t ecx15;
    uint32_t ebp16;
    void** eax17;
    void** edx18;
    unsigned char eax19;
    void** eax20;
    unsigned char eax21;
    void*** edx22;
    void** eax23;
    uint32_t ecx24;
    uint32_t ebp25;
    void** eax26;
    void** edx27;
    void** eax28;
    unsigned char eax29;
    void*** edx30;
    void** eax31;
    uint32_t ecx32;
    uint32_t ebp33;
    void** eax34;
    void** edx35;
    void** eax36;
    unsigned char eax37;
    void*** edx38;
    void** eax39;
    uint32_t ecx40;
    uint32_t ebp41;
    void** eax42;
    unsigned char eax43;
    void*** edx44;
    void** eax45;
    uint32_t ecx46;
    uint32_t edi47;
    void** eax48;
    uint32_t ecx49;
    void** eax50;
    void** edx51;
    unsigned char cl52;
    void*** edi53;
    unsigned char eax54;
    void** edx55;
    uint32_t ecx56;
    uint32_t ebp57;
    int1_t zf58;
    void** ecx59;
    void** ecx60;
    void** edx61;
    void** eax62;
    unsigned char eax63;
    void** eax64;
    unsigned char eax65;
    void** edx66;
    uint32_t ecx67;
    uint32_t ebp68;
    int1_t zf69;
    void** ecx70;
    void** ecx71;
    void** edx72;
    void** eax73;
    unsigned char eax74;
    void** eax75;
    unsigned char eax76;
    void** edx77;
    uint32_t ecx78;
    uint32_t ebp79;
    int1_t zf80;
    void** ecx81;
    void** ecx82;
    void** edx83;
    void** eax84;
    unsigned char eax85;
    void** eax86;
    unsigned char eax87;
    void*** edx88;
    void** eax89;
    uint32_t ecx90;
    uint32_t ebp91;
    int1_t zf92;
    void** eax93;
    void** eax94;
    void** ebp95;
    void** edx96;
    unsigned char eax97;
    void** edx98;
    void*** edi99;
    uint32_t ecx100;
    uint32_t ebp101;
    int1_t zf102;
    void** ecx103;
    uint32_t edx104;
    void** ebp105;
    void** eax106;

    v2 = esi3;
    esi4 = a1;
    v5 = edi6;
    if (!esi4->f16) {
        while (esi4->f0->f20) {
            if (esi4->f12) {
                *esi4->f0->f16 = esi4->f8;
                ecx7 = 0;
                *reinterpret_cast<unsigned char*>(&ecx7) = esi4->f8;
                eax8 = esi4->f12 - 1;
                esi4->f3168 = *reinterpret_cast<uint32_t*>((esi4->f3168 >> 24 ^ ecx7) * 4 + 0x41aa68) ^ esi4->f3168 << 8;
                esi4->f12 = eax8;
                esi4->f0->f16 = esi4->f0->f16 + 1;
                esi4->f0->f20 = esi4->f0->f20 - 1;
                esi4->f0->f24 = esi4->f0->f24 + 1;
                if (esi4->f0->f24) 
                    continue;
                esi4->f0->f28 = esi4->f0->f28 + 1;
                continue;
            }
            if (esi4->f1088 == esi4->f64064 + 1) 
                break;
            edx9 = esi4->f56;
            cl10 = esi4->f60;
            edi11 = &esi4->f1092;
            esi4->f12 = reinterpret_cast<void**>(1);
            esi4->f8 = cl10;
            eax12 = fun_40d220(edx9, edi11, v5, v2);
            edx13 = esi4->f3156;
            *reinterpret_cast<unsigned char*>(&a1) = eax12;
            eax14 = esi4->f56;
            ecx15 = 0;
            *reinterpret_cast<signed char*>(&ecx15) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edx13) + (reinterpret_cast<unsigned char>(eax14) >> 1));
            ebp16 = 0;
            *reinterpret_cast<unsigned char*>(&ebp16) = esi4->f3152[reinterpret_cast<unsigned char>(eax14) * 2];
            eax17 = esi4->f1088 + 1;
            esi4->f56 = reinterpret_cast<void**>((ecx15 >> reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax14) & 1) << 2) & 15) << 16 | ebp16);
            edx18 = esi4->f64064 + 1;
            esi4->f1088 = eax17;
            if (eax17 == edx18) 
                continue;
            eax19 = reinterpret_cast<unsigned char>(reinterpret_cast<uint32_t>(a1) & 0xff);
            if (eax19 == esi4->f60) 
                goto addr_40dd75_9;
            addr_40dc69_10:
            esi4->f60 = eax19;
            continue;
            addr_40dd75_9:
            eax20 = esi4->f56;
            esi4->f12 = reinterpret_cast<void**>(2);
            eax21 = fun_40d220(eax20, edi11, v5, v2);
            edx22 = esi4->f3156;
            *reinterpret_cast<unsigned char*>(&a1) = eax21;
            eax23 = esi4->f56;
            ecx24 = 0;
            *reinterpret_cast<signed char*>(&ecx24) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edx22) + (reinterpret_cast<unsigned char>(eax23) >> 1));
            ebp25 = 0;
            *reinterpret_cast<unsigned char*>(&ebp25) = esi4->f3152[reinterpret_cast<unsigned char>(eax23) * 2];
            eax26 = esi4->f1088 + 1;
            esi4->f56 = reinterpret_cast<void**>((ecx24 >> reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax23) & 1) << 2) & 15) << 16 | ebp25);
            edx27 = esi4->f64064 + 1;
            esi4->f1088 = eax26;
            if (eax26 == edx27) 
                continue;
            eax19 = reinterpret_cast<unsigned char>(reinterpret_cast<uint32_t>(a1) & 0xff);
            if (eax19 != esi4->f60) 
                goto addr_40dc69_10;
            eax28 = esi4->f56;
            esi4->f12 = reinterpret_cast<void**>(3);
            eax29 = fun_40d220(eax28, edi11, v5, v2);
            edx30 = esi4->f3156;
            *reinterpret_cast<unsigned char*>(&a1) = eax29;
            eax31 = esi4->f56;
            ecx32 = 0;
            *reinterpret_cast<signed char*>(&ecx32) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edx30) + (reinterpret_cast<unsigned char>(eax31) >> 1));
            ebp33 = 0;
            *reinterpret_cast<unsigned char*>(&ebp33) = esi4->f3152[reinterpret_cast<unsigned char>(eax31) * 2];
            eax34 = esi4->f1088 + 1;
            esi4->f56 = reinterpret_cast<void**>((ecx32 >> reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax31) & 1) << 2) & 15) << 16 | ebp33);
            edx35 = esi4->f64064 + 1;
            esi4->f1088 = eax34;
            if (eax34 == edx35) 
                continue;
            eax19 = reinterpret_cast<unsigned char>(reinterpret_cast<uint32_t>(a1) & 0xff);
            if (eax19 != esi4->f60) 
                goto addr_40dc69_10;
            eax36 = esi4->f56;
            eax37 = fun_40d220(eax36, edi11, v5, v2);
            edx38 = esi4->f3156;
            *reinterpret_cast<unsigned char*>(&a1) = eax37;
            eax39 = esi4->f56;
            ecx40 = 0;
            *reinterpret_cast<signed char*>(&ecx40) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edx38) + (reinterpret_cast<unsigned char>(eax39) >> 1));
            ebp41 = 0;
            *reinterpret_cast<unsigned char*>(&ebp41) = esi4->f3152[reinterpret_cast<unsigned char>(eax39) * 2];
            esi4->f56 = reinterpret_cast<void**>((ecx40 >> reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax39) & 1) << 2) & 15) << 16 | ebp41);
            eax42 = esi4->f56;
            esi4->f1088 = esi4->f1088 + 1;
            esi4->f12 = reinterpret_cast<void**>((reinterpret_cast<uint32_t>(a1) & 0xff) + 4);
            eax43 = fun_40d220(eax42, edi11, eax36, edi11);
            edx44 = esi4->f3156;
            esi4->f60 = eax43;
            eax45 = esi4->f56;
            ecx46 = 0;
            *reinterpret_cast<signed char*>(&ecx46) = *reinterpret_cast<signed char*>((reinterpret_cast<unsigned char>(eax45) >> 1) + reinterpret_cast<int32_t>(edx44));
            edi47 = 0;
            *reinterpret_cast<unsigned char*>(&edi47) = esi4->f3152[reinterpret_cast<unsigned char>(eax45) * 2];
            eax48 = esi4->f1088 + 1;
            esi4->f56 = reinterpret_cast<void**>((ecx46 >> reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax45) & 1) << 2) & 15) << 16 | edi47);
            esi4->f1088 = eax48;
        }
    } else {
        while (esi4->f0->f20) {
            if (esi4->f12) {
                *esi4->f0->f16 = esi4->f8;
                ecx49 = 0;
                *reinterpret_cast<unsigned char*>(&ecx49) = esi4->f8;
                eax50 = esi4->f12 - 1;
                esi4->f3168 = *reinterpret_cast<uint32_t*>((esi4->f3168 >> 24 ^ ecx49) * 4 + 0x41aa68) ^ esi4->f3168 << 8;
                esi4->f12 = eax50;
                esi4->f0->f16 = esi4->f0->f16 + 1;
                esi4->f0->f20 = esi4->f0->f20 - 1;
                esi4->f0->f24 = esi4->f0->f24 + 1;
                if (esi4->f0->f24) 
                    continue;
                esi4->f0->f28 = esi4->f0->f28 + 1;
                continue;
            }
            if (esi4->f1088 == esi4->f64064 + 1) 
                break;
            edx51 = esi4->f56;
            cl52 = esi4->f60;
            edi53 = &esi4->f1092;
            esi4->f12 = reinterpret_cast<void**>(1);
            esi4->f8 = cl52;
            eax54 = fun_40d220(edx51, edi53, v5, v2);
            edx55 = esi4->f56;
            ecx56 = 0;
            *reinterpret_cast<signed char*>(&ecx56) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esi4->f3156) + (reinterpret_cast<unsigned char>(edx55) >> 1));
            ebp57 = 0;
            *reinterpret_cast<unsigned char*>(&ebp57) = esi4->f3152[reinterpret_cast<unsigned char>(edx55) * 2];
            zf58 = esi4->f20 == 0;
            esi4->f56 = reinterpret_cast<void**>((ecx56 >> reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&edx55) & 1) << 2) & 15) << 16 | ebp57);
            if (!zf58) 
                goto addr_40d975_21;
            ecx59 = esi4->f24 + 1;
            esi4->f20 = *reinterpret_cast<void***>(reinterpret_cast<unsigned char>(esi4->f24) * 4 + 0x41ae68);
            esi4->f24 = ecx59;
            if (reinterpret_cast<int1_t>(ecx59 == 0x200)) 
                goto addr_40d96e_23;
            addr_40d975_21:
            ecx60 = esi4->f20 - 1;
            edx61 = esi4->f64064;
            esi4->f20 = ecx60;
            *reinterpret_cast<unsigned char*>(&a1) = reinterpret_cast<unsigned char>(eax54 ^ static_cast<unsigned char>(reinterpret_cast<uint1_t>(ecx60 == 1)));
            eax62 = esi4->f1088 + 1;
            esi4->f1088 = eax62;
            if (eax62 == edx61 + 1) 
                continue;
            eax63 = reinterpret_cast<unsigned char>(reinterpret_cast<uint32_t>(a1) & 0xff);
            if (eax63 == esi4->f60) {
                eax64 = esi4->f56;
                esi4->f12 = reinterpret_cast<void**>(2);
                eax65 = fun_40d220(eax64, edi53, v5, v2);
                edx66 = esi4->f56;
                ecx67 = 0;
                *reinterpret_cast<signed char*>(&ecx67) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esi4->f3156) + (reinterpret_cast<unsigned char>(edx66) >> 1));
                ebp68 = 0;
                *reinterpret_cast<unsigned char*>(&ebp68) = esi4->f3152[reinterpret_cast<unsigned char>(edx66) * 2];
                zf69 = esi4->f20 == 0;
                esi4->f56 = reinterpret_cast<void**>((ecx67 >> reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&edx66) & 1) << 2) & 15) << 16 | ebp68);
                if (zf69 && (ecx70 = esi4->f24 + 1, esi4->f20 = *reinterpret_cast<void***>(reinterpret_cast<unsigned char>(esi4->f24) * 4 + 0x41ae68), esi4->f24 = ecx70, reinterpret_cast<int1_t>(ecx70 == 0x200))) {
                    esi4->f24 = reinterpret_cast<void**>(0);
                }
                ecx71 = esi4->f20 - 1;
                edx72 = esi4->f64064;
                esi4->f20 = ecx71;
                *reinterpret_cast<unsigned char*>(&a1) = reinterpret_cast<unsigned char>(eax65 ^ static_cast<unsigned char>(reinterpret_cast<uint1_t>(ecx71 == 1)));
                eax73 = esi4->f1088 + 1;
                esi4->f1088 = eax73;
                if (eax73 == edx72 + 1) 
                    continue;
                eax74 = reinterpret_cast<unsigned char>(reinterpret_cast<uint32_t>(a1) & 0xff);
                if (eax74 == esi4->f60) {
                    eax75 = esi4->f56;
                    esi4->f12 = reinterpret_cast<void**>(3);
                    eax76 = fun_40d220(eax75, edi53, v5, v2);
                    edx77 = esi4->f56;
                    ecx78 = 0;
                    *reinterpret_cast<signed char*>(&ecx78) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esi4->f3156) + (reinterpret_cast<unsigned char>(edx77) >> 1));
                    ebp79 = 0;
                    *reinterpret_cast<unsigned char*>(&ebp79) = esi4->f3152[reinterpret_cast<unsigned char>(edx77) * 2];
                    zf80 = esi4->f20 == 0;
                    esi4->f56 = reinterpret_cast<void**>((ecx78 >> reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&edx77) & 1) << 2) & 15) << 16 | ebp79);
                    if (zf80 && (ecx81 = esi4->f24 + 1, esi4->f20 = *reinterpret_cast<void***>(reinterpret_cast<unsigned char>(esi4->f24) * 4 + 0x41ae68), esi4->f24 = ecx81, reinterpret_cast<int1_t>(ecx81 == 0x200))) {
                        esi4->f24 = reinterpret_cast<void**>(0);
                    }
                    ecx82 = esi4->f20 - 1;
                    edx83 = esi4->f64064;
                    esi4->f20 = ecx82;
                    *reinterpret_cast<unsigned char*>(&a1) = reinterpret_cast<unsigned char>(eax76 ^ static_cast<unsigned char>(reinterpret_cast<uint1_t>(ecx82 == 1)));
                    eax84 = esi4->f1088 + 1;
                    esi4->f1088 = eax84;
                    if (eax84 == edx83 + 1) 
                        continue;
                    eax85 = reinterpret_cast<unsigned char>(reinterpret_cast<uint32_t>(a1) & 0xff);
                    if (eax85 == esi4->f60) {
                        eax86 = esi4->f56;
                        eax87 = fun_40d220(eax86, edi53, v5, v2);
                        edx88 = esi4->f3156;
                        *reinterpret_cast<unsigned char*>(&a1) = eax87;
                        eax89 = esi4->f56;
                        ecx90 = 0;
                        *reinterpret_cast<signed char*>(&ecx90) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edx88) + (reinterpret_cast<unsigned char>(eax89) >> 1));
                        ebp91 = 0;
                        *reinterpret_cast<unsigned char*>(&ebp91) = esi4->f3152[reinterpret_cast<unsigned char>(eax89) * 2];
                        zf92 = esi4->f20 == 0;
                        esi4->f56 = reinterpret_cast<void**>((ecx90 >> reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax89) & 1) << 2) & 15) << 16 | ebp91);
                        if (zf92 && (eax93 = esi4->f24 + 1, esi4->f20 = *reinterpret_cast<void***>(reinterpret_cast<unsigned char>(esi4->f24) * 4 + 0x41ae68), esi4->f24 = eax93, reinterpret_cast<int1_t>(eax93 == 0x200))) {
                            esi4->f24 = reinterpret_cast<void**>(0);
                        }
                        eax94 = esi4->f20 - 1;
                        ebp95 = esi4->f1088 + 1;
                        edx96 = esi4->f56;
                        esi4->f20 = eax94;
                        *reinterpret_cast<unsigned char*>(&eax94) = reinterpret_cast<uint1_t>(eax94 == 1);
                        esi4->f1088 = ebp95;
                        esi4->f12 = reinterpret_cast<void**>((reinterpret_cast<unsigned char>(eax94) & 0xff ^ reinterpret_cast<uint32_t>(a1) & 0xff) + 4);
                        eax97 = fun_40d220(edx96, edi53, v5, v2);
                        edx98 = esi4->f56;
                        edi99 = esi4->f3156;
                        ecx100 = 0;
                        esi4->f60 = eax97;
                        *reinterpret_cast<signed char*>(&ecx100) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edi99) + (reinterpret_cast<unsigned char>(edx98) >> 1));
                        ebp101 = 0;
                        *reinterpret_cast<unsigned char*>(&ebp101) = esi4->f3152[reinterpret_cast<unsigned char>(edx98) * 2];
                        zf102 = esi4->f20 == 0;
                        esi4->f56 = reinterpret_cast<void**>((ecx100 >> reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&edx98) & 1) << 2) & 15) << 16 | ebp101);
                        if (zf102 && (ecx103 = esi4->f24 + 1, esi4->f20 = *reinterpret_cast<void***>(reinterpret_cast<unsigned char>(esi4->f24) * 4 + 0x41ae68), esi4->f24 = ecx103, reinterpret_cast<int1_t>(ecx103 == 0x200))) {
                            esi4->f24 = reinterpret_cast<void**>(0);
                        }
                        edx104 = 0;
                        ebp105 = esi4->f20 - 1;
                        esi4->f20 = ebp105;
                        *reinterpret_cast<unsigned char*>(&edx104) = reinterpret_cast<uint1_t>(ebp105 == 1);
                        eax106 = esi4->f1088 + 1;
                        esi4->f60 = reinterpret_cast<unsigned char>(edx104 ^ eax97);
                        esi4->f1088 = eax106;
                        continue;
                    } else {
                        esi4->f60 = eax85;
                        continue;
                    }
                } else {
                    esi4->f60 = eax74;
                    continue;
                }
            } else {
                esi4->f60 = eax63;
                continue;
            }
            addr_40d96e_23:
            esi4->f24 = reinterpret_cast<void**>(0);
            goto addr_40d975_21;
        }
    }
    return;
}

void fun_403960(void** a1, void** a2);

void fun_410490(struct s17* a1);

struct s40 {
    void** f0;
    signed char[3] pad4;
    int32_t f4;
    signed char[6184] pad6192;
    void** f6192;
};

void fun_4104d0(int32_t* a1, struct s40* a2, void*** a3, void* a4, int32_t a5, int32_t a6, void** a7);

struct s41 {
    struct s16* f0;
    signed char[45416] pad45420;
    void** f45420;
    signed char[6191] pad51612;
    void** f51612;
    signed char[6191] pad57804;
    void** f57804;
};

struct s42 {
    struct s16* f0;
    signed char[45416] pad45420;
    void** f45420;
    signed char[6191] pad51612;
    void** f51612;
    signed char[6191] pad57804;
    void** f57804;
};

struct s43 {
    void* f0;
    void* f4;
};

struct s44 {
    struct s16* f0;
    signed char[45416] pad45420;
    void** f45420;
    signed char[6191] pad51612;
    void** f51612;
    signed char[6191] pad57804;
    void** f57804;
};

void** g41ae68 = reinterpret_cast<void**>(0x6b);

void** fun_40dfc0(struct s17* a1) {
    void*** v2;
    void*** esi3;
    struct s17* esi4;
    void*** esp5;
    void** v6;
    void** edi7;
    void** edi8;
    struct s16* ebp9;
    void** ecx10;
    void** edx11;
    void** v12;
    void** eax13;
    void** v14;
    void** ecx15;
    void** v16;
    void** eax17;
    void** v18;
    void** edx19;
    void** v20;
    void** eax21;
    void** v22;
    void** ecx23;
    void** v24;
    void** eax25;
    void** v26;
    void** edx27;
    void** v28;
    void** ecx29;
    void** v30;
    void** eax31;
    void** v32;
    void** edx33;
    void** v34;
    void** ecx35;
    void** v36;
    void** eax37;
    void** ebx38;
    void** v39;
    void** edx40;
    void** v41;
    void** ecx42;
    void** v43;
    void** eax44;
    void** v45;
    void** edx46;
    void** v47;
    void** ecx48;
    void** v49;
    int32_t eax50;
    void** v51;
    void** edx52;
    void** v53;
    void** ecx54;
    void** v55;
    void** v56;
    void** v57;
    struct s16* eax58;
    uint32_t edx59;
    uint32_t ebx60;
    void** ecx61;
    uint32_t eax62;
    uint32_t eax63;
    struct s16* eax64;
    uint32_t edx65;
    uint32_t ebx66;
    void** ecx67;
    uint32_t eax68;
    uint32_t eax69;
    struct s16* eax70;
    uint32_t edx71;
    uint32_t ebx72;
    void** ecx73;
    uint32_t eax74;
    uint32_t eax75;
    struct s16* eax76;
    uint32_t edx77;
    uint32_t ebx78;
    void** ecx79;
    uint32_t eax80;
    uint32_t eax81;
    uint32_t eax82;
    signed char cl83;
    void* esp84;
    uint32_t eax85;
    uint32_t eax86;
    uint32_t eax87;
    uint32_t eax88;
    int32_t edx89;
    void*** eax90;
    int32_t ecx91;
    uint32_t v92;
    unsigned char* eax93;
    uint32_t eax94;
    uint32_t eax95;
    uint32_t eax96;
    uint32_t eax97;
    uint32_t eax98;
    int32_t eax99;
    int1_t zf100;
    struct s16* eax101;
    uint32_t edx102;
    uint32_t ebx103;
    void** ecx104;
    uint32_t eax105;
    uint32_t eax106;
    struct s16* eax107;
    uint32_t edx108;
    uint32_t ebx109;
    void** ecx110;
    uint32_t eax111;
    uint32_t eax112;
    struct s16* eax113;
    uint32_t edx114;
    uint32_t ebx115;
    void** ecx116;
    uint32_t eax117;
    uint32_t eax118;
    struct s16* eax119;
    uint32_t edx120;
    uint32_t ebx121;
    void** ecx122;
    uint32_t eax123;
    uint32_t eax124;
    struct s16* eax125;
    uint32_t edx126;
    uint32_t ebx127;
    void** ecx128;
    uint32_t eax129;
    uint32_t eax130;
    struct s16* eax131;
    uint32_t edx132;
    uint32_t ebx133;
    void** ecx134;
    uint32_t eax135;
    uint32_t eax136;
    struct s16* eax137;
    uint32_t edx138;
    uint32_t ebx139;
    void** ecx140;
    uint32_t eax141;
    uint32_t ecx142;
    struct s16* eax143;
    uint32_t edx144;
    uint32_t ebx145;
    void** ecx146;
    uint32_t eax147;
    uint32_t ecx148;
    struct s16* eax149;
    uint32_t edx150;
    uint32_t ebx151;
    void** ecx152;
    uint32_t eax153;
    uint32_t ecx154;
    struct s16* eax155;
    uint32_t edx156;
    uint32_t ebx157;
    void** edx158;
    uint32_t eax159;
    void** ecx160;
    uint32_t ecx161;
    struct s16* eax162;
    uint32_t edx163;
    uint32_t ebx164;
    void** ecx165;
    uint32_t eax166;
    uint32_t eax167;
    struct s16* eax168;
    uint32_t edx169;
    uint32_t ebx170;
    void** ecx171;
    uint32_t eax172;
    uint32_t eax173;
    struct s16* eax174;
    uint32_t edx175;
    uint32_t ebx176;
    void** ecx177;
    uint32_t eax178;
    uint32_t eax179;
    struct s16* eax180;
    uint32_t edx181;
    uint32_t ebx182;
    void** ecx183;
    uint32_t eax184;
    uint32_t eax185;
    struct s16* eax186;
    uint32_t edx187;
    uint32_t ebx188;
    void** ecx189;
    uint32_t eax190;
    uint32_t eax191;
    int32_t eax192;
    struct s16* eax193;
    uint32_t edx194;
    uint32_t ebx195;
    void** ecx196;
    uint32_t eax197;
    uint32_t ecx198;
    struct s16* eax199;
    uint32_t edx200;
    uint32_t ebx201;
    void** ecx202;
    uint32_t eax203;
    uint32_t ecx204;
    struct s16* eax205;
    uint32_t edx206;
    uint32_t ebx207;
    void** ecx208;
    uint32_t eax209;
    uint32_t ecx210;
    struct s16* eax211;
    uint32_t edx212;
    uint32_t ebx213;
    void** ecx214;
    uint32_t eax215;
    uint32_t ecx216;
    struct s16* eax217;
    uint32_t edx218;
    uint32_t ebx219;
    void** edx220;
    uint32_t eax221;
    void** ecx222;
    uint32_t eax223;
    struct s16* eax224;
    uint32_t edx225;
    uint32_t ebx226;
    void** ecx227;
    uint32_t eax228;
    void** ecx229;
    struct s16* eax230;
    uint32_t edx231;
    uint32_t ebx232;
    void** ecx233;
    uint32_t eax234;
    void** ecx235;
    struct s16* eax236;
    uint32_t edx237;
    uint32_t ebx238;
    void** ecx239;
    uint32_t edx240;
    void** eax241;
    uint32_t ecx242;
    uint32_t ecx243;
    uint32_t ecx244;
    uint32_t ecx245;
    struct s16* eax246;
    uint32_t edx247;
    uint32_t ebx248;
    void** ecx249;
    uint32_t eax250;
    int32_t* edi251;
    int32_t ecx252;
    struct s16* eax253;
    uint32_t edx254;
    uint32_t ebx255;
    void** ecx256;
    uint32_t eax257;
    struct s16* eax258;
    uint32_t edx259;
    uint32_t ebx260;
    void** ecx261;
    uint32_t eax262;
    void** eax263;
    struct s16* eax264;
    uint32_t edx265;
    uint32_t ebx266;
    void** ecx267;
    uint32_t eax268;
    void** eax269;
    void** edi270;
    struct s16* eax271;
    uint32_t edx272;
    uint32_t ebx273;
    void** ecx274;
    uint32_t eax275;
    void** eax276;
    void** edx277;
    signed char cl278;
    void** eax279;
    void** ebp280;
    signed char dl281;
    void* eax282;
    signed char bl283;
    signed char* ecx284;
    void* edi285;
    void** eax286;
    struct s16* eax287;
    uint32_t edx288;
    uint32_t ebx289;
    void** edx290;
    uint32_t eax291;
    void** ecx292;
    struct s16* eax293;
    uint32_t edx294;
    uint32_t ebx295;
    void** ecx296;
    uint32_t eax297;
    struct s16* eax298;
    uint32_t edx299;
    uint32_t ebx300;
    void** ecx301;
    uint32_t eax302;
    void** eax303;
    struct s40* edi304;
    int32_t* v305;
    void* ebx306;
    void** v307;
    int32_t ecx308;
    void** edx309;
    int32_t ebp310;
    int32_t eax311;
    void** eax312;
    int32_t* edi313;
    int32_t ecx314;
    void** edx315;
    uint32_t eax316;
    void** v317;
    uint32_t eax318;
    uint32_t eax319;
    uint32_t eax320;
    void* eax321;
    void** edi322;
    int32_t ecx323;
    signed char dl324;
    void** eax325;
    void** ecx326;
    struct s41* eax327;
    struct s16* eax328;
    uint32_t ebp329;
    uint32_t edx330;
    uint32_t eax331;
    void** edx332;
    void** ecx333;
    void** ecx334;
    void** eax335;
    struct s16* eax336;
    uint32_t ebp337;
    uint32_t edx338;
    void** ecx339;
    void** eax340;
    void** edx341;
    void* eax342;
    void** ecx343;
    void** eax344;
    void** edx345;
    struct s42* eax346;
    struct s16* eax347;
    uint32_t ebp348;
    uint32_t edx349;
    uint32_t eax350;
    void** edx351;
    void** ecx352;
    void** ecx353;
    void** eax354;
    struct s16* eax355;
    uint32_t ebp356;
    uint32_t edx357;
    void** ecx358;
    void** eax359;
    void** edx360;
    void* eax361;
    void** eax362;
    void* ecx363;
    void** edx364;
    unsigned char cl365;
    uint32_t v366;
    uint32_t eax367;
    void** edx368;
    void** edi369;
    void** ecx370;
    void*** ebp371;
    void** eax372;
    void** ecx373;
    uint32_t edx374;
    struct s43* edi375;
    void* ecx376;
    int1_t less_or_equal377;
    signed char bl378;
    uint32_t v379;
    struct s43* eax380;
    uint32_t edi381;
    void* edx382;
    void* ecx383;
    void* eax384;
    void** ecx385;
    int32_t ebp386;
    void* edi387;
    void* edx388;
    void* edi389;
    void* v390;
    void* eax391;
    void* edx392;
    signed char* eax393;
    void* v394;
    void* ebp395;
    void* v396;
    void* v397;
    uint32_t edi398;
    void* eax399;
    int32_t ecx400;
    void* eax401;
    unsigned char* eax402;
    void** edx403;
    void** ecx404;
    void** eax405;
    void** edx406;
    struct s44* eax407;
    struct s16* eax408;
    uint32_t ebp409;
    uint32_t edx410;
    uint32_t eax411;
    void** edx412;
    void** ecx413;
    void** ecx414;
    void** eax415;
    struct s16* eax416;
    uint32_t ebp417;
    uint32_t edx418;
    void** ecx419;
    void** eax420;
    void** edi421;
    int32_t* eax422;
    int32_t* ecx423;
    int32_t edx424;
    int32_t ecx425;
    void** edx426;
    void*** ecx427;
    uint32_t v428;
    uint32_t eax429;
    int32_t* eax430;
    void*** ecx431;
    void*** eax432;
    void** edx433;
    int1_t zf434;
    void** edx435;
    unsigned char eax436;
    void** edx437;
    unsigned char eax438;
    void** ecx439;
    void** edx440;
    uint32_t edx441;
    int32_t* eax442;
    int32_t ecx443;
    void** eax444;
    void** edx445;
    void*** ecx446;
    uint32_t ebx447;
    uint32_t edi448;
    unsigned char* edi449;
    void* edx450;
    uint32_t ecx451;
    void** ebx452;
    uint32_t ecx453;
    unsigned char* edi454;
    int32_t ecx455;
    int32_t ecx456;
    void** ecx457;
    void** eax458;
    int1_t zf459;
    unsigned char eax460;
    void*** edx461;
    void** eax462;
    uint32_t ebx463;
    uint32_t edx464;
    void** eax465;
    unsigned char eax466;
    void** edx467;
    void*** edi468;
    uint32_t ebx469;
    uint32_t edi470;
    void** edx471;
    int1_t zf472;
    void** ecx473;
    uint32_t edx474;
    void** ebx475;
    unsigned char* ecx476;
    uint32_t v477;
    uint32_t edx478;
    int32_t* edi479;
    unsigned char* ebp480;
    int32_t ecx481;
    unsigned char* ebp482;
    int32_t ecx483;

    v2 = esi3;
    esi4 = a1;
    esp5 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 0x78 - 4 - 4 - 4 - 4);
    v6 = edi7;
    edi8 = reinterpret_cast<void**>(0);
    ebp9 = esi4->f0;
    if (esi4->f4 == 10) {
        esi4->f64020 = reinterpret_cast<void**>(0);
        esi4->f64024 = reinterpret_cast<void**>(0);
        esi4->f64028 = reinterpret_cast<void**>(0);
        esi4->f64032 = reinterpret_cast<void**>(0);
        esi4->f64036 = reinterpret_cast<void**>(0);
        esi4->f64040 = reinterpret_cast<void**>(0);
        esi4->f64044 = reinterpret_cast<void**>(0);
        esi4->f64048 = reinterpret_cast<void**>(0);
        esi4->f64052 = reinterpret_cast<void**>(0);
        esi4->f64056 = reinterpret_cast<void**>(0);
        esi4->f64060 = reinterpret_cast<void**>(0);
        esi4->f64064 = reinterpret_cast<void**>(0);
        esi4->f64068 = reinterpret_cast<void**>(0);
        esi4->f64072 = reinterpret_cast<void**>(0);
        esi4->f64076 = reinterpret_cast<void**>(0);
        esi4->f64080 = reinterpret_cast<void**>(0);
        esi4->f64084 = reinterpret_cast<void**>(0);
        esi4->f64088 = reinterpret_cast<void**>(0);
        esi4->f64092 = reinterpret_cast<void**>(0);
        esi4->f64096 = reinterpret_cast<void**>(0);
        esi4->f64100 = reinterpret_cast<void**>(0);
        esi4->f64104 = reinterpret_cast<void**>(0);
        esi4->f64108 = reinterpret_cast<void**>(0);
        esi4->f64112 = reinterpret_cast<void**>(0);
    }
    ecx10 = esi4->f64024;
    edx11 = esi4->f64028;
    v12 = esi4->f64020;
    eax13 = esi4->f64032;
    v14 = ecx10;
    ecx15 = esi4->f64036;
    v16 = eax13;
    eax17 = esi4->f64044;
    v18 = edx11;
    edx19 = esi4->f64040;
    v20 = eax17;
    eax21 = esi4->f64056;
    v22 = ecx15;
    ecx23 = esi4->f64048;
    v24 = eax21;
    eax25 = esi4->f64068;
    v26 = edx19;
    edx27 = esi4->f64052;
    v28 = ecx23;
    ecx29 = esi4->f64060;
    v30 = eax25;
    eax31 = esi4->f64080;
    v32 = edx27;
    edx33 = esi4->f64064;
    v34 = ecx29;
    ecx35 = esi4->f64072;
    v36 = eax31;
    eax37 = esi4->f64096;
    ebx38 = esi4->f64084;
    v39 = edx33;
    edx40 = esi4->f64076;
    v41 = ecx35;
    ecx42 = esi4->f64088;
    v43 = eax37;
    eax44 = esi4->f64108;
    v45 = edx40;
    edx46 = esi4->f64092;
    v47 = ecx42;
    ecx48 = esi4->f64100;
    v49 = eax44;
    eax50 = esi4->f4;
    v51 = edx46;
    edx52 = esi4->f64104;
    v53 = ecx48;
    ecx54 = esi4->f64112;
    v55 = ebx38;
    v56 = edx52;
    v57 = ecx54;
    switch (eax50 - 10) {
    default:
        fun_403960(0xfa1, v6);
        fun_403960(0xfa2, 0xfa1);
        break;
    case 0:
        esi4->f4 = 10;
        while (reinterpret_cast<signed char>(esi4->f32) < reinterpret_cast<signed char>(8)) {
            eax58 = esi4->f0;
            if (!eax58->f4) 
                goto addr_4102c1_9;
            edx59 = esi4->f28;
            ebx60 = 0;
            *reinterpret_cast<signed char*>(&ebx60) = *eax58->f0;
            esi4->f32 = esi4->f32 + 8;
            esi4->f28 = edx59 << 8 | ebx60;
            eax58->f0 = eax58->f0 + 1;
            esi4->f0->f4 = esi4->f0->f4 - 1;
            esi4->f0->f8 = esi4->f0->f8 + 1;
            if (esi4->f0->f8) 
                continue;
            esi4->f0->f12 = esi4->f0->f12 + 1;
        }
        ecx61 = esi4->f32 + 0xfffffff8;
        eax62 = esi4->f28 >> *reinterpret_cast<signed char*>(&ecx61);
        esi4->f32 = esi4->f32 + 0xfffffff8;
        eax63 = eax62 & 0xff;
        if (*reinterpret_cast<signed char*>(&eax63) != 66) 
            goto addr_40e1e9_13;
    case 1:
        esi4->f4 = 11;
        while (reinterpret_cast<signed char>(esi4->f32) < reinterpret_cast<signed char>(8)) {
            eax64 = esi4->f0;
            if (!eax64->f4) 
                goto addr_4102c1_9;
            edx65 = esi4->f28;
            ebx66 = 0;
            *reinterpret_cast<signed char*>(&ebx66) = *eax64->f0;
            esi4->f32 = esi4->f32 + 8;
            esi4->f28 = edx65 << 8 | ebx66;
            eax64->f0 = eax64->f0 + 1;
            esi4->f0->f4 = esi4->f0->f4 - 1;
            esi4->f0->f8 = esi4->f0->f8 + 1;
            if (esi4->f0->f8) 
                continue;
            esi4->f0->f12 = esi4->f0->f12 + 1;
        }
        ecx67 = esi4->f32 + 0xfffffff8;
        eax68 = esi4->f28 >> *reinterpret_cast<signed char*>(&ecx67);
        esi4->f32 = esi4->f32 + 0xfffffff8;
        eax69 = eax68 & 0xff;
        if (*reinterpret_cast<signed char*>(&eax69) == 90) {
        case 2:
            esi4->f4 = 12;
        } else {
            ebx38 = v55;
            edi8 = reinterpret_cast<void**>(0xfffffffb);
            break;
        }
        while (reinterpret_cast<signed char>(esi4->f32) < reinterpret_cast<signed char>(8)) {
            eax70 = esi4->f0;
            if (!eax70->f4) 
                goto addr_4102c1_9;
            edx71 = esi4->f28;
            ebx72 = 0;
            *reinterpret_cast<signed char*>(&ebx72) = *eax70->f0;
            esi4->f32 = esi4->f32 + 8;
            esi4->f28 = edx71 << 8 | ebx72;
            eax70->f0 = eax70->f0 + 1;
            esi4->f0->f4 = esi4->f0->f4 - 1;
            esi4->f0->f8 = esi4->f0->f8 + 1;
            if (esi4->f0->f8) 
                continue;
            esi4->f0->f12 = esi4->f0->f12 + 1;
        }
        ecx73 = esi4->f32 + 0xfffffff8;
        eax74 = esi4->f28 >> *reinterpret_cast<signed char*>(&ecx73);
        esi4->f32 = esi4->f32 + 0xfffffff8;
        eax75 = eax74 & 0xff;
        if (*reinterpret_cast<signed char*>(&eax75) == 0x68) {
        case 3:
            esi4->f4 = 13;
        } else {
            ebx38 = v55;
            edi8 = reinterpret_cast<void**>(0xfffffffb);
            break;
        }
        while (reinterpret_cast<signed char>(esi4->f32) < reinterpret_cast<signed char>(8)) {
            eax76 = esi4->f0;
            if (!eax76->f4) 
                goto addr_4102c1_9;
            edx77 = esi4->f28;
            ebx78 = 0;
            *reinterpret_cast<signed char*>(&ebx78) = *eax76->f0;
            esi4->f32 = esi4->f32 + 8;
            esi4->f28 = edx77 << 8 | ebx78;
            eax76->f0 = eax76->f0 + 1;
            esi4->f0->f4 = esi4->f0->f4 - 1;
            esi4->f0->f8 = esi4->f0->f8 + 1;
            if (esi4->f0->f8) 
                continue;
            esi4->f0->f12 = esi4->f0->f12 + 1;
        }
        ecx79 = esi4->f32 + 0xfffffff8;
        eax80 = esi4->f28 >> *reinterpret_cast<signed char*>(&ecx79);
        esi4->f32 = esi4->f32 + 0xfffffff8;
        eax81 = eax80 & 0xff;
        esi4->f36 = eax81;
        if (reinterpret_cast<int32_t>(eax81) < reinterpret_cast<int32_t>(49) || reinterpret_cast<int32_t>(eax81) > reinterpret_cast<int32_t>(57)) {
            addr_40e1e9_13:
            ebx38 = v55;
            edi8 = reinterpret_cast<void**>(0xfffffffb);
            break;
        } else {
            eax82 = eax81 + 0xffffffd0;
            cl83 = esi4->f40;
            esi4->f36 = eax82;
            esp84 = reinterpret_cast<void*>(esp5 - 4);
            eax85 = eax82 + eax82 * 4;
            eax86 = eax85 + eax85 * 4;
            eax87 = eax86 + eax86 * 4;
            eax88 = eax87 + eax87 * 4;
            if (!cl83) {
                edx89 = ebp9->f44;
                eax90 = reinterpret_cast<void***>(ebp9->f36(edx89, eax88 + eax88 * 4 << 7, 1));
                esp5 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp84) - 4 - 4 - 4 + 4 + 12);
                esi4->f3148 = eax90;
            } else {
                ecx91 = ebp9->f44;
                v92 = eax88 + eax88 * 4 << 6;
                eax93 = reinterpret_cast<unsigned char*>(ebp9->f36(ecx91, v92, 1));
                esi4->f3152 = eax93;
                eax94 = esi4->f36;
                eax95 = eax94 + eax94 * 4;
                eax96 = eax95 + eax95 * 4;
                eax97 = eax96 + eax96 * 4;
                eax98 = eax97 + eax97 * 4;
                eax99 = ebp9->f44;
                eax90 = reinterpret_cast<void***>(ebp9->f36(eax99, reinterpret_cast<int32_t>((eax98 + eax98 * 4 << 5) + 1) >> 1, 1, ecx91, v92, 1));
                esp5 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp84) - 4 - 4 - 4 + 4 - 4 - 4 - 4 - 4 + 4 + 24);
                zf100 = esi4->f3152 == 0;
                esi4->f3156 = eax90;
                if (zf100) 
                    goto addr_40e3fb_37;
            }
            if (eax90) {
            case 4:
                esi4->f4 = 14;
            } else {
                addr_40e3fb_37:
                ebx38 = v55;
                edi8 = reinterpret_cast<void**>(0xfffffffd);
                break;
            }
        }
        while (reinterpret_cast<signed char>(esi4->f32) < reinterpret_cast<signed char>(8)) {
            eax101 = esi4->f0;
            if (!eax101->f4) 
                goto addr_4102c1_9;
            edx102 = esi4->f28;
            ebx103 = 0;
            *reinterpret_cast<signed char*>(&ebx103) = *eax101->f0;
            esi4->f32 = esi4->f32 + 8;
            esi4->f28 = edx102 << 8 | ebx103;
            eax101->f0 = eax101->f0 + 1;
            esi4->f0->f4 = esi4->f0->f4 - 1;
            esi4->f0->f8 = esi4->f0->f8 + 1;
            if (esi4->f0->f8) 
                continue;
            esi4->f0->f12 = esi4->f0->f12 + 1;
        }
        ecx104 = esi4->f32 + 0xfffffff8;
        eax105 = esi4->f28 >> *reinterpret_cast<signed char*>(&ecx104);
        esi4->f32 = esi4->f32 + 0xfffffff8;
        eax106 = eax105 & 0xff;
        if (*reinterpret_cast<signed char*>(&eax106) == 23) {
        case 32:
            esi4->f4 = 42;
        } else {
            if (*reinterpret_cast<signed char*>(&eax106) == 49) {
            case 5:
                esi4->f4 = 15;
                goto addr_40e498_49;
            } else {
                ebx38 = v55;
                edi8 = reinterpret_cast<void**>(0xfffffffc);
                break;
            }
        }
        while (reinterpret_cast<signed char>(esi4->f32) < reinterpret_cast<signed char>(8)) {
            eax107 = esi4->f0;
            if (!eax107->f4) 
                goto addr_4102c1_9;
            edx108 = esi4->f28;
            ebx109 = 0;
            *reinterpret_cast<signed char*>(&ebx109) = *eax107->f0;
            esi4->f32 = esi4->f32 + 8;
            esi4->f28 = edx108 << 8 | ebx109;
            eax107->f0 = eax107->f0 + 1;
            esi4->f0->f4 = esi4->f0->f4 - 1;
            esi4->f0->f8 = esi4->f0->f8 + 1;
            if (esi4->f0->f8) 
                continue;
            esi4->f0->f12 = esi4->f0->f12 + 1;
        }
        ecx110 = esi4->f32 + 0xfffffff8;
        eax111 = esi4->f28 >> *reinterpret_cast<signed char*>(&ecx110);
        esi4->f32 = esi4->f32 + 0xfffffff8;
        eax112 = eax111 & 0xff;
        if (*reinterpret_cast<signed char*>(&eax112) == 0x72) {
        case 33:
            esi4->f4 = 43;
        } else {
            ebx38 = v55;
            edi8 = reinterpret_cast<void**>(0xfffffffc);
            break;
        }
        while (reinterpret_cast<signed char>(esi4->f32) < reinterpret_cast<signed char>(8)) {
            eax113 = esi4->f0;
            if (!eax113->f4) 
                goto addr_4102c1_9;
            edx114 = esi4->f28;
            ebx115 = 0;
            *reinterpret_cast<signed char*>(&ebx115) = *eax113->f0;
            esi4->f32 = esi4->f32 + 8;
            esi4->f28 = edx114 << 8 | ebx115;
            eax113->f0 = eax113->f0 + 1;
            esi4->f0->f4 = esi4->f0->f4 - 1;
            esi4->f0->f8 = esi4->f0->f8 + 1;
            if (esi4->f0->f8) 
                continue;
            esi4->f0->f12 = esi4->f0->f12 + 1;
        }
        ecx116 = esi4->f32 + 0xfffffff8;
        eax117 = esi4->f28 >> *reinterpret_cast<signed char*>(&ecx116);
        esi4->f32 = esi4->f32 + 0xfffffff8;
        eax118 = eax117 & 0xff;
        if (*reinterpret_cast<signed char*>(&eax118) == 69) {
        case 34:
            esi4->f4 = 44;
        } else {
            ebx38 = v55;
            edi8 = reinterpret_cast<void**>(0xfffffffc);
            break;
        }
        while (reinterpret_cast<signed char>(esi4->f32) < reinterpret_cast<signed char>(8)) {
            eax119 = esi4->f0;
            if (!eax119->f4) 
                goto addr_4102c1_9;
            edx120 = esi4->f28;
            ebx121 = 0;
            *reinterpret_cast<signed char*>(&ebx121) = *eax119->f0;
            esi4->f32 = esi4->f32 + 8;
            esi4->f28 = edx120 << 8 | ebx121;
            eax119->f0 = eax119->f0 + 1;
            esi4->f0->f4 = esi4->f0->f4 - 1;
            esi4->f0->f8 = esi4->f0->f8 + 1;
            if (esi4->f0->f8) 
                continue;
            esi4->f0->f12 = esi4->f0->f12 + 1;
        }
        ecx122 = esi4->f32 + 0xfffffff8;
        eax123 = esi4->f28 >> *reinterpret_cast<signed char*>(&ecx122);
        esi4->f32 = esi4->f32 + 0xfffffff8;
        eax124 = eax123 & 0xff;
        if (*reinterpret_cast<signed char*>(&eax124) == 56) {
        case 35:
            esi4->f4 = 45;
        } else {
            ebx38 = v55;
            edi8 = reinterpret_cast<void**>(0xfffffffc);
            break;
        }
        while (reinterpret_cast<signed char>(esi4->f32) < reinterpret_cast<signed char>(8)) {
            eax125 = esi4->f0;
            if (!eax125->f4) 
                goto addr_4102c1_9;
            edx126 = esi4->f28;
            ebx127 = 0;
            *reinterpret_cast<signed char*>(&ebx127) = *eax125->f0;
            esi4->f32 = esi4->f32 + 8;
            esi4->f28 = edx126 << 8 | ebx127;
            eax125->f0 = eax125->f0 + 1;
            esi4->f0->f4 = esi4->f0->f4 - 1;
            esi4->f0->f8 = esi4->f0->f8 + 1;
            if (esi4->f0->f8) 
                continue;
            esi4->f0->f12 = esi4->f0->f12 + 1;
        }
        ecx128 = esi4->f32 + 0xfffffff8;
        eax129 = esi4->f28 >> *reinterpret_cast<signed char*>(&ecx128);
        esi4->f32 = esi4->f32 + 0xfffffff8;
        eax130 = eax129 & 0xff;
        if (*reinterpret_cast<signed char*>(&eax130) == 80) {
        case 36:
            esi4->f4 = 46;
        } else {
            ebx38 = v55;
            edi8 = reinterpret_cast<void**>(0xfffffffc);
            break;
        }
        while (reinterpret_cast<signed char>(esi4->f32) < reinterpret_cast<signed char>(8)) {
            eax131 = esi4->f0;
            if (!eax131->f4) 
                goto addr_4102c1_9;
            edx132 = esi4->f28;
            ebx133 = 0;
            *reinterpret_cast<signed char*>(&ebx133) = *eax131->f0;
            esi4->f32 = esi4->f32 + 8;
            esi4->f28 = edx132 << 8 | ebx133;
            eax131->f0 = eax131->f0 + 1;
            esi4->f0->f4 = esi4->f0->f4 - 1;
            esi4->f0->f8 = esi4->f0->f8 + 1;
            if (esi4->f0->f8) 
                continue;
            esi4->f0->f12 = esi4->f0->f12 + 1;
        }
        ecx134 = esi4->f32 + 0xfffffff8;
        eax135 = esi4->f28 >> *reinterpret_cast<signed char*>(&ecx134);
        esi4->f32 = esi4->f32 + 0xfffffff8;
        eax136 = eax135 & 0xff;
        if (*reinterpret_cast<signed char*>(&eax136) == 0x90) {
            esi4->f3164 = 0;
        } else {
            addr_41008b_85:
            ebx38 = v55;
            edi8 = reinterpret_cast<void**>(0xfffffffc);
            break;
        }
    case 37:
        esi4->f4 = 47;
        while (reinterpret_cast<signed char>(esi4->f32) < reinterpret_cast<signed char>(8)) {
            eax137 = esi4->f0;
            if (!eax137->f4) 
                goto addr_4102c1_9;
            edx138 = esi4->f28;
            ebx139 = 0;
            *reinterpret_cast<signed char*>(&ebx139) = *eax137->f0;
            esi4->f32 = esi4->f32 + 8;
            esi4->f28 = edx138 << 8 | ebx139;
            eax137->f0 = eax137->f0 + 1;
            esi4->f0->f4 = esi4->f0->f4 - 1;
            esi4->f0->f8 = esi4->f0->f8 + 1;
            if (esi4->f0->f8) 
                continue;
            esi4->f0->f12 = esi4->f0->f12 + 1;
        }
        ecx140 = esi4->f32 + 0xfffffff8;
        eax141 = esi4->f28 >> *reinterpret_cast<signed char*>(&ecx140);
        ecx142 = esi4->f3164;
        esi4->f32 = esi4->f32 + 0xfffffff8;
        esi4->f3164 = ecx142 << 8 | eax141 & 0xff & 0xff;
    case 38:
        esi4->f4 = 48;
        while (reinterpret_cast<signed char>(esi4->f32) < reinterpret_cast<signed char>(8)) {
            eax143 = esi4->f0;
            if (!eax143->f4) 
                goto addr_4102c1_9;
            edx144 = esi4->f28;
            ebx145 = 0;
            *reinterpret_cast<signed char*>(&ebx145) = *eax143->f0;
            esi4->f32 = esi4->f32 + 8;
            esi4->f28 = edx144 << 8 | ebx145;
            eax143->f0 = eax143->f0 + 1;
            esi4->f0->f4 = esi4->f0->f4 - 1;
            esi4->f0->f8 = esi4->f0->f8 + 1;
            if (esi4->f0->f8) 
                continue;
            esi4->f0->f12 = esi4->f0->f12 + 1;
        }
        ecx146 = esi4->f32 + 0xfffffff8;
        eax147 = esi4->f28 >> *reinterpret_cast<signed char*>(&ecx146);
        ecx148 = esi4->f3164;
        esi4->f32 = esi4->f32 + 0xfffffff8;
        esi4->f3164 = ecx148 << 8 | eax147 & 0xff & 0xff;
    case 39:
        esi4->f4 = 49;
        while (reinterpret_cast<signed char>(esi4->f32) < reinterpret_cast<signed char>(8)) {
            eax149 = esi4->f0;
            if (!eax149->f4) 
                goto addr_4102c1_9;
            edx150 = esi4->f28;
            ebx151 = 0;
            *reinterpret_cast<signed char*>(&ebx151) = *eax149->f0;
            esi4->f32 = esi4->f32 + 8;
            esi4->f28 = edx150 << 8 | ebx151;
            eax149->f0 = eax149->f0 + 1;
            esi4->f0->f4 = esi4->f0->f4 - 1;
            esi4->f0->f8 = esi4->f0->f8 + 1;
            if (esi4->f0->f8) 
                continue;
            esi4->f0->f12 = esi4->f0->f12 + 1;
        }
        ecx152 = esi4->f32 + 0xfffffff8;
        eax153 = esi4->f28 >> *reinterpret_cast<signed char*>(&ecx152);
        ecx154 = esi4->f3164;
        esi4->f32 = esi4->f32 + 0xfffffff8;
        esi4->f3164 = ecx154 << 8 | eax153 & 0xff & 0xff;
    case 40:
        esi4->f4 = 50;
        while (reinterpret_cast<signed char>(esi4->f32) < reinterpret_cast<signed char>(8)) {
            eax155 = esi4->f0;
            if (!eax155->f4) 
                goto addr_4102c1_9;
            edx156 = esi4->f28;
            ebx157 = 0;
            *reinterpret_cast<signed char*>(&ebx157) = *eax155->f0;
            esi4->f32 = esi4->f32 + 8;
            esi4->f28 = edx156 << 8 | ebx157;
            eax155->f0 = eax155->f0 + 1;
            esi4->f0->f4 = esi4->f0->f4 - 1;
            esi4->f0->f8 = esi4->f0->f8 + 1;
            if (esi4->f0->f8) 
                continue;
            esi4->f0->f12 = esi4->f0->f12 + 1;
        }
        edx158 = esi4->f32;
        eax159 = esi4->f28;
        ebx38 = v55;
        esi4->f4 = 1;
        ecx160 = edx158 + 0xfffffff8;
        ecx161 = esi4->f3164;
        esi4->f32 = edx158 + 0xfffffff8;
        edi8 = reinterpret_cast<void**>(4);
        esi4->f3164 = ecx161 << 8 | eax159 >> *reinterpret_cast<signed char*>(&ecx160) & 0xff & 0xff;
        break;
        addr_40e498_49:
        while (reinterpret_cast<signed char>(esi4->f32) < reinterpret_cast<signed char>(8)) {
            eax162 = esi4->f0;
            if (!eax162->f4) 
                goto addr_4102c1_9;
            edx163 = esi4->f28;
            ebx164 = 0;
            *reinterpret_cast<signed char*>(&ebx164) = *eax162->f0;
            esi4->f32 = esi4->f32 + 8;
            esi4->f28 = edx163 << 8 | ebx164;
            eax162->f0 = eax162->f0 + 1;
            esi4->f0->f4 = esi4->f0->f4 - 1;
            esi4->f0->f8 = esi4->f0->f8 + 1;
            if (esi4->f0->f8) 
                continue;
            esi4->f0->f12 = esi4->f0->f12 + 1;
        }
        ecx165 = esi4->f32 + 0xfffffff8;
        eax166 = esi4->f28 >> *reinterpret_cast<signed char*>(&ecx165);
        esi4->f32 = esi4->f32 + 0xfffffff8;
        eax167 = eax166 & 0xff;
        if (*reinterpret_cast<signed char*>(&eax167) == 65) {
        case 6:
            esi4->f4 = 16;
        } else {
            ebx38 = v55;
            edi8 = reinterpret_cast<void**>(0xfffffffc);
            break;
        }
        while (reinterpret_cast<signed char>(esi4->f32) < reinterpret_cast<signed char>(8)) {
            eax168 = esi4->f0;
            if (!eax168->f4) 
                goto addr_4102c1_9;
            edx169 = esi4->f28;
            ebx170 = 0;
            *reinterpret_cast<signed char*>(&ebx170) = *eax168->f0;
            esi4->f32 = esi4->f32 + 8;
            esi4->f28 = edx169 << 8 | ebx170;
            eax168->f0 = eax168->f0 + 1;
            esi4->f0->f4 = esi4->f0->f4 - 1;
            esi4->f0->f8 = esi4->f0->f8 + 1;
            if (esi4->f0->f8) 
                continue;
            esi4->f0->f12 = esi4->f0->f12 + 1;
        }
        ecx171 = esi4->f32 + 0xfffffff8;
        eax172 = esi4->f28 >> *reinterpret_cast<signed char*>(&ecx171);
        esi4->f32 = esi4->f32 + 0xfffffff8;
        eax173 = eax172 & 0xff;
        if (*reinterpret_cast<signed char*>(&eax173) == 89) {
        case 7:
            esi4->f4 = 17;
        } else {
            ebx38 = v55;
            edi8 = reinterpret_cast<void**>(0xfffffffc);
            break;
        }
        while (reinterpret_cast<signed char>(esi4->f32) < reinterpret_cast<signed char>(8)) {
            eax174 = esi4->f0;
            if (!eax174->f4) 
                goto addr_4102c1_9;
            edx175 = esi4->f28;
            ebx176 = 0;
            *reinterpret_cast<signed char*>(&ebx176) = *eax174->f0;
            esi4->f32 = esi4->f32 + 8;
            esi4->f28 = edx175 << 8 | ebx176;
            eax174->f0 = eax174->f0 + 1;
            esi4->f0->f4 = esi4->f0->f4 - 1;
            esi4->f0->f8 = esi4->f0->f8 + 1;
            if (esi4->f0->f8) 
                continue;
            esi4->f0->f12 = esi4->f0->f12 + 1;
        }
        ecx177 = esi4->f32 + 0xfffffff8;
        eax178 = esi4->f28 >> *reinterpret_cast<signed char*>(&ecx177);
        esi4->f32 = esi4->f32 + 0xfffffff8;
        eax179 = eax178 & 0xff;
        if (*reinterpret_cast<signed char*>(&eax179) == 38) {
        case 8:
            esi4->f4 = 18;
        } else {
            ebx38 = v55;
            edi8 = reinterpret_cast<void**>(0xfffffffc);
            break;
        }
        while (reinterpret_cast<signed char>(esi4->f32) < reinterpret_cast<signed char>(8)) {
            eax180 = esi4->f0;
            if (!eax180->f4) 
                goto addr_4102c1_9;
            edx181 = esi4->f28;
            ebx182 = 0;
            *reinterpret_cast<signed char*>(&ebx182) = *eax180->f0;
            esi4->f32 = esi4->f32 + 8;
            esi4->f28 = edx181 << 8 | ebx182;
            eax180->f0 = eax180->f0 + 1;
            esi4->f0->f4 = esi4->f0->f4 - 1;
            esi4->f0->f8 = esi4->f0->f8 + 1;
            if (esi4->f0->f8) 
                continue;
            esi4->f0->f12 = esi4->f0->f12 + 1;
        }
        ecx183 = esi4->f32 + 0xfffffff8;
        eax184 = esi4->f28 >> *reinterpret_cast<signed char*>(&ecx183);
        esi4->f32 = esi4->f32 + 0xfffffff8;
        eax185 = eax184 & 0xff;
        if (*reinterpret_cast<signed char*>(&eax185) == 83) {
        case 9:
            esi4->f4 = 19;
        } else {
            ebx38 = v55;
            edi8 = reinterpret_cast<void**>(0xfffffffc);
            break;
        }
        while (reinterpret_cast<signed char>(esi4->f32) < reinterpret_cast<signed char>(8)) {
            eax186 = esi4->f0;
            if (!eax186->f4) 
                goto addr_4102c1_9;
            edx187 = esi4->f28;
            ebx188 = 0;
            *reinterpret_cast<signed char*>(&ebx188) = *eax186->f0;
            esi4->f32 = esi4->f32 + 8;
            esi4->f28 = edx187 << 8 | ebx188;
            eax186->f0 = eax186->f0 + 1;
            esi4->f0->f4 = esi4->f0->f4 - 1;
            esi4->f0->f8 = esi4->f0->f8 + 1;
            if (esi4->f0->f8) 
                continue;
            esi4->f0->f12 = esi4->f0->f12 + 1;
        }
        ecx189 = esi4->f32 + 0xfffffff8;
        eax190 = esi4->f28 >> *reinterpret_cast<signed char*>(&ecx189);
        esi4->f32 = esi4->f32 + 0xfffffff8;
        eax191 = eax190 & 0xff;
        if (*reinterpret_cast<signed char*>(&eax191) == 89) {
            eax192 = esi4->f44;
            esi4->f3160 = 0;
            esi4->f44 = eax192 + 1;
        } else {
            ebx38 = v55;
            edi8 = reinterpret_cast<void**>(0xfffffffc);
            break;
        }
    case 10:
        esi4->f4 = 20;
        while (reinterpret_cast<signed char>(esi4->f32) < reinterpret_cast<signed char>(8)) {
            eax193 = esi4->f0;
            if (!eax193->f4) 
                goto addr_4102c1_9;
            edx194 = esi4->f28;
            ebx195 = 0;
            *reinterpret_cast<signed char*>(&ebx195) = *eax193->f0;
            esi4->f32 = esi4->f32 + 8;
            esi4->f28 = edx194 << 8 | ebx195;
            eax193->f0 = eax193->f0 + 1;
            esi4->f0->f4 = esi4->f0->f4 - 1;
            esi4->f0->f8 = esi4->f0->f8 + 1;
            if (esi4->f0->f8) 
                continue;
            esi4->f0->f12 = esi4->f0->f12 + 1;
        }
        ecx196 = esi4->f32 + 0xfffffff8;
        eax197 = esi4->f28 >> *reinterpret_cast<signed char*>(&ecx196);
        ecx198 = esi4->f3160;
        esi4->f32 = esi4->f32 + 0xfffffff8;
        esi4->f3160 = ecx198 << 8 | eax197 & 0xff & 0xff;
    case 11:
        esi4->f4 = 21;
        while (reinterpret_cast<signed char>(esi4->f32) < reinterpret_cast<signed char>(8)) {
            eax199 = esi4->f0;
            if (!eax199->f4) 
                goto addr_4102c1_9;
            edx200 = esi4->f28;
            ebx201 = 0;
            *reinterpret_cast<signed char*>(&ebx201) = *eax199->f0;
            esi4->f32 = esi4->f32 + 8;
            esi4->f28 = edx200 << 8 | ebx201;
            eax199->f0 = eax199->f0 + 1;
            esi4->f0->f4 = esi4->f0->f4 - 1;
            esi4->f0->f8 = esi4->f0->f8 + 1;
            if (esi4->f0->f8) 
                continue;
            esi4->f0->f12 = esi4->f0->f12 + 1;
        }
        ecx202 = esi4->f32 + 0xfffffff8;
        eax203 = esi4->f28 >> *reinterpret_cast<signed char*>(&ecx202);
        ecx204 = esi4->f3160;
        esi4->f32 = esi4->f32 + 0xfffffff8;
        esi4->f3160 = ecx204 << 8 | eax203 & 0xff & 0xff;
    case 12:
        esi4->f4 = 22;
        while (reinterpret_cast<signed char>(esi4->f32) < reinterpret_cast<signed char>(8)) {
            eax205 = esi4->f0;
            if (!eax205->f4) 
                goto addr_4102c1_9;
            edx206 = esi4->f28;
            ebx207 = 0;
            *reinterpret_cast<signed char*>(&ebx207) = *eax205->f0;
            esi4->f32 = esi4->f32 + 8;
            esi4->f28 = edx206 << 8 | ebx207;
            eax205->f0 = eax205->f0 + 1;
            esi4->f0->f4 = esi4->f0->f4 - 1;
            esi4->f0->f8 = esi4->f0->f8 + 1;
            if (esi4->f0->f8) 
                continue;
            esi4->f0->f12 = esi4->f0->f12 + 1;
        }
        ecx208 = esi4->f32 + 0xfffffff8;
        eax209 = esi4->f28 >> *reinterpret_cast<signed char*>(&ecx208);
        ecx210 = esi4->f3160;
        esi4->f32 = esi4->f32 + 0xfffffff8;
        esi4->f3160 = ecx210 << 8 | eax209 & 0xff & 0xff;
    case 13:
        esi4->f4 = 23;
        while (reinterpret_cast<signed char>(esi4->f32) < reinterpret_cast<signed char>(8)) {
            eax211 = esi4->f0;
            if (!eax211->f4) 
                goto addr_4102c1_9;
            edx212 = esi4->f28;
            ebx213 = 0;
            *reinterpret_cast<signed char*>(&ebx213) = *eax211->f0;
            esi4->f32 = esi4->f32 + 8;
            esi4->f28 = edx212 << 8 | ebx213;
            eax211->f0 = eax211->f0 + 1;
            esi4->f0->f4 = esi4->f0->f4 - 1;
            esi4->f0->f8 = esi4->f0->f8 + 1;
            if (esi4->f0->f8) 
                continue;
            esi4->f0->f12 = esi4->f0->f12 + 1;
        }
        ecx214 = esi4->f32 + 0xfffffff8;
        eax215 = esi4->f28 >> *reinterpret_cast<signed char*>(&ecx214);
        ecx216 = esi4->f3160;
        esi4->f32 = esi4->f32 + 0xfffffff8;
        esi4->f3160 = ecx216 << 8 | eax215 & 0xff & 0xff;
    case 14:
        esi4->f4 = 24;
        while (reinterpret_cast<signed char>(esi4->f32) < reinterpret_cast<signed char>(1)) {
            eax217 = esi4->f0;
            if (!eax217->f4) 
                goto addr_4102c1_9;
            edx218 = esi4->f28;
            ebx219 = 0;
            *reinterpret_cast<signed char*>(&ebx219) = *eax217->f0;
            esi4->f32 = esi4->f32 + 8;
            esi4->f28 = edx218 << 8 | ebx219;
            eax217->f0 = eax217->f0 + 1;
            esi4->f0->f4 = esi4->f0->f4 - 1;
            esi4->f0->f8 = esi4->f0->f8 + 1;
            if (esi4->f0->f8) 
                continue;
            esi4->f0->f12 = esi4->f0->f12 + 1;
        }
        edx220 = esi4->f32;
        eax221 = esi4->f28;
        esi4->f52 = reinterpret_cast<void**>(0);
        ecx222 = edx220 + 0xffffffff;
        eax223 = eax221 >> *reinterpret_cast<signed char*>(&ecx222) & 1;
        esi4->f32 = edx220 - 1;
        esi4->f16 = *reinterpret_cast<signed char*>(&eax223);
    case 15:
        esi4->f4 = 25;
        while (reinterpret_cast<signed char>(esi4->f32) < reinterpret_cast<signed char>(8)) {
            eax224 = esi4->f0;
            if (!eax224->f4) 
                goto addr_4102c1_9;
            edx225 = esi4->f28;
            ebx226 = 0;
            *reinterpret_cast<signed char*>(&ebx226) = *eax224->f0;
            esi4->f32 = esi4->f32 + 8;
            esi4->f28 = edx225 << 8 | ebx226;
            eax224->f0 = eax224->f0 + 1;
            esi4->f0->f4 = esi4->f0->f4 - 1;
            esi4->f0->f8 = esi4->f0->f8 + 1;
            if (esi4->f0->f8) 
                continue;
            esi4->f0->f12 = esi4->f0->f12 + 1;
        }
        ecx227 = esi4->f32 + 0xfffffff8;
        eax228 = esi4->f28 >> *reinterpret_cast<signed char*>(&ecx227);
        ecx229 = esi4->f52;
        esi4->f32 = esi4->f32 + 0xfffffff8;
        esi4->f52 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx229) << 8 | eax228 & 0xff & 0xff);
    case 16:
        esi4->f4 = 26;
        while (reinterpret_cast<signed char>(esi4->f32) < reinterpret_cast<signed char>(8)) {
            eax230 = esi4->f0;
            if (!eax230->f4) 
                goto addr_4102c1_9;
            edx231 = esi4->f28;
            ebx232 = 0;
            *reinterpret_cast<signed char*>(&ebx232) = *eax230->f0;
            esi4->f32 = esi4->f32 + 8;
            esi4->f28 = edx231 << 8 | ebx232;
            eax230->f0 = eax230->f0 + 1;
            esi4->f0->f4 = esi4->f0->f4 - 1;
            esi4->f0->f8 = esi4->f0->f8 + 1;
            if (esi4->f0->f8) 
                continue;
            esi4->f0->f12 = esi4->f0->f12 + 1;
        }
        ecx233 = esi4->f32 + 0xfffffff8;
        eax234 = esi4->f28 >> *reinterpret_cast<signed char*>(&ecx233);
        ecx235 = esi4->f52;
        esi4->f32 = esi4->f32 + 0xfffffff8;
        esi4->f52 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx235) << 8 | eax234 & 0xff & 0xff);
    case 17:
        esi4->f4 = 27;
        while (reinterpret_cast<signed char>(esi4->f32) < reinterpret_cast<signed char>(8)) {
            eax236 = esi4->f0;
            if (!eax236->f4) 
                goto addr_4102c1_9;
            edx237 = esi4->f28;
            ebx238 = 0;
            *reinterpret_cast<signed char*>(&ebx238) = *eax236->f0;
            esi4->f32 = esi4->f32 + 8;
            esi4->f28 = edx237 << 8 | ebx238;
            eax236->f0 = eax236->f0 + 1;
            esi4->f0->f4 = esi4->f0->f4 - 1;
            esi4->f0->f8 = esi4->f0->f8 + 1;
            if (esi4->f0->f8) 
                continue;
            esi4->f0->f12 = esi4->f0->f12 + 1;
        }
        ecx239 = esi4->f32 + 0xfffffff8;
        edx240 = esi4->f28 >> *reinterpret_cast<signed char*>(&ecx239);
        esi4->f32 = esi4->f32 + 0xfffffff8;
        eax241 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi4->f52) << 8 | edx240 & 0xff & 0xff);
        esi4->f52 = eax241;
        if (!__intrinsic()) {
            ecx242 = esi4->f36 + esi4->f36 * 4;
            ecx243 = ecx242 + ecx242 * 4;
            ecx244 = ecx243 + ecx243 * 4;
            ecx245 = ecx244 + ecx244 * 4;
            if (reinterpret_cast<signed char>(eax241) <= reinterpret_cast<signed char>((ecx245 + ecx245 * 4 << 5) + 10)) {
                v12 = reinterpret_cast<void**>(0);
                while (reinterpret_cast<signed char>(v12) < reinterpret_cast<signed char>(16)) {
                case 18:
                    esi4->f4 = 28;
                    while (reinterpret_cast<signed char>(esi4->f32) < reinterpret_cast<signed char>(1)) {
                        eax246 = esi4->f0;
                        if (!eax246->f4) 
                            goto addr_4102c1_9;
                        edx247 = esi4->f28;
                        ebx248 = 0;
                        *reinterpret_cast<signed char*>(&ebx248) = *eax246->f0;
                        esi4->f32 = esi4->f32 + 8;
                        esi4->f28 = edx247 << 8 | ebx248;
                        eax246->f0 = eax246->f0 + 1;
                        esi4->f0->f4 = esi4->f0->f4 - 1;
                        esi4->f0->f8 = esi4->f0->f8 + 1;
                        if (esi4->f0->f8) 
                            continue;
                        esi4->f0->f12 = esi4->f0->f12 + 1;
                    }
                    ecx249 = esi4->f32 + 0xffffffff;
                    eax250 = esi4->f28 >> *reinterpret_cast<signed char*>(&ecx249) & 1;
                    esi4->f32 = esi4->f32 - 1;
                    if (*reinterpret_cast<signed char*>(&eax250) != 1) {
                        *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(v12) + reinterpret_cast<uint32_t>(esi4) + 0xd6c) = 0;
                    } else {
                        *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(v12) + reinterpret_cast<uint32_t>(esi4) + 0xd6c) = 1;
                    }
                    ++v12;
                }
            } else {
                ebx38 = v55;
                edi8 = reinterpret_cast<void**>(0xfffffffc);
                break;
            }
        } else {
            ebx38 = v55;
            edi8 = reinterpret_cast<void**>(0xfffffffc);
            break;
        }
        edi251 = &esi4->f3180;
        ecx252 = 64;
        v12 = reinterpret_cast<void**>(0);
        while (ecx252) {
            --ecx252;
            *edi251 = 0;
            ++edi251;
            esi4 = reinterpret_cast<struct s17*>(&esi4->f4);
        }
        while (reinterpret_cast<signed char>(v12) < reinterpret_cast<signed char>(16)) {
            if (*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(v12) + reinterpret_cast<uint32_t>(esi4) + 0xd6c)) {
                v14 = reinterpret_cast<void**>(0);
                while (reinterpret_cast<signed char>(v14) < reinterpret_cast<signed char>(16)) {
                case 19:
                    esi4->f4 = 29;
                    while (reinterpret_cast<signed char>(esi4->f32) < reinterpret_cast<signed char>(1)) {
                        eax253 = esi4->f0;
                        if (!eax253->f4) 
                            goto addr_4102c1_9;
                        edx254 = esi4->f28;
                        ebx255 = 0;
                        *reinterpret_cast<signed char*>(&ebx255) = *eax253->f0;
                        esi4->f32 = esi4->f32 + 8;
                        esi4->f28 = edx254 << 8 | ebx255;
                        eax253->f0 = eax253->f0 + 1;
                        esi4->f0->f4 = esi4->f0->f4 - 1;
                        esi4->f0->f8 = esi4->f0->f8 + 1;
                        if (esi4->f0->f8) 
                            continue;
                        esi4->f0->f12 = esi4->f0->f12 + 1;
                    }
                    ecx256 = esi4->f32 + 0xffffffff;
                    eax257 = esi4->f28 >> *reinterpret_cast<signed char*>(&ecx256) & 1;
                    esi4->f32 = esi4->f32 - 1;
                    if (*reinterpret_cast<signed char*>(&eax257) == 1) {
                        *reinterpret_cast<signed char*>((reinterpret_cast<unsigned char>(v12) << 4) + reinterpret_cast<unsigned char>(v14) + reinterpret_cast<uint32_t>(esi4) + 0xc6c) = 1;
                    }
                    ++v14;
                }
            }
            ++v12;
        }
        fun_410490(esi4);
        esp5 = esp5 - 4 - 4 + 4 + 4;
        if (esi4->f3176) {
            v16 = esi4->f3176 + 2;
        } else {
            ebx38 = v55;
            edi8 = reinterpret_cast<void**>(0xfffffffc);
            break;
        }
    case 20:
        esi4->f4 = 30;
        while (reinterpret_cast<signed char>(esi4->f32) < reinterpret_cast<signed char>(3)) {
            eax258 = esi4->f0;
            if (!eax258->f4) 
                goto addr_4102c1_9;
            edx259 = esi4->f28;
            ebx260 = 0;
            *reinterpret_cast<signed char*>(&ebx260) = *eax258->f0;
            esi4->f32 = esi4->f32 + 8;
            esi4->f28 = edx259 << 8 | ebx260;
            eax258->f0 = eax258->f0 + 1;
            esi4->f0->f4 = esi4->f0->f4 - 1;
            esi4->f0->f8 = esi4->f0->f8 + 1;
            if (esi4->f0->f8) 
                continue;
            esi4->f0->f12 = esi4->f0->f12 + 1;
        }
        ecx261 = esi4->f32 + 0xfffffffd;
        eax262 = esi4->f28 >> *reinterpret_cast<signed char*>(&ecx261);
        esi4->f32 = esi4->f32 + 0xfffffffd;
        eax263 = reinterpret_cast<void**>(eax262 & 7);
        v22 = eax263;
        if (reinterpret_cast<signed char>(eax263) < reinterpret_cast<signed char>(2) || reinterpret_cast<signed char>(eax263) > reinterpret_cast<signed char>(6)) {
            ebx38 = v55;
            edi8 = reinterpret_cast<void**>(0xfffffffc);
            break;
        } else {
        case 21:
            esi4->f4 = 31;
        }
        while (reinterpret_cast<signed char>(esi4->f32) < reinterpret_cast<signed char>(15)) {
            eax264 = esi4->f0;
            if (!eax264->f4) 
                goto addr_4102c1_9;
            edx265 = esi4->f28;
            ebx266 = 0;
            *reinterpret_cast<signed char*>(&ebx266) = *eax264->f0;
            esi4->f32 = esi4->f32 + 8;
            esi4->f28 = edx265 << 8 | ebx266;
            eax264->f0 = eax264->f0 + 1;
            esi4->f0->f4 = esi4->f0->f4 - 1;
            esi4->f0->f8 = esi4->f0->f8 + 1;
            if (esi4->f0->f8) 
                continue;
            esi4->f0->f12 = esi4->f0->f12 + 1;
        }
        ecx267 = esi4->f32 + 0xfffffff1;
        eax268 = esi4->f28 >> *reinterpret_cast<signed char*>(&ecx267);
        esi4->f32 = esi4->f32 + 0xfffffff1;
        eax269 = reinterpret_cast<void**>(eax268 & 0x7fff);
        edi270 = eax269;
        v26 = edi270;
        if (reinterpret_cast<signed char>(eax269) >= reinterpret_cast<signed char>(1)) {
            v12 = reinterpret_cast<void**>(0);
            while (reinterpret_cast<signed char>(v12) < reinterpret_cast<signed char>(edi270)) {
                v14 = reinterpret_cast<void**>(0);
                do {
                case 22:
                    esi4->f4 = 32;
                    while (reinterpret_cast<signed char>(esi4->f32) < reinterpret_cast<signed char>(1)) {
                        eax271 = esi4->f0;
                        if (!eax271->f4) 
                            goto addr_4102c1_9;
                        edx272 = esi4->f28;
                        ebx273 = 0;
                        *reinterpret_cast<signed char*>(&ebx273) = *eax271->f0;
                        esi4->f32 = esi4->f32 + 8;
                        esi4->f28 = edx272 << 8 | ebx273;
                        eax271->f0 = eax271->f0 + 1;
                        esi4->f0->f4 = esi4->f0->f4 - 1;
                        esi4->f0->f8 = esi4->f0->f8 + 1;
                        if (esi4->f0->f8) 
                            continue;
                        esi4->f0->f12 = esi4->f0->f12 + 1;
                    }
                    ecx274 = esi4->f32 + 0xffffffff;
                    eax275 = esi4->f28 >> *reinterpret_cast<signed char*>(&ecx274) & 1;
                    esi4->f32 = esi4->f32 - 1;
                    if (!*reinterpret_cast<signed char*>(&eax275)) 
                        break;
                    eax276 = v14 + 1;
                    v14 = eax276;
                } while (reinterpret_cast<signed char>(eax276) < reinterpret_cast<signed char>(v22));
                goto addr_40ee87_249;
                edi270 = v26;
                *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(v12) + reinterpret_cast<uint32_t>(esi4) + 0x650e) = *reinterpret_cast<signed char*>(&v14);
                ++v12;
            }
        } else {
            ebx38 = v55;
            edi8 = reinterpret_cast<void**>(0xfffffffc);
            break;
        }
        edx277 = v22;
        cl278 = 0;
        if (reinterpret_cast<signed char>(edx277) > reinterpret_cast<signed char>(0)) {
            eax279 = reinterpret_cast<void**>(0);
            do {
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esp5) + reinterpret_cast<unsigned char>(eax279) + 0x7c) = cl278;
                cl278 = reinterpret_cast<signed char>(cl278 + 1);
                *reinterpret_cast<signed char*>(&v18) = cl278;
                eax279 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v18) & 0xff);
            } while (reinterpret_cast<signed char>(eax279) < reinterpret_cast<signed char>(edx277));
        }
        v12 = reinterpret_cast<void**>(0);
        if (reinterpret_cast<signed char>(edi270) > reinterpret_cast<signed char>(0)) {
            ebp280 = v26;
            do {
                dl281 = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi4) + reinterpret_cast<unsigned char>(v12) + 0x650e);
                *reinterpret_cast<signed char*>(&v18) = dl281;
                eax282 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(v18) & 0xff);
                bl283 = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esp5) + reinterpret_cast<uint32_t>(eax282) + 0x7c);
                ecx284 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esp5) + reinterpret_cast<uint32_t>(eax282) + 0x7c);
                if (dl281) {
                    edi285 = eax282;
                    do {
                        *ecx284 = *(ecx284 - 1);
                        --ecx284;
                        edi285 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edi285) - 1);
                    } while (edi285);
                }
                *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(v12) + reinterpret_cast<uint32_t>(esi4) + 0x1ebc) = bl283;
                eax286 = v12 + 1;
                v12 = eax286;
            } while (reinterpret_cast<signed char>(eax286) < reinterpret_cast<signed char>(ebp280));
        }
        v18 = reinterpret_cast<void**>(0);
        while (reinterpret_cast<signed char>(v18) < reinterpret_cast<signed char>(v22)) {
        case 23:
            esi4->f4 = 33;
            while (reinterpret_cast<signed char>(esi4->f32) < reinterpret_cast<signed char>(5)) {
                eax287 = esi4->f0;
                if (!eax287->f4) 
                    goto addr_4102c1_9;
                edx288 = esi4->f28;
                ebx289 = 0;
                *reinterpret_cast<signed char*>(&ebx289) = *eax287->f0;
                esi4->f32 = esi4->f32 + 8;
                esi4->f28 = edx288 << 8 | ebx289;
                eax287->f0 = eax287->f0 + 1;
                esi4->f0->f4 = esi4->f0->f4 - 1;
                esi4->f0->f8 = esi4->f0->f8 + 1;
                if (esi4->f0->f8) 
                    continue;
                esi4->f0->f12 = esi4->f0->f12 + 1;
            }
            edx290 = esi4->f32;
            eax291 = esi4->f28;
            v12 = reinterpret_cast<void**>(0);
            ecx292 = edx290 + 0xfffffffb;
            esi4->f32 = edx290 + 0xfffffffb;
            v45 = reinterpret_cast<void**>(eax291 >> *reinterpret_cast<signed char*>(&ecx292) & 31);
            while (reinterpret_cast<signed char>(v12) < reinterpret_cast<signed char>(v16)) {
                while (reinterpret_cast<signed char>(v45) >= reinterpret_cast<signed char>(1) && reinterpret_cast<signed char>(v45) <= reinterpret_cast<signed char>(20)) {
                case 24:
                    esi4->f4 = 34;
                    while (reinterpret_cast<signed char>(esi4->f32) < reinterpret_cast<signed char>(1)) {
                        eax293 = esi4->f0;
                        if (!eax293->f4) 
                            goto addr_4102c1_9;
                        edx294 = esi4->f28;
                        ebx295 = 0;
                        *reinterpret_cast<signed char*>(&ebx295) = *eax293->f0;
                        esi4->f32 = esi4->f32 + 8;
                        esi4->f28 = edx294 << 8 | ebx295;
                        eax293->f0 = eax293->f0 + 1;
                        esi4->f0->f4 = esi4->f0->f4 - 1;
                        esi4->f0->f8 = esi4->f0->f8 + 1;
                        if (esi4->f0->f8) 
                            continue;
                        esi4->f0->f12 = esi4->f0->f12 + 1;
                    }
                    ecx296 = esi4->f32 + 0xffffffff;
                    eax297 = esi4->f28 >> *reinterpret_cast<signed char*>(&ecx296) & 1;
                    esi4->f32 = esi4->f32 - 1;
                    if (!*reinterpret_cast<signed char*>(&eax297)) 
                        goto addr_40f041_277;
                case 25:
                    esi4->f4 = 35;
                    while (reinterpret_cast<signed char>(esi4->f32) < reinterpret_cast<signed char>(1)) {
                        eax298 = esi4->f0;
                        if (!eax298->f4) 
                            goto addr_4102c1_9;
                        edx299 = esi4->f28;
                        ebx300 = 0;
                        *reinterpret_cast<signed char*>(&ebx300) = *eax298->f0;
                        esi4->f32 = esi4->f32 + 8;
                        esi4->f28 = edx299 << 8 | ebx300;
                        eax298->f0 = eax298->f0 + 1;
                        esi4->f0->f4 = esi4->f0->f4 - 1;
                        esi4->f0->f8 = esi4->f0->f8 + 1;
                        if (esi4->f0->f8) 
                            continue;
                        esi4->f0->f12 = esi4->f0->f12 + 1;
                    }
                    ecx301 = esi4->f32 + 0xffffffff;
                    eax302 = esi4->f28 >> *reinterpret_cast<signed char*>(&ecx301) & 1;
                    esi4->f32 = esi4->f32 - 1;
                    if (*reinterpret_cast<signed char*>(&eax302)) {
                        eax303 = v45 - 1;
                    } else {
                        eax303 = v45 + 1;
                    }
                    v45 = eax303;
                }
                goto addr_41008b_85;
                addr_40f041_277:
                *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(v12 + ((reinterpret_cast<unsigned char>(v18) << 7) + reinterpret_cast<unsigned char>(v18)) * 2) + reinterpret_cast<uint32_t>(esi4) + 0xab60) = *reinterpret_cast<signed char*>(&v45);
                ++v12;
            }
            ++v18;
        }
        v18 = reinterpret_cast<void**>(0);
        if (!(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(v22) < reinterpret_cast<signed char>(0)) | reinterpret_cast<uint1_t>(v22 == 0))) {
            edi304 = reinterpret_cast<struct s40*>(&esi4->f51612);
            v305 = &esi4->f63996;
            ebx306 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi4) + 0xab60);
            v307 = v22;
            v18 = v22;
            do {
                ecx308 = 0;
                edx309 = reinterpret_cast<void**>(0);
                ebp310 = 32;
                if (!(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(v16) < reinterpret_cast<signed char>(0)) | reinterpret_cast<uint1_t>(v16 == 0))) {
                    do {
                        eax311 = 0;
                        *reinterpret_cast<signed char*>(&eax311) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(ebx306) + reinterpret_cast<unsigned char>(edx309));
                        if (eax311 > ecx308) {
                            ecx308 = eax311;
                        }
                        if (eax311 < ebp310) {
                            ebp310 = eax311;
                        }
                        ++edx309;
                    } while (reinterpret_cast<signed char>(edx309) < reinterpret_cast<signed char>(v16));
                }
                fun_4104d0(reinterpret_cast<uint32_t>(edi304) - 0x1830, edi304, &edi304->f6192, ebx306, ebp310, ecx308, v16);
                ebx306 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebx306) + 0x102);
                edi304 = reinterpret_cast<struct s40*>(reinterpret_cast<uint32_t>(edi304) + 0x408);
                *v305 = ebp310;
                ++v305;
                eax312 = v307 - 1;
                v307 = eax312;
            } while (eax312);
        }
        edi313 = &esi4->f64;
        v20 = esi4->f3176 + 1;
        ecx314 = 0x100;
        edx315 = reinterpret_cast<void**>(15);
        eax316 = esi4->f36 + esi4->f36 * 4;
        v32 = reinterpret_cast<void**>(0);
        v12 = reinterpret_cast<void**>(0x100);
        v317 = reinterpret_cast<void**>(15);
        eax318 = eax316 + eax316 * 4;
        eax319 = eax318 + eax318 * 4;
        eax320 = eax319 + eax319 * 4;
        v34 = reinterpret_cast<void**>(eax320 + eax320 * 4 << 5);
        while (ecx314) {
            --ecx314;
            *edi313 = 0;
            ++edi313;
            esi4 = reinterpret_cast<struct s17*>(&esi4->f4);
        }
        eax321 = reinterpret_cast<void*>(0xfff);
        edi322 = &esi4->f7864;
        do {
            ecx323 = 15;
            dl324 = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&edx315) << 4);
            do {
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax321) + reinterpret_cast<uint32_t>(esi4) + 0xe7c) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&ecx323) + dl324);
                eax321 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(eax321) - 1);
                --ecx323;
            } while (ecx323 >= 0);
            *edi322 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(eax321) + 1);
            edx315 = v317 - 1;
            --edi322;
            v317 = edx315;
        } while (reinterpret_cast<signed char>(edx315) >= reinterpret_cast<signed char>(0));
        v39 = reinterpret_cast<void**>(0);
        v28 = reinterpret_cast<void**>(0);
        if (reinterpret_cast<signed char>(v26) > reinterpret_cast<signed char>(0)) {
            eax325 = reinterpret_cast<void**>(0);
            v32 = reinterpret_cast<void**>(49);
            *reinterpret_cast<signed char*>(&eax325) = esi4->f7868;
            v43 = eax325;
            ecx326 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esi4) + reinterpret_cast<unsigned char>(eax325) * 4 + 0xf9fc);
            v53 = ecx326;
            v55 = ecx326;
            eax327 = reinterpret_cast<struct s41*>(reinterpret_cast<uint32_t>(esi4) + ((reinterpret_cast<unsigned char>(eax325) << 7) + reinterpret_cast<unsigned char>(eax325)) * 8);
            v56 = reinterpret_cast<void**>(&eax327->f45420);
            v57 = reinterpret_cast<void**>(&eax327->f57804);
            v49 = reinterpret_cast<void**>(&eax327->f51612);
        } else {
            ebx38 = v55;
            edi8 = reinterpret_cast<void**>(0xfffffffc);
            break;
        }
    case 26:
        ebx38 = v55;
        esi4->f4 = 36;
        while (reinterpret_cast<signed char>(esi4->f32) < reinterpret_cast<signed char>(ebx38)) {
            eax328 = esi4->f0;
            if (!eax328->f4) 
                goto addr_40fe12_310;
            ebp329 = esi4->f28;
            edx330 = 0;
            *reinterpret_cast<signed char*>(&edx330) = *eax328->f0;
            esi4->f32 = esi4->f32 + 8;
            esi4->f28 = ebp329 << 8 | edx330;
            eax328->f0 = eax328->f0 + 1;
            esi4->f0->f4 = esi4->f0->f4 - 1;
            esi4->f0->f8 = esi4->f0->f8 + 1;
            if (esi4->f0->f8) 
                continue;
            esi4->f0->f12 = esi4->f0->f12 + 1;
        }
        eax331 = esi4->f28;
        edx332 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi4->f32) - reinterpret_cast<unsigned char>(ebx38));
        ecx333 = edx332;
        esi4->f32 = edx332;
        ecx334 = ebx38;
        eax335 = reinterpret_cast<void**>(eax331 >> *reinterpret_cast<signed char*>(&ecx333) & reinterpret_cast<uint32_t>((1 << *reinterpret_cast<unsigned char*>(&ecx334)) - 1));
        v47 = eax335;
        while (reinterpret_cast<signed char>(ebx38) <= reinterpret_cast<signed char>(20)) {
            if (reinterpret_cast<signed char>(eax335) <= reinterpret_cast<signed char>(*reinterpret_cast<void***>(v56 + reinterpret_cast<unsigned char>(ebx38) * 4))) 
                goto addr_40f3a7_316;
            ++ebx38;
            v55 = ebx38;
            addr_40f308_318:
            esi4->f4 = 37;
            while (reinterpret_cast<signed char>(esi4->f32) < reinterpret_cast<signed char>(1)) {
                eax336 = esi4->f0;
                if (!eax336->f4) 
                    goto addr_40fe12_310;
                ebp337 = esi4->f28;
                edx338 = 0;
                *reinterpret_cast<signed char*>(&edx338) = *eax336->f0;
                esi4->f32 = esi4->f32 + 8;
                esi4->f28 = ebp337 << 8 | edx338;
                eax336->f0 = eax336->f0 + 1;
                esi4->f0->f4 = esi4->f0->f4 - 1;
                esi4->f0->f8 = esi4->f0->f8 + 1;
                if (esi4->f0->f8) 
                    continue;
                esi4->f0->f12 = esi4->f0->f12 + 1;
            }
            ecx339 = esi4->f32 + 0xffffffff;
            eax340 = reinterpret_cast<void**>(esi4->f28 >> *reinterpret_cast<signed char*>(&ecx339) & 1);
            esi4->f32 = esi4->f32 - 1;
            edx341 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v47) + reinterpret_cast<unsigned char>(v47) | reinterpret_cast<unsigned char>(eax340));
            v51 = eax340;
            v47 = edx341;
            eax335 = edx341;
        }
        edi8 = reinterpret_cast<void**>(0xfffffffc);
        break;
        addr_40f3a7_316:
        eax342 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax335) - reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(v49 + reinterpret_cast<unsigned char>(ebx38) * 4)));
        if (reinterpret_cast<int32_t>(eax342) < reinterpret_cast<int32_t>(0) || reinterpret_cast<int32_t>(eax342) >= reinterpret_cast<int32_t>(0x102)) {
            edi8 = reinterpret_cast<void**>(0xfffffffc);
            break;
        } else {
            do {
                v24 = *reinterpret_cast<void***>(v57 + reinterpret_cast<uint32_t>(eax342) * 4);
                while (v24 != v20) {
                    if (!v24) 
                        goto addr_40f785_329;
                    if (v24 != 1) 
                        goto addr_40f4a2_331;
                    addr_40f785_329:
                    v30 = reinterpret_cast<void**>(0xffffffff);
                    v41 = reinterpret_cast<void**>(1);
                    do {
                        if (v24) {
                            if (reinterpret_cast<int1_t>(v24 == 1)) {
                                v30 = v30 + reinterpret_cast<unsigned char>(v41) * 2;
                            }
                        } else {
                            v30 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v30) + reinterpret_cast<unsigned char>(v41));
                        }
                        ecx343 = v32;
                        v41 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v41) + reinterpret_cast<unsigned char>(v41));
                        if (!ecx343) {
                            eax344 = v28 + 1;
                            v28 = eax344;
                            if (reinterpret_cast<signed char>(eax344) >= reinterpret_cast<signed char>(v26)) 
                                goto addr_40f7e5_338;
                            edx345 = reinterpret_cast<void**>(0);
                            ecx343 = reinterpret_cast<void**>(50);
                            *reinterpret_cast<signed char*>(&edx345) = *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(eax344) + reinterpret_cast<uint32_t>(esi4) + 0x1ebc);
                            v43 = edx345;
                            v53 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esi4) + reinterpret_cast<unsigned char>(edx345) * 4 + 0xf9fc);
                            eax346 = reinterpret_cast<struct s42*>(reinterpret_cast<uint32_t>(esi4) + ((reinterpret_cast<unsigned char>(edx345) << 7) + reinterpret_cast<unsigned char>(edx345)) * 8);
                            v56 = reinterpret_cast<void**>(&eax346->f45420);
                            v57 = reinterpret_cast<void**>(&eax346->f57804);
                            v49 = reinterpret_cast<void**>(&eax346->f51612);
                        }
                        ebx38 = v53;
                        v32 = ecx343 - 1;
                        v55 = ebx38;
                        addr_40f848_341:
                        esi4->f4 = 38;
                        while (reinterpret_cast<signed char>(esi4->f32) < reinterpret_cast<signed char>(ebx38)) {
                            eax347 = esi4->f0;
                            if (!eax347->f4) 
                                goto addr_40fe12_310;
                            ebp348 = esi4->f28;
                            edx349 = 0;
                            *reinterpret_cast<signed char*>(&edx349) = *eax347->f0;
                            esi4->f32 = esi4->f32 + 8;
                            esi4->f28 = ebp348 << 8 | edx349;
                            eax347->f0 = eax347->f0 + 1;
                            esi4->f0->f4 = esi4->f0->f4 - 1;
                            esi4->f0->f8 = esi4->f0->f8 + 1;
                            if (esi4->f0->f8) 
                                continue;
                            esi4->f0->f12 = esi4->f0->f12 + 1;
                        }
                        eax350 = esi4->f28;
                        edx351 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi4->f32) - reinterpret_cast<unsigned char>(ebx38));
                        ecx352 = edx351;
                        esi4->f32 = edx351;
                        ecx353 = ebx38;
                        eax354 = reinterpret_cast<void**>(eax350 >> *reinterpret_cast<signed char*>(&ecx352) & reinterpret_cast<uint32_t>((1 << *reinterpret_cast<unsigned char*>(&ecx353)) - 1));
                        v47 = eax354;
                        while (reinterpret_cast<signed char>(ebx38) <= reinterpret_cast<signed char>(20)) {
                            if (reinterpret_cast<signed char>(eax354) <= reinterpret_cast<signed char>(*reinterpret_cast<void***>(v56 + reinterpret_cast<unsigned char>(ebx38) * 4))) 
                                goto addr_40f967_349;
                            ++ebx38;
                            v55 = ebx38;
                            addr_40f8e5_351:
                            esi4->f4 = 39;
                            while (reinterpret_cast<signed char>(esi4->f32) < reinterpret_cast<signed char>(1)) {
                                eax355 = esi4->f0;
                                if (!eax355->f4) 
                                    goto addr_40fe12_310;
                                ebp356 = esi4->f28;
                                edx357 = 0;
                                *reinterpret_cast<signed char*>(&edx357) = *eax355->f0;
                                esi4->f32 = esi4->f32 + 8;
                                esi4->f28 = ebp356 << 8 | edx357;
                                eax355->f0 = eax355->f0 + 1;
                                esi4->f0->f4 = esi4->f0->f4 - 1;
                                esi4->f0->f8 = esi4->f0->f8 + 1;
                                if (esi4->f0->f8) 
                                    continue;
                                esi4->f0->f12 = esi4->f0->f12 + 1;
                            }
                            ecx358 = esi4->f32 + 0xffffffff;
                            eax359 = reinterpret_cast<void**>(esi4->f28 >> *reinterpret_cast<signed char*>(&ecx358) & 1);
                            esi4->f32 = esi4->f32 - 1;
                            edx360 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v47) + reinterpret_cast<unsigned char>(v47) | reinterpret_cast<unsigned char>(eax359));
                            v51 = eax359;
                            v47 = edx360;
                            eax354 = edx360;
                        }
                        goto addr_40f8c3_357;
                        addr_40f967_349:
                        eax361 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax354) - reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(v49 + reinterpret_cast<unsigned char>(ebx38) * 4)));
                        if (reinterpret_cast<int32_t>(eax361) < reinterpret_cast<int32_t>(0)) 
                            goto addr_40f449_358;
                        if (reinterpret_cast<int32_t>(eax361) >= reinterpret_cast<int32_t>(0x102)) 
                            goto addr_40f449_358;
                        eax362 = *reinterpret_cast<void***>(v57 + reinterpret_cast<uint32_t>(eax361) * 4);
                        v24 = eax362;
                    } while (!eax362 || eax362 == 1);
                    ecx363 = reinterpret_cast<void*>(0);
                    *reinterpret_cast<signed char*>(&ecx363) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esi4->f7804) + reinterpret_cast<uint32_t>(esi4) + 0xe7c);
                    edx364 = v30 + 1;
                    v30 = edx364;
                    cl365 = *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ecx363) + reinterpret_cast<uint32_t>(esi4) + 0xd7c);
                    *reinterpret_cast<unsigned char*>(&v366) = cl365;
                    eax367 = v366 & 0xff;
                    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esi4) + eax367 * 4 + 64) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esi4) + eax367 * 4 + 64) + reinterpret_cast<unsigned char>(edx364);
                    if (!esi4->f40) {
                        if (reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(edx364) < reinterpret_cast<signed char>(0)) | reinterpret_cast<uint1_t>(edx364 == 0)) 
                            continue;
                        edx368 = v30;
                        edi369 = v34;
                        ecx370 = v39;
                        do {
                            if (reinterpret_cast<signed char>(ecx370) >= reinterpret_cast<signed char>(edi369)) 
                                goto addr_40f449_358;
                            ebp371 = esi4->f3148;
                            ++ecx370;
                            --edx368;
                            v39 = ecx370;
                            *reinterpret_cast<uint32_t*>(ebp371 + reinterpret_cast<unsigned char>(ecx370) * 4 - 4) = eax367;
                            v30 = edx368;
                        } while (!reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(edx368) < reinterpret_cast<signed char>(0)) | reinterpret_cast<uint1_t>(edx368 == 0)));
                    } else {
                        if (reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(edx364) < reinterpret_cast<signed char>(0)) | reinterpret_cast<uint1_t>(edx364 == 0)) 
                            continue;
                        eax372 = v39;
                        do {
                            if (reinterpret_cast<signed char>(eax372) >= reinterpret_cast<signed char>(v34)) 
                                goto addr_40fa0b_370;
                            ++eax372;
                            *reinterpret_cast<uint16_t*>(esi4->f3152 + reinterpret_cast<unsigned char>(eax372) * 2 - 2) = cl365;
                            --edx364;
                        } while (!reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(edx364) < reinterpret_cast<signed char>(0)) | reinterpret_cast<uint1_t>(edx364 == 0)));
                        v30 = edx364;
                        v39 = eax372;
                    }
                }
                break;
                addr_40f4a2_331:
                if (reinterpret_cast<signed char>(v39) >= reinterpret_cast<signed char>(v34)) 
                    goto addr_40f4ae_373;
                ecx373 = v24 - 1;
                if (reinterpret_cast<unsigned char>(ecx373) >= reinterpret_cast<unsigned char>(16)) {
                    edx374 = reinterpret_cast<unsigned char>(ecx373) >> 4;
                    edi375 = reinterpret_cast<struct s43*>(reinterpret_cast<uint32_t>(esi4) + edx374 * 4 + 0x1e7c);
                    ecx376 = reinterpret_cast<void*>((reinterpret_cast<unsigned char>(ecx373) & 15) + reinterpret_cast<uint32_t>(*reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esi4) + edx374 * 4 + 0x1e7c)));
                    less_or_equal377 = reinterpret_cast<int32_t>(ecx376) <= reinterpret_cast<int32_t>(*reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esi4) + edx374 * 4 + 0x1e7c));
                    bl378 = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(ecx376) + reinterpret_cast<uint32_t>(esi4) + 0xe7c);
                    *reinterpret_cast<signed char*>(&v379) = bl378;
                    if (!less_or_equal377) {
                        do {
                            *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(ecx376) + reinterpret_cast<uint32_t>(esi4) + 0xe7c) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(ecx376) + reinterpret_cast<uint32_t>(esi4) + 0xe7b);
                            ecx376 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx376) - 1);
                        } while (reinterpret_cast<int32_t>(ecx376) > reinterpret_cast<int32_t>(edi375->f0));
                    }
                    edi375->f0 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edi375->f0) + 1);
                    if (!(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(edx374) < reinterpret_cast<int32_t>(0)) | reinterpret_cast<uint1_t>(edx374 == 0))) {
                        eax380 = edi375;
                        edi381 = edx374;
                        do {
                            eax380 = reinterpret_cast<struct s43*>(reinterpret_cast<uint32_t>(eax380) - 4);
                            edx382 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax380->f0) - 1);
                            --edi381;
                            eax380->f4 = edx382;
                            *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edx382) + reinterpret_cast<uint32_t>(esi4) + 0xe7c) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi4) + reinterpret_cast<uint32_t>(eax380->f0) + 0xe8b);
                        } while (edi381);
                    }
                    ecx383 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esi4->f7804) - 1);
                    esi4->f7804 = ecx383;
                    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ecx383) + reinterpret_cast<uint32_t>(esi4) + 0xe7c) = bl378;
                    if (!esi4->f7804) {
                        eax384 = reinterpret_cast<void*>(0xfff);
                        ecx385 = &esi4->f7864;
                        ebp386 = 16;
                        do {
                            edi387 = reinterpret_cast<void*>(15);
                            do {
                                edx388 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(edi387) + reinterpret_cast<int32_t>(*ecx385));
                                eax384 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(eax384) - 1);
                                edi387 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(edi387) - 1);
                                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax384) + reinterpret_cast<uint32_t>(esi4) + 0xe7d) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edx388) + reinterpret_cast<uint32_t>(esi4) + 0xe7c);
                            } while (reinterpret_cast<int32_t>(edi387) >= 0);
                            *ecx385 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(eax384) + 1);
                            --ecx385;
                            --ebp386;
                        } while (ebp386);
                    }
                } else {
                    edi389 = esi4->f7804;
                    v390 = edi389;
                    eax391 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(edi389) + reinterpret_cast<unsigned char>(ecx373));
                    *reinterpret_cast<signed char*>(&v379) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax391) + reinterpret_cast<uint32_t>(esi4) + 0xe7c);
                    if (reinterpret_cast<unsigned char>(ecx373) > reinterpret_cast<unsigned char>(3)) {
                        edx392 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi4) + 0xe7b);
                        eax393 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax391) + reinterpret_cast<uint32_t>(edx392));
                        v394 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi4) - reinterpret_cast<uint32_t>(edx392) + 0xe7c);
                        ebp395 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi4) - reinterpret_cast<uint32_t>(edx392) + 0xe7a);
                        v396 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi4) - reinterpret_cast<uint32_t>(edx392) + 0xe78);
                        v397 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi4) - reinterpret_cast<uint32_t>(edx392) + 0xe79);
                        edi398 = reinterpret_cast<unsigned char>(ecx373) >> 2;
                        do {
                            ecx373 = ecx373 - 4;
                            *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(v394) + reinterpret_cast<uint32_t>(eax393)) = *eax393;
                            *eax393 = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax393) + reinterpret_cast<uint32_t>(ebp395));
                            *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax393) + reinterpret_cast<uint32_t>(ebp395)) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(v397) + reinterpret_cast<uint32_t>(eax393));
                            *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(v397) + reinterpret_cast<uint32_t>(eax393)) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(v396) + reinterpret_cast<uint32_t>(eax393));
                            eax393 = eax393 - 4;
                            --edi398;
                        } while (edi398);
                        edi389 = v390;
                    }
                    if (ecx373) {
                        eax399 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(edi389) + reinterpret_cast<uint32_t>(esi4) + 0xe7c);
                        do {
                            *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(ecx373) + reinterpret_cast<uint32_t>(eax399)) = *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(ecx373) + reinterpret_cast<uint32_t>(eax399) - 1);
                            --ecx373;
                        } while (ecx373);
                    }
                    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edi389) + reinterpret_cast<uint32_t>(esi4) + 0xe7c) = *reinterpret_cast<signed char*>(&v379);
                }
                ecx400 = 0;
                eax401 = reinterpret_cast<void*>(v379 & 0xff);
                *reinterpret_cast<signed char*>(&ecx400) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax401) + reinterpret_cast<uint32_t>(esi4) + 0xd7c);
                eax402 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax401) + reinterpret_cast<uint32_t>(esi4) + 0xd7c);
                *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esi4) + ecx400 * 4 + 64) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esi4) + ecx400 * 4 + 64) + 1;
                if (!esi4->f40) {
                    edx403 = reinterpret_cast<void**>(0);
                    *reinterpret_cast<unsigned char*>(&edx403) = *eax402;
                    esi4->f3148[reinterpret_cast<unsigned char>(v39) * 4] = edx403;
                } else {
                    esi4->f3152[reinterpret_cast<unsigned char>(v39) * 2] = reinterpret_cast<unsigned char>(static_cast<uint16_t>(*eax402));
                }
                ++v39;
                ecx404 = v32;
                if (!ecx404) {
                    eax405 = v28 + 1;
                    v28 = eax405;
                    if (reinterpret_cast<signed char>(eax405) >= reinterpret_cast<signed char>(v26)) 
                        goto addr_40f6a5_398;
                    edx406 = reinterpret_cast<void**>(0);
                    ecx404 = reinterpret_cast<void**>(50);
                    *reinterpret_cast<signed char*>(&edx406) = *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(eax405) + reinterpret_cast<uint32_t>(esi4) + 0x1ebc);
                    v43 = edx406;
                    v53 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esi4) + reinterpret_cast<unsigned char>(edx406) * 4 + 0xf9fc);
                    eax407 = reinterpret_cast<struct s44*>(reinterpret_cast<uint32_t>(esi4) + ((reinterpret_cast<unsigned char>(edx406) << 7) + reinterpret_cast<unsigned char>(edx406)) * 8);
                    v56 = reinterpret_cast<void**>(&eax407->f45420);
                    v57 = reinterpret_cast<void**>(&eax407->f57804);
                    v49 = reinterpret_cast<void**>(&eax407->f51612);
                }
                v32 = ecx404 - 1;
                v55 = v53;
            case 30:
                ebx38 = v55;
                esi4->f4 = 40;
                while (reinterpret_cast<signed char>(esi4->f32) < reinterpret_cast<signed char>(ebx38)) {
                    eax408 = esi4->f0;
                    if (!eax408->f4) 
                        goto addr_40fe12_310;
                    ebp409 = esi4->f28;
                    edx410 = 0;
                    *reinterpret_cast<signed char*>(&edx410) = *eax408->f0;
                    esi4->f32 = esi4->f32 + 8;
                    esi4->f28 = ebp409 << 8 | edx410;
                    eax408->f0 = eax408->f0 + 1;
                    esi4->f0->f4 = esi4->f0->f4 - 1;
                    esi4->f0->f8 = esi4->f0->f8 + 1;
                    if (esi4->f0->f8) 
                        continue;
                    esi4->f0->f12 = esi4->f0->f12 + 1;
                }
                eax411 = esi4->f28;
                edx412 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi4->f32) - reinterpret_cast<unsigned char>(ebx38));
                ecx413 = edx412;
                esi4->f32 = edx412;
                ecx414 = ebx38;
                eax415 = reinterpret_cast<void**>(eax411 >> *reinterpret_cast<signed char*>(&ecx413) & reinterpret_cast<uint32_t>((1 << *reinterpret_cast<unsigned char*>(&ecx414)) - 1));
                v47 = eax415;
                while (reinterpret_cast<signed char>(ebx38) <= reinterpret_cast<signed char>(20)) {
                    if (reinterpret_cast<signed char>(eax415) <= reinterpret_cast<signed char>(*reinterpret_cast<void***>(v56 + reinterpret_cast<unsigned char>(ebx38) * 4))) 
                        goto addr_40f466_409;
                    ++ebx38;
                    v55 = ebx38;
                    addr_40f3c9_411:
                    esi4->f4 = 41;
                    while (reinterpret_cast<signed char>(esi4->f32) < reinterpret_cast<signed char>(1)) {
                        eax416 = esi4->f0;
                        if (!eax416->f4) 
                            goto addr_40fe12_310;
                        ebp417 = esi4->f28;
                        edx418 = 0;
                        *reinterpret_cast<signed char*>(&edx418) = *eax416->f0;
                        esi4->f32 = esi4->f32 + 8;
                        esi4->f28 = ebp417 << 8 | edx418;
                        eax416->f0 = eax416->f0 + 1;
                        esi4->f0->f4 = esi4->f0->f4 - 1;
                        esi4->f0->f8 = esi4->f0->f8 + 1;
                        if (esi4->f0->f8) 
                            continue;
                        esi4->f0->f12 = esi4->f0->f12 + 1;
                    }
                    ecx419 = esi4->f32 + 0xffffffff;
                    eax420 = reinterpret_cast<void**>(esi4->f28 >> *reinterpret_cast<signed char*>(&ecx419) & 1);
                    esi4->f32 = esi4->f32 - 1;
                    v51 = eax420;
                    eax415 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax420) | reinterpret_cast<unsigned char>(v47) + reinterpret_cast<unsigned char>(v47));
                    v47 = eax415;
                }
                goto addr_40f449_358;
                addr_40f466_409:
                eax342 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax415) - reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(v49 + reinterpret_cast<unsigned char>(ebx38) * 4)));
            } while (reinterpret_cast<int32_t>(eax342) >= reinterpret_cast<int32_t>(0) && reinterpret_cast<int32_t>(eax342) < reinterpret_cast<int32_t>(0x102));
            goto addr_40f449_358;
        }
        if (reinterpret_cast<signed char>(esi4->f52) < reinterpret_cast<signed char>(0) || (edi421 = v39, reinterpret_cast<signed char>(esi4->f52) >= reinterpret_cast<signed char>(edi421))) {
            addr_40f449_358:
            edi8 = reinterpret_cast<void**>(0xfffffffc);
            break;
        } else {
            eax422 = &esi4->f1096;
            esi4->f12 = reinterpret_cast<void**>(0);
            esi4->f8 = 0;
            esi4->f1092 = reinterpret_cast<void**>(0);
            esi4->f3168 = 0xffffffff;
            esi4->f4 = 2;
            ecx423 = eax422;
            edx424 = 0x100;
            do {
                *ecx423 = *(ecx423 - 0x102);
                ++ecx423;
                --edx424;
            } while (edx424);
            ecx425 = 0x100;
            do {
                *eax422 = *eax422 + *(eax422 - 1);
                ++eax422;
                --ecx425;
            } while (ecx425);
            if (esi4->f40) 
                goto addr_40fac6_423;
        }
        edx426 = reinterpret_cast<void**>(0);
        v12 = reinterpret_cast<void**>(0);
        if (reinterpret_cast<signed char>(edi421) > reinterpret_cast<signed char>(0)) {
            do {
                ecx427 = esi4->f3148;
                *reinterpret_cast<void***>(&v428) = ecx427[reinterpret_cast<unsigned char>(edx426) * 4];
                eax429 = v428 & 0xff;
                eax430 = reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esi4) + eax429 * 4 + 0x444);
                ecx431 = ecx427 + *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esi4) + eax429 * 4 + 0x444) * 4;
                *ecx431 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*ecx431) | reinterpret_cast<unsigned char>(edx426) << 8);
                ++edx426;
                *eax430 = *eax430 + 1;
            } while (reinterpret_cast<signed char>(edx426) < reinterpret_cast<signed char>(v39));
            v12 = edx426;
        }
        eax432 = esi4->f3148;
        edx433 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax432[reinterpret_cast<unsigned char>(esi4->f52) * 4]) >> 8);
        zf434 = esi4->f16 == 0;
        esi4->f56 = edx433;
        esi4->f1088 = reinterpret_cast<void**>(0);
        if (zf434) {
            edx435 = eax432[reinterpret_cast<unsigned char>(esi4->f56) * 4];
            eax436 = reinterpret_cast<unsigned char>(0);
            *reinterpret_cast<signed char*>(&eax436) = *reinterpret_cast<signed char*>(&edx435);
            esi4->f56 = edx435;
            esi4->f60 = eax436;
            esi4->f56 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx435) >> 8);
            esi4->f1088 = reinterpret_cast<void**>(1);
        } else {
            esi4->f20 = reinterpret_cast<void**>(0);
            esi4->f24 = reinterpret_cast<void**>(0);
            edx437 = eax432[reinterpret_cast<unsigned char>(edx433) * 4];
            eax438 = reinterpret_cast<unsigned char>(0);
            esi4->f56 = edx437;
            esi4->f56 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx437) >> 8);
            *reinterpret_cast<signed char*>(&eax438) = *reinterpret_cast<signed char*>(&edx437);
            esi4->f60 = eax438;
            esi4->f1088 = reinterpret_cast<void**>(1);
            ecx439 = g41ae68;
            esi4->f20 = ecx439;
            edx440 = ecx439 - 1;
            esi4->f24 = reinterpret_cast<void**>(1);
            esi4->f20 = edx440;
            edx441 = 0;
            *reinterpret_cast<unsigned char*>(&edx441) = reinterpret_cast<uint1_t>(edx440 == 1);
            edi8 = reinterpret_cast<void**>(0);
            esi4->f60 = reinterpret_cast<unsigned char>(esi4->f60 ^ edx441);
            break;
        }
        addr_40fe12_310:
        edi8 = reinterpret_cast<void**>(0);
        break;
        addr_40fac6_423:
        eax442 = &esi4->f2120;
        ecx443 = 0x101;
        do {
            *eax442 = *(eax442 - 0x101);
            ++eax442;
            --ecx443;
        } while (ecx443);
        eax444 = reinterpret_cast<void**>(0);
        if (!(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(edi421) < reinterpret_cast<signed char>(0)) | reinterpret_cast<uint1_t>(edi421 == 0))) 
            goto addr_40fae5_432;
        addr_40fb5f_433:
        edx445 = esi4->f52;
        ecx446 = esi4->f3156;
        ebx447 = 0;
        edi448 = 0;
        v12 = edx445;
        *reinterpret_cast<signed char*>(&ebx447) = *reinterpret_cast<signed char*>((reinterpret_cast<signed char>(edx445) >> 1) + reinterpret_cast<int32_t>(ecx446));
        *reinterpret_cast<unsigned char*>(&edi448) = esi4->f3152[reinterpret_cast<unsigned char>(edx445) * 2];
        v14 = reinterpret_cast<void**>((ebx447 >> reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&edx445) & 1) << 2) & 15) << 16 | edi448);
        do {
            edi449 = esi4->f3152 + reinterpret_cast<unsigned char>(v14) * 2;
            edx450 = reinterpret_cast<void*>(reinterpret_cast<signed char>(v14) >> 1);
            ecx451 = 0;
            ebx452 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v14) & 1);
            *reinterpret_cast<signed char*>(&ecx451) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edx450) + reinterpret_cast<int32_t>(esi4->f3156));
            ecx453 = 0;
            *reinterpret_cast<unsigned char*>(&ecx453) = *edi449;
            *edi449 = *reinterpret_cast<unsigned char*>(&v12);
            edi454 = reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edx450) + reinterpret_cast<int32_t>(esi4->f3156));
            if (ebx452) {
                ecx455 = reinterpret_cast<signed char>(v12) >> 12;
                *edi454 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*edi454 ^ *reinterpret_cast<unsigned char*>(&ecx455)) & 15) ^ *reinterpret_cast<unsigned char*>(&ecx455));
            } else {
                ecx456 = reinterpret_cast<signed char>(v12) >> 16;
                *edi454 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ecx456) | reinterpret_cast<unsigned char>(*edi454 & 0xf0));
            }
            ecx457 = v14;
            v14 = reinterpret_cast<void**>((ecx451 >> reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&ebx452) << 2) & 15) << 16 | ecx453);
            eax458 = esi4->f52;
            v12 = ecx457;
        } while (ecx457 != eax458);
        zf459 = esi4->f16 == 0;
        esi4->f56 = eax458;
        esi4->f1088 = reinterpret_cast<void**>(0);
        if (zf459) {
            eax460 = fun_40d220(eax458, &esi4->f1092, v6, v2);
            edx461 = esi4->f3156;
            esi4->f60 = eax460;
            eax462 = esi4->f56;
            ebx463 = 0;
            *reinterpret_cast<signed char*>(&ebx463) = *reinterpret_cast<signed char*>((reinterpret_cast<unsigned char>(eax462) >> 1) + reinterpret_cast<int32_t>(edx461));
            edx464 = 0;
            *reinterpret_cast<unsigned char*>(&edx464) = esi4->f3152[reinterpret_cast<unsigned char>(eax462) * 2];
            eax465 = esi4->f1088 + 1;
            esi4->f56 = reinterpret_cast<void**>((ebx463 >> reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax462) & 1) << 2) & 15) << 16 | edx464);
            ebx38 = v55;
            esi4->f1088 = eax465;
            edi8 = reinterpret_cast<void**>(0);
            break;
        } else {
            esi4->f20 = reinterpret_cast<void**>(0);
            esi4->f24 = reinterpret_cast<void**>(0);
            eax466 = fun_40d220(eax458, &esi4->f1092, v6, v2);
            edx467 = esi4->f56;
            edi468 = esi4->f3156;
            ebx469 = 0;
            esi4->f60 = eax466;
            *reinterpret_cast<signed char*>(&ebx469) = *reinterpret_cast<signed char*>((reinterpret_cast<unsigned char>(edx467) >> 1) + reinterpret_cast<int32_t>(edi468));
            edi470 = 0;
            *reinterpret_cast<unsigned char*>(&edi470) = esi4->f3152[reinterpret_cast<unsigned char>(edx467) * 2];
            edx471 = esi4->f1088 + 1;
            zf472 = esi4->f20 == 0;
            esi4->f56 = reinterpret_cast<void**>((ebx469 >> reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&edx467) & 1) << 2) & 15) << 16 | edi470);
            esi4->f1088 = edx471;
            if (zf472 && (ecx473 = esi4->f24 + 1, esi4->f20 = *reinterpret_cast<void***>(reinterpret_cast<unsigned char>(esi4->f24) * 4 + 0x41ae68), esi4->f24 = ecx473, reinterpret_cast<int1_t>(ecx473 == 0x200))) {
                esi4->f24 = reinterpret_cast<void**>(0);
            }
            edx474 = 0;
            ebx475 = esi4->f20 - 1;
            esi4->f20 = ebx475;
            ebx38 = v55;
            *reinterpret_cast<unsigned char*>(&edx474) = reinterpret_cast<uint1_t>(ebx475 == 1);
            edi8 = reinterpret_cast<void**>(0);
            esi4->f60 = reinterpret_cast<unsigned char>(edx474 ^ eax466);
            break;
        }
        do {
            addr_40fae5_432:
            ecx476 = esi4->f3152 + reinterpret_cast<unsigned char>(eax444) * 2;
            *reinterpret_cast<unsigned char*>(&v477) = esi4->f3152[reinterpret_cast<unsigned char>(eax444) * 2];
            edx478 = v477 & 0xff;
            edi479 = reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esi4) + edx478 * 4 + 0x848);
            *ecx476 = *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(esi4) + edx478 * 4 + 0x848);
            if (*reinterpret_cast<unsigned char*>(&eax444) & 1) {
                ebp480 = reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(esi4->f3156) + (reinterpret_cast<signed char>(eax444) >> 1));
                ecx481 = *edi479 >> 12;
                *ebp480 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*ebp480 ^ *reinterpret_cast<unsigned char*>(&ecx481)) & 15) ^ *reinterpret_cast<unsigned char*>(&ecx481));
            } else {
                ebp482 = reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(esi4->f3156) + (reinterpret_cast<signed char>(eax444) >> 1));
                ecx483 = *edi479 >> 16;
                *ebp482 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ecx483) | reinterpret_cast<unsigned char>(*ebp482 & 0xf0));
            }
            ++eax444;
            *edi479 = *edi479 + 1;
        } while (reinterpret_cast<signed char>(eax444) < reinterpret_cast<signed char>(v39));
        goto addr_40fb5f_433;
        addr_40f8c3_357:
        edi8 = reinterpret_cast<void**>(0xfffffffc);
        break;
        addr_40f7e5_338:
        edi8 = reinterpret_cast<void**>(0xfffffffc);
        break;
        addr_40fa0b_370:
        v30 = edx364;
        v39 = eax372;
        edi8 = reinterpret_cast<void**>(0xfffffffc);
        break;
        addr_40f4ae_373:
        edi8 = reinterpret_cast<void**>(0xfffffffc);
        break;
        addr_40f6a5_398:
        ebx38 = v55;
        edi8 = reinterpret_cast<void**>(0xfffffffc);
        break;
        addr_40ee87_249:
        ebx38 = v55;
        edi8 = reinterpret_cast<void**>(0xfffffffc);
        break;
    case 27:
        ebx38 = v55;
        goto addr_40f308_318;
    case 28:
        ebx38 = v55;
        goto addr_40f848_341;
    case 29:
        ebx38 = v55;
        goto addr_40f8e5_351;
    case 31:
        ebx38 = v55;
        goto addr_40f3c9_411;
    }
    addr_4102e4_450:
    esi4->f64020 = v12;
    esi4->f64024 = v14;
    esi4->f64028 = v18;
    esi4->f64032 = v16;
    esi4->f64036 = v22;
    esi4->f64040 = v26;
    esi4->f64044 = v20;
    esi4->f64048 = v28;
    esi4->f64052 = v32;
    esi4->f64056 = v24;
    esi4->f64060 = v34;
    esi4->f64064 = v39;
    esi4->f64068 = v30;
    esi4->f64072 = v41;
    esi4->f64076 = v45;
    esi4->f64088 = v47;
    esi4->f64080 = v36;
    esi4->f64100 = v53;
    esi4->f64092 = v51;
    esi4->f64096 = v43;
    esi4->f64112 = v57;
    esi4->f64084 = ebx38;
    esi4->f64104 = v56;
    esi4->f64108 = v49;
    return edi8;
    addr_4102c1_9:
    ebx38 = v55;
    edi8 = reinterpret_cast<void**>(0);
    goto addr_4102e4_450;
}

unsigned char fun_40d220(void** a1, void*** a2, void** a3, void*** a4) {
    void*** esi5;
    void** edi6;
    unsigned char eax7;
    unsigned char edx8;
    unsigned char ecx9;

    esi5 = a2;
    edi6 = a1;
    eax7 = reinterpret_cast<unsigned char>(0);
    edx8 = reinterpret_cast<unsigned char>(0x100);
    do {
        ecx9 = reinterpret_cast<unsigned char>(reinterpret_cast<int32_t>(edx8 + eax7) >> 1);
        if (reinterpret_cast<signed char>(edi6) < reinterpret_cast<signed char>(esi5[ecx9 * 4])) {
            edx8 = ecx9;
        } else {
            eax7 = ecx9;
        }
    } while (edx8 - eax7 != 1);
    return eax7;
}

struct s45 {
    void** f0;
    signed char[3] pad4;
    int32_t f4;
};

void fun_4104d0(int32_t* a1, struct s40* a2, void*** a3, void* a4, int32_t a5, int32_t a6, void** a7) {
    void** ebx8;
    int32_t ebp9;
    int32_t esi10;
    int32_t edi11;
    void** eax12;
    void*** ecx13;
    int32_t edx14;
    struct s40* edx15;
    int32_t ecx16;
    void** eax17;
    struct s40* edi18;
    uint1_t less_or_equal19;
    int32_t ecx20;
    int32_t* eax21;
    int32_t ecx22;
    int32_t* ebx23;
    int32_t ecx24;
    int32_t* edi25;
    int32_t ecx26;
    uint32_t esi27;
    struct s45* eax28;
    void* edi29;
    int32_t ecx30;
    uint32_t esi31;
    int32_t ecx32;
    void*** eax33;
    int32_t* edx34;
    int32_t ebp35;

    ebx8 = a7;
    ebp9 = a6;
    esi10 = 0;
    edi11 = a5;
    if (a5 <= ebp9) {
        do {
            eax12 = reinterpret_cast<void**>(0);
            if (!(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(ebx8) < reinterpret_cast<signed char>(0)) | reinterpret_cast<uint1_t>(ebx8 == 0))) {
                ecx13 = a3 + esi10 * 4;
                do {
                    edx14 = 0;
                    *reinterpret_cast<signed char*>(&edx14) = *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(eax12) + reinterpret_cast<uint32_t>(a4));
                    if (edx14 == edi11) {
                        *ecx13 = eax12;
                        ++esi10;
                        ecx13 = ecx13 + 4;
                    }
                    ebx8 = a7;
                    ++eax12;
                } while (reinterpret_cast<signed char>(eax12) < reinterpret_cast<signed char>(ebx8));
            }
            ++edi11;
        } while (edi11 <= ebp9);
    }
    edx15 = a2;
    ecx16 = 23;
    eax17 = reinterpret_cast<void**>(0);
    edi18 = edx15;
    less_or_equal19 = reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(ebx8) < reinterpret_cast<signed char>(0)) | reinterpret_cast<uint1_t>(ebx8 == 0));
    while (ecx16) {
        --ecx16;
        edi18->f0 = reinterpret_cast<void**>(0);
        edi18 = reinterpret_cast<struct s40*>(&edi18->f4);
    }
    if (!less_or_equal19) {
        do {
            ecx20 = 0;
            *reinterpret_cast<signed char*>(&ecx20) = *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(eax17) + reinterpret_cast<uint32_t>(a4));
            ++eax17;
            *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(edx15) + ecx20 * 4 + 4) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(edx15) + ecx20 * 4 + 4) + 1;
        } while (reinterpret_cast<signed char>(eax17) < reinterpret_cast<signed char>(ebx8));
    }
    eax21 = &edx15->f4;
    ecx22 = 22;
    do {
        *eax21 = *eax21 + *(eax21 - 1);
        ++eax21;
        --ecx22;
    } while (ecx22);
    ebx23 = a1;
    ecx24 = 23;
    edi25 = ebx23;
    while (ecx24) {
        --ecx24;
        *edi25 = 0;
        ++edi25;
    }
    ecx26 = a5;
    esi27 = 0;
    if (ecx26 <= ebp9) {
        eax28 = reinterpret_cast<struct s45*>(reinterpret_cast<uint32_t>(edx15) + ecx26 * 4);
        edi29 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebx23) - reinterpret_cast<uint32_t>(edx15));
        ecx30 = ebp9 - a5 + 1;
        do {
            eax28 = reinterpret_cast<struct s45*>(&eax28->f4);
            esi31 = esi27 + (eax28->f4 - reinterpret_cast<unsigned char>(eax28->f0));
            *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(edi29) + reinterpret_cast<uint32_t>(eax28) - 4) = esi31 - 1;
            esi27 = esi31 << 1;
            --ecx30;
        } while (ecx30);
        ebx23 = a1;
        ecx26 = a5;
    }
    ecx32 = ecx26 + 1;
    if (ecx32 <= ebp9) {
        eax33 = reinterpret_cast<void***>(reinterpret_cast<uint32_t>(edx15) + ecx32 * 4);
        edx34 = ebx23 + ecx32 - 1;
        ebp35 = ebp9 - ecx32 + 1;
        do {
            ++edx34;
            eax33 = eax33 + 4;
            --ebp35;
            *reinterpret_cast<uint32_t*>(eax33 - 4) = *edx34 + *edx34 + 2 - reinterpret_cast<unsigned char>(*eax33);
        } while (ebp35);
    }
    return;
}

struct s46 {
    int32_t f0;
    void** f4;
    signed char[7] pad12;
    int32_t f12;
    signed char[12] pad28;
    int32_t f28;
    int32_t f32;
    signed char[4] pad40;
    int32_t f40;
    signed char[4] pad48;
    int32_t f48;
    int32_t f52;
    int32_t f56;
    void** f60;
};

void fun_412380(void** a1, void** a2);

void fun_410bd0(void** a1, void** a2, struct s1* a3) {
    uint128_t v1;
    void*** eax2;
    unsigned char al3;
    void** eax4;
    int32_t v5;
    void** ecx6;
    int32_t eax7;
    int32_t eax8;
    void** eax9;

    *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v1) + 4) = a1;
    *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v1) + 8) = a2;
    *reinterpret_cast<struct s1**>(reinterpret_cast<int32_t>(&v1) + 12) = a3;
    *reinterpret_cast<int32_t*>(&v1) = reinterpret_cast<int32_t>(__return_address());
    *reinterpret_cast<unsigned char*>(&eax2) = reinterpret_cast<unsigned char>(al3 & 12);
    if (!0) {
        *eax2 = (*reinterpret_cast<struct s46**>(reinterpret_cast<int32_t>(&v1) + 5))->f60;
    }
    if ((*reinterpret_cast<struct s46**>(reinterpret_cast<int32_t>(&v1) + 5))->f0 == 4 || (*reinterpret_cast<struct s46**>(reinterpret_cast<int32_t>(&v1) + 5))->f0 == 5) {
        eax4 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v1) + 9) + 40);
        v5 = (*reinterpret_cast<struct s46**>(reinterpret_cast<int32_t>(&v1) + 5))->f12;
        *reinterpret_cast<void***>(*reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v1) + 9) + 36)(eax4, v5);
    }
    if ((*reinterpret_cast<struct s46**>(reinterpret_cast<int32_t>(&v1) + 5))->f0 == 6) {
        ecx6 = (*reinterpret_cast<struct s46**>(reinterpret_cast<int32_t>(&v1) + 5))->f4;
        fun_412380(ecx6, *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v1) + 9));
    }
    eax7 = (*reinterpret_cast<struct s46**>(reinterpret_cast<int32_t>(&v1) + 5))->f40;
    (*reinterpret_cast<struct s46**>(reinterpret_cast<int32_t>(&v1) + 5))->f0 = 0;
    (*reinterpret_cast<struct s46**>(reinterpret_cast<int32_t>(&v1) + 5))->f52 = eax7;
    (*reinterpret_cast<struct s46**>(reinterpret_cast<int32_t>(&v1) + 5))->f48 = eax7;
    eax8 = (*reinterpret_cast<struct s46**>(reinterpret_cast<int32_t>(&v1) + 5))->f56;
    (*reinterpret_cast<struct s46**>(reinterpret_cast<int32_t>(&v1) + 5))->f28 = 0;
    (*reinterpret_cast<struct s46**>(reinterpret_cast<int32_t>(&v1) + 5))->f32 = 0;
    if (eax8) {
        eax9 = reinterpret_cast<void**>(eax8(0, 0, 0));
        (*reinterpret_cast<struct s46**>(reinterpret_cast<int32_t>(&v1) + 5))->f60 = eax9;
        *reinterpret_cast<void***>(*reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v1) + 9) + 48) = eax9;
    }
    goto *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v1) + 1);
}

int32_t fun_4119f0(void** a1, void** a2) {
    void** ecx3;
    void** v4;
    void** eax5;
    void** v6;
    void** ecx7;

    fun_410bd0(a1, a2, 0);
    ecx3 = *reinterpret_cast<void***>(a2 + 40);
    v4 = *reinterpret_cast<void***>(a1 + 40);
    *reinterpret_cast<void***>(a2 + 36)(ecx3, v4, a1, a2, 0);
    eax5 = *reinterpret_cast<void***>(a2 + 40);
    v6 = *reinterpret_cast<void***>(a1 + 36);
    *reinterpret_cast<void***>(a2 + 36)(eax5, v6, ecx3, v4, a1, a2, 0);
    ecx7 = *reinterpret_cast<void***>(a2 + 40);
    *reinterpret_cast<void***>(a2 + 36)(ecx7, a1, eax5, v6, ecx3, v4, a1, a2, 0);
    return 0;
}

void** fun_410c50(void** a1, void** a2, void* a3) {
    void** v4;
    void** eax5;
    void** ecx6;
    void** eax7;
    void** eax8;
    void** eax9;
    void** edx10;
    void** v11;
    void** eax12;
    void** edx13;

    v4 = *reinterpret_cast<void***>(a1 + 40);
    eax5 = reinterpret_cast<void**>(*reinterpret_cast<void***>(a1 + 32)(v4, 1, 64));
    if (eax5) {
        ecx6 = *reinterpret_cast<void***>(a1 + 40);
        eax7 = reinterpret_cast<void**>(*reinterpret_cast<void***>(a1 + 32)(ecx6, 8, 0x5a0));
        *reinterpret_cast<void***>(eax5 + 36) = eax7;
        if (eax7) {
            eax8 = *reinterpret_cast<void***>(a1 + 40);
            eax9 = reinterpret_cast<void**>(*reinterpret_cast<void***>(a1 + 32)(eax8, 1, a3));
            *reinterpret_cast<void***>(eax5 + 40) = eax9;
            if (eax9) {
                *reinterpret_cast<void***>(eax5 + 44) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax9) + reinterpret_cast<uint32_t>(a3));
                *reinterpret_cast<void***>(eax5 + 56) = a2;
                *reinterpret_cast<void***>(eax5) = reinterpret_cast<void**>(0);
                fun_410bd0(eax5, a1, 0);
                return eax5;
            } else {
                edx10 = *reinterpret_cast<void***>(a1 + 40);
                v11 = *reinterpret_cast<void***>(eax5 + 36);
                *reinterpret_cast<void***>(a1 + 36)(edx10, v11);
                eax12 = *reinterpret_cast<void***>(a1 + 40);
                *reinterpret_cast<void***>(a1 + 36)(eax12, eax5, edx10, v11);
                return 0;
            }
        } else {
            edx13 = *reinterpret_cast<void***>(a1 + 40);
            *reinterpret_cast<void***>(a1 + 36)(edx13, eax5);
            return 0;
        }
    } else {
        return eax5;
    }
}

void fun_412380(void** a1, void** a2) {
    void** v3;

    v3 = *reinterpret_cast<void***>(a2 + 40);
    *reinterpret_cast<void***>(a2 + 36)(v3, a1);
    return;
}

void** fun_412ae0(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6) {
    void** ebx7;
    void** ebp8;
    void** edi9;
    void** v10;
    void** v11;
    void** eax12;
    void** ebp13;
    void** edx14;
    void** eax15;
    void** ecx16;
    void** eax17;
    void** esi18;
    void** edi19;
    void** edx20;
    uint32_t ecx21;
    uint32_t ecx22;
    void** eax23;
    void** ecx24;
    void** v25;
    void** esi26;
    int1_t zf27;
    void** v28;
    void** ebp29;
    void** eax30;
    void** edx31;
    void** eax32;
    void** ecx33;
    void** eax34;
    void** eax35;
    void** edx36;
    void** edi37;
    uint32_t ecx38;
    uint32_t ecx39;

    ebx7 = a2;
    ebp8 = *reinterpret_cast<void***>(ebx7 + 52);
    edi9 = *reinterpret_cast<void***>(ebx7 + 48);
    v10 = *reinterpret_cast<void***>(a3 + 12);
    v11 = edi9;
    if (reinterpret_cast<unsigned char>(edi9) > reinterpret_cast<unsigned char>(ebp8)) {
        ebp8 = *reinterpret_cast<void***>(ebx7 + 44);
    }
    eax12 = *reinterpret_cast<void***>(a3 + 16);
    ebp13 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebp8) - reinterpret_cast<unsigned char>(edi9));
    if (reinterpret_cast<unsigned char>(ebp13) > reinterpret_cast<unsigned char>(eax12)) {
        ebp13 = eax12;
    }
    if (ebp13 && reinterpret_cast<int1_t>(a4 == 0xfffffffb)) {
        a4 = reinterpret_cast<void**>(0);
    }
    edx14 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a3 + 20)) + reinterpret_cast<unsigned char>(ebp13));
    *reinterpret_cast<void***>(a3 + 16) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax12) - reinterpret_cast<unsigned char>(ebp13));
    *reinterpret_cast<void***>(a3 + 20) = edx14;
    eax15 = *reinterpret_cast<void***>(ebx7 + 56);
    if (eax15) {
        ecx16 = *reinterpret_cast<void***>(ebx7 + 60);
        eax17 = reinterpret_cast<void**>(eax15(ecx16, edi9, ebp13));
        *reinterpret_cast<void***>(ebx7 + 60) = eax17;
        *reinterpret_cast<void***>(a3 + 48) = eax17;
    }
    esi18 = edi9;
    edi19 = v10;
    edx20 = ebp13;
    ecx21 = reinterpret_cast<unsigned char>(ebp13) >> 2;
    while (ecx21) {
        --ecx21;
        *reinterpret_cast<void***>(edi19) = *reinterpret_cast<void***>(esi18);
        edi19 = edi19 + 4;
        esi18 = esi18 + 4;
    }
    ecx22 = reinterpret_cast<unsigned char>(edx20) & 3;
    eax23 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v11) + reinterpret_cast<unsigned char>(ebp13));
    while (ecx22) {
        --ecx22;
        *reinterpret_cast<void***>(edi19) = *reinterpret_cast<void***>(esi18);
        ++edi19;
        ++esi18;
    }
    ecx24 = *reinterpret_cast<void***>(ebx7 + 44);
    v25 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v10) + reinterpret_cast<unsigned char>(ebp13));
    if (eax23 == ecx24) {
        esi26 = *reinterpret_cast<void***>(ebx7 + 40);
        zf27 = *reinterpret_cast<void***>(ebx7 + 52) == ecx24;
        v28 = esi26;
        if (zf27) {
            *reinterpret_cast<void***>(ebx7 + 52) = esi26;
        }
        ebp29 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx7 + 52)) - reinterpret_cast<unsigned char>(esi26));
        eax30 = *reinterpret_cast<void***>(a3 + 16);
        if (reinterpret_cast<unsigned char>(ebp29) > reinterpret_cast<unsigned char>(eax30)) {
            ebp29 = eax30;
        }
        if (ebp29 && reinterpret_cast<int1_t>(a4 == 0xfffffffb)) {
            a4 = reinterpret_cast<void**>(0);
        }
        edx31 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a3 + 20)) + reinterpret_cast<unsigned char>(ebp29));
        *reinterpret_cast<void***>(a3 + 16) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax30) - reinterpret_cast<unsigned char>(ebp29));
        *reinterpret_cast<void***>(a3 + 20) = edx31;
        eax32 = *reinterpret_cast<void***>(ebx7 + 56);
        if (eax32) {
            ecx33 = *reinterpret_cast<void***>(ebx7 + 60);
            eax34 = reinterpret_cast<void**>(eax32(ecx33, esi26, ebp29));
            *reinterpret_cast<void***>(ebx7 + 60) = eax34;
            *reinterpret_cast<void***>(a3 + 48) = eax34;
        }
        eax35 = v25;
        edx36 = ebp29;
        edi37 = eax35;
        ecx38 = reinterpret_cast<unsigned char>(ebp29) >> 2;
        while (ecx38) {
            --ecx38;
            *reinterpret_cast<void***>(edi37) = *reinterpret_cast<void***>(esi26);
            edi37 = edi37 + 4;
            esi26 = esi26 + 4;
        }
        v25 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax35) + reinterpret_cast<unsigned char>(ebp29));
        ecx39 = reinterpret_cast<unsigned char>(edx36) & 3;
        eax23 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v28) + reinterpret_cast<unsigned char>(ebp29));
        while (ecx39) {
            --ecx39;
            *reinterpret_cast<void***>(edi37) = *reinterpret_cast<void***>(esi26);
            ++edi37;
            ++esi26;
        }
    }
    *reinterpret_cast<void***>(a3 + 12) = v25;
    *reinterpret_cast<void***>(ebx7 + 48) = eax23;
    return a4;
}

void** fun_412450(void** a1, void** a2, void** a3, void*** a4, signed char* a5, void*** a6, void*** a7, void** a8, void** a9, void*** a10);

void** fun_4123a0(void*** ecx, void** a2, void*** a3, void*** a4, void** a5, void** a6) {
    void** v7;
    void*** eax8;
    void** eax9;
    void** esi10;
    void** edx11;
    void** edx12;

    v7 = *reinterpret_cast<void***>(a6 + 40);
    eax8 = reinterpret_cast<void***>(*reinterpret_cast<void***>(a6 + 32)(v7, 19, 4));
    if (eax8) {
        eax9 = fun_412450(a2, 19, 19, 0, 0, a4, a3, a5, reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4 + 12 - 4 - 4 + 16, eax8);
        esi10 = eax9;
        if (!reinterpret_cast<int1_t>(esi10 == 0xfffffffd)) {
            if (esi10 == 0xfffffffb || !*a3) {
                *reinterpret_cast<void***>(a6 + 24) = reinterpret_cast<void**>("incomplete dynamic bit lengths tree");
                esi10 = reinterpret_cast<void**>(0xfffffffd);
            }
            edx11 = *reinterpret_cast<void***>(a6 + 40);
            *reinterpret_cast<void***>(a6 + 36)(edx11, eax8);
            return esi10;
        } else {
            edx12 = *reinterpret_cast<void***>(a6 + 40);
            *reinterpret_cast<void***>(a6 + 24) = reinterpret_cast<void**>("oversubscribed dynamic bit lengths tree");
            *reinterpret_cast<void***>(a6 + 36)(edx12, eax8);
            return esi10;
        }
    } else {
        return 0xfffffffc;
    }
}

void** fun_412920(void** ecx, void** a2, void** a3, void** a4, void*** a5, void*** a6, void*** a7, void*** a8, void** a9, void** a10) {
    void** eax11;
    void*** eax12;
    void* esp13;
    void** eax14;
    void** esi15;
    void** edx16;
    void** eax17;
    void** esi18;
    void** ecx19;
    void** ecx20;
    void** eax21;
    void** edx22;
    void** ecx23;

    eax11 = *reinterpret_cast<void***>(a10 + 40);
    eax12 = reinterpret_cast<void***>(*reinterpret_cast<void***>(a10 + 32)(eax11, 0x120, 4));
    esp13 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4 + 12);
    if (!eax12) {
        return 0xfffffffc;
    }
    eax14 = fun_412450(a4, a2, 0x101, 0x418548, 0x4185c4, a7, a5, a9, reinterpret_cast<int32_t>(esp13) + 16, eax12);
    esi15 = eax14;
    if (esi15) {
        if (reinterpret_cast<int1_t>(esi15 == 0xfffffffd)) {
            edx16 = *reinterpret_cast<void***>(a10 + 40);
            *reinterpret_cast<void***>(a10 + 24) = reinterpret_cast<void**>("oversubscribed literal/length tree");
            *reinterpret_cast<void***>(a10 + 36)(edx16, eax12);
            return esi15;
        }
        if (esi15 != 0xfffffffc) 
            goto addr_412a8a_7;
    } else {
        if (!*a5) {
            addr_412a8a_7:
            *reinterpret_cast<void***>(a10 + 24) = reinterpret_cast<void**>("incomplete literal/length tree");
            esi15 = reinterpret_cast<void**>(0xfffffffd);
        } else {
            eax17 = fun_412450(a4 + reinterpret_cast<unsigned char>(a2) * 4, a3, esi15, 0x418640, 0x4186b8, a8, a6, a9, reinterpret_cast<int32_t>(esp13) - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4 + 40 + 16, eax12);
            esi18 = eax17;
            if (esi18) {
                if (reinterpret_cast<int1_t>(esi18 == 0xfffffffd)) {
                    ecx19 = *reinterpret_cast<void***>(a10 + 40);
                    *reinterpret_cast<void***>(a10 + 24) = reinterpret_cast<void**>("oversubscribed distance tree");
                    *reinterpret_cast<void***>(a10 + 36)(ecx19, eax12);
                    return esi18;
                }
                if (reinterpret_cast<int1_t>(esi18 == 0xfffffffb)) {
                    ecx20 = *reinterpret_cast<void***>(a10 + 40);
                    *reinterpret_cast<void***>(a10 + 24) = reinterpret_cast<void**>("incomplete distance tree");
                    *reinterpret_cast<void***>(a10 + 36)(ecx20, eax12);
                    return 0xfffffffd;
                }
                if (esi18 == 0xfffffffc) 
                    goto addr_412a53_15; else 
                    goto addr_412a47_16;
            } else {
                if (*a6 || reinterpret_cast<unsigned char>(a2) <= reinterpret_cast<unsigned char>(0x101)) {
                    eax21 = *reinterpret_cast<void***>(a10 + 40);
                    *reinterpret_cast<void***>(a10 + 36)(eax21, eax12);
                    return 0;
                }
            }
        }
    }
    edx22 = *reinterpret_cast<void***>(a10 + 40);
    *reinterpret_cast<void***>(a10 + 36)(edx22, eax12);
    return esi15;
    addr_412a53_15:
    ecx23 = *reinterpret_cast<void***>(a10 + 40);
    *reinterpret_cast<void***>(a10 + 36)(ecx23, eax12);
    return esi18;
    addr_412a47_16:
    *reinterpret_cast<void***>(a10 + 24) = reinterpret_cast<void**>("empty distance tree with lengths");
    esi18 = reinterpret_cast<void**>(0xfffffffd);
    goto addr_412a53_15;
}

void** fun_411b90(void** a1, signed char a2, void** a3, void** a4, void** a5, void** a6, void** a7, int32_t* a8, int32_t* a9, void** a10) {
    void** v11;
    void** eax12;

    v11 = *reinterpret_cast<void***>(a5 + 40);
    eax12 = reinterpret_cast<void**>(*reinterpret_cast<void***>(a5 + 32)(v11, 1, 28));
    if (eax12) {
        *reinterpret_cast<void***>(eax12 + 16) = a1;
        *reinterpret_cast<signed char*>(eax12 + 17) = a2;
        *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(0);
        *reinterpret_cast<void***>(eax12 + 20) = a3;
        *reinterpret_cast<void***>(eax12 + 24) = a4;
    }
    return eax12;
}

struct s47 {
    void** f0;
    signed char f1;
    signed char[2] pad4;
    void** f4;
};

struct s48 {
    void** f0;
    signed char f1;
    signed char[2] pad4;
    void* f4;
};

struct s49 {
    void** f0;
    void** f1;
};

struct s50 {
    void** f0;
    void** f1;
};

void** fun_412c20(int32_t a1, int32_t a2, void** a3, void** a4, void** a5, void** a6) {
    void** ebx7;
    void** esi8;
    void** edx9;
    void** edi10;
    void** v11;
    void** ebp12;
    void** v13;
    void** eax14;
    void* v15;
    uint32_t v16;
    uint32_t v17;
    uint32_t ecx18;
    void** ecx19;
    uint32_t ecx20;
    uint32_t ebx21;
    struct s47* esi22;
    uint32_t ecx23;
    uint32_t ecx24;
    uint32_t ebx25;
    void* eax26;
    void* v27;
    uint32_t ecx28;
    uint32_t edx29;
    uint32_t ecx30;
    void* ecx31;
    void* ecx32;
    uint32_t ecx33;
    uint32_t ecx34;
    uint32_t ebx35;
    struct s48* esi36;
    uint32_t ecx37;
    void* ecx38;
    uint32_t ecx39;
    void** ebx40;
    uint32_t ecx41;
    void** ecx42;
    void* edi43;
    void** ecx44;
    void** ecx45;
    void* edi46;
    void** esi47;
    struct s49* esi48;
    void** ecx49;
    struct s50* esi50;
    void* edi51;
    void* ecx52;
    void* esi53;
    void** ebp54;
    void** edx55;
    void** ecx56;
    void** ebx57;
    void* ecx58;
    void* esi59;
    void** ebp60;
    void** edx61;
    void** ecx62;
    void* ecx63;
    void* esi64;
    void** ebp65;
    void** edx66;
    void** ecx67;

    ebx7 = *reinterpret_cast<void***>(a5 + 52);
    esi8 = *reinterpret_cast<void***>(a5 + 48);
    edx9 = *reinterpret_cast<void***>(a5 + 32);
    edi10 = a6;
    v11 = ebx7;
    ebp12 = *reinterpret_cast<void***>(edi10);
    v13 = *reinterpret_cast<void***>(edi10 + 4);
    eax14 = *reinterpret_cast<void***>(a5 + 28);
    if (reinterpret_cast<unsigned char>(ebx7) >= reinterpret_cast<unsigned char>(esi8)) {
        v15 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a5 + 44)) - reinterpret_cast<unsigned char>(ebx7));
    } else {
        v15 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(esi8) - reinterpret_cast<unsigned char>(ebx7) - 1);
    }
    v16 = *reinterpret_cast<uint32_t*>(a1 * 4 + 0x41ca48);
    v17 = *reinterpret_cast<uint32_t*>(a2 * 4 + 0x41ca48);
    while (1) {
        if (reinterpret_cast<unsigned char>(eax14) < reinterpret_cast<unsigned char>(20)) {
            do {
                --v13;
                ecx18 = 0;
                *reinterpret_cast<void***>(&ecx18) = *reinterpret_cast<void***>(ebp12);
                ecx19 = eax14;
                eax14 = eax14 + 8;
                edx9 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx9) | ecx18 << *reinterpret_cast<unsigned char*>(&ecx19));
                ++ebp12;
            } while (reinterpret_cast<unsigned char>(eax14) < reinterpret_cast<unsigned char>(20));
        }
        ecx20 = v16 & reinterpret_cast<unsigned char>(edx9);
        ebx21 = 0;
        *reinterpret_cast<void***>(&ebx21) = *reinterpret_cast<void***>(a3 + ecx20 * 8);
        esi22 = reinterpret_cast<struct s47*>(a3 + ecx20 * 8);
        if (!ebx21) {
            addr_412e58_8:
            ecx23 = 0;
            *reinterpret_cast<signed char*>(&ecx23) = esi22->f1;
            edx9 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx9) >> *reinterpret_cast<signed char*>(&ecx23));
            eax14 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax14) - ecx23);
            *reinterpret_cast<void***>(v11) = esi22->f4;
            ++v11;
            v15 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(v15) - 1);
        } else {
            ecx24 = 0;
            *reinterpret_cast<signed char*>(&ecx24) = esi22->f1;
            edx9 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx9) >> *reinterpret_cast<signed char*>(&ecx24));
            eax14 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax14) - ecx24);
            if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(&ebx21)) & 16) {
                addr_412d05_10:
                ebx25 = ebx21 & 15;
                eax26 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax14) - ebx25);
                v27 = reinterpret_cast<void*>((*reinterpret_cast<uint32_t*>(ebx25 * 4 + 0x41ca48) & reinterpret_cast<unsigned char>(edx9)) + reinterpret_cast<unsigned char>(esi22->f4));
                ecx28 = ebx25;
                edx29 = reinterpret_cast<unsigned char>(edx9) >> *reinterpret_cast<signed char*>(&ecx28);
                if (reinterpret_cast<uint32_t>(eax26) < 15) {
                    do {
                        --v13;
                        ecx30 = 0;
                        *reinterpret_cast<void***>(&ecx30) = *reinterpret_cast<void***>(ebp12);
                        ecx31 = eax26;
                        eax26 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax26) + 8);
                        edx29 = edx29 | ecx30 << *reinterpret_cast<unsigned char*>(&ecx31);
                        ++ebp12;
                    } while (reinterpret_cast<uint32_t>(eax26) < 15);
                    goto addr_412d42_12;
                }
            } else {
                do {
                    if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(&ebx21)) & 64) 
                        goto addr_412eff_14;
                    ecx32 = reinterpret_cast<void*>((*reinterpret_cast<uint32_t*>(ebx21 * 4 + 0x41ca48) & reinterpret_cast<unsigned char>(edx9)) + reinterpret_cast<unsigned char>(esi22->f4));
                    ebx21 = 0;
                    *reinterpret_cast<void***>(&ebx21) = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esi22) + reinterpret_cast<uint32_t>(ecx32) * 8);
                    esi22 = reinterpret_cast<struct s47*>(reinterpret_cast<uint32_t>(esi22) + reinterpret_cast<uint32_t>(ecx32) * 8);
                    if (!ebx21) 
                        goto addr_412e58_8;
                    ecx33 = 0;
                    *reinterpret_cast<signed char*>(&ecx33) = esi22->f1;
                    edx9 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx9) >> *reinterpret_cast<signed char*>(&ecx33));
                    eax14 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax14) - ecx33);
                } while (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(&ebx21)) & 16));
                goto addr_412d05_10;
            }
        }
        addr_412e78_17:
        if (reinterpret_cast<uint32_t>(v15) < 0x102) 
            break;
        if (reinterpret_cast<unsigned char>(v13) < reinterpret_cast<unsigned char>(10)) 
            break;
        continue;
        addr_412d42_12:
        ecx34 = v17 & edx29;
        ebx35 = 0;
        *reinterpret_cast<void***>(&ebx35) = *reinterpret_cast<void***>(a4 + ecx34 * 8);
        esi36 = reinterpret_cast<struct s48*>(a4 + ecx34 * 8);
        ecx37 = 0;
        *reinterpret_cast<signed char*>(&ecx37) = esi36->f1;
        edx9 = reinterpret_cast<void**>(edx29 >> *reinterpret_cast<signed char*>(&ecx37));
        eax14 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax26) - ecx37);
        if (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(&ebx35)) & 16)) {
            do {
                if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(&ebx35)) & 64) 
                    goto addr_412e92_21;
                ecx38 = reinterpret_cast<void*>((*reinterpret_cast<uint32_t*>(ebx35 * 4 + 0x41ca48) & reinterpret_cast<unsigned char>(edx9)) + reinterpret_cast<uint32_t>(esi36->f4));
                ebx35 = 0;
                *reinterpret_cast<void***>(&ebx35) = (esi36 + static_cast<uint32_t>(ecx38))->f0;
                esi36 = esi36 + static_cast<uint32_t>(ecx38);
                ecx39 = 0;
                *reinterpret_cast<signed char*>(&ecx39) = esi36->f1;
                edx9 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx9) >> *reinterpret_cast<signed char*>(&ecx39));
                eax14 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax14) - ecx39);
            } while (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(&ebx35)) & 16));
        }
        ebx40 = reinterpret_cast<void**>(ebx35 & 15);
        if (reinterpret_cast<unsigned char>(eax14) < reinterpret_cast<unsigned char>(ebx40)) {
            do {
                ecx41 = 0;
                *reinterpret_cast<void***>(&ecx41) = *reinterpret_cast<void***>(ebp12);
                --v13;
                ecx42 = eax14;
                eax14 = eax14 + 8;
                edx9 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx9) | ecx41 << *reinterpret_cast<unsigned char*>(&ecx42));
                ++ebp12;
            } while (reinterpret_cast<unsigned char>(eax14) < reinterpret_cast<unsigned char>(ebx40));
        }
        edi43 = reinterpret_cast<void*>((*reinterpret_cast<uint32_t*>(reinterpret_cast<unsigned char>(ebx40) * 4 + 0x41ca48) & reinterpret_cast<unsigned char>(edx9)) + reinterpret_cast<uint32_t>(esi36->f4));
        ecx44 = ebx40;
        edx9 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx9) >> *reinterpret_cast<signed char*>(&ecx44));
        eax14 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax14) - reinterpret_cast<unsigned char>(ebx40));
        v15 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(v15) - reinterpret_cast<uint32_t>(v27));
        ecx45 = v11;
        if (reinterpret_cast<unsigned char>(ecx45) - reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a5 + 40)) < reinterpret_cast<uint32_t>(edi43)) {
            edi46 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a5 + 40)) - reinterpret_cast<unsigned char>(ecx45) + reinterpret_cast<uint32_t>(edi43));
            esi47 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a5 + 44)) - reinterpret_cast<uint32_t>(edi46));
            if (reinterpret_cast<uint32_t>(v27) > reinterpret_cast<uint32_t>(edi46)) {
                v27 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(v27) - reinterpret_cast<uint32_t>(edi46));
                do {
                    *reinterpret_cast<void***>(ecx45) = *reinterpret_cast<void***>(esi47);
                    ++ecx45;
                    ++esi47;
                    edi46 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edi46) - 1);
                } while (edi46);
                esi47 = *reinterpret_cast<void***>(a5 + 40);
            }
        } else {
            esi48 = reinterpret_cast<struct s49*>(reinterpret_cast<unsigned char>(ecx45) - reinterpret_cast<uint32_t>(edi43));
            ecx49 = ecx45 + 1;
            esi50 = reinterpret_cast<struct s50*>(&esi48->f1);
            *reinterpret_cast<void***>(ecx49 + 0xffffffff) = esi48->f0;
            ecx45 = ecx49 + 1;
            esi47 = reinterpret_cast<void**>(&esi50->f1);
            *reinterpret_cast<void***>(ecx45 + 0xffffffff) = esi50->f0;
            v27 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(v27) - 2);
        }
        do {
            *reinterpret_cast<void***>(ecx45) = *reinterpret_cast<void***>(esi47);
            ++ecx45;
            ++esi47;
            edi51 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(v27) - 1);
            v27 = edi51;
        } while (edi51);
        edi10 = a6;
        v11 = ecx45;
        goto addr_412e78_17;
    }
    ecx52 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi10 + 4)) - reinterpret_cast<unsigned char>(v13));
    esi53 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax14) >> 3);
    if (reinterpret_cast<uint32_t>(esi53) < reinterpret_cast<uint32_t>(ecx52)) {
        ecx52 = esi53;
    }
    ebp54 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebp12) - reinterpret_cast<uint32_t>(ecx52));
    *reinterpret_cast<void***>(a5 + 32) = edx9;
    *reinterpret_cast<void***>(a5 + 28) = eax14 - reinterpret_cast<uint32_t>(ecx52) * 8;
    edx55 = *reinterpret_cast<void***>(edi10);
    *reinterpret_cast<void***>(edi10 + 4) = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ecx52) + reinterpret_cast<unsigned char>(v13));
    ecx56 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi10 + 8)) + (reinterpret_cast<unsigned char>(ebp54) - reinterpret_cast<unsigned char>(edx55)));
    *reinterpret_cast<void***>(edi10) = ebp54;
    *reinterpret_cast<void***>(edi10 + 8) = ecx56;
    *reinterpret_cast<void***>(a5 + 52) = v11;
    return 0;
    addr_412e92_21:
    ebx57 = v13;
    ecx58 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi10 + 4)) - reinterpret_cast<unsigned char>(ebx57));
    esi59 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax14) >> 3);
    *reinterpret_cast<void***>(edi10 + 24) = reinterpret_cast<void**>("invalid distance code");
    if (reinterpret_cast<uint32_t>(esi59) >= reinterpret_cast<uint32_t>(ecx58)) {
        addr_412f71_36:
        ebp60 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebp12) - reinterpret_cast<uint32_t>(ecx58));
        *reinterpret_cast<void***>(a5 + 32) = edx9;
        *reinterpret_cast<void***>(a5 + 28) = eax14 - reinterpret_cast<uint32_t>(ecx58) * 8;
        edx61 = *reinterpret_cast<void***>(edi10);
        *reinterpret_cast<void***>(edi10 + 4) = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ecx58) + reinterpret_cast<unsigned char>(ebx57));
        ecx62 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi10 + 8)) + (reinterpret_cast<unsigned char>(ebp60) - reinterpret_cast<unsigned char>(edx61)));
        *reinterpret_cast<void***>(edi10) = ebp60;
        *reinterpret_cast<void***>(edi10 + 8) = ecx62;
        *reinterpret_cast<void***>(a5 + 52) = v11;
        return 0xfffffffd;
    }
    addr_412f6f_38:
    ecx58 = esi59;
    goto addr_412f71_36;
    addr_412eff_14:
    if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(&ebx21)) & 32) {
        ecx63 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi10 + 4)) - reinterpret_cast<unsigned char>(v13));
        esi64 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax14) >> 3);
        if (reinterpret_cast<uint32_t>(esi64) < reinterpret_cast<uint32_t>(ecx63)) {
            ecx63 = esi64;
        }
        ebp65 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebp12) - reinterpret_cast<uint32_t>(ecx63));
        *reinterpret_cast<void***>(a5 + 32) = edx9;
        *reinterpret_cast<void***>(a5 + 28) = eax14 - reinterpret_cast<uint32_t>(ecx63) * 8;
        edx66 = *reinterpret_cast<void***>(edi10);
        *reinterpret_cast<void***>(edi10 + 4) = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ecx63) + reinterpret_cast<unsigned char>(v13));
        ecx67 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi10 + 8)) + (reinterpret_cast<unsigned char>(ebp65) - reinterpret_cast<unsigned char>(edx66)));
        *reinterpret_cast<void***>(edi10) = ebp65;
        *reinterpret_cast<void***>(edi10 + 8) = ecx67;
        *reinterpret_cast<void***>(a5 + 52) = v11;
        return 1;
    }
    ebx57 = v13;
    ecx58 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi10 + 4)) - reinterpret_cast<unsigned char>(ebx57));
    esi59 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax14) >> 3);
    *reinterpret_cast<void***>(edi10 + 24) = reinterpret_cast<void**>("invalid literal/length code");
    if (reinterpret_cast<uint32_t>(esi59) >= reinterpret_cast<uint32_t>(ecx58)) 
        goto addr_412f71_36; else 
        goto addr_412f6f_38;
}

struct s51 {
    void** f0;
    signed char[3] pad4;
    void** f4;
};

void** fun_412450(void** a1, void** a2, void** a3, void*** a4, signed char* a5, void*** a6, void*** a7, void** a8, void** a9, void*** a10) {
    void** ecx11;
    void** esi12;
    void* esp13;
    void** edi14;
    void** edx15;
    void*** ebx16;
    void** ecx17;
    void** ebp18;
    void** v19;
    void** eax20;
    void** v21;
    void** edx22;
    void** v23;
    void** esi24;
    void** esi25;
    void* ecx26;
    void* v27;
    void** esi28;
    void** v29;
    void** edx30;
    void* ebx31;
    void** edx32;
    void** ebx33;
    void** ecx34;
    int32_t edx35;
    void* ebx36;
    int32_t edx37;
    void*** v38;
    int32_t v39;
    void** v40;
    int32_t v41;
    void** v42;
    void** v43;
    void** esi44;
    void** v45;
    void** v46;
    int32_t edx47;
    int32_t v48;
    void** ecx49;
    uint32_t v50;
    void** edx51;
    void** v52;
    void** ecx53;
    uint32_t eax54;
    uint32_t eax55;
    uint32_t eax56;
    void** edx57;
    void* eax58;
    void* edx59;
    void** eax60;
    void*** edi61;
    void** eax62;
    int32_t v63;
    void* ecx64;
    uint32_t eax65;
    int32_t* ecx66;
    void** v67;
    int32_t edx68;
    uint32_t esi69;
    void* ecx70;
    void* edx71;
    void* ecx72;
    void** eax73;
    struct s51* ecx74;
    void** ecx75;
    uint32_t eax76;
    int32_t edx77;
    void* ecx78;
    void* ecx79;
    int32_t edx80;

    ecx11 = a1;
    esi12 = a2;
    esp13 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 0x100 - 4 - 4 - 4 - 4);
    edi14 = reinterpret_cast<void**>(0);
    edx15 = esi12;
    do {
        ecx11 = ecx11 + 4;
        --edx15;
        *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp13) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx11)) * 4 + 84) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp13) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx11)) * 4 + 84) + 1;
    } while (edx15);
    if (esi12) {
        ebx16 = a7;
        ecx17 = reinterpret_cast<void**>(1);
        ebp18 = *ebx16;
        v19 = ebp18;
        do {
            if (0) 
                break;
            ++ecx17;
        } while (reinterpret_cast<unsigned char>(ecx17) <= reinterpret_cast<unsigned char>(15));
        eax20 = ecx17;
        v21 = eax20;
        if (reinterpret_cast<unsigned char>(ebp18) < reinterpret_cast<unsigned char>(ecx17)) 
            goto addr_412520_8;
    } else {
        *a6 = reinterpret_cast<void**>(0);
        *a7 = reinterpret_cast<void**>(0);
        goto addr_4124e6_10;
    }
    addr_412526_11:
    edx22 = reinterpret_cast<void**>(15);
    do {
        if (0) 
            break;
        --edx22;
    } while (edx22);
    v23 = edx22;
    if (reinterpret_cast<unsigned char>(ebp18) > reinterpret_cast<unsigned char>(edx22)) {
        v19 = edx22;
        ebp18 = edx22;
    }
    *ebx16 = ebp18;
    esi24 = reinterpret_cast<void**>(1 << *reinterpret_cast<unsigned char*>(&ecx17));
    if (reinterpret_cast<unsigned char>(ecx17) < reinterpret_cast<unsigned char>(edx22)) {
        do {
            esi25 = esi24;
            if (reinterpret_cast<signed char>(esi25) < reinterpret_cast<signed char>(0)) 
                goto addr_412586_19;
            ++ecx17;
            esi24 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi25) << 1);
        } while (reinterpret_cast<unsigned char>(ecx17) < reinterpret_cast<unsigned char>(edx22));
    }
    ecx26 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(edx22) * 4);
    v27 = ecx26;
    esi28 = esi24;
    v29 = esi28;
    if (reinterpret_cast<signed char>(esi28) >= reinterpret_cast<signed char>(0)) {
        *reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp13) + reinterpret_cast<uint32_t>(ecx26) + 84) = esi28;
        edx30 = edx22 - 1;
        if (edx30) {
            ebx31 = reinterpret_cast<void*>(0);
            do {
                ebx31 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ebx31) + 4);
                --edx30;
                *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp13) + reinterpret_cast<int32_t>(ebx31) + 0x98) = 0;
            } while (edx30);
        }
        edx32 = a1;
        ebx33 = reinterpret_cast<void**>(0);
        do {
            ecx34 = *reinterpret_cast<void***>(edx32);
            edx32 = edx32 + 4;
            if (ecx34) {
                edx35 = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp13) + reinterpret_cast<unsigned char>(ecx34) * 4 + 0x94);
                a10[edx35 * 4] = ebx33;
                esi28 = v29;
                *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp13) + reinterpret_cast<unsigned char>(ecx34) * 4 + 0x94) = edx35 + 1;
                edx32 = edx32;
            }
            ++ebx33;
        } while (reinterpret_cast<unsigned char>(ebx33) < reinterpret_cast<unsigned char>(a2));
        ebx36 = reinterpret_cast<void*>(-reinterpret_cast<unsigned char>(ebp18));
        edx37 = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp13) + reinterpret_cast<uint32_t>(v27) + 0x94);
        v38 = a10;
        v39 = edx37;
        v40 = reinterpret_cast<void**>(0);
        v41 = -1;
        v42 = reinterpret_cast<void**>(0);
        v43 = reinterpret_cast<void**>(0);
        if (reinterpret_cast<signed char>(eax20) <= reinterpret_cast<signed char>(v23)) 
            goto addr_41264d_30;
    } else {
        addr_412586_19:
        return 0xfffffffd;
    }
    addr_4128e6_31:
    if (esi28 && v23 != 1) {
        return 0xfffffffb;
    }
    addr_4124e6_10:
    return 0;
    addr_41264d_30:
    esi44 = v45;
    v46 = eax20 + 0xffffffff;
    do {
        edx47 = -1;
        v48 = -1;
        if (!1) {
            while (1) {
                ecx49 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ebx36) + reinterpret_cast<unsigned char>(ebp18));
                if (reinterpret_cast<signed char>(eax20) > reinterpret_cast<signed char>(ecx49)) {
                    v50 = reinterpret_cast<uint32_t>(edx47 + 1);
                    while (1) {
                        ebx36 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebx36) + reinterpret_cast<unsigned char>(ebp18));
                        ++v41;
                        edx51 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v23) - reinterpret_cast<uint32_t>(ebx36));
                        v52 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx49) + reinterpret_cast<unsigned char>(ebp18));
                        if (reinterpret_cast<unsigned char>(edx51) > reinterpret_cast<unsigned char>(ebp18)) {
                            edx51 = ebp18;
                        }
                        ecx53 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax20) - reinterpret_cast<uint32_t>(ebx36));
                        eax54 = 1 << *reinterpret_cast<unsigned char*>(&ecx53);
                        if (eax54 > v50 && ((eax55 = eax54 + (-1 - v48), reinterpret_cast<unsigned char>(ecx53) < reinterpret_cast<unsigned char>(edx51)) && (++ecx53, reinterpret_cast<unsigned char>(ecx53) < reinterpret_cast<unsigned char>(edx51)))) {
                            do {
                                eax56 = eax55 << 1;
                                if (eax56 <= 0) 
                                    break;
                                eax55 = eax56;
                                ++ecx53;
                            } while (reinterpret_cast<unsigned char>(ecx53) < reinterpret_cast<unsigned char>(edx51));
                        }
                        edx57 = reinterpret_cast<void**>(1 << *reinterpret_cast<unsigned char*>(&ecx53));
                        eax58 = *a9;
                        v43 = edx57;
                        edx59 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(edx57) + reinterpret_cast<uint32_t>(eax58));
                        if (reinterpret_cast<uint32_t>(edx59) > 0x5a0) 
                            goto addr_412909_43;
                        *a9 = edx59;
                        eax60 = a8 + reinterpret_cast<uint32_t>(eax58) * 8;
                        edi61 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp13) + v41 * 4 + 0xd4);
                        v42 = eax60;
                        *edi61 = eax60;
                        if (!v41) {
                            edi14 = v40;
                            *a6 = eax60;
                        } else {
                            edi14 = v40;
                            eax62 = v19;
                            *reinterpret_cast<unsigned char*>(&v63) = *reinterpret_cast<unsigned char*>(&ecx53);
                            *reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp13) + v41 * 4 + 0x94) = edi14;
                            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&v63) + 1) = *reinterpret_cast<signed char*>(&eax62);
                            ecx64 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebx36) - reinterpret_cast<unsigned char>(eax62));
                            eax65 = reinterpret_cast<unsigned char>(edi14) >> *reinterpret_cast<signed char*>(&ecx64);
                            ecx66 = *reinterpret_cast<int32_t**>(edi61 - 4);
                            esi44 = reinterpret_cast<void**>((reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(v42) - reinterpret_cast<uint32_t>(ecx66)) >> 3) - eax65);
                            ecx66[eax65 * 2] = v63;
                            *reinterpret_cast<void***>(ecx66 + eax65 * 2 + 1) = esi44;
                        }
                        ecx49 = v52;
                        eax20 = v21;
                        if (reinterpret_cast<signed char>(eax20) <= reinterpret_cast<signed char>(ecx49)) 
                            break;
                        ebp18 = v19;
                        eax20 = v21;
                    }
                }
                *reinterpret_cast<signed char*>(&v67 + 1) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax20) - *reinterpret_cast<signed char*>(&ebx36));
                edx68 = v39;
                if (reinterpret_cast<uint32_t>(v38) < reinterpret_cast<uint32_t>(a10 + edx68 * 4)) {
                    esi44 = *v38;
                    if (reinterpret_cast<unsigned char>(esi44) >= reinterpret_cast<unsigned char>(a3)) {
                        esi69 = reinterpret_cast<unsigned char>(esi44) - reinterpret_cast<unsigned char>(a3) << 2;
                        esi44 = *reinterpret_cast<void***>(esi69 + reinterpret_cast<uint32_t>(a4));
                        *reinterpret_cast<unsigned char*>(&v67) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(esi69 + reinterpret_cast<uint32_t>(a5)) + 80);
                    } else {
                        *reinterpret_cast<unsigned char*>(&v67) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&edx68) - reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&edx68) + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&edx68) < reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&edx68) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(esi44) < reinterpret_cast<unsigned char>(0x100)))))) & 0xa0) + 96);
                    }
                    v38 = v38 + 4;
                } else {
                    *reinterpret_cast<unsigned char*>(&v67) = 0xc0;
                }
                ecx70 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax20) - reinterpret_cast<uint32_t>(ebx36));
                edx71 = reinterpret_cast<void*>(1 << *reinterpret_cast<unsigned char*>(&ecx70));
                ecx72 = ebx36;
                eax73 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi14) >> *reinterpret_cast<signed char*>(&ecx72));
                if (reinterpret_cast<unsigned char>(eax73) < reinterpret_cast<unsigned char>(v43)) {
                    ecx74 = reinterpret_cast<struct s51*>(v42 + reinterpret_cast<unsigned char>(eax73) * 8);
                    do {
                        eax73 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax73) + reinterpret_cast<uint32_t>(edx71));
                        ecx74->f0 = v67;
                        ecx74->f4 = esi44;
                        ecx74 = reinterpret_cast<struct s51*>(reinterpret_cast<uint32_t>(ecx74) + reinterpret_cast<uint32_t>(edx71) * 8);
                    } while (reinterpret_cast<unsigned char>(eax73) < reinterpret_cast<unsigned char>(v43));
                }
                ecx75 = v46;
                eax76 = 1 << *reinterpret_cast<unsigned char*>(&ecx75);
                if (reinterpret_cast<unsigned char>(edi14) & eax76) {
                    do {
                        edi14 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi14) ^ eax76);
                        eax76 = eax76 >> 1;
                    } while (reinterpret_cast<unsigned char>(edi14) & eax76);
                }
                edx77 = v41;
                ecx78 = ebx36;
                edi14 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi14) ^ eax76);
                v40 = edi14;
                if ((reinterpret_cast<uint32_t>((1 << *reinterpret_cast<unsigned char*>(&ecx78)) - 1) & reinterpret_cast<unsigned char>(edi14)) != 2) {
                    do {
                        --edx77;
                        ebx36 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebx36) - reinterpret_cast<unsigned char>(v19));
                        ecx79 = ebx36;
                    } while (reinterpret_cast<uint32_t>((1 << *reinterpret_cast<unsigned char*>(&ecx79)) - 1) & reinterpret_cast<unsigned char>(edi14));
                    v41 = edx77;
                }
                ebp18 = v19;
                edx80 = v48;
                --v48;
                eax20 = v21;
                if (!edx80) 
                    break;
                edx47 = v48;
            }
        }
        ++eax20;
        v21 = eax20;
        ++v46;
    } while (reinterpret_cast<signed char>(eax20) <= reinterpret_cast<signed char>(v23));
    esi28 = v29;
    goto addr_4128e6_31;
    addr_412909_43:
    return 0xfffffffc;
    addr_412520_8:
    v19 = ecx17;
    ebp18 = ecx17;
    goto addr_412526_11;
}

void** fun_4141af(void** ecx, void** a2, void** a3) {
    void* ebp4;
    void** v5;
    int1_t zf6;
    int1_t less_or_equal7;
    void** eax8;
    void** eax9;
    void** edx10;
    int32_t eax11;
    void** eax12;
    void** v13;
    void** v14;
    void** v15;
    void** edi16;
    void** esi17;
    void** ebx18;
    void** eax19;
    void** eax20;

    ebp4 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    v5 = ecx;
    zf6 = g41f3e8 == 0;
    if (!zf6) {
        if (reinterpret_cast<signed char>(a2) < reinterpret_cast<signed char>(0x100)) {
            less_or_equal7 = reinterpret_cast<signed char>(g41ee7c) <= reinterpret_cast<signed char>(1);
            if (less_or_equal7) {
                eax8 = g41ec70;
                eax8 = *reinterpret_cast<void***>(eax8 + reinterpret_cast<unsigned char>(a2) * 2);
                eax9 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax8) & reinterpret_cast<unsigned char>(1));
            } else {
                eax9 = fun_4160ba(ecx, a2, 1);
            }
            if (!eax9) 
                goto addr_41420c_7;
        }
        edx10 = g41ec70;
        eax11 = reinterpret_cast<signed char>(a2) >> 8;
        if (!(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(edx10 + *reinterpret_cast<unsigned char*>(&eax11) * 2) + 1) & 0x80)) {
            eax12 = reinterpret_cast<void**>(1);
        } else {
            eax12 = reinterpret_cast<void**>(2);
        }
        v13 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebp4) + 0xfffffffc);
        v14 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebp4) + 8);
        v15 = g41f3e8;
        eax19 = fun_415e6b(v15, 0x100, v14, eax12, v13, 3, 0, 1, edi16, esi17, ebx18, v5, v15, 0x100, v14, eax12, v13, 3, 0, 1, edi16, esi17, ebx18, v5);
        if (!eax19) {
            addr_41420c_7:
            eax20 = a2;
        } else {
            if (!reinterpret_cast<int1_t>(eax19 == 1)) {
                eax20 = reinterpret_cast<void**>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&v5 + 1)) << 8 | static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&v5)));
            } else {
                eax20 = reinterpret_cast<void**>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&v5)));
            }
        }
    } else {
        eax20 = a2;
        if (reinterpret_cast<signed char>(eax20) >= reinterpret_cast<signed char>(65) && reinterpret_cast<signed char>(eax20) <= reinterpret_cast<signed char>(90)) {
            eax20 = eax20 + 32;
        }
    }
    return eax20;
}

uint32_t* fun_41427a(void** ecx, uint32_t a2, void** a3, void** a4) {
    uint32_t ecx5;
    int32_t edx6;
    uint32_t* eax7;
    uint32_t* eax8;

    ecx5 = a2;
    edx6 = 0;
    g41f38c = ecx5;
    eax7 = reinterpret_cast<uint32_t*>(0x41cab0);
    do {
        if (ecx5 == *eax7) 
            break;
        eax7 = eax7 + 2;
        ++edx6;
    } while (reinterpret_cast<int32_t>(eax7) < 0x41cc18);
    goto addr_41429a_4;
    eax8 = *reinterpret_cast<uint32_t**>(edx6 * 8 + 0x41cab4);
    g41f388 = eax8;
    return eax8;
    addr_41429a_4:
    if (ecx5 < 19 || ecx5 > 36) {
        if (ecx5 < 0xbc || (g41f388 = reinterpret_cast<uint32_t*>(8), ecx5 > 0xca)) {
            g41f388 = reinterpret_cast<uint32_t*>(22);
        }
        return eax7;
    } else {
        g41f388 = reinterpret_cast<uint32_t*>(13);
        return eax7;
    }
}

void** fun_413163(void** ecx, void** a2, void** a3, void** a4, void** a5) {
    void** esi6;
    void** eax7;

    esi6 = a2;
    while (reinterpret_cast<unsigned char>(esi6) < reinterpret_cast<unsigned char>(a3)) {
        eax7 = *reinterpret_cast<void***>(esi6);
        if (eax7) {
            eax7 = reinterpret_cast<void**>(eax7());
        }
        esi6 = esi6 + 4;
    }
    return eax7;
}

void** fun_4130ca(int32_t a1, int32_t a2, int32_t a3);

void** fun_4130a8(void** ecx) {
    void** eax2;

    eax2 = fun_4130ca(__return_address(), 0, 0);
    return eax2;
}

void** g41f894 = reinterpret_cast<void**>(0);

void** g41f88c = reinterpret_cast<void**>(0);

int32_t VirtualFree = 0x19b7a;

uint32_t g41f898 = 0;

void** g41f89c = reinterpret_cast<void**>(0);

void** fun_417230(void** ecx, void** a2, void** a3, void** a4, void** a5, int32_t a6, void** a7, void** a8, void*** a9, int32_t a10, void** a11, int32_t a12, void** a13);

void** fun_414d04(int32_t a1, void** a2) {
    void** eax3;
    void** ecx4;
    void** ecx5;
    void** ecx6;
    void** eax7;
    void** eax8;
    void** ecx9;
    void** eax10;
    int1_t less_or_equal11;
    void** v12;
    void** v13;
    uint32_t eax14;
    void** edx15;
    void** eax16;
    void** ecx17;

    eax3 = g41f894;
    if (eax3) {
        ecx4 = g41f88c;
        ecx5 = reinterpret_cast<void**>((reinterpret_cast<unsigned char>(ecx4) << 15) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax3 + 12)));
        VirtualFree(ecx5, 0x8000, 0x4000);
        ecx6 = g41f88c;
        eax7 = g41f894;
        *reinterpret_cast<void***>(eax7 + 8) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax7 + 8)) | 0x80000000 >> *reinterpret_cast<signed char*>(&ecx6));
        eax8 = g41f894;
        ecx9 = g41f88c;
        *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(*reinterpret_cast<void***>(eax8 + 16) + reinterpret_cast<unsigned char>(ecx9) * 4) + 0xc4) = 0;
        eax10 = g41f894;
        *reinterpret_cast<signed char*>(*reinterpret_cast<void***>(eax10 + 16) + 67) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(*reinterpret_cast<void***>(eax10 + 16) + 67) - 1);
        eax3 = g41f894;
        if (!*reinterpret_cast<signed char*>(*reinterpret_cast<void***>(eax3 + 16) + 67)) {
            *reinterpret_cast<void***>(eax3 + 4) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax3 + 4)) & 0xfffffffe);
            eax3 = g41f894;
        }
        if (reinterpret_cast<int1_t>(*reinterpret_cast<void***>(eax3 + 8) == 0xffffffff) && (less_or_equal11 = reinterpret_cast<int32_t>(g41f898) <= reinterpret_cast<int32_t>(1), !less_or_equal11)) {
            v12 = *reinterpret_cast<void***>(eax3 + 16);
            v13 = g41f8a4;
            HeapFree(v13, 0, v12, ecx5, 0x8000, 0x4000);
            eax14 = g41f898;
            edx15 = g41f89c;
            eax16 = g41f894;
            ecx17 = eax16 + 20;
            eax3 = fun_417230(ecx17, eax16, ecx17, (eax14 + eax14 * 4 << 2) - reinterpret_cast<unsigned char>(eax16) + reinterpret_cast<unsigned char>(edx15) + 0xffffffec, v13, 0, v12, ecx5, 0x8000, 0x4000, __return_address(), a1, a2);
            --g41f898;
        }
        g41f894 = reinterpret_cast<void**>(0);
    }
    return eax3;
}

void** g41cc24 = reinterpret_cast<void**>(32);

int32_t g41f400 = 0;

void** fun_414f19(void** a1);

void** fun_414f6f(void** ecx) {
    void** esi2;
    int1_t zf3;
    int32_t v4;
    uint32_t v5;
    void** edi6;
    int32_t ebx7;
    uint32_t eax8;
    void** eax9;
    int32_t edx10;

    esi2 = g41cc24;
    while (1) {
        if (*reinterpret_cast<void***>(esi2 + 16) == 0xffffffff) {
            addr_41501a_3:
            zf3 = esi2 == g41cc24;
            if (zf3) 
                break;
            if (v4 > 0) 
                continue; else 
                break;
        } else {
            v5 = 0;
            edi6 = esi2 + 0x2010;
            ebx7 = 0x3ff000;
            do {
                if (reinterpret_cast<int1_t>(*reinterpret_cast<void***>(edi6) == 0xf0) && (eax8 = ebx7 + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi2 + 16)), eax9 = reinterpret_cast<void**>(VirtualFree(ecx, eax8, 0x1000, 0x4000)), !!eax9)) {
                    *reinterpret_cast<void***>(edi6) = reinterpret_cast<void**>(0xffffffff);
                    --g41f400;
                    eax9 = *reinterpret_cast<void***>(esi2 + 12);
                    if (!eax9 || reinterpret_cast<unsigned char>(eax9) > reinterpret_cast<unsigned char>(edi6)) {
                        *reinterpret_cast<void***>(esi2 + 12) = edi6;
                    }
                    ++v5;
                    --v4;
                    if (!v4) 
                        break;
                }
                ebx7 = ebx7 - 0x1000;
                edi6 = edi6 - 8;
            } while (ebx7 >= 0);
            ecx = esi2;
            esi2 = *reinterpret_cast<void***>(esi2 + 4);
            if (!v5) 
                goto addr_41501a_3;
            if (!reinterpret_cast<int1_t>(*reinterpret_cast<void***>(ecx + 24) == 0xffffffff)) 
                goto addr_41501a_3;
        }
        eax9 = ecx + 32;
        edx10 = 1;
        do {
            if (!reinterpret_cast<int1_t>(*reinterpret_cast<void***>(eax9) == 0xffffffff)) 
                break;
            ++edx10;
            eax9 = eax9 + 8;
        } while (edx10 < 0x400);
        if (edx10 != 0x400) 
            goto addr_41501a_3;
        eax9 = fun_414f19(ecx);
        ecx = ecx;
        goto addr_41501a_3;
    }
    return eax9;
}

void** fun_41335e(void** ecx, void** a2) {
    void*** eax3;
    void** esi4;
    int1_t below_or_equal5;
    void** eax6;
    void** esi7;
    int1_t below_or_equal8;
    void** v9;
    void** v10;
    void** eax11;

    eax3 = g41f8a8;
    esi4 = a2;
    if (reinterpret_cast<int1_t>(eax3 == 3)) {
        below_or_equal5 = reinterpret_cast<unsigned char>(esi4) <= reinterpret_cast<unsigned char>(g41f8a0);
        if (below_or_equal5 && (eax6 = fun_41484f(ecx, esi4), ecx = esi4, !!eax6)) {
            return eax6;
        }
    }
    if (!reinterpret_cast<int1_t>(eax3 == 2)) {
        if (!esi4) {
            esi4 = reinterpret_cast<void**>(1);
        }
    } else {
        if (!a2) {
            esi7 = reinterpret_cast<void**>(16);
        } else {
            esi7 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(a2 + 15) & 0xfffffff0);
        }
        below_or_equal8 = reinterpret_cast<unsigned char>(esi7) <= reinterpret_cast<unsigned char>(g41ec44);
        if (!below_or_equal8) 
            goto addr_4133c1_11; else 
            goto addr_4133a2_12;
    }
    esi7 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esi4 + 15) & 0xfffffff0);
    addr_4133c1_11:
    v9 = g41f8a4;
    HeapAlloc(ecx, v9, 0, esi7);
    goto addr_4133d0_14;
    addr_4133a2_12:
    v10 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi7) >> 4);
    eax11 = fun_4150cd(ecx, v10);
    ecx = v10;
    if (eax11) {
        addr_4133d0_14:
        goto __return_address();
    } else {
        goto addr_4133c1_11;
    }
}

int32_t g41f408 = 0;

int32_t fun_4153f9(void** ecx) {
    int32_t eax2;
    int32_t eax3;

    eax2 = g41f408;
    if (!eax2 || (eax3 = reinterpret_cast<int32_t>(eax2()), eax3 == 0)) {
        return 0;
    } else {
        return 1;
    }
}

void** g41f890 = reinterpret_cast<void**>(0);

void** fun_414c09(uint32_t ecx, void** a2);

struct s52 {
    uint32_t f0;
    signed char[128] pad132;
    uint32_t f132;
};

struct s53 {
    void* f0;
    struct s53* f4;
    struct s53* f8;
};

struct s54 {
    uint32_t f0;
    void** f4;
};

void** fun_414b58();

void** fun_41484f(void** ecx, void** a2) {
    uint32_t eax3;
    void** edx4;
    void** edi5;
    void** v6;
    void* ecx7;
    void* v8;
    uint32_t ecx9;
    uint32_t esi10;
    uint32_t v11;
    uint32_t v12;
    void** eax13;
    void** ebx14;
    void** v15;
    int1_t zf16;
    int1_t zf17;
    void** eax18;
    void** eax19;
    void** edx20;
    void** v21;
    uint32_t edx22;
    uint32_t esi23;
    struct s52* ecx24;
    uint32_t edx25;
    void** eax26;
    int1_t zf27;
    void* edi28;
    void** v29;
    uint32_t ecx30;
    uint32_t ecx31;
    struct s53* edx32;
    void* ecx33;
    void* esi34;
    uint32_t ecx35;
    signed char* edi36;
    uint32_t* ecx37;
    uint32_t ebx38;
    int1_t zf39;
    void* ecx40;
    signed char* edi41;
    uint32_t ebx42;
    struct s53* ecx43;
    signed char cl44;
    uint32_t ecx45;
    uint32_t* edi46;
    uint32_t ecx47;
    void* ecx48;
    void* ecx49;
    struct s54* edx50;
    uint32_t ecx51;
    int1_t zf52;
    int1_t zf53;
    int1_t zf54;
    void** eax55;

    eax3 = g41f898;
    edx4 = g41f89c;
    edi5 = edx4 + (eax3 + eax3 * 4) * 4;
    v6 = edi5;
    ecx7 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(a2 + 23) & 0xfffffff0);
    v8 = ecx7;
    ecx9 = (reinterpret_cast<int32_t>(ecx7) >> 4) - 1;
    if (reinterpret_cast<int32_t>(ecx9) >= reinterpret_cast<int32_t>(32)) {
        ecx9 = ecx9 + 0xffffffe0;
        esi10 = 0;
        v11 = 0;
        v12 = 0xffffffff >> *reinterpret_cast<signed char*>(&ecx9);
    } else {
        esi10 = 0xffffffff >> *reinterpret_cast<signed char*>(&ecx9);
        v12 = 0xffffffff;
        v11 = esi10;
    }
    eax13 = g41f890;
    ebx14 = eax13;
    v15 = ebx14;
    if (reinterpret_cast<unsigned char>(ebx14) < reinterpret_cast<unsigned char>(edi5)) {
        do {
            ecx9 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx14 + 4)) & v12 | reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx14)) & esi10;
            if (ecx9) 
                break;
            ebx14 = ebx14 + 20;
            v15 = ebx14;
        } while (reinterpret_cast<unsigned char>(ebx14) < reinterpret_cast<unsigned char>(v6));
    }
    if (ebx14 != v6) 
        goto addr_414944_8;
    ebx14 = edx4;
    while (zf16 = ebx14 == eax13, v15 = ebx14, reinterpret_cast<unsigned char>(ebx14) < reinterpret_cast<unsigned char>(eax13)) {
        ecx9 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx14 + 4)) & v12 | reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx14)) & esi10;
        if (ecx9) 
            goto addr_4148e7_12;
        ebx14 = ebx14 + 20;
    }
    addr_4148e9_14:
    if (!zf16) 
        goto addr_414944_8;
    while (zf17 = ebx14 == v6, reinterpret_cast<unsigned char>(ebx14) < reinterpret_cast<unsigned char>(v6)) {
        if (*reinterpret_cast<void***>(ebx14 + 8)) 
            goto addr_4148fe_17;
        ebx14 = ebx14 + 20;
        v15 = ebx14;
    }
    addr_414901_19:
    if (!zf17) {
        addr_414929_20:
        eax18 = fun_414c09(ecx9, ebx14);
        *reinterpret_cast<void***>(*reinterpret_cast<void***>(ebx14 + 16)) = eax18;
        if (!reinterpret_cast<int1_t>(*reinterpret_cast<void***>(*reinterpret_cast<void***>(ebx14 + 16)) == 0xffffffff)) {
            addr_414944_8:
            g41f890 = ebx14;
            eax19 = *reinterpret_cast<void***>(ebx14 + 16);
            edx20 = *reinterpret_cast<void***>(eax19);
            v21 = edx20;
            if (edx20 == 0xffffffff || !(*reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax19 + reinterpret_cast<unsigned char>(edx20) * 4) + 0xc4) & v12 | *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax19 + reinterpret_cast<unsigned char>(edx20) * 4) + 68) & esi10)) {
                edx22 = *reinterpret_cast<uint32_t*>(eax19 + 0xc4) & v12;
                esi23 = *reinterpret_cast<uint32_t*>(eax19 + 68) & v11;
                v21 = reinterpret_cast<void**>(0);
                ecx24 = reinterpret_cast<struct s52*>(eax19 + 68);
                esi10 = v11;
                if (!(edx22 | esi23)) {
                    do {
                        edx25 = ecx24->f132;
                        ++v21;
                        ecx24 = reinterpret_cast<struct s52*>(&ecx24->pad132);
                    } while (!(edx25 & v12 | esi10 & ecx24->f0));
                }
                edx20 = v21;
            }
        } else {
            addr_41493d_24:
            eax26 = reinterpret_cast<void**>(0);
            goto addr_414b53_25;
        }
    } else {
        ebx14 = edx4;
        while (zf27 = ebx14 == eax13, v15 = ebx14, reinterpret_cast<unsigned char>(ebx14) < reinterpret_cast<unsigned char>(eax13)) {
            if (*reinterpret_cast<void***>(ebx14 + 8)) 
                goto addr_414917_29;
            ebx14 = ebx14 + 20;
        }
        goto addr_414919_31;
    }
    edi28 = reinterpret_cast<void*>(0);
    v29 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax19 + reinterpret_cast<unsigned char>(edx20) * 0x204) + 0x144);
    ecx30 = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax19 + reinterpret_cast<unsigned char>(edx20) * 4) + 68) & esi10;
    if (!ecx30) {
        ecx31 = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax19 + reinterpret_cast<unsigned char>(edx20) * 4) + 0xc4);
        ecx30 = ecx31 & v12;
        edi28 = reinterpret_cast<void*>(32);
    }
    while (reinterpret_cast<int32_t>(ecx30) >= reinterpret_cast<int32_t>(0)) {
        ecx30 = ecx30 << 1;
        edi28 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edi28) + 1);
    }
    edx32 = *reinterpret_cast<struct s53**>(v29 + reinterpret_cast<uint32_t>(edi28) * 2 + 1);
    ecx33 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edx32->f0) - reinterpret_cast<uint32_t>(v8));
    esi34 = reinterpret_cast<void*>((reinterpret_cast<int32_t>(ecx33) >> 4) - 1);
    if (reinterpret_cast<int32_t>(esi34) > reinterpret_cast<int32_t>(63)) {
        esi34 = reinterpret_cast<void*>(63);
    }
    if (esi34 == edi28) {
        addr_414b06_39:
        if (ecx33) {
            edx32->f0 = ecx33;
            *reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ecx33) + reinterpret_cast<uint32_t>(edx32) + 0xfffffffc) = ecx33;
        }
    } else {
        if (edx32->f4 == edx32->f8) {
            if (reinterpret_cast<int32_t>(edi28) >= reinterpret_cast<int32_t>(32)) {
                ecx35 = reinterpret_cast<uint32_t>(edi28) + 0xffffffe0;
                edi36 = reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(eax19) + reinterpret_cast<uint32_t>(edi28) + 4);
                ecx37 = reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax19 + reinterpret_cast<unsigned char>(v21) * 4) + 0xc4);
                ebx38 = ~(0x80000000 >> *reinterpret_cast<signed char*>(&ecx35));
                *ecx37 = *ecx37 & ebx38;
                *edi36 = reinterpret_cast<signed char>(*edi36 - 1);
                zf39 = *edi36 == 0;
                if (!zf39) {
                    addr_414a5f_44:
                    ebx14 = v15;
                } else {
                    ebx14 = v15;
                    *reinterpret_cast<void***>(ebx14 + 4) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx14 + 4)) & ebx38);
                }
            } else {
                ecx40 = edi28;
                edi41 = reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(eax19) + reinterpret_cast<uint32_t>(edi28) + 4);
                ebx42 = ~(0x80000000 >> *reinterpret_cast<signed char*>(&ecx40));
                *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax19 + reinterpret_cast<unsigned char>(v21) * 4) + 68) = ebx42 & *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax19 + reinterpret_cast<unsigned char>(v21) * 4) + 68);
                *edi41 = reinterpret_cast<signed char>(*edi41 - 1);
                if (*edi41) 
                    goto addr_414a5f_44;
                ebx14 = v15;
                *reinterpret_cast<void***>(ebx14) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx14)) & ebx42);
            }
        }
        edx32->f8->f4 = edx32->f4;
        edx32->f4->f8 = edx32->f8;
        if (!ecx33) {
            ecx33 = ecx33;
        } else {
            ecx43 = reinterpret_cast<struct s53*>(v29 + reinterpret_cast<uint32_t>(esi34) * 2);
            edx32->f4 = *reinterpret_cast<struct s53**>(v29 + reinterpret_cast<uint32_t>(esi34) * 2 + 1);
            edx32->f8 = ecx43;
            ecx43->f4 = edx32;
            edx32->f4->f8 = edx32;
            if (edx32->f4 == edx32->f8) {
                cl44 = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi34) + reinterpret_cast<unsigned char>(eax19) + 4);
                if (reinterpret_cast<int32_t>(esi34) >= reinterpret_cast<int32_t>(32)) {
                    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi34) + reinterpret_cast<unsigned char>(eax19) + 4) = reinterpret_cast<signed char>(cl44 + 1);
                    if (!cl44) {
                        ecx45 = reinterpret_cast<uint32_t>(esi34) + 0xffffffe0;
                        *reinterpret_cast<void***>(ebx14 + 4) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx14 + 4)) | 0x80000000 >> *reinterpret_cast<signed char*>(&ecx45));
                    }
                    edi46 = reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax19 + reinterpret_cast<unsigned char>(v21) * 4) + 0xc4);
                    ecx47 = reinterpret_cast<uint32_t>(esi34) + 0xffffffe0;
                    *edi46 = *edi46 | 0x80000000 >> *reinterpret_cast<signed char*>(&ecx47);
                } else {
                    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi34) + reinterpret_cast<unsigned char>(eax19) + 4) = reinterpret_cast<signed char>(cl44 + 1);
                    if (!cl44) {
                        ecx48 = esi34;
                        *reinterpret_cast<void***>(ebx14) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx14)) | 0x80000000 >> *reinterpret_cast<signed char*>(&ecx48));
                    }
                    ecx49 = esi34;
                    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax19 + reinterpret_cast<unsigned char>(v21) * 4) + 68) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax19 + reinterpret_cast<unsigned char>(v21) * 4) + 68) | 0x80000000 >> *reinterpret_cast<signed char*>(&ecx49);
                }
            }
            ecx33 = ecx33;
            goto addr_414b06_39;
        }
    }
    edx50 = reinterpret_cast<struct s54*>(reinterpret_cast<uint32_t>(edx32) + reinterpret_cast<uint32_t>(ecx33));
    ecx51 = reinterpret_cast<uint32_t>(v8) + 1;
    edx50->f0 = ecx51;
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(edx50) + reinterpret_cast<uint32_t>(v8) + 0xfffffffc) = ecx51;
    zf52 = *v29 == 0;
    *v29 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(*v29) + 1);
    if (zf52 && ((zf53 = ebx14 == g41f894, zf53) && (zf54 = v21 == g41f88c, zf54))) {
        g41f894 = reinterpret_cast<void**>(0);
    }
    *reinterpret_cast<void***>(eax19) = v21;
    eax26 = reinterpret_cast<void**>(&edx50->f4);
    addr_414b53_25:
    return eax26;
    addr_414919_31:
    if (!zf27) 
        goto addr_414929_20;
    eax55 = fun_414b58();
    ebx14 = eax55;
    v15 = ebx14;
    if (!ebx14) 
        goto addr_41493d_24; else 
        goto addr_414929_20;
    addr_414917_29:
    zf27 = ebx14 == eax13;
    goto addr_414919_31;
    addr_4148fe_17:
    zf17 = ebx14 == v6;
    goto addr_414901_19;
    addr_4148e7_12:
    zf16 = ebx14 == eax13;
    goto addr_4148e9_14;
}

void** g41ec40 = reinterpret_cast<void**>(32);

void** fun_4152d5(void** ecx, void** a2, void** a3, void** a4);

int32_t VirtualAlloc = 0x19b88;

void** fun_414dd5();

void** fun_4150cd(void** ecx, void** a2) {
    void** v3;
    void** esi4;
    void** esi5;
    void** v6;
    void** edi7;
    void** ebx8;
    void** edi9;
    void** eax10;
    void** v11;
    void** ecx12;
    void** eax13;
    void** eax14;
    void** v15;
    void** v16;
    void** eax17;
    int1_t zf18;
    void** edi19;
    void** ebx20;
    uint32_t v21;
    void** eax22;
    void** esi23;
    void** v24;
    void** eax25;
    void** ecx26;
    struct s1* eax27;
    uint32_t v28;
    void** eax29;
    uint1_t cf30;
    void** eax31;
    void** eax32;
    void** ecx33;

    v3 = esi4;
    esi5 = g41ec40;
    v6 = edi7;
    while (1) {
        if (*reinterpret_cast<void***>(esi5 + 16) == 0xffffffff) {
            ebx8 = a2;
        } else {
            edi9 = *reinterpret_cast<void***>(esi5 + 8);
            eax10 = reinterpret_cast<void**>((reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(edi9) - reinterpret_cast<unsigned char>(esi5) - 24) >> 3 << 12) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi5 + 16)));
            v11 = eax10;
            if (reinterpret_cast<unsigned char>(edi9) >= reinterpret_cast<unsigned char>(esi5 + 0x2018)) {
                ebx8 = a2;
            } else {
                do {
                    ecx12 = *reinterpret_cast<void***>(edi9);
                    ebx8 = a2;
                    if (reinterpret_cast<signed char>(ecx12) >= reinterpret_cast<signed char>(ebx8) && reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi9 + 4)) > reinterpret_cast<unsigned char>(ebx8)) {
                        eax13 = fun_4152d5(ecx12, eax10, ecx12, ebx8);
                        if (eax13) 
                            goto addr_415198_8;
                        eax10 = v11;
                        *reinterpret_cast<void***>(edi9 + 4) = ebx8;
                    }
                    edi9 = edi9 + 8;
                    eax10 = eax10 + 0x1000;
                    v11 = eax10;
                } while (reinterpret_cast<unsigned char>(edi9) < reinterpret_cast<unsigned char>(esi5 + 0x2018));
            }
            eax14 = *reinterpret_cast<void***>(esi5 + 8);
            ecx = *reinterpret_cast<void***>(esi5 + 16);
            edi9 = esi5 + 24;
            v15 = eax14;
            v16 = ecx;
            if (reinterpret_cast<unsigned char>(edi9) < reinterpret_cast<unsigned char>(eax14)) {
                do {
                    eax17 = *reinterpret_cast<void***>(edi9);
                    if (reinterpret_cast<signed char>(eax17) >= reinterpret_cast<signed char>(ebx8) && reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi9 + 4)) > reinterpret_cast<unsigned char>(ebx8)) {
                        eax13 = fun_4152d5(ecx, v16, eax17, ebx8);
                        if (eax13) 
                            goto addr_415198_8;
                        *reinterpret_cast<void***>(edi9 + 4) = ebx8;
                    }
                    v16 = v16 + 0x1000;
                    edi9 = edi9 + 8;
                } while (reinterpret_cast<unsigned char>(edi9) < reinterpret_cast<unsigned char>(v15));
            }
        }
        esi5 = *reinterpret_cast<void***>(esi5);
        zf18 = esi5 == g41ec40;
        if (zf18) 
            break;
    }
    edi19 = reinterpret_cast<void**>(0x41cc20);
    while (*reinterpret_cast<void***>(edi19 + 16) == 0xffffffff || !*reinterpret_cast<void***>(edi19 + 12)) {
        edi19 = *reinterpret_cast<void***>(edi19);
        if (edi19 == 0x41cc20) 
            goto addr_41529c_23;
    }
    ebx20 = *reinterpret_cast<void***>(edi19 + 12);
    v21 = 0;
    eax22 = ebx20;
    esi23 = reinterpret_cast<void**>((reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(ebx20) - reinterpret_cast<unsigned char>(edi19) - 24) >> 3 << 12) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi19 + 16)));
    if (reinterpret_cast<int1_t>(*reinterpret_cast<void***>(ebx20) == 0xffffffff)) {
        do {
            if (reinterpret_cast<int32_t>(v21) >= reinterpret_cast<int32_t>(16)) 
                break;
            eax22 = eax22 + 8;
            ++v21;
        } while (*reinterpret_cast<void***>(eax22) == 0xffffffff);
    }
    v24 = reinterpret_cast<void**>(v21 << 12);
    eax25 = reinterpret_cast<void**>(VirtualAlloc(esi23, v24, 0x1000, 4));
    if (eax25 != esi23) {
        addr_4152ce_29:
        eax13 = reinterpret_cast<void**>(0);
    } else {
        fun_415420(ecx, esi23, 0, 0, esi23, v24, 0x1000, 4, v6, v3);
        ecx26 = ebx20;
        if (!(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(v21) < reinterpret_cast<int32_t>(0)) | reinterpret_cast<uint1_t>(v21 == 0))) {
            eax27 = reinterpret_cast<struct s1*>(esi23 + 4);
            v28 = v21;
            do {
                eax27->f244 = 0xff;
                *reinterpret_cast<struct s10**>(reinterpret_cast<uint32_t>(eax27) + 0xfffffffc) = reinterpret_cast<struct s10*>(&eax27->f4);
                eax27->f0 = reinterpret_cast<void**>(0xf0);
                *reinterpret_cast<void***>(ecx26) = reinterpret_cast<void**>(0xf0);
                *reinterpret_cast<void***>(ecx26 + 4) = reinterpret_cast<void**>(0xf1);
                eax27 = reinterpret_cast<struct s1*>(reinterpret_cast<uint32_t>(eax27) + 0x1000);
                ecx26 = ecx26 + 8;
                --v28;
            } while (v28);
        }
        g41ec40 = edi19;
        eax29 = edi19 + 0x2018;
        while (cf30 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(ecx26) < reinterpret_cast<unsigned char>(eax29)), cf30) {
            if (*reinterpret_cast<void***>(ecx26) == 0xffffffff) 
                goto addr_415277_36;
            ecx26 = ecx26 + 8;
        }
        goto addr_415279_38;
    }
    addr_4152d0_39:
    return eax13;
    addr_415279_38:
    *reinterpret_cast<void***>(edi19 + 12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax29) - (reinterpret_cast<unsigned char>(eax29) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(eax29) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(eax29) + cf30))) & reinterpret_cast<unsigned char>(ecx26));
    eax31 = a2;
    *reinterpret_cast<void***>(esi23 + 8) = eax31;
    *reinterpret_cast<void***>(edi19 + 8) = ebx20;
    *reinterpret_cast<void***>(ebx20) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx20)) - reinterpret_cast<unsigned char>(eax31));
    *reinterpret_cast<void***>(esi23 + 4) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi23 + 4)) - reinterpret_cast<unsigned char>(eax31));
    eax13 = esi23 + 0x100;
    *reinterpret_cast<void***>(esi23) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi23) + reinterpret_cast<unsigned char>(eax31) + 8);
    goto addr_4152d0_39;
    addr_415277_36:
    cf30 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(ecx26) < reinterpret_cast<unsigned char>(eax29));
    goto addr_415279_38;
    addr_41529c_23:
    eax32 = fun_414dd5();
    if (!eax32) 
        goto addr_4152ce_29;
    ecx33 = *reinterpret_cast<void***>(eax32 + 16);
    *reinterpret_cast<void***>(ecx33 + 8) = ebx8;
    g41ec40 = eax32;
    *reinterpret_cast<void***>(ecx33) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx33) + reinterpret_cast<unsigned char>(ebx8) + 8);
    *reinterpret_cast<void***>(ecx33 + 4) = reinterpret_cast<void**>(0xf0 - reinterpret_cast<unsigned char>(ebx8));
    *reinterpret_cast<void***>(eax32 + 24) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax32 + 24)) - reinterpret_cast<unsigned char>(ebx8));
    eax13 = ecx33 + 0x100;
    goto addr_4152d0_39;
    addr_415198_8:
    g41ec40 = esi5;
    *reinterpret_cast<void***>(edi9) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi9)) - reinterpret_cast<unsigned char>(ebx8));
    *reinterpret_cast<void***>(esi5 + 8) = edi9;
    goto addr_4152d0_39;
}

void** fun_4144fb(void** a1) {
    uint32_t eax2;
    void** eax3;
    void** ecx4;

    eax2 = g41f898;
    eax3 = g41f89c;
    ecx4 = eax3 + (eax2 + eax2 * 4) * 4;
    while (reinterpret_cast<unsigned char>(eax3) < reinterpret_cast<unsigned char>(ecx4)) {
        if (reinterpret_cast<unsigned char>(a1) - reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax3 + 12)) < 0x100000) 
            goto addr_414525_4;
        eax3 = eax3 + 20;
    }
    eax3 = reinterpret_cast<void**>(0);
    addr_414525_4:
    return eax3;
}

struct s56 {
    signed char[4] pad4;
    struct s56* f4;
    struct s56* f8;
};

struct s55 {
    signed char[4] pad4;
    struct s56* f4;
    struct s56* f8;
};

void** fun_414526(void** ecx, void** a2, void** a3) {
    void** eax4;
    void** esi5;
    void** edi6;
    void** v7;
    void** ecx8;
    void** v9;
    struct s55* ebx10;
    void* v11;
    void** v12;
    void* edx13;
    struct s55* v14;
    void* edx15;
    void** ecx16;
    uint32_t ecx17;
    signed char* ecx18;
    uint32_t ebx19;
    void* ecx20;
    signed char* ecx21;
    uint32_t ebx22;
    void** edx23;
    uint32_t ebx24;
    void** ebx25;
    void** v26;
    void** ecx27;
    uint32_t ecx28;
    uint32_t esi29;
    void** ecx30;
    uint32_t esi31;
    void** ecx32;
    signed char cl33;
    uint32_t ecx34;
    uint32_t ecx35;
    uint32_t* eax36;
    void** ecx37;
    void** ecx38;
    uint32_t* eax39;
    void** eax40;
    void** ecx41;
    int32_t esi42;
    void** ecx43;
    void** ecx44;
    void** eax45;
    void** eax46;
    void** ecx47;
    void** eax48;
    void** eax49;
    void** v50;
    void** eax51;
    void** v52;
    void** v53;
    uint32_t eax54;
    void** edx55;
    void** eax56;
    void** ecx57;
    int1_t below_or_equal58;
    void** eax59;

    eax4 = *reinterpret_cast<void***>(a2 + 16);
    esi5 = a3 + 0xfffffffc;
    edi6 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(a3) - reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a2 + 12)) >> 15);
    v7 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax4 + reinterpret_cast<unsigned char>(edi6) * 0x204) + 0x144);
    ecx8 = *reinterpret_cast<void***>(esi5) - 1;
    v9 = ecx8;
    if (!(*reinterpret_cast<unsigned char*>(&ecx8) & 1)) {
        ebx10 = reinterpret_cast<struct s55*>(reinterpret_cast<unsigned char>(ecx8) + reinterpret_cast<unsigned char>(esi5));
        v11 = *reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx8) + reinterpret_cast<unsigned char>(esi5));
        v12 = *reinterpret_cast<void***>(esi5 + 0xfffffffc);
        edx13 = v11;
        v14 = ebx10;
        if (!(*reinterpret_cast<unsigned char*>(&edx13) & 1)) {
            edx15 = reinterpret_cast<void*>((reinterpret_cast<int32_t>(edx13) >> 4) - 1);
            if (reinterpret_cast<uint32_t>(edx15) > 63) {
                edx15 = reinterpret_cast<void*>(63);
            }
            if (ebx10->f4 != ebx10->f8) {
                ecx16 = v9;
            } else {
                if (reinterpret_cast<uint32_t>(edx15) >= 32) {
                    ecx17 = reinterpret_cast<uint32_t>(edx15) - 32;
                    ecx18 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edx15) + reinterpret_cast<unsigned char>(eax4) + 4);
                    ebx19 = ~(0x80000000 >> *reinterpret_cast<signed char*>(&ecx17));
                    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax4 + reinterpret_cast<unsigned char>(edi6) * 4) + 0xc4) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax4 + reinterpret_cast<unsigned char>(edi6) * 4) + 0xc4) & ebx19;
                    *ecx18 = reinterpret_cast<signed char>(*ecx18 - 1);
                    if (!*ecx18) {
                        *reinterpret_cast<void***>(a2 + 4) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a2 + 4)) & ebx19);
                    }
                } else {
                    ecx20 = edx15;
                    ecx21 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edx15) + reinterpret_cast<unsigned char>(eax4) + 4);
                    ebx22 = ~(0x80000000 >> *reinterpret_cast<signed char*>(&ecx20));
                    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax4 + reinterpret_cast<unsigned char>(edi6) * 4) + 68) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax4 + reinterpret_cast<unsigned char>(edi6) * 4) + 68) & ebx22;
                    *ecx21 = reinterpret_cast<signed char>(*ecx21 - 1);
                    if (!*ecx21) {
                        *reinterpret_cast<void***>(a2) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a2)) & ebx22);
                    }
                }
                ecx16 = v9;
                ebx10 = v14;
            }
            ecx8 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx16) + reinterpret_cast<uint32_t>(v11));
            ebx10->f8->f4 = ebx10->f4;
            v9 = ecx8;
            v14->f4->f8 = v14->f8;
        }
        edx23 = reinterpret_cast<void**>((reinterpret_cast<signed char>(ecx8) >> 4) - 1);
        if (reinterpret_cast<unsigned char>(edx23) > reinterpret_cast<unsigned char>(63)) {
            edx23 = reinterpret_cast<void**>(63);
        }
        ebx24 = reinterpret_cast<unsigned char>(v12) & 1;
        if (ebx24) {
            ebx25 = a2;
        } else {
            v26 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi5) - reinterpret_cast<unsigned char>(v12));
            ebx25 = reinterpret_cast<void**>((reinterpret_cast<signed char>(v12) >> 4) - 1);
            if (reinterpret_cast<unsigned char>(ebx25) > reinterpret_cast<unsigned char>(63)) {
                ebx25 = reinterpret_cast<void**>(63);
            }
            ecx27 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx8) + reinterpret_cast<unsigned char>(v12));
            v9 = ecx27;
            edx23 = reinterpret_cast<void**>((reinterpret_cast<signed char>(ecx27) >> 4) - 1);
            if (reinterpret_cast<unsigned char>(edx23) > reinterpret_cast<unsigned char>(63)) {
                edx23 = reinterpret_cast<void**>(63);
            }
            if (ebx25 != edx23) {
                if (*reinterpret_cast<void***>(v26 + 4) == *reinterpret_cast<void***>(v26 + 8)) {
                    if (reinterpret_cast<unsigned char>(ebx25) >= reinterpret_cast<unsigned char>(32)) {
                        ecx28 = reinterpret_cast<uint32_t>(ebx25 + 0xffffffe0);
                        esi29 = ~(0x80000000 >> *reinterpret_cast<signed char*>(&ecx28));
                        *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax4 + reinterpret_cast<unsigned char>(edi6) * 4) + 0xc4) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax4 + reinterpret_cast<unsigned char>(edi6) * 4) + 0xc4) & esi29;
                        *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(ebx25) + reinterpret_cast<unsigned char>(eax4) + 4) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(ebx25) + reinterpret_cast<unsigned char>(eax4) + 4) - 1);
                        if (!*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(ebx25) + reinterpret_cast<unsigned char>(eax4) + 4)) {
                            *reinterpret_cast<void***>(a2 + 4) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a2 + 4)) & esi29);
                        }
                    } else {
                        ecx30 = ebx25;
                        esi31 = ~(0x80000000 >> *reinterpret_cast<signed char*>(&ecx30));
                        *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax4 + reinterpret_cast<unsigned char>(edi6) * 4) + 68) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax4 + reinterpret_cast<unsigned char>(edi6) * 4) + 68) & esi31;
                        *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(ebx25) + reinterpret_cast<unsigned char>(eax4) + 4) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(ebx25) + reinterpret_cast<unsigned char>(eax4) + 4) - 1);
                        if (!*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(ebx25) + reinterpret_cast<unsigned char>(eax4) + 4)) {
                            *reinterpret_cast<void***>(a2) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a2)) & esi31);
                        }
                    }
                }
                *reinterpret_cast<void***>(*reinterpret_cast<void***>(v26 + 8) + 4) = *reinterpret_cast<void***>(v26 + 4);
                *reinterpret_cast<void***>(*reinterpret_cast<void***>(v26 + 4) + 8) = *reinterpret_cast<void***>(v26 + 8);
            }
            esi5 = v26;
        }
        if ((ebx24 || ebx25 != edx23) && (ecx32 = v7 + reinterpret_cast<unsigned char>(edx23) * 8, *reinterpret_cast<void***>(esi5 + 4) = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(v7 + reinterpret_cast<unsigned char>(edx23) * 8) + 4), *reinterpret_cast<void***>(esi5 + 8) = ecx32, *reinterpret_cast<void***>(ecx32 + 4) = esi5, *reinterpret_cast<void***>(*reinterpret_cast<void***>(esi5 + 4) + 8) = esi5, *reinterpret_cast<void***>(esi5 + 4) == *reinterpret_cast<void***>(esi5 + 8))) {
            cl33 = *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(edx23) + reinterpret_cast<unsigned char>(eax4) + 4);
            *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(edx23) + reinterpret_cast<unsigned char>(eax4) + 4) = reinterpret_cast<signed char>(cl33 + 1);
            if (reinterpret_cast<unsigned char>(edx23) >= reinterpret_cast<unsigned char>(32)) {
                if (!cl33) {
                    ecx34 = reinterpret_cast<uint32_t>(edx23 + 0xffffffe0);
                    *reinterpret_cast<void***>(a2 + 4) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a2 + 4)) | 0x80000000 >> *reinterpret_cast<signed char*>(&ecx34));
                }
                ecx35 = reinterpret_cast<uint32_t>(edx23 + 0xffffffe0);
                eax36 = reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax4 + reinterpret_cast<unsigned char>(edi6) * 4) + 0xc4);
                *eax36 = *eax36 | 0x80000000 >> *reinterpret_cast<signed char*>(&ecx35);
            } else {
                if (!cl33) {
                    ecx37 = edx23;
                    *reinterpret_cast<void***>(a2) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a2)) | 0x80000000 >> *reinterpret_cast<signed char*>(&ecx37));
                }
                ecx38 = edx23;
                eax39 = reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax4 + reinterpret_cast<unsigned char>(edi6) * 4) + 68);
                *eax39 = *eax39 | 0x80000000 >> *reinterpret_cast<signed char*>(&ecx38);
            }
        }
        *reinterpret_cast<void***>(esi5) = v9;
        *reinterpret_cast<void***>(reinterpret_cast<unsigned char>(v9) + reinterpret_cast<unsigned char>(esi5) + 0xfffffffc) = v9;
        eax4 = v7;
        *reinterpret_cast<void***>(eax4) = *reinterpret_cast<void***>(eax4) - 1;
        if (!*reinterpret_cast<void***>(eax4)) {
            eax40 = g41f894;
            if (eax40) {
                ecx41 = g41f88c;
                esi42 = VirtualFree;
                ecx43 = reinterpret_cast<void**>((reinterpret_cast<unsigned char>(ecx41) << 15) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax40 + 12)));
                esi42(ecx43, 0x8000, 0x4000);
                ecx44 = g41f88c;
                eax45 = g41f894;
                *reinterpret_cast<void***>(eax45 + 8) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax45 + 8)) | 0x80000000 >> *reinterpret_cast<signed char*>(&ecx44));
                eax46 = g41f894;
                ecx47 = g41f88c;
                *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(*reinterpret_cast<void***>(eax46 + 16) + reinterpret_cast<unsigned char>(ecx47) * 4) + 0xc4) = 0;
                eax48 = g41f894;
                *reinterpret_cast<signed char*>(*reinterpret_cast<void***>(eax48 + 16) + 67) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(*reinterpret_cast<void***>(eax48 + 16) + 67) - 1);
                eax49 = g41f894;
                if (!*reinterpret_cast<signed char*>(*reinterpret_cast<void***>(eax49 + 16) + 67)) {
                    *reinterpret_cast<void***>(eax49 + 4) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax49 + 4)) & 0xfffffffe);
                    eax49 = g41f894;
                }
                if (reinterpret_cast<int1_t>(*reinterpret_cast<void***>(eax49 + 8) == 0xffffffff)) {
                    v50 = *reinterpret_cast<void***>(eax49 + 12);
                    esi42(v50, 0, 0x8000, ecx43, 0x8000, 0x4000);
                    eax51 = g41f894;
                    v52 = *reinterpret_cast<void***>(eax51 + 16);
                    v53 = g41f8a4;
                    HeapFree(v53, 0, v52, v50, 0, 0x8000, ecx43, 0x8000, 0x4000);
                    eax54 = g41f898;
                    edx55 = g41f89c;
                    eax56 = g41f894;
                    ecx57 = eax56 + 20;
                    fun_417230(ecx57, eax56, ecx57, (eax54 + eax54 * 4 << 2) - reinterpret_cast<unsigned char>(eax56) + reinterpret_cast<unsigned char>(edx55) + 0xffffffec, v53, 0, v52, v50, 0, 0x8000, ecx43, 0x8000, 0x4000);
                    --g41f898;
                    below_or_equal58 = reinterpret_cast<unsigned char>(a2) <= reinterpret_cast<unsigned char>(g41f894);
                    if (!below_or_equal58) {
                        a2 = a2 - 20;
                    }
                    eax59 = g41f89c;
                    g41f890 = eax59;
                }
            }
            eax4 = a2;
            g41f88c = edi6;
            g41f894 = eax4;
        }
    }
    return eax4;
}

void** fun_415031(void** a1, struct s13** a2, void*** a3) {
    void** eax4;
    struct s13* ecx5;
    void** ecx6;

    eax4 = a1;
    ecx5 = reinterpret_cast<struct s13*>(0x41cc20);
    while (reinterpret_cast<unsigned char>(eax4) <= reinterpret_cast<unsigned char>(ecx5->f16) || reinterpret_cast<unsigned char>(eax4) >= reinterpret_cast<unsigned char>(ecx5->f20)) {
        ecx5 = ecx5->f0;
        if (ecx5 == 0x41cc20) 
            goto addr_415084_4;
    }
    if (!(*reinterpret_cast<unsigned char*>(&eax4) & 15) && (reinterpret_cast<unsigned char>(eax4) & 0xfff) >= 0x100) {
        *a2 = ecx5;
        ecx6 = eax4;
        *reinterpret_cast<uint16_t*>(&ecx6) = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&ecx6) & 0xf000);
        *a3 = ecx6;
        return (reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(eax4) - reinterpret_cast<unsigned char>(ecx6) - 0x100) >> 4) + reinterpret_cast<unsigned char>(ecx6) + 8;
    }
    addr_415084_4:
    return 0;
}

void** fun_415088(void** a1, void** a2, void** a3) {
    void** eax4;
    int1_t zf5;
    int1_t zf6;

    eax4 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(a1 + (reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(a2) - reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a1 + 16))) >> 12) * 8) + 24);
    *reinterpret_cast<void***>(eax4) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax4)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a3)));
    *reinterpret_cast<void***>(a3) = reinterpret_cast<void**>(0);
    zf5 = reinterpret_cast<int1_t>(*reinterpret_cast<void***>(eax4) == 0xf0);
    *reinterpret_cast<void***>(eax4 + 4) = reinterpret_cast<void**>(0xf1);
    if (zf5 && (++g41f400, zf6 = g41f400 == 32, zf6)) {
        eax4 = fun_414f6f(a3);
    }
    return eax4;
}

void** g41f664 = reinterpret_cast<void**>(0);

void** g41f884 = reinterpret_cast<void**>(0);

signed char fun_415478(void** ecx, void** a2, int32_t a3, void* a4, void** a5) {
    void*** ebp6;
    void** v7;
    void** eax8;
    uint32_t eax9;
    void** v10;
    void** v11;
    void** ebx12;
    void** ebp13;
    void** eax14;

    ebp6 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    v7 = ecx;
    if (reinterpret_cast<unsigned char>(a2) <= reinterpret_cast<unsigned char>(0xff)) {
        if ((*reinterpret_cast<unsigned char*>(a2 + 0x41f781) & 32) != 32) {
            addr_4154ee_3:
            eax8 = a2;
        } else {
            eax8 = reinterpret_cast<void**>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(a2 + 0x41f680)));
        }
    } else {
        eax9 = reinterpret_cast<unsigned char>(a2) >> 8;
        if (!(*reinterpret_cast<unsigned char*>(*reinterpret_cast<unsigned char*>(&eax9) + 0x41f781) & 4)) 
            goto addr_4154ee_3;
        v10 = g41f664;
        v11 = g41f884;
        eax14 = fun_415e6b(v11, 0x200, ebp6 + 10, 2, ebp6 + 0xfffffffc, 2, v10, 1, ebx12, v7, ebp13, __return_address());
        if (!eax14) 
            goto addr_4154ee_3;
        eax8 = reinterpret_cast<void**>((static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&v7)) << 8) + *reinterpret_cast<unsigned char*>(&v7 + 1));
    }
    return *reinterpret_cast<signed char*>(&eax8);
}

void fun_417e70();

void fun_41393f(void** ecx, void** a2, void** a3, int32_t a4, int32_t a5, void** a6, void** a7, void** a8) {
    void** eax9;
    void** eax10;
    void** eax11;

    eax9 = *reinterpret_cast<void***>(&g0);
    fun_417e70();
    eax10 = *reinterpret_cast<void***>(a3 + 4);
    *reinterpret_cast<unsigned char*>(&eax10) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax10) & 0xfd);
    *reinterpret_cast<void***>(a3 + 4) = eax10;
    eax11 = *reinterpret_cast<void***>(&g0);
    *reinterpret_cast<void***>(eax9) = eax11;
    *reinterpret_cast<void***>(&g0) = eax9;
    return;
}

int32_t g41ec64 = 0x415d3c;

void fun_415de3(void** ecx, int32_t a2, int32_t a3, int32_t a4, int32_t* a5, void** a6, void** a7, int32_t a8, int32_t a9);

int32_t g41f418 = 0;

void fun_415d8d(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7);

void fun_416e71(void** ecx, int32_t a2);

uint32_t fun_417cfe(void** a1);

void** fun_4130b9(void** ecx, int32_t a2);

void** g41f538 = reinterpret_cast<void**>(0);

int32_t GetStringTypeW = 0x19cfa;

int32_t GetStringTypeA = 0x19ce8;

void** g41f3f8 = reinterpret_cast<void**>(0);

void fun_414180(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20);

void** fun_415d92(void** ecx) {
    void** eax2;
    void** esp3;
    int32_t* esp4;
    int32_t* v5;
    int32_t eax6;
    int32_t edi7;
    int32_t esi8;
    int32_t ebx9;
    void** eax10;
    void** esp11;
    void** v12;
    void** esp13;
    void** v14;
    int32_t eax15;
    void** edi16;
    void** esi17;
    void** ebx18;
    void* esp19;
    void** eax20;
    void** esp21;
    void** esp22;
    void** v23;
    void** eax24;
    void* v25;
    int32_t eax26;
    int32_t eax27;
    void** eax28;
    uint32_t eax29;
    void** v30;
    void** eax31;
    void** eax32;
    void** edi33;
    void** esi34;
    void** ebx35;
    void** v36;
    void** v37;
    void** v38;
    void** v39;
    void** esi40;
    void** eax41;

    eax2 = *reinterpret_cast<void***>(&g0);
    esp3 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4 - 4);
    *reinterpret_cast<void***>(&g0) = esp3;
    esp4 = reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esp3 - 4) - 4 - 4 - 4 - 4);
    v5 = esp4;
    eax6 = g41ec64;
    if (eax6) {
        eax6(edi7, esi8, ebx9, v5, ecx, eax2, 0x416d60, 0x4187d0);
        esp4 = esp4 - 1 + 1;
    }
    fun_415de3(ecx, edi7, esi8, ebx9, v5, ecx, eax2, 0x416d60, 0x4187d0);
    eax10 = *reinterpret_cast<void***>(&g0);
    esp11 = reinterpret_cast<void**>(esp4 - 1 + 1 - 1 - 1 - 1 - 1 - 1);
    *reinterpret_cast<void***>(&g0) = esp11;
    v12 = ecx;
    esp13 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp11 - 4) - 4 - 4 - 4 - 4);
    v14 = esp13;
    eax15 = g41f418;
    if (eax15) {
        eax15();
        esp13 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp13 - 4) + 4);
    }
    fun_415d8d(ecx, edi16, esi17, ebx18, v14, v12, eax10);
    fun_416e71(ecx, 10);
    fun_417cfe(22);
    fun_4130b9(10, 3);
    esp19 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp13 - 4) + 4 - 4 - 4 + 4 - 4 - 4 + 4 + 4 + 4 - 4 - 4 + 4 - 4);
    eax20 = *reinterpret_cast<void***>(&g0);
    esp21 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp19) - 4 - 4 - 4 - 4);
    *reinterpret_cast<void***>(&g0) = esp21;
    esp22 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp21 - 24) - 4 - 4 - 4);
    v23 = esp22;
    eax24 = g41f538;
    if (!eax24) {
        v25 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp19) + 0xffffffe4);
        eax26 = reinterpret_cast<int32_t>(GetStringTypeW(10, 1, 0x4187ec, 1, v25));
        esp22 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp22 - 4) - 4 + 4 - 4 - 4 - 4 - 4 + 4);
        if (!eax26) {
            eax27 = reinterpret_cast<int32_t>(GetStringTypeA(10, 0, 1, 0x4187e8, 1, reinterpret_cast<uint32_t>(esp19) + 0xffffffe4, 1, 0x4187ec, 1, v25));
            if (!eax27) 
                goto addr_4177f0_15;
            eax24 = reinterpret_cast<void**>(2);
            esp22 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp22 - 4) - 4 - 4 - 4 - 4 - 4 + 4 - 4 + 4);
        } else {
            eax24 = reinterpret_cast<void**>(1);
        }
        g41f538 = eax24;
    }
    if (!reinterpret_cast<int1_t>(eax24 == 2)) {
        if (!reinterpret_cast<int1_t>(eax24 == 1)) {
            addr_4177f0_15:
        } else {
            if (!v12) {
                eax28 = g41f3f8;
                v12 = eax28;
            }
            eax29 = reinterpret_cast<uint32_t>(-0x416d60);
            v30 = reinterpret_cast<void**>((eax29 - (eax29 + reinterpret_cast<uint1_t>(eax29 < eax29 + 1)) & 8) + 1);
            eax31 = reinterpret_cast<void**>(MultiByteToWideChar(10, v12, v30, esi17, ebx18, 0, 0));
            if (!eax31) 
                goto addr_4177f0_15; else 
                goto addr_41778d_24;
        }
    } else {
        eax32 = eax10;
        if (!eax32) {
            eax32 = g41f3e8;
        }
        GetStringTypeA(10, eax32, edi16, esi17, ebx18, v14);
    }
    addr_4177f2_28:
    *reinterpret_cast<void***>(&g0) = eax20;
    goto 3;
    addr_41778d_24:
    fun_414180(10, v12, v30, esi17, ebx18, 0, 0, edi33, esi34, ebx35, v36, v37, eax31, v38, v23, v39, eax20, 0x416d60, 0x418af8, 0);
    esi40 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp22 - 4) - 4 - 4 - 4 - 4 - 4 - 4 + 4 - 4 + 4);
    fun_415420(10, esi40, 0, reinterpret_cast<unsigned char>(eax31) + reinterpret_cast<unsigned char>(eax31), v12, v30, esi17, ebx18, 0, 0);
    if (!esi40) 
        goto addr_4177f0_15;
    eax41 = reinterpret_cast<void**>(MultiByteToWideChar(10, v12, 1, esi17, ebx18, esi40, eax31, v12, v30, esi17, ebx18, 0, 0));
    if (!eax41) 
        goto addr_4177f0_15;
    GetStringTypeW(10, edi16, esi40, eax41, v14, v12, 1, esi17, ebx18, esi40, eax31, v12, v30, esi17, ebx18, 0, 0);
    goto addr_4177f2_28;
}

struct s57 {
    signed char[4] pad4;
    int32_t f4;
    int32_t* f8;
    int32_t f12;
};

void fun_413cba(int32_t ecx, int32_t a2);

void fun_413c26(struct s57* a1, int32_t a2) {
    void** v3;
    int32_t* ebx4;
    int32_t esi5;
    int32_t ecx6;

    v3 = *reinterpret_cast<void***>(&g0);
    *reinterpret_cast<void***>(&g0) = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4 - 4 - 4 - 4);
    while ((ebx4 = a1->f8, a1->f12 != -1) && a1->f12 != a2) {
        esi5 = a1->f12 + a1->f12 * 2;
        ecx6 = ebx4[esi5];
        a1->f12 = ecx6;
        if (!(ebx4 + esi5)[1]) {
            fun_413cba(ecx6, 0x101);
            (ebx4 + esi5)[2]();
        }
    }
    *reinterpret_cast<void***>(&g0) = v3;
    return;
}

int32_t g41ca98 = 0;

struct s58 {
    signed char[8] pad8;
    int32_t f8;
};

int32_t g41ca94 = 0;

int32_t g41ca9c = 0;

void fun_413cba(int32_t ecx, int32_t a2) {
    struct s58* ebp3;
    int32_t eax4;
    int32_t ebp5;

    g41ca98 = ebp3->f8;
    g41ca94 = eax4;
    g41ca9c = ebp5;
    return;
}

struct s59 {
    signed char[1] pad1;
    void** f1;
};

struct s59* fun_415df0(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6) {
    void** ecx7;
    void** eax8;

    ecx7 = a2;
    if (!(reinterpret_cast<unsigned char>(ecx7) & 3)) {
        while (1) {
            addr_415e10_2:
            ecx7 = ecx7 + 4;
            if (!((reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx7)) ^ 0xffffffff ^ reinterpret_cast<uint32_t>(*reinterpret_cast<void***>(ecx7) + 0x7efefeff)) & 0x81010100)) 
                continue;
            eax8 = *reinterpret_cast<void***>(ecx7 + 0xfffffffc);
            if (!*reinterpret_cast<signed char*>(&eax8)) 
                break;
            if (!*reinterpret_cast<signed char*>(&eax8 + 1)) 
                goto addr_415e57_5;
            if (!(reinterpret_cast<unsigned char>(eax8) & 0xff0000)) 
                goto addr_415e4d_7;
            if (!(reinterpret_cast<unsigned char>(eax8) & 0xff000000)) 
                goto addr_415e43_9;
        }
    } else {
        do {
            ++ecx7;
            if (!*reinterpret_cast<void***>(ecx7)) 
                goto addr_415e43_9;
        } while (reinterpret_cast<unsigned char>(ecx7) & 3);
        goto addr_415e0b_13;
    }
    return reinterpret_cast<unsigned char>(ecx7 + 0xfffffffc) - reinterpret_cast<unsigned char>(a2);
    addr_415e57_5:
    return reinterpret_cast<unsigned char>(ecx7 + 0xfffffffd) - reinterpret_cast<unsigned char>(a2);
    addr_415e4d_7:
    return reinterpret_cast<unsigned char>(ecx7 + 0xfffffffe) - reinterpret_cast<unsigned char>(a2);
    addr_415e43_9:
    return reinterpret_cast<unsigned char>(ecx7 + 0xffffffff) - reinterpret_cast<unsigned char>(a2);
    addr_415e0b_13:
    goto addr_415e10_2;
}

void** fun_4176bb(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, int32_t a8, int16_t a9, void* a10, int32_t a11);

void** fun_4160ba(void** ecx, void** a2, void** a3) {
    void** ebp4;
    void** eax5;
    void** esi6;
    int32_t ecx7;
    int16_t v8;
    void** v9;
    void** ecx10;
    void* ebp11;
    void** eax12;
    uint32_t eax13;
    void** ecx14;

    ebp4 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax5 = a2;
    if (reinterpret_cast<unsigned char>(eax5 + 1) > reinterpret_cast<unsigned char>(0x100)) {
        esi6 = g41ec70;
        ecx7 = reinterpret_cast<signed char>(eax5) >> 8;
        if (!(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(esi6 + *reinterpret_cast<unsigned char*>(&ecx7) * 2) + 1) & 0x80)) {
            *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&v8) + 1) = 0;
            *reinterpret_cast<unsigned char*>(&v8) = *reinterpret_cast<unsigned char*>(&eax5);
            v9 = reinterpret_cast<void**>(1);
        } else {
            *reinterpret_cast<unsigned char*>(&v8) = *reinterpret_cast<unsigned char*>(&ecx7);
            *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&v8) + 1) = *reinterpret_cast<unsigned char*>(&eax5);
            v9 = reinterpret_cast<void**>(2);
        }
        ecx10 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebp4) + 10);
        eax12 = fun_4176bb(ecx10, 1, ebp4 + 0xffffffff, v9, ecx10, 0, 0, 1, v8, ebp11, __return_address());
        if (eax12) {
            eax13 = *reinterpret_cast<uint16_t*>(&a2 + 2);
        } else {
            return eax12;
        }
    } else {
        ecx14 = g41ec70;
        eax13 = reinterpret_cast<uint16_t>(*reinterpret_cast<void***>(ecx14 + reinterpret_cast<unsigned char>(eax5) * 2));
    }
    return eax13 & reinterpret_cast<unsigned char>(a3);
}

void** g41f67c = reinterpret_cast<void**>(0);

void** fun_41650f(void** ecx, void** a2, void** a3, void** a4) {
    int1_t zf5;
    void** edi6;
    void** v7;
    void** edx8;
    void** ecx9;
    void** edx10;
    uint32_t ecx11;
    uint32_t ecx12;
    void** ecx13;
    void** al14;
    int1_t zf15;
    void** ecx16;
    void** al17;
    void** edi18;
    void** ebp19;
    void** eax20;

    zf5 = g41f67c == 0;
    edi6 = a2;
    v7 = edi6;
    if (!zf5) {
        edx8 = a4;
        if (!edx8) {
            addr_416578_3:
            if (edx8) {
                ecx9 = edx8 - 1 + 1;
                edx10 = ecx9;
                ecx11 = reinterpret_cast<unsigned char>(ecx9) >> 2;
                while (ecx11) {
                    --ecx11;
                    *reinterpret_cast<void***>(edi6) = reinterpret_cast<void**>(0);
                    edi6 = edi6 + 4;
                }
                ecx12 = reinterpret_cast<unsigned char>(edx10) & 3;
                while (ecx12) {
                    --ecx12;
                    *reinterpret_cast<void***>(edi6) = reinterpret_cast<void**>(0);
                    ++edi6;
                }
            }
        } else {
            ecx13 = a3;
            do {
                al14 = *reinterpret_cast<void***>(ecx13);
                --edx8;
                zf15 = (*reinterpret_cast<unsigned char*>(al14 + 0x41f781) & 4) == 0;
                *reinterpret_cast<void***>(edi6) = al14;
                if (zf15) {
                    ++edi6;
                    ++ecx13;
                    if (!al14) 
                        goto addr_416578_3;
                } else {
                    ++edi6;
                    ecx16 = ecx13 + 1;
                    if (!edx8) 
                        goto addr_41656e_14;
                    al17 = *reinterpret_cast<void***>(ecx16);
                    --edx8;
                    *reinterpret_cast<void***>(edi6) = al17;
                    ++edi6;
                    ecx13 = ecx16 + 1;
                    if (!al17) 
                        goto addr_416574_16;
                }
            } while (edx8);
            goto addr_41656c_19;
        }
    } else {
        eax20 = fun_413750(ecx, edi6, a3, a4, edi18, ebp19, __return_address(), v7, a3);
        goto addr_416596_21;
    }
    eax20 = v7;
    addr_416596_21:
    return eax20;
    addr_41656c_19:
    goto addr_416578_3;
    addr_41656e_14:
    *reinterpret_cast<void***>(edi6 + 0xffffffff) = reinterpret_cast<void**>(0);
    goto addr_416578_3;
    addr_416574_16:
    *reinterpret_cast<void***>(edi6 + 0xfffffffe) = reinterpret_cast<void**>(0);
    goto addr_416578_3;
}

int32_t g41f3dc = 0;

void fun_416e38(void** ecx);

int32_t ExitProcess = 0x19a70;

void fun_414157(void** ecx) {
    int1_t zf2;

    zf2 = g41f3dc == 1;
    if (zf2) {
        fun_416e38(ecx);
    }
    fun_416e71(ecx, __return_address());
    ExitProcess(__return_address());
    goto 0xff;
}

void fun_414132(void** ecx);

void** g41f560 = reinterpret_cast<void**>(0);

uint32_t g41f660 = 0;

int32_t GetStartupInfoA = 0x19b20;

struct s60 {
    uint32_t f0;
    unsigned char f4;
};

struct s61 {
    void** f0;
    signed char[3] pad4;
    unsigned char f4;
};

int32_t GetStdHandle = 0x19c8c;

int32_t GetFileType = 0x19c9c;

int32_t SetHandleCount = 0x19c7a;

struct s62 {
    void** f0;
    signed char[3] pad4;
    unsigned char f4;
};

void fun_416bad(void** ecx, void** a2, void** a3, void** a4) {
    void** v5;
    void** ebx6;
    void** v7;
    void** ebp8;
    void** v9;
    void** esi10;
    void** v11;
    void** edi12;
    void** v13;
    void** v14;
    void** v15;
    void** v16;
    void** v17;
    void** v18;
    void** eax19;
    void** esi20;
    void** ecx21;
    void* esp22;
    void** eax23;
    void** eax24;
    void** v25;
    int16_t v26;
    struct s60* v27;
    int32_t ebx28;
    uint32_t esi29;
    unsigned char* ebp30;
    void*** ebx31;
    int1_t less32;
    void** eax33;
    struct s61* esi34;
    int32_t eax35;
    uint32_t eax36;
    uint32_t eax37;
    void** eax38;
    uint32_t eax39;
    uint32_t eax40;
    int32_t v41;
    uint32_t edi42;
    void** v43;
    int32_t eax44;
    struct s62* eax45;
    void*** edi46;
    void** v47;
    void** v48;
    void** v49;
    void** v50;
    void** v51;
    void** eax52;
    uint32_t tmp32_53;
    int1_t less54;

    v5 = ebx6;
    v7 = ebp8;
    v9 = esi10;
    v11 = edi12;
    eax19 = fun_413320(ecx, 0x100, v11, v9, v7, v5, v13, v14, v15, v16, v17, v18);
    esi20 = eax19;
    ecx21 = reinterpret_cast<void**>(0x100);
    esp22 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 68 - 4 - 4 - 4 - 4 - 4 - 4 + 4 + 4);
    if (!esi20) {
        fun_414132(0x100);
        ecx21 = reinterpret_cast<void**>(27);
        esp22 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp22) - 4 - 4 + 4 + 4);
    }
    g41f560 = esi20;
    g41f660 = 32;
    eax23 = esi20 + 0x100;
    while (reinterpret_cast<unsigned char>(esi20) < reinterpret_cast<unsigned char>(eax23)) {
        *reinterpret_cast<void***>(esi20 + 4) = reinterpret_cast<void**>(0);
        *reinterpret_cast<void***>(esi20) = reinterpret_cast<void**>(0xffffffff);
        *reinterpret_cast<signed char*>(esi20 + 5) = 10;
        eax24 = g41f560;
        esi20 = esi20 + 8;
        eax23 = eax24 + 0x100;
    }
    v25 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp22) + 16);
    GetStartupInfoA(ecx21);
    if (!v26 || !v27) {
        addr_416cdd_7:
        ebx28 = 0;
    } else {
        esi29 = v27->f0;
        ebp30 = &v27->f4;
        ebx31 = reinterpret_cast<void***>(esi29 + reinterpret_cast<uint32_t>(ebp30));
        if (reinterpret_cast<int32_t>(esi29) >= reinterpret_cast<int32_t>(0x800)) {
            esi29 = 0x800;
        }
        less32 = reinterpret_cast<int32_t>(g41f660) < reinterpret_cast<int32_t>(esi29);
        if (!less32) 
            goto addr_416c91_11; else 
            goto addr_416c3f_12;
    }
    do {
        eax33 = g41f560;
        esi34 = reinterpret_cast<struct s61*>(eax33 + ebx28 * 8);
        if (!reinterpret_cast<int1_t>(*reinterpret_cast<void***>(eax33 + ebx28 * 8) == 0xffffffff)) {
            esi34->f4 = reinterpret_cast<unsigned char>(esi34->f4 | 0x80);
        } else {
            esi34->f4 = 0x81;
            if (ebx28) {
                eax35 = ebx28 - 1;
                eax36 = reinterpret_cast<uint32_t>(-eax35);
                eax37 = eax36 - (eax36 + reinterpret_cast<uint1_t>(eax36 < eax36 + reinterpret_cast<uint1_t>(!!eax35))) - 11;
            } else {
                eax37 = 0xf6;
            }
            eax38 = reinterpret_cast<void**>(GetStdHandle(ecx21, eax37));
            if (eax38 == 0xffffffff || ((eax39 = reinterpret_cast<uint32_t>(GetFileType(ecx21, eax38, eax37)), eax39 == 0) || (eax40 = eax39 & 0xff, esi34->f0 = eax38, eax40 == 2))) {
                esi34->f4 = reinterpret_cast<unsigned char>(esi34->f4 | 64);
            } else {
                if (eax40 == 3) {
                    esi34->f4 = reinterpret_cast<unsigned char>(esi34->f4 | 8);
                }
            }
        }
        ++ebx28;
    } while (ebx28 < 3);
    SetHandleCount(ecx21);
    goto v41;
    addr_416c91_11:
    edi42 = 0;
    if (!(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(esi29) < reinterpret_cast<int32_t>(0)) | reinterpret_cast<uint1_t>(esi29 == 0))) {
        do {
            if (*ebx31 != 0xffffffff && ((*reinterpret_cast<unsigned char*>(&ecx21) = *ebp30, !!(*reinterpret_cast<unsigned char*>(&ecx21) & 1)) && (*reinterpret_cast<unsigned char*>(&ecx21) & 8 || (v43 = *ebx31, eax44 = reinterpret_cast<int32_t>(GetFileType(v43)), !!eax44)))) {
                eax45 = reinterpret_cast<struct s62*>(*reinterpret_cast<void****>((reinterpret_cast<int32_t>(edi42) >> 5) * 4 + 0x41f560) + (edi42 & 31) * 8);
                ecx21 = *ebx31;
                eax45->f0 = ecx21;
                *reinterpret_cast<unsigned char*>(&ecx21) = *ebp30;
                eax45->f4 = *reinterpret_cast<unsigned char*>(&ecx21);
            }
            ++edi42;
            ++ebp30;
            ebx31 = ebx31 + 4;
        } while (reinterpret_cast<int32_t>(edi42) < reinterpret_cast<int32_t>(esi29));
        goto addr_416cdd_7;
    }
    addr_416c3f_12:
    edi46 = reinterpret_cast<void***>(0x41f564);
    do {
        eax52 = fun_413320(ecx21, 0x100, v25, v11, v9, v7, v5, v47, v48, v49, v50, v51);
        ecx21 = reinterpret_cast<void**>(0x100);
        if (!eax52) 
            break;
        tmp32_53 = g41f660 + 32;
        g41f660 = tmp32_53;
        *edi46 = eax52;
        ecx21 = eax52 + 0x100;
        while (reinterpret_cast<unsigned char>(eax52) < reinterpret_cast<unsigned char>(ecx21)) {
            *reinterpret_cast<void***>(eax52 + 4) = reinterpret_cast<void**>(0);
            *reinterpret_cast<void***>(eax52) = reinterpret_cast<void**>(0xffffffff);
            *reinterpret_cast<signed char*>(eax52 + 5) = 10;
            eax52 = eax52 + 8;
            ecx21 = *edi46 + 0x100;
        }
        edi46 = edi46 + 4;
        less54 = reinterpret_cast<int32_t>(g41f660) < reinterpret_cast<int32_t>(esi29);
    } while (less54);
    goto addr_416c89_32;
    esi29 = g41f660;
    goto addr_416c91_11;
    addr_416c89_32:
    goto addr_416c91_11;
}

void** g41f52c = reinterpret_cast<void**>(0);

int32_t GetEnvironmentStringsW = 0x19c60;

int32_t GetEnvironmentStrings = 0x19c48;

void** fun_417940(void** ecx, void** a2, void** a3, void** a4);

int32_t FreeEnvironmentStringsA = 0x19c14;

int32_t FreeEnvironmentStringsW = 0x19c2e;

void** fun_416a7b(void** ecx, void** a2, void** a3, void** a4) {
    void** v5;
    void** v6;
    void** v7;
    void** eax8;
    void** v9;
    void** ebx10;
    void** v11;
    void** ebp12;
    int32_t ebp13;
    void** v14;
    void** esi15;
    void** v16;
    void** edi17;
    void** ebx18;
    void** esi19;
    void** edi20;
    void** eax21;
    void** eax22;
    void** eax23;
    void** eax24;
    void** eax25;
    void** ebp26;
    void** eax27;
    void** esi28;
    void** eax29;
    void** eax30;
    int32_t edi31;
    void** v32;
    void** v33;
    void** eax34;
    void** eax35;
    void** v36;
    int32_t eax37;

    v5 = reinterpret_cast<void**>(__return_address());
    v6 = ecx;
    v7 = ecx;
    eax8 = g41f52c;
    v9 = ebx10;
    v11 = ebp12;
    ebp13 = GetEnvironmentStringsW;
    v14 = esi15;
    v16 = edi17;
    ebx18 = reinterpret_cast<void**>(0);
    esi19 = reinterpret_cast<void**>(0);
    edi20 = reinterpret_cast<void**>(0);
    if (eax8) {
        if (!reinterpret_cast<int1_t>(eax8 == 1)) {
            if (!reinterpret_cast<int1_t>(eax8 == 2)) 
                goto addr_416ba4_4;
        } else {
            addr_416ad2_5:
            if (esi19) 
                goto addr_416ae2_6;
            eax21 = reinterpret_cast<void**>(ebp13());
            esi19 = eax21;
            if (!esi19) 
                goto addr_416ba4_4; else 
                goto addr_416ae2_6;
        }
    } else {
        eax22 = reinterpret_cast<void**>(ebp13());
        esi19 = eax22;
        if (!esi19) {
            eax23 = reinterpret_cast<void**>(GetEnvironmentStrings());
            edi20 = eax23;
            if (!edi20) 
                goto addr_416ba4_4;
            g41f52c = reinterpret_cast<void**>(2);
        } else {
            g41f52c = reinterpret_cast<void**>(1);
            goto addr_416ad2_5;
        }
    }
    if (edi20 || (eax24 = reinterpret_cast<void**>(GetEnvironmentStrings()), edi20 = eax24, !!edi20)) {
        eax25 = edi20;
        if (*reinterpret_cast<void***>(edi20)) {
            addr_416b6e_14:
            ++eax25;
            if (*reinterpret_cast<void***>(eax25)) 
                goto addr_416b6e_14;
            ++eax25;
            if (*reinterpret_cast<void***>(eax25)) 
                goto addr_416b6e_14;
        }
        ebp26 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax25) - reinterpret_cast<unsigned char>(edi20) + 1);
        eax27 = fun_413320(ecx, ebp26, v16, v14, v11, v9, v7, v6, v5, a2, a3, a4);
        esi28 = eax27;
        if (esi28) {
            fun_417940(ebp26, esi28, edi20, ebp26);
        } else {
            esi28 = reinterpret_cast<void**>(0);
        }
        FreeEnvironmentStringsA(ebp26, edi20);
        eax29 = esi28;
    } else {
        addr_416ba4_4:
        eax29 = reinterpret_cast<void**>(0);
    }
    addr_416ba6_20:
    return eax29;
    addr_416ae2_6:
    eax30 = esi19;
    if (*reinterpret_cast<void***>(esi19)) {
        addr_416ae9_21:
        eax30 = eax30 + 1 + 1;
        if (*reinterpret_cast<void***>(eax30)) 
            goto addr_416ae9_21;
        eax30 = eax30 + 1 + 1;
        if (*reinterpret_cast<void***>(eax30)) 
            goto addr_416ae9_21;
    }
    edi31 = WideCharToMultiByte;
    v32 = reinterpret_cast<void**>(0);
    v33 = reinterpret_cast<void**>((reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(eax30) - reinterpret_cast<unsigned char>(esi19)) >> 1) + 1);
    eax34 = reinterpret_cast<void**>(edi31(0, 0, esi19, v33, 0, 0, 0, 0));
    if (eax34 && (eax35 = fun_413320(ecx, eax34, 0, 0, esi19, v33, 0, 0, 0, 0, v16, v14), ecx = eax34, v32 = eax35, !!eax35)) {
        v36 = eax35;
        eax37 = reinterpret_cast<int32_t>(edi31(ecx, 0, 0, esi19));
        if (!eax37) {
            fun_413483(ecx, v32, 0, 0, esi19, v32, v36, ecx, v32, 0, 0, esi19, v32, v36);
            ecx = v32;
            v36 = reinterpret_cast<void**>(0);
        }
        ebx18 = v36;
    }
    FreeEnvironmentStringsW(ecx, esi19, 0, 0, esi19, v33, v32, 0, 0, 0);
    eax29 = ebx18;
    goto addr_416ba6_20;
}

void** g41f8b4 = reinterpret_cast<void**>(0);

uint32_t fun_4164f3(void** a1, void** a2, void** a3);

int32_t GetModuleFileNameA = 0x1923e;

void** g41f8ac = reinterpret_cast<void**>(0);

void** g41f3c0 = reinterpret_cast<void**>(0);

void fun_4168c7(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6);

void** g41f3a8 = reinterpret_cast<void**>(0);

void** g41f3a4 = reinterpret_cast<void**>(0);

void fun_41682e(void** ecx, void** a2, void** a3, void** a4) {
    void* ebp5;
    int1_t zf6;
    void** edi7;
    void** esi8;
    void** ebx9;
    void** eax10;
    void** edi11;
    void** v12;
    void** v13;
    void** ecx14;
    void** v15;
    void** eax16;

    ebp5 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    zf6 = g41f8b4 == 0;
    if (zf6) {
        fun_4164f3(edi7, esi8, ebx9);
    }
    GetModuleFileNameA();
    eax10 = g41f8ac;
    g41f3c0 = reinterpret_cast<void**>(0x41f428);
    edi11 = reinterpret_cast<void**>(0x41f428);
    if (*reinterpret_cast<void***>(eax10)) {
        edi11 = eax10;
    }
    v12 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebp5) + 0xfffffff8);
    v13 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebp5) + 0xfffffffc);
    fun_4168c7(ecx, edi11, 0, 0, v13, v12);
    ecx14 = ecx;
    v15 = ecx + reinterpret_cast<unsigned char>(ecx14) * 4;
    eax16 = fun_413320(ecx14, v15, edi11, 0, 0, v13, v12, 0, 0x41f428, 0x104, edi7, esi8, ecx14, v15, edi11, 0, 0, v13, v12, 0, 0x41f428, 0x104, edi7, esi8);
    if (!eax16) {
        fun_414132(ecx14);
        ecx14 = reinterpret_cast<void**>(8);
    }
    fun_4168c7(ecx14, edi11, eax16, eax16 + reinterpret_cast<unsigned char>(ecx) * 4, reinterpret_cast<int32_t>(ebp5) + 0xfffffffc, reinterpret_cast<int32_t>(ebp5) + 0xfffffff8);
    g41f3a8 = eax16;
    g41f3a4 = ecx - 1;
    return;
}

void** g41f3d4 = reinterpret_cast<void**>(0);

void** g41f3b0 = reinterpret_cast<void**>(0);

void** fun_417850(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7);

int32_t g41f8b0 = 0;

void** fun_416775(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7) {
    void** v8;
    void** v9;
    void** ebx10;
    int1_t zf11;
    void** v12;
    void** esi13;
    void** v14;
    void** edi15;
    void** esi16;
    int32_t edi17;
    struct s59* eax18;
    void** v19;
    void** eax20;
    void** esi21;
    void** ecx22;
    void** edi23;
    void** v24;
    void** ebp25;
    struct s59* eax26;
    void** ebp27;
    void** eax28;
    void** ecx29;
    void** v30;
    void** v31;
    void** eax32;

    v8 = reinterpret_cast<void**>(__return_address());
    v9 = ebx10;
    zf11 = g41f8b4 == 0;
    v12 = esi13;
    v14 = edi15;
    if (zf11) {
        fun_4164f3(v14, v12, v9);
    }
    esi16 = g41f3d4;
    edi17 = 0;
    while (*reinterpret_cast<void***>(esi16)) {
        if (*reinterpret_cast<void***>(esi16) != 61) {
            ++edi17;
        }
        eax18 = fun_415df0(ecx, esi16, v14, v12, v9, v8);
        ecx = esi16;
        esi16 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi16) + reinterpret_cast<uint32_t>(eax18) + 1);
    }
    v19 = reinterpret_cast<void**>(edi17 * 4 + 4);
    eax20 = fun_413320(ecx, v19, v14, v12, v9, v8, a2, a3, a4, a5, a6, a7);
    esi21 = eax20;
    ecx22 = v19;
    g41f3b0 = esi21;
    if (!esi21) {
        fun_414132(ecx22);
        ecx22 = reinterpret_cast<void**>(9);
    }
    edi23 = g41f3d4;
    if (*reinterpret_cast<void***>(edi23)) {
        v24 = ebp25;
        do {
            eax26 = fun_415df0(ecx22, edi23, v24, v14, v12, v9);
            ecx22 = edi23;
            ebp27 = reinterpret_cast<void**>(&eax26->f1);
            if (*reinterpret_cast<void***>(edi23) != 61) {
                eax28 = fun_413320(ecx22, ebp27, v24, v14, v12, v9, v8, a2, a3, a4, a5, a6);
                ecx29 = ebp27;
                *reinterpret_cast<void***>(esi21) = eax28;
                if (!eax28) {
                    fun_414132(ecx29);
                    ecx29 = reinterpret_cast<void**>(9);
                }
                v30 = *reinterpret_cast<void***>(esi21);
                fun_417850(ecx29, v30, edi23, v24, v14, v12, v9);
                esi21 = esi21 + 4;
                ecx22 = edi23;
            }
            edi23 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi23) + reinterpret_cast<unsigned char>(ebp27));
        } while (*reinterpret_cast<void***>(edi23));
    }
    v31 = g41f3d4;
    eax32 = fun_413483(ecx22, v31, v14, v12, v9, v8, a2);
    g41f3d4 = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(esi21) = reinterpret_cast<void**>(0);
    g41f8b0 = 1;
    return eax32;
}

int32_t g41f8c0 = 0;

void** fun_41307b(void** ecx, void** a2, void** a3, void** a4) {
    int32_t eax5;
    void** eax6;

    eax5 = g41f8c0;
    if (eax5) {
        eax5();
    }
    fun_413163(ecx, 0x41a008, 0x41a014, __return_address(), a2);
    eax6 = fun_413163(ecx, 0x41a000, 0x41a004, 0x41a008, 0x41a014);
    return eax6;
}

uint32_t fun_417804(void** ecx);

void** fun_41671d(void** ecx, void** a2, void** a3, void** a4, void** a5) {
    int1_t zf6;
    void** esi7;
    void** v8;
    uint32_t eax9;

    zf6 = g41f8b4 == 0;
    if (zf6) {
        fun_4164f3(__return_address(), a2, a3);
    }
    esi7 = g41f8ac;
    if (!reinterpret_cast<int1_t>(*reinterpret_cast<void***>(esi7) == 34)) {
        if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi7)) > 32) {
            do {
                ++esi7;
            } while (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi7)) > 32);
        }
    } else {
        while ((++esi7, *reinterpret_cast<void***>(esi7 + 1) != 34) && *reinterpret_cast<void***>(esi7 + 1)) {
            v8 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi7 + 1))));
            eax9 = fun_417804(ecx);
            ecx = v8;
            if (!eax9) 
                continue;
            ++esi7;
        }
        if (reinterpret_cast<int1_t>(*reinterpret_cast<void***>(esi7) == 34)) 
            goto addr_41675a_10;
    }
    while (*reinterpret_cast<void***>(esi7) && reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi7)) <= 32) {
        addr_41675a_10:
        ++esi7;
    }
    return esi7;
}

int32_t g41caa4 = 2;

int32_t g41f530 = 0;

void fun_416e38(void** ecx) {
    int32_t eax2;
    int1_t zf3;
    int32_t eax4;

    eax2 = g41f3dc;
    if (eax2 == 1 || !eax2 && (zf3 = g41caa4 == 1, zf3)) {
        fun_416e71(ecx, 0xfc);
        eax4 = g41f530;
        if (eax4) {
            eax4(0xfc);
        }
        fun_416e71(0xfc, 0xff);
    }
    return;
}

void** fun_417860(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13);

void fun_417c75(void** ecx, void* a2, int32_t a3, int32_t a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12);

void fun_416e71(void** ecx, int32_t a2) {
    void* ebp3;
    int32_t edx4;
    void** ecx5;
    int32_t* eax6;
    uint32_t esi7;
    int32_t eax8;
    int1_t zf9;
    void*** esi10;
    void** v11;
    void** v12;
    void** esi13;
    void** v14;
    struct s59* eax15;
    void** v16;
    int32_t eax17;
    void** v18;
    int32_t eax19;
    void** v20;
    void** edi21;
    void** edi22;
    struct s59* eax23;
    void** v24;
    struct s59* eax25;
    void** v26;
    void** v27;
    void** v28;
    void** v29;
    void** v30;
    void** v31;
    void** v32;
    void** v33;
    void** v34;

    ebp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    edx4 = a2;
    ecx5 = reinterpret_cast<void**>(0);
    eax6 = reinterpret_cast<int32_t*>(0x41f010);
    do {
        if (edx4 == *eax6) 
            break;
        eax6 = eax6 + 2;
        ++ecx5;
    } while (reinterpret_cast<int32_t>(eax6) < 0x41f0a0);
    esi7 = reinterpret_cast<unsigned char>(ecx5) << 3;
    if (edx4 == *reinterpret_cast<int32_t*>(esi7 + 0x41f010)) {
        eax8 = g41f3dc;
        if (eax8 == 1 || !eax8 && (zf9 = g41caa4 == 1, zf9)) {
            esi10 = reinterpret_cast<void***>(esi7 + 0x41f014);
            v11 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebp3) + 8);
            v12 = *esi10;
            eax15 = fun_415df0(ecx5, v12, v11, 0, esi13, v14);
            v16 = *esi10;
            eax17 = reinterpret_cast<int32_t>(GetStdHandle(v12, 0xf4, v16, eax15, v11, 0));
            WriteFile(v12, eax17, 0xf4, v16, eax15, v11, 0);
        } else {
            if (edx4 != 0xfc) {
                v18 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebp3) + 0xfffffe5c);
                eax19 = reinterpret_cast<int32_t>(GetModuleFileNameA(0, v18, 0x104));
                if (!eax19) {
                    fun_417850(ecx5, reinterpret_cast<int32_t>(ebp3) + 0xfffffe5c, "<program name unknown>", 0, v18, 0x104, esi13);
                    ecx5 = reinterpret_cast<void**>("<program name unknown>");
                }
                v20 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebp3) + 0xfffffe5c);
                edi21 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebp3) + 0xfffffe5c);
                eax23 = fun_415df0(ecx5, v20, edi22, 0, v18, 0x104);
                if (reinterpret_cast<unsigned char>(&eax23->f1) > reinterpret_cast<unsigned char>(60)) {
                    v24 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebp3) + 0xfffffe5c);
                    eax25 = fun_415df0(v20, v24, edi22, 0, v18, 0x104);
                    edi21 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax25) + (reinterpret_cast<int32_t>(ebp3) - 0x1a4 - 59));
                    fun_413750(v20, edi21, "...", 3, v24, edi22, 0, v18, 0x104);
                }
                v26 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebp3) + 0xffffff60);
                fun_417850(v20, v26, "Runtime Error!\n\nProgram: ", edi22, 0, v18, 0x104);
                v27 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebp3) + 0xffffff60);
                fun_417860(v20, v27, edi21, v26, "Runtime Error!\n\nProgram: ", edi22, 0, v18, 0x104, esi13, v28, v29, v30);
                v31 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebp3) + 0xffffff60);
                fun_417860(v20, v31, "\n\n", v27, edi21, v26, "Runtime Error!\n\nProgram: ", edi22, 0, v18, 0x104, esi13, v32);
                v33 = *reinterpret_cast<void***>(esi7 + 0x41f014);
                v34 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebp3) + 0xffffff60);
                fun_417860(v20, v34, v33, v31, "\n\n", v27, edi21, v26, "Runtime Error!\n\nProgram: ", edi22, 0, v18, 0x104);
                fun_417c75(v20, reinterpret_cast<int32_t>(ebp3) - 0xa0, "Microsoft Visual C++ Runtime Library", 0x12010, v34, v33, v31, "\n\n", v27, edi21, v26, "Runtime Error!\n\nProgram: ");
            }
        }
    }
    return;
}

int32_t fun_4171f0(signed char* a1, signed char* a2, int32_t a3, void** a4, void** a5, void** a6) {
    int32_t ecx7;
    int32_t ebx8;
    signed char* edi9;
    signed char* esi10;
    int32_t ecx11;
    signed char* edi12;
    signed char* esi13;

    ecx7 = a3;
    if (ecx7) 
        goto addr_417221_2;
    ebx8 = ecx7;
    edi9 = a1;
    esi10 = edi9;
    do {
        if (!ecx7) 
            break;
        --ecx7;
        ++edi9;
        ++esi10;
    } while (*edi9);
    ecx11 = -ecx7 + ebx8;
    edi12 = esi10;
    esi13 = a2;
    while (ecx11) {
        --ecx11;
        *edi12 = *esi13;
        ++edi12;
        ++esi13;
    }
    ecx7 = 0;
    if (*reinterpret_cast<unsigned char*>(esi13 - 1) <= *reinterpret_cast<unsigned char*>(edi12 - 1)) 
        goto addr_41721b_10;
    addr_41721f_11:
    ecx7 = ~ecx7;
    goto addr_417221_2;
    addr_41721b_10:
    if (*reinterpret_cast<unsigned char*>(esi13 - 1) == *reinterpret_cast<unsigned char*>(edi12 - 1)) {
        addr_417221_2:
        return ecx7;
    } else {
        ecx7 = -2;
        goto addr_41721f_11;
    }
}

void*** fun_416fdb(void** a1, void** a2, void** a3, uint32_t a4);

void*** fun_416fc4(void** a1, void** a2, int32_t a3, void** a4, void** a5, void** a6) {
    void*** eax7;

    eax7 = fun_416fdb(__return_address(), a1, a2, 0);
    return eax7;
}

struct s63 {
    unsigned char f0;
    signed char f1;
};

int32_t GetModuleHandleA = 0x19b0c;

struct s64 {
    int16_t f0;
    signed char[58] pad60;
    int32_t f60;
};

struct s65 {
    signed char[26] pad26;
    unsigned char f26;
    signed char f27;
};

void* fun_4142e1(void** ecx, struct s63* a2, void** a3, void** a4, void** a5) {
    struct s64* eax6;
    struct s65* eax7;
    int32_t esi8;

    a2->f0 = reinterpret_cast<unsigned char>(0);
    eax6 = reinterpret_cast<struct s64*>(GetModuleHandleA());
    if (eax6->f0 == 0x5a4d && eax6->f60) {
        eax7 = reinterpret_cast<struct s65*>(reinterpret_cast<int32_t>(eax6) + eax6->f60);
        a2->f0 = eax7->f26;
        a2->f1 = eax7->f27;
    }
    goto esi8;
}

int32_t GetVersionExA = 0x19254;

int32_t GetEnvironmentVariableA = 0x19b44;

void*** fun_41430e(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18) {
    void*** ebp19;
    void** ebp20;
    void** v21;
    void** ebx22;
    void** v23;
    int32_t eax24;
    int32_t v25;
    uint32_t v26;
    void** v27;
    int32_t eax28;
    void* eax29;
    void*** eax30;
    void** v31;
    void** v32;
    void** v33;
    int32_t eax34;
    void** v35;
    void** v36;
    void** v37;
    void** v38;
    void** v39;
    void** eax40;
    void** eax41;
    void** eax42;

    ebp19 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    fun_414180(ecx, ebp20, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
    v21 = ebx22;
    v23 = reinterpret_cast<void**>(ebp19 + 0xffffff68);
    eax24 = reinterpret_cast<int32_t>(GetVersionExA());
    if (!eax24 || (v25 != 2 || v26 < 5)) {
        v27 = reinterpret_cast<void**>(ebp19 + 0xffffedd4);
        eax28 = reinterpret_cast<int32_t>(GetEnvironmentVariableA("__MSVCRT_HEAP_SELECT", v27, 0x1090));
        if (!eax28) {
            addr_414440_3:
            eax29 = fun_4142e1(ecx, ebp19 - 4, "__MSVCRT_HEAP_SELECT", v27, 0x1090);
            eax30 = reinterpret_cast<void***>(reinterpret_cast<uint32_t>(eax29) - (reinterpret_cast<uint32_t>(eax29) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(eax29) < reinterpret_cast<uint32_t>(eax29) + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&v21) < 6))) + 3);
        } else {
            ecx = reinterpret_cast<void**>(ebp19 + 0xffffedd4);
            if (v31) {
                do {
                    if (reinterpret_cast<signed char>(v32) >= reinterpret_cast<signed char>(97) && reinterpret_cast<signed char>(v32) <= reinterpret_cast<signed char>(0x7a)) {
                    }
                    ++ecx;
                } while (v33);
            }
            eax34 = fun_4171f0("__GLOBAL_HEAP_SELECTED", ebp19 - 0x122c, 22, "__MSVCRT_HEAP_SELECT", v27, 0x1090);
            if (eax34) {
                v35 = reinterpret_cast<void**>(ebp19 + 0xfffffe64);
                GetModuleFileNameA(0, v35, 0x104, "__MSVCRT_HEAP_SELECT", v27, 0x1090);
                if (v36) {
                    do {
                        if (reinterpret_cast<signed char>(v37) >= reinterpret_cast<signed char>(97) && reinterpret_cast<signed char>(v37) <= reinterpret_cast<signed char>(0x7a)) {
                        }
                    } while (v38);
                }
                v39 = reinterpret_cast<void**>(ebp19 + 0xfffffe64);
                eax40 = fun_4136d0(ebp19 + 0xffffedd4, v39, 0, v35, 0x104, "__MSVCRT_HEAP_SELECT", v27, 0x1090, v23, v21);
                ecx = v39;
            } else {
                eax40 = reinterpret_cast<void**>(ebp19 + 0xffffedd4);
            }
            if (!eax40) 
                goto addr_414440_3;
            eax41 = fun_413210(ecx, eax40, 44, "__MSVCRT_HEAP_SELECT", v27, 0x1090, v23);
            ecx = reinterpret_cast<void**>(44);
            if (!eax41) 
                goto addr_414440_3; else 
                goto addr_414410_17;
        }
    } else {
        eax30 = reinterpret_cast<void***>(1);
    }
    addr_414453_19:
    return eax30;
    addr_414410_17:
    eax42 = eax41 + 1;
    ecx = eax42;
    if (*reinterpret_cast<void***>(eax42)) {
        do {
            if (!reinterpret_cast<int1_t>(*reinterpret_cast<void***>(ecx) == 59)) {
                ++ecx;
            } else {
                *reinterpret_cast<void***>(ecx) = reinterpret_cast<void**>(0);
            }
        } while (*reinterpret_cast<void***>(ecx));
    }
    eax30 = fun_416fc4(eax42, 0, 10, "__MSVCRT_HEAP_SELECT", v27, 0x1090);
    if (eax30 == 2) 
        goto addr_414453_19;
    if (eax30 == 3) 
        goto addr_414453_19;
    if (eax30 == 1) 
        goto addr_414453_19; else 
        goto addr_414440_3;
}

uint32_t g41f888 = 0;

void** fun_4144b3() {
    void** v1;
    void** eax2;

    v1 = g41f8a4;
    eax2 = reinterpret_cast<void**>(HeapAlloc());
    g41f89c = eax2;
    if (eax2) {
        g41f894 = reinterpret_cast<void**>(0);
        g41f898 = 0;
        g41f890 = eax2;
        g41f8a0 = reinterpret_cast<void**>(0);
        g41f888 = 16;
        goto v1;
    } else {
        goto v1;
    }
}

uint32_t g41cc30 = 0xffffffff;

void** g41cc20 = reinterpret_cast<void**>(32);

void** fun_414dd5() {
    int1_t zf1;
    int32_t v2;
    int32_t esi3;
    void** v4;
    void** eax5;
    void** esi6;
    int32_t ebp7;
    void** eax8;
    void** edi9;
    void** v10;
    void** v11;
    int32_t eax12;
    void** eax13;
    int1_t zf14;
    int1_t zf15;
    void** eax16;
    int32_t ebp17;
    int32_t edx18;

    zf1 = g41cc30 == 0xffffffff;
    v2 = esi3;
    if (!zf1) {
        v4 = g41f8a4;
        eax5 = reinterpret_cast<void**>(HeapAlloc());
        esi6 = eax5;
        if (!esi6) {
            addr_414f12_3:
        } else {
            addr_414e06_4:
            ebp7 = VirtualAlloc;
            v4 = reinterpret_cast<void**>(0x400000);
            eax8 = reinterpret_cast<void**>(ebp7(0));
            edi9 = eax8;
            if (!edi9) {
                addr_414efb_5:
                if (esi6 != 0x41cc20) {
                    v10 = g41f8a4;
                    HeapFree(v10, 0, esi6, 0);
                    goto addr_414f12_3;
                }
            } else {
                v11 = edi9;
                eax12 = reinterpret_cast<int32_t>(ebp7(v11, 0x10000, 0x1000, 4, 0));
                if (!eax12) {
                    VirtualFree(edi9, 0, 0x8000, v11, 0x10000, 0x1000, 4, 0);
                    goto addr_414efb_5;
                } else {
                    if (!reinterpret_cast<int1_t>(esi6 == 0x41cc20)) {
                        *reinterpret_cast<void***>(esi6) = reinterpret_cast<void**>(0x41cc20);
                        eax13 = g41cc24;
                        *reinterpret_cast<void***>(esi6 + 4) = eax13;
                        g41cc24 = esi6;
                        *reinterpret_cast<void***>(*reinterpret_cast<void***>(esi6 + 4)) = esi6;
                    } else {
                        zf14 = g41cc20 == 0;
                        if (zf14) {
                            g41cc20 = reinterpret_cast<void**>(0x41cc20);
                        }
                        zf15 = g41cc24 == 0;
                        if (zf15) {
                            g41cc24 = reinterpret_cast<void**>(0x41cc20);
                        }
                    }
                    *reinterpret_cast<void***>(esi6 + 20) = edi9 + 0x400000;
                    eax16 = esi6 + 24;
                    *reinterpret_cast<void***>(esi6 + 12) = esi6 + 0x98;
                    *reinterpret_cast<void***>(esi6 + 16) = edi9;
                    *reinterpret_cast<void***>(esi6 + 8) = eax16;
                    ebp17 = 0;
                    do {
                        edx18 = 0;
                        *reinterpret_cast<unsigned char*>(&edx18) = reinterpret_cast<uint1_t>(ebp17 >= 16);
                        ++ebp17;
                        *reinterpret_cast<void***>(eax16) = reinterpret_cast<void**>((reinterpret_cast<uint32_t>(edx18 - 1) & reinterpret_cast<unsigned char>(0xf1)) - 1);
                        *reinterpret_cast<void***>(eax16 + 4) = reinterpret_cast<void**>(0xf1);
                        eax16 = eax16 + 8;
                    } while (ebp17 < 0x400);
                    fun_415420(0xf1, edi9, 0, 0x10000, v11, 0x10000, 0x1000, 4, 0, v4);
                    while (reinterpret_cast<unsigned char>(edi9) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi6 + 16) + 0x10000)) {
                        *reinterpret_cast<void***>(edi9 + 0xf8) = reinterpret_cast<void**>(0xff);
                        *reinterpret_cast<void***>(edi9) = edi9 + 8;
                        *reinterpret_cast<void***>(edi9 + 4) = reinterpret_cast<void**>(0xf0);
                        edi9 = edi9 + 0x1000;
                    }
                }
            }
        }
        goto v2;
    } else {
        esi6 = reinterpret_cast<void**>(0x41cc20);
        goto addr_414e06_4;
    }
}

struct s66 {
    void** f0;
    void** f1;
    void** f2;
    void** f3;
};

void** fun_417230(void** ecx, void** a2, void** a3, void** a4, void** a5, int32_t a6, void** a7, void** a8, void*** a9, int32_t a10, void** a11, int32_t a12, void** a13) {
    uint160_t v2;
    void** esi14;
    void** edi15;
    void** eax16;
    uint32_t ecx17;
    uint32_t edx18;
    struct s66* esi19;
    void** edi20;
    uint32_t ecx21;
    uint32_t edx22;
    unsigned char bl23;
    void* eax24;

    *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 16) = a2;
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v2) + 12) = reinterpret_cast<int32_t>(__return_address());
    esi14 = a3;
    edi15 = *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 16);
    eax16 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(a4) + reinterpret_cast<unsigned char>(esi14));
    if (reinterpret_cast<unsigned char>(edi15) <= reinterpret_cast<unsigned char>(esi14) || reinterpret_cast<unsigned char>(edi15) >= reinterpret_cast<unsigned char>(eax16)) {
        if (reinterpret_cast<unsigned char>(edi15) & 3) {
            if (reinterpret_cast<unsigned char>(a4) < reinterpret_cast<unsigned char>(4)) {
                goto *reinterpret_cast<int32_t*>(reinterpret_cast<unsigned char>(a4 - 4) * 4 + 0x417388);
            } else {
                goto *reinterpret_cast<int32_t*>("sA" + (reinterpret_cast<unsigned char>(edi15) & 3) * 4);
            }
        }
        ecx17 = reinterpret_cast<unsigned char>(a4) >> 2;
        edx18 = reinterpret_cast<unsigned char>(a4) & 3;
        if (ecx17 >= 8) 
            goto addr_417263_7;
    } else {
        esi19 = reinterpret_cast<struct s66*>(reinterpret_cast<unsigned char>(a4) + reinterpret_cast<unsigned char>(esi14) + 0xfffffffc);
        edi20 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(a4) + reinterpret_cast<unsigned char>(edi15) + 0xfffffffc);
        if (reinterpret_cast<unsigned char>(edi20) & 3) {
            eax16 = edi20;
            if (reinterpret_cast<unsigned char>(a4) >= reinterpret_cast<unsigned char>(4)) {
                goto *reinterpret_cast<int32_t*>("uA" + (reinterpret_cast<unsigned char>(eax16) & 3) * 4);
            }
            goto *reinterpret_cast<int32_t*>(" uA" + reinterpret_cast<unsigned char>(a4) * 4);
        } else {
            ecx21 = reinterpret_cast<unsigned char>(a4) >> 2;
            edx22 = reinterpret_cast<unsigned char>(a4) & 3;
            if (ecx21 < 8) {
                goto *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(-ecx21) * 4 + 0x4174c0);
                goto *reinterpret_cast<int32_t*>(" uA" + edx22 * 4);
            } else {
                while (ecx21) {
                    --ecx21;
                    *reinterpret_cast<void***>(edi20) = esi19->f0;
                    edi20 = edi20 + 0xfffffffc;
                    --esi19;
                }
                goto *reinterpret_cast<int32_t*>(" uA" + edx22 * 4);
            }
        }
    }
    switch (ecx17) {
        addr_41736f_20:
    case 0:
        switch (edx18) {
        case 0:
            *reinterpret_cast<unsigned char*>(esi14 + 95) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(esi14 + 95) | bl23);
            goto *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v2) + 13);
        case 1:
            *reinterpret_cast<void***>(edi15) = *reinterpret_cast<void***>(esi14);
            return *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 16);
        case 2:
            *reinterpret_cast<void***>(edi15) = *reinterpret_cast<void***>(esi14);
            *reinterpret_cast<void***>(edi15 + 1) = *reinterpret_cast<void***>(esi14 + 1);
            return *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 16);
        case 3:
            *reinterpret_cast<void***>(edi15) = *reinterpret_cast<void***>(esi14);
            *reinterpret_cast<void***>(edi15 + 1) = *reinterpret_cast<void***>(esi14 + 1);
            *reinterpret_cast<void***>(edi15 + 2) = *reinterpret_cast<void***>(esi14 + 2);
            return *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 16);
        }
        addr_41735c_26:
    case 1:
        *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(edi15 + ecx17 * 4) - 4) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esi14 + ecx17 * 4) - 4);
        eax24 = reinterpret_cast<void*>(ecx17 * 4);
        esi14 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi14) + reinterpret_cast<uint32_t>(eax24));
        edi15 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi15) + reinterpret_cast<uint32_t>(eax24));
        goto addr_41736f_20;
        addr_417354_27:
    case 2:
        *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(edi15 + ecx17 * 4) - 8) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esi14 + ecx17 * 4) - 8);
        goto addr_41735c_26;
        addr_41734c_28:
    case 3:
        *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(edi15 + ecx17 * 4) - 12) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esi14 + ecx17 * 4) - 12);
        goto addr_417354_27;
        addr_417344_30:
    case 4:
        *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(edi15 + ecx17 * 4) - 16) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esi14 + ecx17 * 4) - 16);
        goto addr_41734c_28;
        addr_41733c_31:
    case 5:
        *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(edi15 + ecx17 * 4) - 20) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esi14 + ecx17 * 4) - 20);
        goto addr_417344_30;
    case 6:
        *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(edi15 + ecx17 * 4) - 24) = eax16;
        goto addr_41733c_31;
    case 7:
    }
    addr_417263_7:
    while (ecx17) {
        --ecx17;
        *reinterpret_cast<void***>(edi15) = *reinterpret_cast<void***>(esi14);
        edi15 = edi15 + 4;
        esi14 = esi14 + 4;
    }
    goto *reinterpret_cast<int32_t*>(edx18 * 4 + 0x417378);
    return eax16;
    *reinterpret_cast<void***>(edi20 + 3) = esi19->f3;
    return *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 16);
    *reinterpret_cast<void***>(edi20 + 3) = esi19->f3;
    *reinterpret_cast<void***>(edi20 + 2) = esi19->f2;
    return *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 16);
    *reinterpret_cast<void***>(edi20 + 3) = esi19->f3;
    *reinterpret_cast<void***>(edi20 + 2) = esi19->f2;
    *reinterpret_cast<void***>(edi20 + 1) = esi19->f1;
    return *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 16);
}

int32_t HeapReAlloc = 0x19b98;

struct s67 {
    void** f0;
    signed char[3] pad4;
    void** f4;
    signed char[3] pad8;
    uint32_t f8;
    void** f12;
    signed char[3] pad16;
    void** f16;
};

void** fun_414b58() {
    uint32_t eax1;
    uint32_t ecx2;
    uint32_t v3;
    void** v4;
    void** eax5;
    uint32_t tmp32_6;
    void** ecx7;
    struct s67* esi8;
    void** eax9;
    void** eax10;
    void** v11;
    void** v12;

    eax1 = g41f898;
    ecx2 = g41f888;
    if (eax1 == ecx2) {
        v3 = ecx2 + ecx2 * 4 + 80 << 2;
        v4 = g41f8a4;
        eax5 = reinterpret_cast<void**>(HeapReAlloc(v4));
        if (!eax5) 
            goto addr_414beb_3;
        tmp32_6 = g41f888 + 16;
        g41f888 = tmp32_6;
        g41f89c = eax5;
        eax1 = g41f898;
    }
    ecx7 = g41f89c;
    v3 = 0x41c4;
    esi8 = reinterpret_cast<struct s67*>(ecx7 + (eax1 + eax1 * 4) * 4);
    eax9 = reinterpret_cast<void**>(HeapAlloc());
    esi8->f16 = eax9;
    if (!eax9) {
        addr_414beb_3:
    } else {
        eax10 = reinterpret_cast<void**>(VirtualAlloc(0, 0x100000, 0x2000, 4));
        esi8->f12 = eax10;
        if (eax10) {
            esi8->f8 = 0xffffffff;
            esi8->f0 = reinterpret_cast<void**>(0);
            esi8->f4 = reinterpret_cast<void**>(0);
            ++g41f898;
            *reinterpret_cast<void***>(esi8->f16) = reinterpret_cast<void**>(0xffffffff);
        } else {
            v11 = esi8->f16;
            v12 = g41f8a4;
            HeapFree(v12, 0, v11, 0, 0x100000, 0x2000, 4);
            goto addr_414beb_3;
        }
    }
    goto v3;
}

struct s68 {
    signed char[4] pad4;
    struct s68* f4;
    struct s68* f8;
};

struct s69 {
    void** f0;
    signed char[15] pad16;
    uint32_t f16;
};

struct s70 {
    uint32_t f0;
    uint32_t f4;
    signed char[4064] pad4072;
    int32_t f4072;
    uint32_t f4076;
};

struct s72 {
    signed char[4] pad4;
    struct s71* f4;
    struct s71* f8;
};

struct s71 {
    signed char[4] pad4;
    struct s72* f4;
    struct s72* f8;
};

void** fun_414c09(uint32_t ecx, void** a2) {
    void** ecx3;
    void** esi4;
    void** eax5;
    void** ebx6;
    int32_t edx7;
    struct s68* eax8;
    struct s68* v9;
    struct s69* edi10;
    uint32_t eax11;
    struct s69* edx12;
    struct s70* eax13;
    struct s71* ecx14;
    struct s72* eax15;
    struct s71* ecx16;
    int1_t zf17;
    void** ecx18;
    void** eax19;

    ecx3 = a2;
    esi4 = *reinterpret_cast<void***>(ecx3 + 16);
    eax5 = *reinterpret_cast<void***>(ecx3 + 8);
    ebx6 = reinterpret_cast<void**>(0);
    while (reinterpret_cast<signed char>(eax5) >= reinterpret_cast<signed char>(0)) {
        eax5 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax5) << 1);
        ++ebx6;
    }
    edx7 = 63;
    eax8 = reinterpret_cast<struct s68*>(reinterpret_cast<uint32_t>(esi4 + reinterpret_cast<unsigned char>(ebx6) * 0x204) + 0x144);
    v9 = eax8;
    do {
        eax8->f8 = eax8;
        eax8->f4 = eax8;
        eax8 = reinterpret_cast<struct s68*>(&eax8->f8);
        --edx7;
    } while (edx7);
    edi10 = reinterpret_cast<struct s69*>((reinterpret_cast<unsigned char>(ebx6) << 15) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx3 + 12)));
    eax11 = reinterpret_cast<uint32_t>(VirtualAlloc());
    if (eax11) {
        edx12 = reinterpret_cast<struct s69*>(reinterpret_cast<uint32_t>(edi10) + 0x7000);
        if (reinterpret_cast<uint32_t>(edi10) <= reinterpret_cast<uint32_t>(edx12)) {
            eax13 = reinterpret_cast<struct s70*>(&edi10->f16);
            do {
                *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax13) + 0xfffffff8) = 0xffffffff;
                eax13->f4076 = 0xffffffff;
                *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax13) + 0xfffffffc) = 0xff0;
                eax13->f0 = reinterpret_cast<uint32_t>(eax13) + 0xffc;
                eax13->f4 = reinterpret_cast<uint32_t>(eax13) + 0xffffeffc;
                eax13->f4072 = 0xff0;
                eax13 = reinterpret_cast<struct s70*>(reinterpret_cast<uint32_t>(eax13) + 0x1000);
            } while (reinterpret_cast<uint32_t>(eax13) + 0xfffffff0 <= reinterpret_cast<uint32_t>(edx12));
        }
        ecx14 = reinterpret_cast<struct s71*>(reinterpret_cast<uint32_t>(edi10) + 12);
        eax15 = reinterpret_cast<struct s72*>(v9 + 42);
        eax15->f4 = ecx14;
        ecx14->f8 = eax15;
        ecx16 = reinterpret_cast<struct s71*>(reinterpret_cast<uint32_t>(edx12) + 12);
        eax15->f8 = ecx16;
        ecx16->f4 = eax15;
        *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esi4 + reinterpret_cast<unsigned char>(ebx6) * 4) + 68) = 0;
        *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esi4 + reinterpret_cast<unsigned char>(ebx6) * 4) + 0xc4) = 1;
        zf17 = *reinterpret_cast<signed char*>(esi4 + 67) == 0;
        *reinterpret_cast<signed char*>(esi4 + 67) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(esi4 + 67) + 1);
        if (zf17) {
            *reinterpret_cast<void***>(a2 + 4) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a2 + 4)) | 1);
        }
        ecx18 = ebx6;
        *reinterpret_cast<void***>(a2 + 8) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a2 + 8)) & ~(0x80000000 >> *reinterpret_cast<signed char*>(&ecx18)));
        eax19 = ebx6;
    } else {
        eax19 = reinterpret_cast<void**>(0xffffffff);
    }
    return eax19;
}

void** fun_415420(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10) {
    void** edx11;
    void** eax12;
    void** edi13;
    uint32_t ecx14;
    void*** eax15;
    void** ecx16;
    uint32_t ecx17;

    edx11 = a4;
    if (!edx11) {
        return a2;
    }
    eax12 = reinterpret_cast<void**>(0);
    eax12 = a3;
    edi13 = a2;
    if (reinterpret_cast<unsigned char>(edx11) < reinterpret_cast<unsigned char>(4)) {
        do {
            addr_415467_4:
            *reinterpret_cast<void***>(edi13) = eax12;
            ++edi13;
            --edx11;
        } while (edx11);
    } else {
        ecx14 = reinterpret_cast<uint32_t>(-reinterpret_cast<unsigned char>(a2)) & 3;
        if (ecx14) {
            edx11 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx11) - ecx14);
            do {
                *reinterpret_cast<void***>(edi13) = eax12;
                ++edi13;
                --ecx14;
            } while (ecx14);
        }
        eax15 = reinterpret_cast<void***>((reinterpret_cast<unsigned char>(eax12) << 8) + reinterpret_cast<unsigned char>(eax12));
        eax12 = reinterpret_cast<void**>((reinterpret_cast<uint32_t>(eax15) << 16) + reinterpret_cast<uint32_t>(eax15));
        ecx16 = edx11;
        edx11 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx11) & 3);
        ecx17 = reinterpret_cast<unsigned char>(ecx16) >> 2;
        if (!ecx17) 
            goto addr_415467_4; else 
            goto addr_415461_9;
    }
    addr_41546d_10:
    return a2;
    addr_415461_9:
    while (ecx17) {
        --ecx17;
        *reinterpret_cast<void***>(edi13) = eax12;
        edi13 = edi13 + 4;
    }
    if (!edx11) 
        goto addr_41546d_10; else 
        goto addr_415467_4;
}

void** fun_414f19(void** a1) {
    int1_t zf2;
    void** eax3;
    void** ecx4;

    VirtualFree();
    zf2 = g41ec40 == a1;
    if (zf2) {
        g41ec40 = *reinterpret_cast<void***>(a1 + 4);
    }
    if (a1 == 0x41cc20) {
        g41cc30 = 0xffffffff;
        goto 0;
    } else {
        eax3 = *reinterpret_cast<void***>(a1 + 4);
        ecx4 = *reinterpret_cast<void***>(a1);
        *reinterpret_cast<void***>(eax3) = ecx4;
        *reinterpret_cast<void***>(*reinterpret_cast<void***>(a1) + 4) = *reinterpret_cast<void***>(a1 + 4);
        HeapFree();
        goto 0;
    }
}

void** fun_4152d5(void** ecx, void** a2, void** a3, void** a4) {
    void** ecx5;
    void** edx6;
    void** esi7;
    void** edi8;
    void** ebx9;
    void** v10;
    void** eax11;
    void** v12;
    void** esi13;
    void** eax14;
    void** esi15;
    void** ebx16;
    void** eax17;
    void** eax18;
    void** ebx19;
    void** ebx20;
    void** esi21;
    void** ebx22;

    ecx5 = a2;
    edx6 = a4;
    esi7 = *reinterpret_cast<void***>(ecx5 + 4);
    edi8 = *reinterpret_cast<void***>(ecx5);
    ebx9 = ecx5 + 0xf8;
    v10 = edi8;
    eax11 = edi8;
    v12 = ebx9;
    if (reinterpret_cast<unsigned char>(esi7) < reinterpret_cast<unsigned char>(edx6)) {
        esi13 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi7) + reinterpret_cast<unsigned char>(edi8));
        if (*reinterpret_cast<void***>(esi13)) {
            eax11 = esi13;
        }
        if (reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(eax11) + reinterpret_cast<unsigned char>(edx6)) < reinterpret_cast<unsigned char>(ebx9)) 
            goto addr_41532a_5;
    } else {
        *reinterpret_cast<void***>(edi8) = edx6;
        if (reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(edi8) + reinterpret_cast<unsigned char>(edx6)) >= reinterpret_cast<unsigned char>(ebx9)) {
            *reinterpret_cast<void***>(ecx5 + 4) = reinterpret_cast<void**>(0);
            *reinterpret_cast<void***>(ecx5) = ecx5 + 8;
        } else {
            *reinterpret_cast<void***>(ecx5) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx5)) + reinterpret_cast<unsigned char>(edx6));
            *reinterpret_cast<void***>(ecx5 + 4) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx5 + 4)) - reinterpret_cast<unsigned char>(edx6));
        }
        eax14 = edi8 + 8;
        goto addr_4153e8_10;
    }
    addr_41536d_11:
    esi15 = ecx5 + 8;
    while (reinterpret_cast<unsigned char>(esi15) < reinterpret_cast<unsigned char>(edi8) && reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(esi15) + reinterpret_cast<unsigned char>(edx6)) < reinterpret_cast<unsigned char>(v12)) {
        if (*reinterpret_cast<void***>(esi15)) {
            esi15 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi15) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi15)));
        } else {
            ebx16 = esi15 + 1;
            eax17 = reinterpret_cast<void**>(1);
            while (!*reinterpret_cast<void***>(ebx16)) {
                ++ebx16;
                ++eax17;
            }
            if (reinterpret_cast<unsigned char>(eax17) >= reinterpret_cast<unsigned char>(edx6)) 
                goto addr_4153c9_19;
            a3 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(a3) - reinterpret_cast<unsigned char>(eax17));
            if (reinterpret_cast<unsigned char>(a3) < reinterpret_cast<unsigned char>(edx6)) 
                break;
            esi15 = ebx16;
        }
    }
    addr_4153f2_22:
    eax18 = reinterpret_cast<void**>(0);
    addr_4153f4_23:
    return eax18;
    addr_4153c9_19:
    ebx19 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi15) + reinterpret_cast<unsigned char>(edx6));
    if (reinterpret_cast<unsigned char>(ebx19) >= reinterpret_cast<unsigned char>(v12)) {
        *reinterpret_cast<void***>(ecx5 + 4) = reinterpret_cast<void**>(0);
        *reinterpret_cast<void***>(ecx5) = ecx5 + 8;
    } else {
        *reinterpret_cast<void***>(ecx5) = ebx19;
        *reinterpret_cast<void***>(ecx5 + 4) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax17) - reinterpret_cast<unsigned char>(edx6));
    }
    *reinterpret_cast<void***>(esi15) = edx6;
    eax14 = esi15 + 8;
    addr_4153e8_10:
    eax18 = reinterpret_cast<void**>((reinterpret_cast<unsigned char>(eax14) << 4) - reinterpret_cast<unsigned char>(ecx5) * 15);
    goto addr_4153f4_23;
    do {
        addr_41532a_5:
        if (*reinterpret_cast<void***>(eax11)) {
            eax11 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax11) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax11)));
            continue;
        } else {
            ebx20 = eax11 + 1;
            esi21 = reinterpret_cast<void**>(1);
            while (!*reinterpret_cast<void***>(ebx20)) {
                ++ebx20;
                ++esi21;
            }
            if (reinterpret_cast<unsigned char>(esi21) >= reinterpret_cast<unsigned char>(edx6)) 
                break;
            if (eax11 == v10) 
                goto addr_415348_33;
        }
        a3 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(a3) - reinterpret_cast<unsigned char>(esi21));
        if (reinterpret_cast<unsigned char>(a3) < reinterpret_cast<unsigned char>(edx6)) 
            goto addr_4153f2_22;
        addr_415359_35:
        edi8 = v10;
        eax11 = ebx20;
        continue;
        addr_415348_33:
        *reinterpret_cast<void***>(ecx5 + 4) = esi21;
        goto addr_415359_35;
    } while (reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(eax11) + reinterpret_cast<unsigned char>(edx6)) < reinterpret_cast<unsigned char>(v12));
    goto addr_41536d_11;
    ebx22 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax11) + reinterpret_cast<unsigned char>(edx6));
    if (reinterpret_cast<unsigned char>(ebx22) >= reinterpret_cast<unsigned char>(v12)) {
        *reinterpret_cast<void***>(ecx5 + 4) = reinterpret_cast<void**>(0);
        *reinterpret_cast<void***>(ecx5) = ecx5 + 8;
    } else {
        *reinterpret_cast<void***>(ecx5) = ebx22;
        *reinterpret_cast<void***>(ecx5 + 4) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi21) - reinterpret_cast<unsigned char>(edx6));
    }
    *reinterpret_cast<void***>(eax11) = edx6;
    eax14 = eax11 + 8;
    goto addr_4153e8_10;
}

void** g41f41c = reinterpret_cast<void**>(0);

int32_t LCMapStringW = 0x19bc6;

int32_t LCMapStringA = 0x19bb6;

void** fun_41608f(void** a1, void** a2);

void** fun_415e6b(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, int32_t a8, void** a9, void** a10, void** a11, void** a12, ...) {
    void** eax13;
    void** esp14;
    void** esp15;
    void** v16;
    int1_t zf17;
    int32_t eax18;
    int32_t eax19;
    void** eax20;
    void** ecx21;
    void** eax22;
    void** eax23;
    uint32_t eax24;
    void** v25;
    void** eax26;
    void** edi27;
    void** esi28;
    void** ebx29;
    void** v30;
    void** v31;
    void** v32;
    void** v33;
    void** v34;
    void** esp35;
    int32_t eax36;
    void** eax37;
    void** esi38;
    void** eax39;
    void** ebx40;
    int32_t eax41;
    void** v42;
    void** v43;
    void** eax44;
    int32_t eax45;

    eax13 = *reinterpret_cast<void***>(&g0);
    esp14 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4 - 4);
    *reinterpret_cast<void***>(&g0) = esp14;
    esp15 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp14 - 28) - 4 - 4 - 4);
    v16 = esp15;
    zf17 = g41f41c == 0;
    if (zf17) {
        eax18 = reinterpret_cast<int32_t>(LCMapStringW(0, 0x100, 0x4187ec, 1, 0, 0));
        esp15 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp15 - 4) - 4 - 4 + 4 - 4 - 4 - 4 - 4 - 4 + 4);
        if (!eax18) {
            eax19 = reinterpret_cast<int32_t>(LCMapStringA(0, 0x100, 0x4187e8, 1, 0, 0, 0, 0x100, 0x4187ec, 1, 0, 0));
            esp15 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp15 - 4) - 4 - 4 - 4 - 4 - 4 - 4 + 4);
            if (!eax19) 
                goto addr_415ff9_4;
            g41f41c = reinterpret_cast<void**>(2);
        } else {
            g41f41c = reinterpret_cast<void**>(1);
        }
    }
    if (reinterpret_cast<signed char>(a4) > reinterpret_cast<signed char>(0)) {
        eax20 = fun_41608f(a3, a4);
        ecx21 = a4;
        esp15 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp15 - 4) - 4 - 4 + 4 + 4 + 4);
        a4 = eax20;
    }
    eax22 = g41f41c;
    if (!reinterpret_cast<int1_t>(eax22 == 2)) {
        if (!reinterpret_cast<int1_t>(eax22 == 1)) 
            goto addr_415ff9_4;
        if (!a7) {
            eax23 = g41f3f8;
            a7 = eax23;
        }
        eax24 = reinterpret_cast<uint32_t>(-a8);
        v25 = reinterpret_cast<void**>((eax24 - (eax24 + reinterpret_cast<uint1_t>(eax24 < eax24 + reinterpret_cast<uint1_t>(!!a8))) & 8) + 1);
        eax26 = reinterpret_cast<void**>(MultiByteToWideChar(ecx21, a7, v25, a3, a4, 0, 0));
        if (!eax26) 
            goto addr_415ff9_4;
        fun_414180(ecx21, a7, v25, a3, a4, 0, 0, edi27, esi28, ebx29, v30, v31, v32, v33, eax26, v16, v34, eax13, 0x416d60, 0x4187f0);
        esp35 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp15 - 4) - 4 - 4 - 4 - 4 - 4 - 4 + 4 - 4 + 4);
        if (!esp35) 
            goto addr_415ff9_4;
        eax36 = reinterpret_cast<int32_t>(MultiByteToWideChar(ecx21, a7, 1, a3, a4, esp35, eax26, a7, v25, a3, a4, 0, 0));
        if (!eax36) 
            goto addr_415ff9_4;
        eax37 = reinterpret_cast<void**>(LCMapStringW(ecx21, a1, a2, esp35, eax26, 0, 0, a7, 1, a3, a4, esp35, eax26, a7, v25, a3, a4, 0, 0));
        esi38 = eax37;
        if (!esi38) 
            goto addr_415ff9_4;
        if (*reinterpret_cast<unsigned char*>(&a2 + 1) & 4) 
            goto addr_415fcd_19;
    } else {
        eax39 = reinterpret_cast<void**>(LCMapStringA(ecx21, a1, a2, a3, a4, a5, a6));
        goto addr_415ffb_21;
    }
    fun_414180(ecx21, a1, a2, esp35, eax26, 0, 0, a7, 1, a3, a4, esp35, eax26, a7, v25, a3, a4, 0, 0, edi27);
    ebx40 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp35 - 4) - 4 - 4 - 4 - 4 - 4 - 4 + 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4 - 4 + 4);
    if (!ebx40) 
        goto addr_415ff9_4;
    eax41 = reinterpret_cast<int32_t>(LCMapStringW(ecx21, a1, a2, esp35, eax26, ebx40, esi38, a1, a2, esp35, eax26, 0, 0, a7, 1, a3, a4, esp35, eax26, a7, v25, a3, a4, 0, 0));
    if (!eax41) 
        goto addr_415ff9_4;
    if (a6) {
        v42 = a6;
        v43 = a5;
    } else {
        v42 = reinterpret_cast<void**>(0);
        v43 = reinterpret_cast<void**>(0);
    }
    eax44 = reinterpret_cast<void**>(WideCharToMultiByte(ecx21, a7, 0x220, ebx40, esi38, v43, v42, 0, 0, a1, a2, esp35, eax26, ebx40, esi38, a1, a2, esp35, eax26, 0, 0, a7, 1, a3, a4, esp35, eax26, a7, v25, a3, a4, 0, 0));
    esi38 = eax44;
    if (!esi38) {
        addr_415ff9_4:
        eax39 = reinterpret_cast<void**>(0);
    } else {
        addr_416088_29:
        eax39 = esi38;
    }
    addr_415ffb_21:
    *reinterpret_cast<void***>(&g0) = eax13;
    return eax39;
    addr_415fcd_19:
    if (!a6) 
        goto addr_416088_29;
    if (reinterpret_cast<signed char>(esi38) > reinterpret_cast<signed char>(a6)) 
        goto addr_415ff9_4;
    eax45 = reinterpret_cast<int32_t>(LCMapStringW(ecx21, a1, a2, esp35, eax26, a5, a6, a1, a2, esp35, eax26, 0, 0, a7, 1, a3, a4, esp35, eax26, a7, v25, a3, a4, 0, 0));
    if (eax45) 
        goto addr_416088_29; else 
        goto addr_415ff9_4;
}

int32_t fun_415cf0(void** ecx, int32_t a2, void** a3, int32_t a4);

void fun_41583a(void** ecx, void** a2, int32_t a3, void** a4, void** a5) {
    void** eax6;
    void** v7;
    void** ebx8;
    void** esi9;
    void** edi10;
    int32_t eax11;

    eax6 = *reinterpret_cast<void***>(&g0);
    v7 = eax6;
    *reinterpret_cast<void***>(&g0) = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4 - 4);
    ebx8 = a2;
    esi9 = *reinterpret_cast<void***>(ebx8 + 8);
    edi10 = a4;
    while (esi9 != a5) {
        if (reinterpret_cast<signed char>(esi9) <= reinterpret_cast<signed char>(0xffffffff) || reinterpret_cast<signed char>(esi9) >= reinterpret_cast<signed char>(*reinterpret_cast<void***>(edi10 + 4))) {
            fun_415d92(ecx);
        }
        eax11 = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(*reinterpret_cast<void***>(edi10 + 8) + reinterpret_cast<unsigned char>(esi9) * 8) + 4);
        if (eax11) {
            fun_415cf0(ecx, eax11, ebx8, 0x103);
        }
        esi9 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(edi10 + 8) + reinterpret_cast<unsigned char>(esi9) * 8);
    }
    *reinterpret_cast<void***>(ebx8 + 8) = esi9;
    *reinterpret_cast<void***>(&g0) = v7;
    return;
}

int32_t IsBadReadPtr = 0x19cc8;

int32_t fun_4175c9(void** a1) {
    int32_t eax2;

    eax2 = reinterpret_cast<int32_t>(IsBadReadPtr());
    if (eax2) {
    }
    goto a1;
}

struct s74 {
    unsigned char f0;
    signed char[3] pad4;
    void** f4;
    signed char[3] pad8;
    void** f8;
    signed char[3] pad12;
    int32_t f12;
};

struct s73 {
    void** f0;
    signed char[3] pad4;
    void** f4;
    signed char[7] pad12;
    int32_t f12;
    struct s74* f16;
};

struct s73* fun_413b66(void** ecx, void** a2, void** a3, void** a4, void*** a5, void** a6) {
    void** edi7;
    void** esi8;
    void** ebx9;
    void** eax10;
    void** v11;
    void** v12;
    void*** eax13;
    void** esi14;

    edi7 = a2;
    esi8 = *reinterpret_cast<void***>(edi7 + 12);
    ebx9 = *reinterpret_cast<void***>(edi7 + 16);
    eax10 = esi8;
    v11 = esi8;
    v12 = eax10;
    if (reinterpret_cast<signed char>(a3) >= reinterpret_cast<signed char>(0)) {
        do {
            if (reinterpret_cast<int1_t>(esi8 == 0xffffffff)) {
                fun_415d92(ecx);
            }
            ecx = a4;
            --esi8;
            eax13 = reinterpret_cast<void***>(esi8 + reinterpret_cast<unsigned char>(esi8) * 4);
            if (reinterpret_cast<signed char>(*reinterpret_cast<void***>(reinterpret_cast<uint32_t>(ebx9 + reinterpret_cast<uint32_t>(eax13) * 4) + 4)) < reinterpret_cast<signed char>(ecx) && reinterpret_cast<signed char>(ecx) <= reinterpret_cast<signed char>(*reinterpret_cast<void***>(reinterpret_cast<uint32_t>(ebx9 + reinterpret_cast<uint32_t>(eax13) * 4) + 8)) || reinterpret_cast<int1_t>(esi8 == 0xffffffff)) {
                --a3;
                v12 = v11;
                v11 = esi8;
            }
        } while (reinterpret_cast<signed char>(a3) >= reinterpret_cast<signed char>(0));
        eax10 = v12;
    }
    esi14 = esi8 + 1;
    *a5 = esi14;
    *reinterpret_cast<void***>(a6) = eax10;
    if (reinterpret_cast<unsigned char>(eax10) > reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi7 + 12)) || reinterpret_cast<unsigned char>(esi14) > reinterpret_cast<unsigned char>(eax10)) {
        fun_415d92(a6);
    }
    return ebx9 + reinterpret_cast<uint32_t>(esi14 + reinterpret_cast<unsigned char>(esi14) * 4) * 4;
}

uint32_t fun_417620(void** a1, void** a2);

void** fun_4157dd(struct s74* a1, void** a2, void** a3) {
    void** edx4;
    void** v5;
    uint32_t eax6;
    void** eax7;
    void** eax8;

    if (!a1->f4 || ((edx4 = a1->f4 + 8, *reinterpret_cast<void***>(a1->f4 + 8) == 0) || (a1->f4 == *reinterpret_cast<void***>(a2 + 4) || (v5 = *reinterpret_cast<void***>(a2 + 4) + 8, eax6 = fun_417620(edx4, v5), !eax6)) && ((!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a2)) & 2) || a1->f0 & 8) && (((eax7 = *reinterpret_cast<void***>(a3), (*reinterpret_cast<unsigned char*>(&eax7) & 1) == 0) || a1->f0 & 1) && (!(*reinterpret_cast<unsigned char*>(&eax7) & 2) || a1->f0 & 2))))) {
        eax8 = reinterpret_cast<void**>(1);
    } else {
        eax8 = reinterpret_cast<void**>(0);
    }
    return eax8;
}

void** fun_413931(void** ecx, void** a2, void** a3, void** a4);

void** fun_415c63(void** ecx, void** a2) {
    void** eax3;
    void** eax4;
    void** ecx5;
    void** v6;
    void** edi7;

    eax3 = *reinterpret_cast<void***>(&g0);
    *reinterpret_cast<void***>(&g0) = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4 - 4);
    eax4 = a2;
    if (eax4 && (ecx5 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(eax4 + 28) + 4), !!ecx5)) {
        v6 = *reinterpret_cast<void***>(eax4 + 24);
        eax4 = fun_413931(ecx5, v6, ecx5, edi7);
    }
    *reinterpret_cast<void***>(&g0) = eax3;
    return eax4;
}

int32_t g41f414 = 0;

void** fun_413a3d(void** a1, void** a2, void** a3, int32_t a4, void** a5, void** a6, void** a7);

void fun_4158ee(void** ecx, void** a2, void** a3, void** a4, int32_t a5, void** a6, struct s74* a7, void** a8, struct s73* a9, void** a10, void** a11, int32_t a12);

void** fun_415735(void** ecx, void** a2, void** a3, void** a4, int32_t a5, void** a6, void** a7, void** a8, void** a9) {
    void* ebp10;
    void** v11;
    void** v12;
    int1_t zf13;
    void** eax14;
    void** edi15;
    struct s73* eax16;
    struct s73* esi17;
    unsigned char* eax18;
    void** ecx19;

    ebp10 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    v11 = ecx;
    v12 = ecx;
    zf13 = g41f414 == 0;
    if (zf13 || (eax14 = fun_413a3d(a2, a3, a4, a5, a6, a8, a9), !eax14)) {
        edi15 = a7;
        eax16 = fun_413b66(ecx, a6, a8, edi15, reinterpret_cast<int32_t>(ebp10) - 4, reinterpret_cast<int32_t>(ebp10) + 0xfffffff8);
        esi17 = eax16;
        while (eax14 = v11, reinterpret_cast<unsigned char>(eax14) < reinterpret_cast<unsigned char>(v12)) {
            if (reinterpret_cast<signed char>(edi15) >= reinterpret_cast<signed char>(esi17->f0) && (reinterpret_cast<signed char>(edi15) <= reinterpret_cast<signed char>(esi17->f4) && ((eax18 = reinterpret_cast<unsigned char*>((esi17->f12 << 4) + reinterpret_cast<int32_t>(esi17->f16)), ecx19 = *reinterpret_cast<void***>(eax18 - 12), ecx19 == 0) || !*reinterpret_cast<void***>(ecx19 + 8)))) {
                fun_4158ee(ecx19, a2, a3, a4, a5, a6, eax18 - 16, 0, esi17, a8, a9, 1);
            }
            ++v11;
            ++esi17;
        }
    }
    return eax14;
}

void** fun_413a3d(void** a1, void** a2, void** a3, int32_t a4, void** a5, void** a6, void** a7) {
    void** eax8;
    void** ebx9;

    eax8 = *reinterpret_cast<void***>(&g0);
    *reinterpret_cast<void***>(&g0) = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 + 0xffffffd8);
    g41f414();
    if (1) {
        *reinterpret_cast<void***>(&g0) = eax8;
    } else {
        ebx9 = *reinterpret_cast<void***>(&g0);
        *reinterpret_cast<void***>(eax8) = *reinterpret_cast<void***>(ebx9);
        *reinterpret_cast<void***>(&g0) = eax8;
    }
    return 0;
}

void** fun_415a9f(void** a1, void** a2, struct s74* a3, void** a4);

int32_t fun_415969(void** a1, void** a2, void** a3, void** a4, int32_t a5, void** a6, int32_t a7, void** a8, int32_t a9, void** a10, void** a11);

void fun_4138fd(void** ecx, int32_t a2, void** a3);

void fun_4158ee(void** ecx, void** a2, void** a3, void** a4, int32_t a5, void** a6, struct s74* a7, void** a8, struct s73* a9, void** a10, void** a11, int32_t a12) {
    void** v13;
    int32_t edi14;
    int32_t esi15;
    void** ebx16;
    void** ebp17;
    void** v18;
    void** eax19;
    int32_t v20;
    int32_t eax21;

    if (a8) {
        fun_415a9f(a2, a3, a7, a8);
    }
    if (a11) {
        v13 = a11;
    } else {
        v13 = a3;
    }
    fun_41393f(ecx, v13, a2, edi14, esi15, ebx16, ebp17, __return_address());
    v18 = a9->f0;
    fun_41583a(ecx, a3, a5, a6, v18);
    eax19 = a9->f4;
    *reinterpret_cast<void***>(a3 + 8) = eax19 + 1;
    v20 = a7->f12;
    eax21 = fun_415969(a2, a3, a4, a6, v20, a10, 0x100, a3, a5, a6, v18);
    if (eax21) {
        fun_4138fd(ecx, eax21, a3);
    }
    return;
}

uint32_t fun_417620(void** a1, void** a2) {
    void** edx3;
    void** ecx4;
    void** eax5;
    uint1_t cf6;

    edx3 = a1;
    ecx4 = a2;
    if (reinterpret_cast<unsigned char>(edx3) & 3) {
        if (!(reinterpret_cast<unsigned char>(edx3) & 1)) {
            addr_417688_3:
            eax5 = *reinterpret_cast<void***>(edx3);
            edx3 = edx3 + 2;
            cf6 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(eax5) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx4)));
            if (eax5 != *reinterpret_cast<void***>(ecx4)) {
                addr_417664_4:
                return (reinterpret_cast<unsigned char>(eax5) - (reinterpret_cast<unsigned char>(eax5) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(eax5) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(eax5) + cf6))) << 1) + 1;
            } else {
                if (!eax5) 
                    goto addr_417660_6;
                cf6 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>((&eax5)[1]) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx4 + 1)));
                if ((&eax5)[1] != *reinterpret_cast<void***>(ecx4 + 1)) 
                    goto addr_417664_4;
            }
        } else {
            eax5 = *reinterpret_cast<void***>(edx3);
            ++edx3;
            cf6 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(eax5) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx4)));
            if (eax5 != *reinterpret_cast<void***>(ecx4)) 
                goto addr_417664_4;
            ++ecx4;
            if (!eax5) 
                goto addr_417660_6;
            if (!(reinterpret_cast<unsigned char>(edx3) & 2)) 
                goto addr_417630_11; else 
                goto addr_417688_3;
        }
    } else {
        do {
            addr_417630_11:
            eax5 = *reinterpret_cast<void***>(edx3);
            cf6 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(eax5) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx4)));
            if (eax5 != *reinterpret_cast<void***>(ecx4)) 
                goto addr_417664_4;
            if (!eax5) 
                goto addr_417660_6;
            cf6 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>((&eax5)[1]) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx4 + 1)));
            if ((&eax5)[1] != *reinterpret_cast<void***>(ecx4 + 1)) 
                goto addr_417664_4;
            if (!(&eax5)[1]) 
                goto addr_417660_6;
            eax5 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax5) >> 16);
            cf6 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(eax5) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx4 + 2)));
            if (eax5 != *reinterpret_cast<void***>(ecx4 + 2)) 
                goto addr_417664_4;
            if (!eax5) 
                goto addr_417660_6;
            cf6 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>((&eax5)[1]) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx4 + 3)));
            if ((&eax5)[1] != *reinterpret_cast<void***>(ecx4 + 3)) 
                goto addr_417664_4;
            ecx4 = ecx4 + 4;
            edx3 = edx3 + 4;
        } while ((&eax5)[1]);
        goto addr_41765e_19;
    }
    if (!(&eax5)[1]) {
        addr_417660_6:
        return 0;
    } else {
        ecx4 = ecx4 + 2;
        goto addr_417630_11;
    }
    addr_41765e_19:
    goto addr_417660_6;
}

int32_t fun_413cb1(int32_t ecx, int32_t a2);

int32_t fun_415cf0(void** ecx, int32_t a2, void** a3, int32_t a4) {
    int32_t eax5;
    int32_t ecx6;
    int32_t eax7;

    eax5 = fun_413cb1(a4, a4);
    eax5(a4);
    ecx6 = a4;
    if (ecx6 == 0x100) {
        ecx6 = 2;
    }
    eax7 = fun_413cb1(ecx6, ecx6);
    return eax7;
}

int32_t fun_4175e5(void** ecx, void** a2);

int32_t fun_417601(void** ecx);

void** fun_415cca(void** ecx, void** a2, void** a3, void** a4);

void** fun_413938(void** ecx, void** a2, void** a3, void** a4, void** a5);

void** fun_415a9f(void** a1, void** a2, struct s74* a3, void** a4) {
    void** eax5;
    void** esp6;
    void*** v7;
    void** eax8;
    void** edi9;
    int1_t zf10;
    void** v11;
    int32_t eax12;
    void** ecx13;
    int32_t eax14;
    void** v15;
    int32_t eax16;
    void** v17;
    void** v18;
    void** edi19;
    void** eax20;
    void** v21;
    void** v22;
    void** v23;
    void** eax24;
    void** v25;
    int32_t eax26;
    int32_t eax27;
    void** v28;
    void** v29;
    void** eax30;
    int32_t esi31;
    void** ebx32;
    void** v33;
    int32_t v34;
    void** v35;
    int32_t eax36;
    int32_t eax37;
    void** v38;
    void** v39;
    void** v40;
    int32_t v41;
    void** v42;
    int32_t eax43;
    int32_t eax44;
    void** v45;

    eax5 = *reinterpret_cast<void***>(&g0);
    esp6 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4 - 4);
    *reinterpret_cast<void***>(&g0) = esp6;
    v7 = reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp6 - 12) - 4 - 4 - 4);
    eax8 = a3->f4;
    if (!eax8 || (!*reinterpret_cast<void***>(eax8 + 8) || (eax8 = a3->f8, eax8 == 0))) {
        addr_415c48_2:
        *reinterpret_cast<void***>(&g0) = eax5;
        return eax8;
    } else {
        edi9 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax8) + reinterpret_cast<unsigned char>(a2) + 12);
        if (!(a3->f0 & 8)) {
            if (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a4)) & 1)) {
                zf10 = *reinterpret_cast<void***>(a4 + 24) == 0;
                v11 = *reinterpret_cast<void***>(a1 + 24);
                if (!zf10) {
                    eax12 = fun_4175c9(v11);
                    ecx13 = reinterpret_cast<void**>(1);
                    if (!eax12 || ((eax14 = fun_4175e5(1, edi9), ecx13 = reinterpret_cast<void**>(1), eax14 == 0) || (v15 = *reinterpret_cast<void***>(a4 + 24), eax16 = fun_417601(1), ecx13 = v15, eax16 == 0))) {
                        addr_415c3f_7:
                        eax8 = fun_415d92(ecx13);
                    } else {
                        if (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a4)) & 4)) {
                            v17 = a4 + 8;
                            v18 = *reinterpret_cast<void***>(a1 + 24);
                            eax20 = fun_415cca(ecx13, v18, v17, edi19);
                            v21 = *reinterpret_cast<void***>(a4 + 24);
                            eax8 = fun_413931(v17, edi9, v21, eax20);
                        } else {
                            v22 = a4 + 8;
                            v23 = *reinterpret_cast<void***>(a1 + 24);
                            eax24 = fun_415cca(ecx13, v23, v22, 1);
                            v25 = *reinterpret_cast<void***>(a4 + 24);
                            eax8 = fun_413938(v22, edi9, v25, eax24, 1);
                        }
                    }
                } else {
                    eax26 = fun_4175c9(v11);
                    ecx13 = reinterpret_cast<void**>(1);
                    if (!eax26) 
                        goto addr_415c3f_7;
                    eax27 = fun_4175e5(1, edi9);
                    ecx13 = reinterpret_cast<void**>(1);
                    if (!eax27) 
                        goto addr_415c3f_7;
                    v28 = *reinterpret_cast<void***>(a4 + 20);
                    v29 = *reinterpret_cast<void***>(a1 + 24);
                    eax30 = fun_415cca(1, v29, a4 + 8, v28);
                    eax8 = fun_417230(a4 + 8, edi9, eax30, v28, edi19, esi31, ebx32, v33, v7, v34, eax5, 0x416d60, 0x418798);
                }
            } else {
                v35 = *reinterpret_cast<void***>(a1 + 24);
                eax36 = fun_4175c9(v35);
                ecx13 = reinterpret_cast<void**>(1);
                if (!eax36) 
                    goto addr_415c3f_7;
                eax37 = fun_4175e5(1, edi9);
                ecx13 = reinterpret_cast<void**>(1);
                if (!eax37) 
                    goto addr_415c3f_7;
                v38 = *reinterpret_cast<void***>(a4 + 20);
                v39 = *reinterpret_cast<void***>(a1 + 24);
                eax8 = fun_417230(1, edi9, v39, v38, edi19, esi31, ebx32, v40, v7, v41, eax5, 0x416d60, 0x418798);
                if (!reinterpret_cast<int1_t>(*reinterpret_cast<void***>(a4 + 20) == 4)) 
                    goto addr_415c44_17;
                eax8 = *reinterpret_cast<void***>(edi9);
                if (eax8) 
                    goto addr_415b90_19;
            }
        } else {
            v42 = *reinterpret_cast<void***>(a1 + 24);
            eax43 = fun_4175c9(v42);
            ecx13 = reinterpret_cast<void**>(1);
            if (!eax43) 
                goto addr_415c3f_7;
            eax44 = fun_4175e5(1, edi9);
            ecx13 = reinterpret_cast<void**>(1);
            if (!eax44) 
                goto addr_415c3f_7;
            eax8 = *reinterpret_cast<void***>(a1 + 24);
            *reinterpret_cast<void***>(edi9) = eax8;
            ecx13 = a4 + 8;
            v45 = ecx13;
            goto addr_415b2d_23;
        }
    }
    addr_415c44_17:
    goto addr_415c48_2;
    addr_415b90_19:
    v45 = a4 + 8;
    addr_415b2d_23:
    eax8 = fun_415cca(ecx13, eax8, v45, edi19);
    *reinterpret_cast<void***>(edi9) = eax8;
    goto addr_415c44_17;
}

void fun_4138fd(void** ecx, int32_t a2, void** a3) {
    void** ebx4;

    ebx4 = *reinterpret_cast<void***>(&g0);
    *reinterpret_cast<void***>(&g0) = *reinterpret_cast<void***>(ebx4);
    goto a2;
}

void** g41f40c = reinterpret_cast<void**>(0);

void** g41f410 = reinterpret_cast<void**>(0);

int32_t fun_4139c4(void** a1, void** a2, int32_t a3, void** a4, int32_t a5);

void** fun_415a2f(void** ecx);

int32_t fun_415969(void** a1, void** a2, void** a3, void** a4, int32_t a5, void** a6, int32_t a7, void** a8, int32_t a9, void** a10, void** a11) {
    void** eax12;
    int32_t eax13;

    eax12 = *reinterpret_cast<void***>(&g0);
    *reinterpret_cast<void***>(&g0) = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4 - 4);
    g41f40c = a1;
    g41f410 = a3;
    eax13 = fun_4139c4(a2, a4, a5, a6, a7);
    fun_415a2f(a3);
    *reinterpret_cast<void***>(&g0) = eax12;
    return eax13;
}

struct s75 {
    signed char[4] pad4;
    uint32_t f4;
};

int32_t fun_413c04(struct s75* a1, int32_t a2);

int32_t fun_413c8e() {
    int32_t eax1;
    void** ecx2;

    eax1 = 0;
    ecx2 = *reinterpret_cast<void***>(&g0);
    if (reinterpret_cast<int1_t>(*reinterpret_cast<void***>(ecx2 + 4) == fun_413c04) && *reinterpret_cast<void***>(ecx2 + 8) == *reinterpret_cast<void***>(*reinterpret_cast<void***>(ecx2 + 12) + 12)) {
        eax1 = 1;
    }
    return eax1;
}

int32_t IsBadWritePtr = 0x19ba6;

int32_t fun_4175e5(void** ecx, void** a2) {
    int32_t eax3;

    eax3 = reinterpret_cast<int32_t>(IsBadWritePtr());
    if (eax3) {
    }
    goto a2;
}

void** fun_415cca(void** ecx, void** a2, void** a3, void** a4) {
    void** eax5;

    eax5 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a3)) + reinterpret_cast<unsigned char>(a2));
    if (reinterpret_cast<signed char>(*reinterpret_cast<void***>(a3 + 4)) >= reinterpret_cast<signed char>(0)) {
        eax5 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax5) + (reinterpret_cast<int32_t>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(*reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a3 + 4)) + reinterpret_cast<unsigned char>(a2))) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a3 + 8)))) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a3 + 4))));
    }
    return eax5;
}

int32_t IsBadCodePtr = 0x19cd8;

int32_t fun_417601(void** ecx) {
    int32_t eax2;
    int32_t esi3;

    eax2 = reinterpret_cast<int32_t>(IsBadCodePtr());
    if (eax2) {
    }
    goto esi3;
}

void** fun_413938(void** ecx, void** a2, void** a3, void** a4, void** a5) {
    goto a3;
}

void** fun_413931(void** ecx, void** a2, void** a3, void** a4) {
    goto a3;
}

int32_t fun_413cb1(int32_t ecx, int32_t a2) {
    int32_t eax3;
    int32_t ebp4;
    int32_t eax5;

    g41ca98 = ecx;
    g41ca94 = eax3;
    g41ca9c = ebp4;
    return eax5;
}

void** fun_41608f(void** a1, void** a2) {
    void** edx3;
    void** eax4;
    void** ecx5;
    void** esi6;

    edx3 = a2;
    eax4 = a1;
    ecx5 = edx3 + 0xffffffff;
    if (edx3) {
        do {
            if (!*reinterpret_cast<void***>(eax4)) 
                break;
            ++eax4;
            esi6 = ecx5;
            --ecx5;
        } while (esi6);
    }
    if (*reinterpret_cast<void***>(eax4)) {
        return edx3;
    } else {
        return reinterpret_cast<unsigned char>(eax4) - reinterpret_cast<unsigned char>(a1);
    }
}

void fun_414180(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20) {
    int32_t v21;
    void* ecx22;
    uint32_t eax23;
    uint32_t eax24;
    int32_t* esp25;

    v21 = reinterpret_cast<int32_t>(__return_address());
    ecx22 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 + 8);
    if (eax23 >= 0x1000) {
        do {
            ecx22 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ecx22) - 0x1000);
            eax24 = eax24 - 0x1000;
        } while (eax24 >= 0x1000);
    }
    esp25 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ecx22) - eax24 - 4);
    *esp25 = v21;
    goto *esp25;
}

void** fun_416312(void** a1, void** a2, void* a3) {
    uint32_t eax4;
    uint32_t eax5;
    uint32_t eax6;

    eax4 = reinterpret_cast<uint32_t>(a1 - 0x3a4);
    if (!eax4) {
        return 0x411;
    } else {
        eax5 = eax4 - 4;
        if (!eax5) {
            return 0x804;
        } else {
            eax6 = eax5 - 13;
            if (!eax6) {
                return 0x412;
            } else {
                if (!(eax6 - 1)) {
                    return 0x404;
                } else {
                    return 0;
                }
            }
        }
    }
}

void** g41f670 = reinterpret_cast<void**>(0);

void** g41f674 = reinterpret_cast<void**>(0);

void** g41f678 = reinterpret_cast<void**>(0);

void fun_416345(void** ecx) {
    int32_t ecx2;
    signed char* edi3;

    ecx2 = 64;
    edi3 = reinterpret_cast<signed char*>(0x41f780);
    while (ecx2) {
        --ecx2;
        *edi3 = reinterpret_cast<signed char>(0);
        edi3 = edi3 + 4;
    }
    *edi3 = 0;
    g41f664 = reinterpret_cast<void**>(0);
    g41f67c = reinterpret_cast<void**>(0);
    g41f884 = reinterpret_cast<void**>(0);
    g41f670 = reinterpret_cast<void**>(0);
    g41f674 = reinterpret_cast<void**>(0);
    g41f678 = reinterpret_cast<void**>(0);
    return;
}

int32_t GetCPInfo = 0x19bd6;

void fun_41636e(void** ecx) {
    int32_t v2;
    int32_t ebp3;
    int32_t* ebp4;
    int32_t v5;
    int32_t esi6;
    void* v7;
    void** v8;
    int32_t eax9;
    uint32_t eax10;
    unsigned char cl11;
    void** eax12;
    void** esi13;
    unsigned char al14;
    unsigned char v15;
    void** v16;
    void** v17;
    void** v18;
    void** v19;
    void** v20;
    void** v21;
    void** v22;
    void** v23;
    void** v24;
    void** v25;
    void** v26;
    void** v27;
    void** eax28;
    int16_t dx29;
    int16_t v30;
    unsigned char dl31;
    unsigned char v32;
    void** eax33;
    signed char* edi34;
    void* ecx35;
    void* ebx36;
    uint32_t ecx37;

    v2 = ebp3;
    ebp4 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    v5 = esi6;
    v7 = reinterpret_cast<void*>(ebp4 - 5);
    v8 = g41f664;
    eax9 = reinterpret_cast<int32_t>(GetCPInfo());
    if (eax9 != 1) {
        eax10 = 0;
        do {
            if (eax10 < 65 || eax10 > 90) {
                if (eax10 < 97 || eax10 > 0x7a) {
                    *reinterpret_cast<unsigned char*>(eax10 + 0x41f680) = 0;
                    continue;
                } else {
                    *reinterpret_cast<unsigned char*>(eax10 + 0x41f781) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(eax10 + 0x41f781) | 32);
                    cl11 = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(&eax10) - 32);
                }
            } else {
                *reinterpret_cast<unsigned char*>(eax10 + 0x41f781) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(eax10 + 0x41f781) | 16);
                cl11 = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(&eax10) + 32);
            }
            *reinterpret_cast<unsigned char*>(eax10 + 0x41f680) = cl11;
            ++eax10;
        } while (eax10 < 0x100);
    } else {
        eax12 = reinterpret_cast<void**>(0);
        esi13 = reinterpret_cast<void**>(0x100);
        do {
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebp4) + reinterpret_cast<unsigned char>(eax12) + 0xfffffeec) = *reinterpret_cast<signed char*>(&eax12);
            ++eax12;
        } while (reinterpret_cast<unsigned char>(eax12) < reinterpret_cast<unsigned char>(0x100));
        al14 = v15;
        if (!al14) 
            goto addr_4163e9_13; else 
            goto addr_4163b2_14;
    }
    addr_4164f0_15:
    return;
    addr_4163e9_13:
    v16 = g41f884;
    v17 = g41f664;
    v18 = reinterpret_cast<void**>(ebp4 + 0xfffffebb);
    v19 = reinterpret_cast<void**>(ebp4 + 0xffffffbb);
    fun_4176bb(ecx, 1, v19, esi13, v18, v17, v16, 0, *reinterpret_cast<int16_t*>(&v8), v7, v5);
    v20 = g41f664;
    v21 = reinterpret_cast<void**>(ebp4 + 0xffffff7b);
    v22 = reinterpret_cast<void**>(ebp4 + 0xffffffbb);
    v23 = g41f884;
    fun_415e6b(v23, esi13, v22, esi13, v21, esi13, v20, 0, 1, v19, esi13, v18, v23, esi13, v22, esi13, v21, esi13, v20, 0, 1, v19, esi13, v18);
    v24 = g41f664;
    v25 = reinterpret_cast<void**>(ebp4 + 0xffffff3b);
    v26 = reinterpret_cast<void**>(ebp4 + 0xffffffbb);
    v27 = g41f884;
    fun_415e6b(v27, 0x200, v26, esi13, v25, esi13, v24, 0, v23, esi13, v22, esi13, v27, 0x200, v26, esi13, v25, esi13, v24, 0, v23, esi13, v22, esi13);
    eax28 = reinterpret_cast<void**>(0);
    do {
        dx29 = v30;
        if (!(*reinterpret_cast<unsigned char*>(&dx29) & 1)) {
            if (!(*reinterpret_cast<unsigned char*>(&dx29) & 2)) {
                *reinterpret_cast<unsigned char*>(eax28 + 0x41f680) = 0;
                continue;
            } else {
                *reinterpret_cast<unsigned char*>(eax28 + 0x41f781) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(eax28 + 0x41f781) | 32);
                dl31 = *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebp4) + reinterpret_cast<unsigned char>(eax28) + 0xfffffcec);
            }
        } else {
            *reinterpret_cast<unsigned char*>(eax28 + 0x41f781) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(eax28 + 0x41f781) | 16);
            dl31 = *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebp4) + reinterpret_cast<unsigned char>(eax28) + 0xfffffdec);
        }
        *reinterpret_cast<unsigned char*>(eax28 + 0x41f680) = dl31;
        ++eax28;
    } while (reinterpret_cast<unsigned char>(eax28) < reinterpret_cast<unsigned char>(esi13));
    goto addr_4164f0_15;
    addr_4163b2_14:
    do {
        ecx = reinterpret_cast<void**>(static_cast<uint32_t>(v32));
        eax33 = reinterpret_cast<void**>(static_cast<uint32_t>(al14));
        if (reinterpret_cast<unsigned char>(eax33) <= reinterpret_cast<unsigned char>(ecx)) {
            edi34 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebp4) + reinterpret_cast<unsigned char>(eax33) + 0xfffffeec);
            ecx35 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ecx) - reinterpret_cast<unsigned char>(eax33) + 1);
            ebx36 = ecx35;
            ecx37 = reinterpret_cast<uint32_t>(ecx35) >> 2;
            while (ecx37) {
                --ecx37;
                *edi34 = reinterpret_cast<signed char>(0x20202020);
                edi34 = edi34 + 4;
                esi13 = esi13 + 4;
            }
            ecx = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ebx36) & 3);
            while (ecx) {
                --ecx;
                *edi34 = 32;
                ++edi34;
                ++esi13;
            }
        }
        al14 = *reinterpret_cast<unsigned char*>(&v2);
    } while (al14);
    goto addr_4163e9_13;
}

uint32_t fun_41612f(void** a1);

uint32_t fun_4164f3(void** a1, void** a2, void** a3) {
    int1_t zf4;
    uint32_t eax5;

    zf4 = g41f8b4 == 0;
    if (zf4) {
        eax5 = fun_41612f(0xfd);
        g41f8b4 = reinterpret_cast<void**>(1);
    }
    return eax5;
}

void** fun_4162c8(void** a1);

struct s76 {
    unsigned char f0;
    unsigned char f1;
};

struct s77 {
    void** f0;
    signed char[3] pad4;
    void** f4;
};

struct s78 {
    void** f0;
    signed char[3] pad4;
    void** f4;
};

void** g41f420 = reinterpret_cast<void**>(0);

uint32_t fun_41612f(void** a1) {
    void* ebp2;
    void* v3;
    void* esi4;
    void** v5;
    void** edi6;
    void** eax7;
    void** esi8;
    void** ecx9;
    int1_t zf10;
    void** v11;
    uint32_t eax12;
    int32_t edx13;
    void*** eax14;
    int32_t ecx15;
    signed char* edi16;
    void** v17;
    int32_t esi18;
    struct s76* ebx19;
    struct s76* ecx20;
    uint32_t eax21;
    uint32_t edi22;
    unsigned char dl23;
    void** eax24;
    struct s77* esi25;
    struct s78* esi26;
    void* v27;
    void** v28;
    uint32_t eax29;
    int1_t zf30;
    signed char* edi31;
    int1_t below_or_equal32;
    uint32_t v33;
    void** esi34;
    signed char v35;
    unsigned char v36;
    uint32_t eax37;
    unsigned char v38;
    uint32_t edx39;
    signed char v40;
    uint32_t eax41;
    void** eax42;

    ebp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    v3 = esi4;
    v5 = edi6;
    eax7 = fun_4162c8(a1);
    esi8 = eax7;
    ecx9 = a1;
    zf10 = esi8 == g41f664;
    v11 = esi8;
    if (zf10) {
        addr_4162bc_2:
        eax12 = 0;
    } else {
        if (!esi8) 
            goto addr_4162b2_4;
        edx13 = 0;
        eax14 = reinterpret_cast<void***>(0x41ee90);
        do {
            if (*eax14 == esi8) 
                goto addr_4161d9_7;
            eax14 = eax14 + 48;
            ++edx13;
        } while (reinterpret_cast<int32_t>(eax14) < 0x41ef80);
        goto addr_416172_9;
    }
    addr_4162c3_10:
    return eax12;
    addr_4161d9_7:
    ecx15 = 64;
    edi16 = reinterpret_cast<signed char*>(0x41f780);
    while (ecx15) {
        --ecx15;
        *edi16 = reinterpret_cast<signed char>(0);
        edi16 = edi16 + 4;
    }
    v17 = reinterpret_cast<void**>(0);
    *edi16 = 0;
    esi18 = (edx13 + edx13 * 2 << 4) + 1;
    ebx19 = reinterpret_cast<struct s76*>(esi18 + 0x41eea0);
    do {
        ecx20 = ebx19;
        if (ebx19->f0) {
            do {
                if (!ecx20->f1) 
                    break;
                eax21 = ecx20->f0;
                edi22 = ecx20->f1;
                if (eax21 <= edi22) {
                    dl23 = *reinterpret_cast<unsigned char*>(v17 + 0x41ee88);
                    do {
                        *reinterpret_cast<unsigned char*>(eax21 + 0x41f781) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(eax21 + 0x41f781) | dl23);
                        ++eax21;
                    } while (eax21 <= edi22);
                }
                ecx20 = reinterpret_cast<struct s76*>(&ecx20->f1 + 1);
            } while (ecx20->f0);
        }
        ++v17;
        ebx19 = ebx19 + 4;
    } while (reinterpret_cast<unsigned char>(v17) < reinterpret_cast<unsigned char>(4));
    g41f67c = reinterpret_cast<void**>(1);
    g41f664 = v11;
    eax24 = fun_416312(v11, v5, v3);
    esi25 = reinterpret_cast<struct s77*>(esi18 + 0x41ee94);
    g41f670 = esi25->f0;
    esi26 = reinterpret_cast<struct s78*>(&esi25->f4);
    g41f674 = esi26->f0;
    ecx9 = v11;
    g41f884 = eax24;
    g41f678 = esi26->f4;
    addr_4162b7_34:
    fun_41636e(ecx9);
    goto addr_4162bc_2;
    addr_416172_9:
    v27 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ebp2) - 24);
    v28 = esi8;
    eax29 = reinterpret_cast<uint32_t>(GetCPInfo(ecx9, v28, v27));
    if (eax29 != 1) {
        zf30 = g41f420 == 0;
        if (zf30) {
            eax12 = 0xffffffff;
            goto addr_4162c3_10;
        } else {
            addr_4162b2_4:
            fun_416345(ecx9);
            goto addr_4162b7_34;
        }
    } else {
        ecx9 = reinterpret_cast<void**>(64);
        edi31 = reinterpret_cast<signed char*>(0x41f780);
        below_or_equal32 = v33 <= 1;
        g41f664 = esi8;
        while (ecx9) {
            --ecx9;
            *edi31 = reinterpret_cast<signed char>(0);
            edi31 = edi31 + 4;
            esi8 = esi8 + 4;
        }
        *edi31 = 0;
        esi34 = esi8 + 1;
        g41f884 = reinterpret_cast<void**>(0);
        if (!below_or_equal32) 
            goto addr_4161a9_44;
    }
    g41f67c = reinterpret_cast<void**>(0);
    addr_41629e_46:
    g41f670 = reinterpret_cast<void**>(0);
    g41f674 = reinterpret_cast<void**>(0);
    g41f678 = reinterpret_cast<void**>(0);
    goto addr_4162b7_34;
    addr_4161a9_44:
    if (v35) {
        do {
            if (!v36) 
                break;
            eax37 = v38;
            edx39 = v36;
            while (eax37 <= edx39) {
                *reinterpret_cast<unsigned char*>(eax37 + 0x41f781) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(eax37 + 0x41f781) | 4);
                ++eax37;
            }
        } while (v40);
    }
    eax41 = 1;
    do {
        *reinterpret_cast<unsigned char*>(eax41 + 0x41f781) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(eax41 + 0x41f781) | 8);
        ++eax41;
    } while (eax41 < 0xff);
    eax42 = fun_416312(esi34, v28, v27);
    ecx9 = esi34;
    g41f884 = eax42;
    g41f67c = reinterpret_cast<void**>(1);
    goto addr_41629e_46;
}

uint32_t fun_417815(unsigned char a1, uint32_t a2, unsigned char a3);

uint32_t fun_417804(void** ecx) {
    int32_t v2;
    uint32_t eax3;

    v2 = reinterpret_cast<int32_t>(__return_address());
    eax3 = fun_417815(*reinterpret_cast<unsigned char*>(&v2), 0, 4);
    return eax3;
}

int32_t g41caa0 = 0x4130b9;

void fun_414132(void** ecx) {
    int1_t zf2;

    zf2 = g41f3dc == 1;
    if (zf2) {
        fun_416e38(ecx);
    }
    fun_416e71(ecx, __return_address());
    g41caa0();
    return;
}

void fun_4168c7(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6) {
    void** ecx7;
    void** esi8;
    void** edi9;
    void** eax10;
    void** dl11;
    uint32_t v12;
    uint32_t v13;
    uint32_t ebx14;
    uint32_t edx15;
    uint32_t ebx16;

    ecx7 = a6;
    *reinterpret_cast<void***>(ecx7) = reinterpret_cast<void**>(0);
    esi8 = a4;
    edi9 = a3;
    *reinterpret_cast<void***>(a5) = reinterpret_cast<void**>(1);
    eax10 = a2;
    if (edi9) {
        *reinterpret_cast<void***>(edi9) = esi8;
        edi9 = edi9 + 4;
        a3 = edi9;
    }
    if (!reinterpret_cast<int1_t>(*reinterpret_cast<void***>(eax10) == 34)) {
        do {
            *reinterpret_cast<void***>(ecx7) = *reinterpret_cast<void***>(ecx7) + 1;
            if (esi8) {
                *reinterpret_cast<void***>(esi8) = *reinterpret_cast<void***>(eax10);
                ++esi8;
            }
            dl11 = *reinterpret_cast<void***>(eax10);
            ++eax10;
            if (*reinterpret_cast<unsigned char*>(dl11 + 0x41f781) & 4) {
                *reinterpret_cast<void***>(ecx7) = *reinterpret_cast<void***>(ecx7) + 1;
                if (esi8) {
                    *reinterpret_cast<void***>(esi8) = *reinterpret_cast<void***>(eax10);
                    ++esi8;
                }
                ++eax10;
            }
            if (dl11 == 32) 
                break;
            if (!dl11) 
                goto addr_416972_12;
        } while (!reinterpret_cast<int1_t>(dl11 == 9));
        if (dl11) {
            if (esi8) {
                *reinterpret_cast<void***>(esi8 + 0xffffffff) = reinterpret_cast<void**>(0);
            }
        } else {
            addr_416972_12:
            --eax10;
        }
    } else {
        while ((++eax10, *reinterpret_cast<void***>(eax10 + 1) != 34) && *reinterpret_cast<void***>(eax10 + 1)) {
            if (*reinterpret_cast<unsigned char*>(*reinterpret_cast<void***>(eax10 + 1) + 0x41f781) & 4 && (*reinterpret_cast<void***>(ecx7) = *reinterpret_cast<void***>(ecx7) + 1, !!esi8)) {
                *reinterpret_cast<void***>(esi8) = *reinterpret_cast<void***>(eax10);
                ++esi8;
                ++eax10;
            }
            *reinterpret_cast<void***>(ecx7) = *reinterpret_cast<void***>(ecx7) + 1;
            if (!esi8) 
                continue;
            *reinterpret_cast<void***>(esi8) = *reinterpret_cast<void***>(eax10);
            ++esi8;
        }
        *reinterpret_cast<void***>(ecx7) = *reinterpret_cast<void***>(ecx7) + 1;
        if (!esi8) 
            goto addr_416932_23; else 
            goto addr_41692e_24;
    }
    addr_41697d_25:
    v12 = 0;
    while (*reinterpret_cast<void***>(eax10)) {
        while (*reinterpret_cast<void***>(eax10) == 32 || reinterpret_cast<int1_t>(*reinterpret_cast<void***>(eax10) == 9)) {
            ++eax10;
        }
        if (!*reinterpret_cast<void***>(eax10)) 
            break;
        if (edi9) {
            *reinterpret_cast<void***>(edi9) = esi8;
            edi9 = edi9 + 4;
            a3 = edi9;
        }
        *reinterpret_cast<void***>(a5) = *reinterpret_cast<void***>(a5) + 1;
        while (1) {
            v13 = 1;
            ebx14 = 0;
            while (reinterpret_cast<int1_t>(*reinterpret_cast<void***>(eax10) == 92)) {
                ++eax10;
                ++ebx14;
            }
            if (reinterpret_cast<int1_t>(*reinterpret_cast<void***>(eax10) == 34)) {
                if (!(*reinterpret_cast<unsigned char*>(&ebx14) & 1)) {
                    if (!v12 || !reinterpret_cast<int1_t>(*reinterpret_cast<void***>(eax10 + 1) == 34)) {
                        v13 = 0;
                    } else {
                        ++eax10;
                    }
                    edi9 = a3;
                    edx15 = 0;
                    *reinterpret_cast<unsigned char*>(&edx15) = reinterpret_cast<uint1_t>(v12 == 0);
                    v12 = edx15;
                }
                ebx14 = ebx14 >> 1;
            }
            if (ebx14) {
                ebx16 = ebx14 - 1 + 1;
                do {
                    if (esi8) {
                        *reinterpret_cast<void***>(esi8) = reinterpret_cast<void**>(92);
                        ++esi8;
                    }
                    *reinterpret_cast<void***>(ecx7) = *reinterpret_cast<void***>(ecx7) + 1;
                    --ebx16;
                } while (ebx16);
            }
            if (!*reinterpret_cast<void***>(eax10)) 
                break;
            if (v12) 
                goto addr_416a21_50;
            if (*reinterpret_cast<void***>(eax10) == 32) 
                break;
            if (*reinterpret_cast<void***>(eax10) == 9) 
                break;
            addr_416a21_50:
            if (v13) {
                if (!esi8) {
                    if (*reinterpret_cast<unsigned char*>(*reinterpret_cast<void***>(eax10) + 0x41f781) & 4) {
                        ++eax10;
                        *reinterpret_cast<void***>(ecx7) = *reinterpret_cast<void***>(ecx7) + 1;
                    }
                } else {
                    if (*reinterpret_cast<unsigned char*>(*reinterpret_cast<void***>(eax10) + 0x41f781) & 4) {
                        *reinterpret_cast<void***>(esi8) = *reinterpret_cast<void***>(eax10);
                        ++esi8;
                        ++eax10;
                        *reinterpret_cast<void***>(ecx7) = *reinterpret_cast<void***>(ecx7) + 1;
                    }
                    *reinterpret_cast<void***>(esi8) = *reinterpret_cast<void***>(eax10);
                    ++esi8;
                }
                *reinterpret_cast<void***>(ecx7) = *reinterpret_cast<void***>(ecx7) + 1;
            }
            ++eax10;
        }
        if (esi8) {
            *reinterpret_cast<void***>(esi8) = reinterpret_cast<void**>(0);
            ++esi8;
        }
        *reinterpret_cast<void***>(ecx7) = *reinterpret_cast<void***>(ecx7) + 1;
    }
    if (edi9) {
        *reinterpret_cast<void***>(edi9) = reinterpret_cast<void**>(0);
    }
    *reinterpret_cast<void***>(a5) = *reinterpret_cast<void***>(a5) + 1;
    return;
    addr_416932_23:
    if (reinterpret_cast<int1_t>(*reinterpret_cast<void***>(eax10) == 34)) {
        ++eax10;
        goto addr_41697d_25;
    }
    addr_41692e_24:
    *reinterpret_cast<void***>(esi8) = reinterpret_cast<void**>(0);
    ++esi8;
    goto addr_416932_23;
}

void fun_413be4(struct s57* a1) {
    fun_417e70();
    goto a1->f4;
}

void** fun_417850(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7) {
    void** edi8;
    void** ecx9;
    void** edx10;

    edi8 = a2;
    ecx9 = a3;
    if (!(reinterpret_cast<unsigned char>(ecx9) & 3)) {
        while (1) {
            addr_4178e6_3:
            edx10 = *reinterpret_cast<void***>(ecx9);
            ecx9 = ecx9 + 4;
            if ((reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx9)) ^ 0xffffffff ^ reinterpret_cast<uint32_t>(*reinterpret_cast<void***>(ecx9) + 0x7efefeff)) & 0x81010100) {
                if (!edx10) 
                    break;
                if (!*reinterpret_cast<signed char*>(&edx10 + 1)) 
                    goto addr_41792f_6;
                if (!(reinterpret_cast<unsigned char>(edx10) & 0xff0000)) 
                    goto addr_417922_8;
                if (!(reinterpret_cast<unsigned char>(edx10) & 0xff000000)) 
                    goto addr_41791a_10;
            }
            *reinterpret_cast<void***>(edi8) = edx10;
            edi8 = edi8 + 4;
        }
    } else {
        do {
            edx10 = *reinterpret_cast<void***>(ecx9);
            ++ecx9;
            if (!edx10) 
                break;
            *reinterpret_cast<void***>(edi8) = edx10;
            ++edi8;
        } while (reinterpret_cast<unsigned char>(ecx9) & 3);
        goto addr_4178df_15;
    }
    *reinterpret_cast<void***>(edi8) = edx10;
    return a2;
    addr_41792f_6:
    *reinterpret_cast<void***>(edi8) = edx10;
    return a2;
    addr_417922_8:
    *reinterpret_cast<void***>(edi8) = edx10;
    *reinterpret_cast<void***>(edi8 + 2) = reinterpret_cast<void**>(0);
    return a2;
    addr_41791a_10:
    *reinterpret_cast<void***>(edi8) = edx10;
    return a2;
    addr_4178df_15:
    goto addr_4178e6_3;
}

void** fun_417860(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13) {
    void** ecx14;
    void** eax15;
    void** edi16;
    void** ecx17;
    void** edx18;

    ecx14 = a2;
    if (!(reinterpret_cast<unsigned char>(ecx14) & 3)) {
        while (1) {
            addr_41787c_2:
            ecx14 = ecx14 + 4;
            if (!((reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx14)) ^ 0xffffffff ^ reinterpret_cast<uint32_t>(*reinterpret_cast<void***>(ecx14) + 0x7efefeff)) & 0x81010100)) 
                continue;
            eax15 = *reinterpret_cast<void***>(ecx14 + 0xfffffffc);
            if (!*reinterpret_cast<signed char*>(&eax15)) 
                break;
            if (!*reinterpret_cast<signed char*>(&eax15 + 1)) 
                goto addr_4178b9_5;
            if (!(reinterpret_cast<unsigned char>(eax15) & 0xff0000)) 
                goto addr_4178b4_7;
            if (!(reinterpret_cast<unsigned char>(eax15) & 0xff000000)) 
                goto addr_4178af_9;
        }
    } else {
        do {
            ++ecx14;
            if (!*reinterpret_cast<void***>(ecx14)) 
                goto addr_4178af_9;
        } while (reinterpret_cast<unsigned char>(ecx14) & 3);
        goto addr_41787c_2;
    }
    edi16 = ecx14 + 0xfffffffc;
    addr_4178c1_14:
    ecx17 = a3;
    if (!(reinterpret_cast<unsigned char>(ecx17) & 3)) {
        while (1) {
            addr_4178e6_15:
            edx18 = *reinterpret_cast<void***>(ecx17);
            ecx17 = ecx17 + 4;
            if ((reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx17)) ^ 0xffffffff ^ reinterpret_cast<uint32_t>(*reinterpret_cast<void***>(ecx17) + 0x7efefeff)) & 0x81010100) {
                if (!edx18) 
                    break;
                if (!*reinterpret_cast<signed char*>(&edx18 + 1)) 
                    goto addr_41792f_18;
                if (!(reinterpret_cast<unsigned char>(edx18) & 0xff0000)) 
                    goto addr_417922_20;
                if (!(reinterpret_cast<unsigned char>(edx18) & 0xff000000)) 
                    goto addr_41791a_22;
            }
            *reinterpret_cast<void***>(edi16) = edx18;
            edi16 = edi16 + 4;
        }
    } else {
        do {
            edx18 = *reinterpret_cast<void***>(ecx17);
            ++ecx17;
            if (!edx18) 
                break;
            *reinterpret_cast<void***>(edi16) = edx18;
            ++edi16;
        } while (reinterpret_cast<unsigned char>(ecx17) & 3);
        goto addr_4178df_27;
    }
    *reinterpret_cast<void***>(edi16) = edx18;
    return a2;
    addr_41792f_18:
    *reinterpret_cast<void***>(edi16) = edx18;
    return a2;
    addr_417922_20:
    *reinterpret_cast<void***>(edi16) = edx18;
    *reinterpret_cast<void***>(edi16 + 2) = reinterpret_cast<void**>(0);
    return a2;
    addr_41791a_22:
    *reinterpret_cast<void***>(edi16) = edx18;
    return a2;
    addr_4178df_27:
    goto addr_4178e6_15;
    addr_4178b9_5:
    edi16 = ecx14 + 0xfffffffd;
    goto addr_4178c1_14;
    addr_4178b4_7:
    edi16 = ecx14 + 0xfffffffe;
    goto addr_4178c1_14;
    addr_4178af_9:
    edi16 = ecx14 + 0xffffffff;
    goto addr_4178c1_14;
}

int32_t g41f53c = 0;

int32_t g41f540 = 0;

int32_t g41f544 = 0;

void fun_417c75(void** ecx, void* a2, int32_t a3, int32_t a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12) {
    int32_t ebx13;
    int1_t zf14;
    int32_t eax15;
    int32_t eax16;
    int32_t eax17;
    int32_t eax18;
    int32_t eax19;
    int32_t esi20;
    int32_t eax21;
    int32_t eax22;
    int32_t eax23;
    int32_t ebx24;

    ebx13 = 0;
    zf14 = g41f53c == 0;
    if (!zf14) {
        addr_417cc4_2:
        eax15 = g41f540;
        if (eax15 && ((eax16 = reinterpret_cast<int32_t>(eax15()), ebx13 = eax16, !!ebx13) && (eax17 = g41f544, !!eax17))) {
            eax18 = reinterpret_cast<int32_t>(eax17(ebx13));
            ebx13 = eax18;
        }
    } else {
        eax19 = reinterpret_cast<int32_t>(LoadLibraryA());
        if (!eax19 || (esi20 = GetProcAddress, eax21 = reinterpret_cast<int32_t>(esi20(eax19, "MessageBoxA")), g41f53c = eax21, eax21 == 0)) {
            goto addr_417cf6_6;
        } else {
            eax22 = reinterpret_cast<int32_t>(esi20(eax19, "GetActiveWindow", eax19, "MessageBoxA"));
            g41f540 = eax22;
            eax23 = reinterpret_cast<int32_t>(esi20(eax19, "GetLastActivePopup", eax19, "GetActiveWindow", eax19, "MessageBoxA"));
            g41f544 = eax23;
            goto addr_417cc4_2;
        }
    }
    g41f53c(ebx13, __return_address(), a2);
    addr_417cf6_6:
    goto ebx24;
}

void** fun_4130b9(void** ecx, int32_t a2) {
    void** eax3;

    eax3 = fun_4130ca(__return_address(), 1, 0);
    return eax3;
}

int32_t fun_41317d(void** ecx, unsigned char a2, int32_t a3, void** a4, void** a5) {
    uint32_t* eax6;
    uint32_t eax7;

    eax6 = reinterpret_cast<uint32_t*>(GetFileAttributesA());
    if (!reinterpret_cast<int1_t>(eax6 == -1)) {
        if (!(*reinterpret_cast<unsigned char*>(&eax6) & 1) || !(a2 & 2)) {
            return 0;
        } else {
            g41f388 = reinterpret_cast<uint32_t*>(13);
            g41f38c = 5;
        }
    } else {
        eax7 = reinterpret_cast<uint32_t>(GetLastError());
        fun_41427a(ecx, eax7, __return_address(), __return_address());
    }
    return -1;
}

int32_t CreateFontIndirectA = 0x19688;

int32_t SetBkMode = 0x19804;

int32_t DrawTextA = 0x1932c;

void fun_401db0(struct s4* ecx, void** a2, signed char* a3, struct s32* a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14) {
    int32_t v15;
    signed char* ebp16;
    struct s32* ebx17;
    int32_t v18;
    int32_t esi19;
    int32_t* esp20;
    int32_t v21;
    int32_t edi22;
    signed char* edi23;
    uint32_t ecx24;
    int32_t v25;
    int32_t eax26;
    void* esp27;
    int32_t esi28;
    int32_t ecx29;
    int32_t edi30;
    int32_t v31;
    void* esp32;
    void* v33;
    int32_t v34;
    int32_t v35;
    int32_t eax36;

    v15 = reinterpret_cast<int32_t>(__return_address());
    ebp16 = a3;
    if (!ebp16 || (!*ebp16 || (ebx17 = a4, ebx17 == 0))) {
        addr_401ec2_2:
        goto v15;
    } else {
        v18 = esi19;
        esp20 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 20 - 4 - 4 - 4 - 4);
        v21 = edi22;
        edi23 = ebp16;
        ecx24 = 0xffffffff;
        do {
            if (!ecx24) 
                break;
            --ecx24;
            ++edi23;
        } while (*edi23);
        v25 = reinterpret_cast<int32_t>(ebx17 + 1);
        eax26 = reinterpret_cast<int32_t>(CreateFontIndirectA(v25, v21, v18));
        esp27 = reinterpret_cast<void*>(esp20 - 1 - 1 + 1);
        esi28 = v15;
        if (eax26) 
            goto addr_401e03_7;
    }
    addr_401e0f_8:
    SetBkMode();
    ecx29 = 0;
    *reinterpret_cast<unsigned char*>(&ecx29) = reinterpret_cast<uint1_t>(!!ebx17->f8);
    edi30 = ecx29 + ecx29 + 0x900;
    GetSystemMetrics(0);
    GetSystemMetrics(1, 0);
    v31 = ebx17->f0;
    SetTextColor(esi28, v31, 1, 0);
    esp32 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp27) - 4 - 4 - 4 + 4 - 4 - 4 + 4 - 4 - 4 + 4 - 4 - 4 - 4 + 4);
    v33 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp32) + 20);
    DrawTextA(esi28, ebp16, v34, v33, edi30, esi28, v31, 1, 0);
    v35 = ebx17->f4;
    SetTextColor(esi28, v35, esi28, ebp16, v34, v33, edi30);
    DrawTextA();
    if (!0) {
        SelectObject(esi28, 10);
    }
    if (edi30) {
        DeleteObject(edi30, esi28, reinterpret_cast<int32_t>(esp32) - 4 - 4 - 4 - 4 - 4 - 4 + 4 - 4 - 4 - 4 + 4 + 20);
        goto addr_401ec2_2;
    }
    addr_401e03_7:
    eax36 = reinterpret_cast<int32_t>(SelectObject(esi28, eax26, v25, v21, v18));
    esp27 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp27) - 4 - 4 - 4 + 4);
    v15 = eax36;
    goto addr_401e0f_8;
}

void** fun_413332(uint32_t a1, void** a2) {
    void** v3;
    void** eax4;
    void** ecx5;
    int32_t eax6;

    v3 = reinterpret_cast<void**>(__return_address());
    if (a1 > 0xffffffe0) {
        addr_41335b_2:
        eax4 = reinterpret_cast<void**>(0);
    } else {
        do {
            eax4 = fun_41335e(ecx5, v3);
            if (eax4) 
                break;
            if (a2 == eax4) 
                break;
            eax6 = fun_4153f9(v3);
            ecx5 = v3;
        } while (eax6);
        goto addr_41335b_2;
    }
    return eax4;
}

void** g41a680 = reinterpret_cast<void**>(49);

void** fun_411b60(void** a1, void** a2, void** a3);

void** fun_411b80(void** ecx, void** a2, void** a3, void** a4, void** a5);

uint32_t fun_411a30(uint32_t a1, signed char* a2, uint32_t a3);

int32_t fun_4105d0(void** a1);

void** fun_410670(void** a1, void** a2, void** a3, int32_t a4) {
    void** cl5;
    void** eax6;
    void** ecx7;
    void** eax8;
    void** ecx9;
    uint32_t edx10;
    uint32_t edx11;
    void** eax12;
    void** edx13;

    if (!a3 || ((cl5 = g41a680, *reinterpret_cast<void***>(a3) != cl5) || a4 != 56)) {
        return 0xfffffffa;
    } else {
        if (a1) {
            eax6 = *reinterpret_cast<void***>(a1 + 32);
            *reinterpret_cast<void***>(a1 + 24) = reinterpret_cast<void**>(0);
            if (!eax6) {
                *reinterpret_cast<void***>(a1 + 32) = reinterpret_cast<void**>(fun_411b60);
                *reinterpret_cast<void***>(a1 + 40) = reinterpret_cast<void**>(0);
            }
            if (!*reinterpret_cast<void***>(a1 + 36)) {
                *reinterpret_cast<void***>(a1 + 36) = reinterpret_cast<void**>(fun_411b80);
            }
            ecx7 = *reinterpret_cast<void***>(a1 + 40);
            eax8 = reinterpret_cast<void**>(*reinterpret_cast<void***>(a1 + 32)(ecx7, 1, 24));
            *reinterpret_cast<void***>(a1 + 28) = eax8;
            if (eax8) {
                ecx9 = a2;
                *reinterpret_cast<void***>(eax8 + 20) = reinterpret_cast<void**>(0);
                *reinterpret_cast<void***>(*reinterpret_cast<void***>(a1 + 28) + 12) = reinterpret_cast<void**>(0);
                if (reinterpret_cast<signed char>(ecx9) < reinterpret_cast<signed char>(0)) {
                    ecx9 = reinterpret_cast<void**>(-reinterpret_cast<unsigned char>(ecx9));
                    *reinterpret_cast<void***>(*reinterpret_cast<void***>(a1 + 28) + 12) = reinterpret_cast<void**>(1);
                }
                if (reinterpret_cast<signed char>(ecx9) < reinterpret_cast<signed char>(8) || reinterpret_cast<signed char>(ecx9) > reinterpret_cast<signed char>(15)) {
                    fun_410620(a1);
                    return 0xfffffffe;
                } else {
                    *reinterpret_cast<void***>(*reinterpret_cast<void***>(a1 + 28) + 16) = ecx9;
                    edx10 = -reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(*reinterpret_cast<void***>(a1 + 28) + 12));
                    edx11 = edx10 - (edx10 + reinterpret_cast<uint1_t>(edx10 < edx10 + reinterpret_cast<uint1_t>(!!*reinterpret_cast<void***>(*reinterpret_cast<void***>(a1 + 28) + 12))));
                    eax12 = fun_410c50(a1, ~edx11 & reinterpret_cast<uint32_t>(fun_411a30), 1 << *reinterpret_cast<unsigned char*>(&ecx9));
                    *reinterpret_cast<void***>(*reinterpret_cast<void***>(a1 + 28) + 20) = eax12;
                    edx13 = *reinterpret_cast<void***>(a1 + 28);
                    if (*reinterpret_cast<void***>(edx13 + 20)) {
                        fun_4105d0(a1);
                        return 0;
                    } else {
                        fun_410620(a1);
                        return 0xfffffffc;
                    }
                }
            } else {
                return 0xfffffffc;
            }
        } else {
            return 0xfffffffe;
        }
    }
}

int32_t fun_40d100() {
    return 1;
}

struct s79 {
    signed char[4207856] pad4207856;
    signed char f4207856;
    signed char[971] pad4208828;
    signed char f4208828;
};

void** g41f28c = reinterpret_cast<void**>(0);

int32_t fun_4032a0(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6) {
    void** v7;
    void** ebp8;
    void** v9;
    void** esi10;
    void** v11;
    void** v12;
    void** v13;
    void** v14;
    void** v15;
    void** v16;
    void** v17;
    void** v18;
    void** eax19;
    void** esi20;
    void** v21;
    void** ebp22;
    void** v23;
    void** ebx24;
    void** v25;
    void** edi26;
    void** v27;
    void** v28;
    void** v29;
    void** v30;
    void** v31;
    void** eax32;
    void** ebx33;
    void* esp34;
    void** v35;
    void* esp36;
    void** eax37;
    void* esp38;
    struct s79* eax39;
    int32_t ecx40;
    void** eax41;
    void*** esp42;
    void** eax43;
    void** eax44;
    void** eax45;
    void** eax46;
    void** eax47;
    int32_t esi48;
    uint32_t edx49;
    uint32_t ecx50;
    void** eax51;
    uint32_t edx52;
    uint32_t ecx53;
    void** eax54;
    uint32_t edx55;
    uint32_t ecx56;
    void** eax57;
    void* edx58;
    uint32_t edx59;
    void* ebx60;

    v7 = ebp8;
    v9 = esi10;
    eax19 = fun_413320(ecx, 0x2000, v9, v7, v11, v12, v13, v14, v15, v16, v17, v18);
    esi20 = eax19;
    v21 = esi20;
    if (!esi20) {
        ebp22 = reinterpret_cast<void**>(0xfffffffd);
    } else {
        v23 = ebx24;
        v25 = edi26;
        eax32 = fun_413320(ecx, 0x8000, v25, v23, v9, v7, v21, v27, v28, v29, v30, v31);
        ebx33 = eax32;
        if (!ebx33) {
            ebp22 = reinterpret_cast<void**>(0xfffffffd);
            goto addr_40344f_5;
        } else {
            ecx = reinterpret_cast<void**>(12);
            esp34 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 56 - 4 - 4 - 4 - 4 + 4 + 4 - 4 - 4 - 4 - 4 + 4 + 4 - 4);
            while (ecx) {
                --ecx;
                esi20 = esi20 + 4;
            }
            v35 = reinterpret_cast<void**>(0);
            esp36 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp34) - 4);
            eax37 = fun_40d140(reinterpret_cast<int32_t>(esp36) + 32, 0, 0);
            esp38 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp36) - 4 - 4 + 12 + 4);
            ebp22 = eax37;
            if (ebp22) 
                goto addr_40349c_10; else 
                goto addr_40330c_11;
        }
    }
    addr_403467_12:
    eax39 = reinterpret_cast<struct s79*>(ebp22 + 11);
    if (reinterpret_cast<uint32_t>(eax39) > 15) 
        goto addr_4034d0_13;
    ecx40 = 0;
    *reinterpret_cast<signed char*>(&ecx40) = eax39->f4207856;
    switch (ecx40) {
    case 0:
        return 4;
    case 1:
        return 3;
    case 2:
        return 2;
    case 3:
        return 0;
        addr_4034d0_13:
    case 4:
        return 1;
    }
    addr_40344f_5:
    if (ebx33) {
        fun_413483(ecx, ebx33, v25, v23, v9, v7, v21);
    }
    fun_413483(ecx, esi20, v25, v23, v9, v7, v21);
    goto addr_403467_12;
    addr_40349c_10:
    ecx = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebp22) & 0xff);
    *reinterpret_cast<unsigned char*>(&ecx + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ecx + 1) | 32);
    g41f28c = ecx;
    goto addr_40344f_5;
    while (1) {
        addr_40330c_11:
        if (!v35) {
            ecx = a4;
            eax41 = reinterpret_cast<void**>(0x2000);
            if (ecx != 0xffffffff) {
                eax41 = ecx;
                if (reinterpret_cast<unsigned char>(ecx) >= reinterpret_cast<unsigned char>(0x2000)) {
                    eax41 = reinterpret_cast<void**>(0x2000);
                }
                ecx = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx) - reinterpret_cast<unsigned char>(eax41));
                a4 = ecx;
            }
            v35 = eax41;
            if (!eax41) 
                goto addr_403358_26;
            esp42 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp38) - 4 - 4);
            ecx = reinterpret_cast<void**>(esp42 + 88);
            eax43 = fun_407320(ecx, esi20, eax41, 1);
            esp38 = reinterpret_cast<void*>(esp42 - 4 - 4 - 4 + 4 + 16);
            if (eax43) 
                goto addr_403480_28;
        }
        addr_403358_26:
        eax44 = fun_40d250(reinterpret_cast<int32_t>(esp38) + 24);
        esp38 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp38) - 4 - 4 + 4 + 4);
        ebp22 = eax44;
        if (ebp22 && ebp22 != 4) {
            eax45 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax44) & 0xff);
            *reinterpret_cast<unsigned char*>(&eax45 + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax45 + 1) | 33);
            g41f28c = eax45;
        }
        if (1) {
            addr_40343d_31:
            if (!ebp22) 
                continue; else 
                break;
        } else {
            ecx = a2;
            eax46 = fun_401200(ecx, ebx33, 0, v25, v23, v9, v7);
            esp38 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp38) - 4 - 4 - 4 - 4 + 4 + 12);
            if (eax46) 
                goto addr_403487_33;
            ecx = a6;
            if (ecx) 
                goto addr_4033aa_35;
        }
        addr_403427_36:
        if (a5) {
            *reinterpret_cast<void***>(a5) = *reinterpret_cast<void***>(a5);
        }
        goto addr_40343d_31;
        addr_4033aa_35:
        ecx = *reinterpret_cast<void***>(ecx);
        eax47 = ebx33;
        if (!1) {
            esi48 = 0;
            do {
                edx49 = 0;
                *reinterpret_cast<void***>(&edx49) = *reinterpret_cast<void***>(eax47);
                ecx50 = (reinterpret_cast<unsigned char>(ecx) >> 31) + reinterpret_cast<unsigned char>(ecx) * 2 + edx49;
                eax51 = eax47 + 1;
                edx52 = 0;
                *reinterpret_cast<void***>(&edx52) = *reinterpret_cast<void***>(eax51);
                ecx53 = (ecx50 >> 31) + ecx50 * 2 + edx52;
                eax54 = eax51 + 1;
                edx55 = 0;
                *reinterpret_cast<void***>(&edx55) = *reinterpret_cast<void***>(eax54);
                ecx56 = (ecx53 >> 31) + ecx53 * 2 + edx55;
                eax57 = eax54 + 1;
                edx58 = reinterpret_cast<void*>(0);
                *reinterpret_cast<void***>(&edx58) = *reinterpret_cast<void***>(eax57);
                ecx = reinterpret_cast<void**>((ecx56 >> 31) + ecx56 * 2 + reinterpret_cast<uint32_t>(edx58));
                eax47 = eax57 + 1;
                --esi48;
            } while (esi48);
            esi20 = v21;
        }
        edx59 = 0;
        if (!1) {
            do {
                ebx60 = reinterpret_cast<void*>(0);
                *reinterpret_cast<void***>(&ebx60) = *reinterpret_cast<void***>(eax47);
                ebx33 = ebx33;
                ecx = reinterpret_cast<void**>((reinterpret_cast<unsigned char>(ecx) >> 31) + reinterpret_cast<unsigned char>(ecx) * 2 + reinterpret_cast<uint32_t>(ebx60));
                ++eax47;
                --edx59;
            } while (edx59);
            esi20 = v21;
        }
        *reinterpret_cast<void***>(a6) = ecx;
        goto addr_403427_36;
    }
    addr_403445_46:
    fun_40df30(reinterpret_cast<int32_t>(esp38) + 24);
    goto addr_40344f_5;
    addr_403487_33:
    ebp22 = reinterpret_cast<void**>(0xfffffff5);
    goto addr_403445_46;
    addr_403480_28:
    ebp22 = reinterpret_cast<void**>(0xfffffff6);
    goto addr_403445_46;
}

int32_t fun_403770(void** ecx, void** a2, void** a3, void** a4, void** a5) {
    void** v6;
    void** ebx7;
    void** v8;
    void** esi9;
    void** v10;
    void** v11;
    void** v12;
    void** v13;
    void** v14;
    void** v15;
    void** v16;
    void** v17;
    void** eax18;
    void** ebx19;
    void** esi20;
    void*** esp21;
    void** v22;
    void** edi23;
    int32_t ecx24;
    void** ecx25;
    void** v26;
    void* esp27;
    void** eax28;
    void* esp29;
    struct s79* eax30;
    int32_t edx31;
    void** eax32;
    void** v33;
    void** edi34;
    void** eax35;
    void*** esp36;
    void** eax37;
    void** eax38;
    void** edx39;

    v6 = ebx7;
    v8 = esi9;
    eax18 = fun_413320(ecx, 0x2000, v8, v6, v10, v11, v12, v13, v14, v15, v16, v17);
    ebx19 = eax18;
    if (!ebx19) {
        esi20 = reinterpret_cast<void**>(0xfffffffd);
    } else {
        esp21 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 48 - 4 - 4 - 4 - 4 + 4 + 4 - 4);
        v22 = edi23;
        ecx24 = 12;
        while (ecx24) {
            --ecx24;
        }
        ecx25 = a2;
        v26 = reinterpret_cast<void**>(0);
        esp27 = reinterpret_cast<void*>(esp21 - 4);
        eax28 = fun_40d140(reinterpret_cast<int32_t>(esp27) + 16, 0, 0);
        esp29 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp27) - 4 - 4 - 4 + 12 + 4);
        esi20 = eax28;
        if (esi20) 
            goto addr_40386b_7; else 
            goto addr_4037c6_8;
    }
    addr_403844_9:
    eax30 = reinterpret_cast<struct s79*>(esi20 + 11);
    if (reinterpret_cast<uint32_t>(eax30) > 15) 
        goto addr_40389d_10;
    edx31 = 0;
    *reinterpret_cast<signed char*>(&edx31) = eax30->f4208828;
    switch (edx31) {
    case 0:
        return 4;
    case 1:
        return 3;
    case 2:
        return 2;
    case 3:
        return 0;
        addr_40389d_10:
    case 4:
        return 1;
    }
    addr_40386b_7:
    eax32 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi20) & 0xff);
    *reinterpret_cast<unsigned char*>(&eax32 + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax32 + 1) | 64);
    g41f28c = eax32;
    addr_40383a_16:
    fun_413483(ecx25, ebx19, v22, v8, v6, v33, v26, ecx25, ebx19, v22, v8, v6, v33, v26);
    goto addr_403844_9;
    addr_4037c6_8:
    edi34 = a5;
    do {
        if (!v26) {
            eax35 = reinterpret_cast<void**>(0x2000);
            if (edi34 != 0xffffffff) {
                eax35 = edi34;
                if (reinterpret_cast<unsigned char>(edi34) >= reinterpret_cast<unsigned char>(0x2000)) {
                    eax35 = reinterpret_cast<void**>(0x2000);
                }
                edi34 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi34) - reinterpret_cast<unsigned char>(eax35));
            }
            v33 = ebx19;
            v26 = eax35;
            if (!eax35) 
                continue;
            esp36 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp29) - 4 - 4);
            eax37 = fun_407320(esp36 + 76, ebx19, eax35, 1);
            esp29 = reinterpret_cast<void*>(esp36 - 4 - 4 - 4 + 4 + 16);
            if (eax37) 
                goto addr_40385d_24;
        }
        eax38 = fun_40d250(reinterpret_cast<int32_t>(esp29) + 12);
        esp29 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp29) - 4 - 4 + 4 + 4);
        esi20 = eax38;
    } while (!esi20);
    if (esi20 != 4) {
        edx39 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi20) & 0xff);
        *reinterpret_cast<unsigned char*>(&edx39 + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&edx39 + 1) | 65);
        g41f28c = edx39;
    }
    addr_403830_28:
    ecx25 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp29) + 12);
    fun_40df30(ecx25);
    goto addr_40383a_16;
    addr_40385d_24:
    esi20 = reinterpret_cast<void**>(0xfffffff6);
    goto addr_403830_28;
}

void** g41a608 = reinterpret_cast<void**>(32);

int32_t fun_402cd0(void** ecx, void** a2, void** a3, void* a4) {
    void** v5;
    void** ebx6;
    void** v7;
    void** ebp8;
    void** v9;
    void** esi10;
    void** v11;
    void** edi12;
    void** v13;
    void** v14;
    void** v15;
    void** v16;
    void** v17;
    void** v18;
    void** eax19;
    void** ebp20;
    void** edx21;
    void* esp22;
    void** edi23;
    uint32_t ecx24;
    void** edi25;
    uint32_t ecx26;
    uint32_t ecx27;
    void*** esi28;
    uint32_t edx29;
    void** edi30;
    uint32_t ecx31;
    void** edi32;
    uint32_t ecx33;
    void** v34;
    void** v35;
    void** v36;
    void** v37;
    void** v38;
    void** v39;
    void** eax40;
    void** esi41;
    void** v42;
    void** v43;
    void* esp44;
    void** eax45;
    void** v46;
    void** edi47;
    void** ecx48;
    void* edx49;
    void** v50;
    void** eax51;
    void* esp52;
    void** ecx53;
    void** eax54;
    int32_t* v55;
    int32_t v56;
    int32_t v57;

    v5 = ebx6;
    v7 = ebp8;
    v9 = esi10;
    v11 = edi12;
    eax19 = fun_413320(ecx, 0x208, v11, v9, v7, v5, v13, v14, v15, v16, v17, v18);
    ebp20 = eax19;
    if (!ebp20) {
        return 0;
    }
    wsprintfA(ebp20, "\"%s\"", a2);
    edx21 = a3;
    esp22 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 84 - 4 - 4 - 4 - 4 - 4 - 4 + 4 + 4 - 4 - 4 - 4 - 4 + 4 + 12);
    if (edx21 && *reinterpret_cast<void***>(edx21)) {
        edi23 = ebp20;
        ecx24 = 0xffffffff;
        do {
            if (!ecx24) 
                break;
            --ecx24;
            ++edi23;
        } while (*reinterpret_cast<void***>(edi23));
        *reinterpret_cast<void***>(&ecx24) = g41a608;
        *reinterpret_cast<void***>(edi23 + 0xffffffff) = *reinterpret_cast<void***>(&ecx24);
        edi25 = edx21;
        ecx26 = 0xffffffff;
        do {
            if (!ecx26) 
                break;
            --ecx26;
            ++edi25;
        } while (*reinterpret_cast<void***>(edi25));
        ecx27 = ~ecx26;
        esi28 = reinterpret_cast<void***>(reinterpret_cast<unsigned char>(edi25) - ecx27);
        edx29 = ecx27;
        edi30 = ebp20;
        ecx31 = 0xffffffff;
        do {
            if (!ecx31) 
                break;
            --ecx31;
            ++edi30;
            ++esi28;
        } while (*reinterpret_cast<void***>(edi30));
        edi32 = edi30 - 1;
        ecx33 = edx29 >> 2;
        while (ecx33) {
            --ecx33;
            *reinterpret_cast<void***>(edi32) = *esi28;
            edi32 = edi32 + 4;
            esi28 = esi28 + 4;
        }
        ecx = reinterpret_cast<void**>(edx29 & 3);
        while (ecx) {
            --ecx;
            *reinterpret_cast<void***>(edi32) = *esi28;
            ++edi32;
            ++esi28;
        }
    }
    eax40 = fun_413320(ecx, 0x208, v11, v9, v7, v5, v34, v35, v36, v37, v38, v39);
    esi41 = eax40;
    if (!esi41) {
        fun_413483(ecx, ebp20, v11, v9, v7, v5, v42);
        return 0;
    }
    v43 = esi41;
    GetCurrentDirectoryA(0x104, v43);
    esp44 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp22) - 4 - 4 + 4 + 4 - 4 - 4 - 4 + 4);
    eax45 = v46;
    edi47 = esi41 + 0x104;
    ecx48 = eax45;
    edx49 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(edi47) - reinterpret_cast<unsigned char>(ecx48));
    do {
        ecx48 = *reinterpret_cast<void***>(eax45);
        *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(edx49) + reinterpret_cast<unsigned char>(eax45)) = ecx48;
        ++eax45;
    } while (ecx48);
    eax51 = fun_4131d0(ecx48, edi47, 92, 0x104, v43, v11, v9, v7, v5, v50);
    esp52 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp44) - 4 - 4 - 4 + 4 + 8);
    if (eax51) 
        goto addr_402daa_24;
    addr_402db3_25:
    ecx53 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp52) + 16);
    *reinterpret_cast<void***>(a2) = reinterpret_cast<void**>(0);
    eax54 = reinterpret_cast<void**>(CreateProcessA());
    SetCurrentDirectoryA();
    fun_413483(ecx53, esi41, esi41, 0, ebp20, 0, 0, ecx53, esi41, esi41, 0, ebp20, 0, 0);
    fun_413483(ecx53, ebp20, esi41, esi41, 0, ebp20, 0, ecx53, ebp20, esi41, esi41, 0, ebp20, 0);
    if (eax54) {
        *v55 = 0;
        goto v56;
    } else {
        goto v57;
    }
    addr_402daa_24:
    *reinterpret_cast<void***>(eax51) = reinterpret_cast<void**>(0);
    SetCurrentDirectoryA(edi47, 0x104, v43);
    esp52 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp52) - 4 - 4 + 4);
    goto addr_402db3_25;
}

struct s80 {
    signed char[16] pad16;
    void** f16;
    signed char[3] pad20;
    void** f20;
    signed char[7] pad28;
    void** f28;
    signed char[3] pad32;
    void** f32;
    signed char[13] pad46;
    int16_t f46;
    signed char[4] pad52;
    void* f52;
};

void** g41f300 = reinterpret_cast<void**>(0);

void** g41a57c = reinterpret_cast<void**>(60);

void** g41a580 = reinterpret_cast<void**>(0);

void** g41f304 = reinterpret_cast<void**>(0);

int32_t IsWindowVisible = 0x194ea;

int32_t InvalidateRect = 0x194d8;

int32_t RedrawWindow = 0x194b2;

int32_t fun_404ff0(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27) {
    void** v28;
    void** eax29;
    void** ecx30;
    void** v31;
    void** ebx32;
    void** v33;
    void** ebp34;
    struct s80* ebp35;
    void** eax36;
    void** v37;
    void** esi38;
    void** v39;
    void** edi40;
    void** edx41;
    void** eax42;
    int32_t esi43;
    void** v44;
    void** v45;
    void** esi46;
    void** eax47;
    void** eax48;
    void** edx49;
    void* eax50;
    void** ecx51;
    void** eax52;
    void** ebx53;
    void** eax54;
    void** esi55;
    void** edi56;
    uint32_t ecx57;
    void** ecx58;
    void** eax59;
    signed char* eax60;
    uint32_t edx61;
    void** edi62;
    uint32_t ecx63;
    uint32_t ecx64;
    void*** esi65;
    uint32_t edx66;
    void** edi67;
    uint32_t ecx68;
    void** edi69;
    uint32_t ecx70;
    uint32_t ecx71;
    void** edi72;
    uint32_t ecx73;
    void** eax74;
    void** edi75;
    void** cl76;
    void** edx77;
    int32_t esi78;
    void** eax79;
    void** eax80;
    void** eax81;
    void** ecx82;
    void** eax83;
    void** edx84;
    void** ecx85;
    void** eax86;
    void* v87;
    void** eax88;
    void** ecx89;
    void** edx90;
    void** eax91;
    void** eax92;
    void** v93;
    void** v94;
    void** eax95;
    void** eax96;
    void** eax97;
    void** eax98;
    void** edx99;
    uint32_t v100;
    void** ecx101;
    void** edx102;
    void** ecx103;
    int32_t ebx104;
    void** v105;
    int32_t eax106;
    int32_t esi107;
    void** edx108;
    void** eax109;
    void** v110;
    int32_t eax111;
    void** ecx112;
    void** eax113;
    void** ecx114;
    void** v115;
    void** v116;
    void** v117;
    void** eax118;
    void** esi119;
    int1_t zf120;
    int32_t ebx121;
    void** eax122;
    int32_t edx123;
    void** eax124;
    int1_t zf125;
    void** eax126;
    int1_t zf127;
    void** eax128;

    v28 = reinterpret_cast<void**>(__return_address());
    eax29 = g41f27c;
    ecx30 = g41f29c;
    v31 = ebx32;
    v33 = ebp34;
    ebp35 = *reinterpret_cast<struct s80**>(reinterpret_cast<uint32_t>(eax29 + reinterpret_cast<unsigned char>(ecx30) * 4) + 0x7e);
    eax36 = g41f300;
    v37 = esi38;
    v39 = edi40;
    if (eax36) {
        DeleteObject(eax36);
        g41f300 = reinterpret_cast<void**>(0);
    }
    edx41 = g41f328;
    fun_404260(edx41, v39, v37, v33, v31, 1, v28);
    if (!ebp35->f28) {
        eax42 = g41f328;
        esi43 = ShowWindow;
        v44 = reinterpret_cast<void**>(0);
        v45 = eax42;
        esi43(v45, 0);
    } else {
        esi46 = ebp35->f32;
        if (esi46 == 0xffffffff) {
            v44 = reinterpret_cast<void**>(15);
            eax47 = reinterpret_cast<void**>(GetSysColor(15));
            v45 = eax47;
        } else {
            v44 = esi46;
        }
        eax48 = reinterpret_cast<void**>(CreateSolidBrush(v44));
        edx49 = g41f328;
        g41f300 = eax48;
        eax50 = ebp35->f52;
        ecx51 = reinterpret_cast<void**>(0);
        *reinterpret_cast<int16_t*>(&ecx51) = ebp35->f46;
        fun_4040c0(edx49, ecx51, reinterpret_cast<int32_t>(eax50) + reinterpret_cast<uint32_t>(ebp35), esi46, 0xff, v44, v39, v37, v33, v31, 1, v28);
        eax52 = g41f29c;
        ebx53 = reinterpret_cast<void**>(0);
        eax54 = fun_403a00(eax52, 0, edx49, ecx51, reinterpret_cast<int32_t>(eax50) + reinterpret_cast<uint32_t>(ebp35), esi46, 0xff, v44, v39, v37, v33, v31, 1, v28, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23);
        esi55 = eax54;
        if (*reinterpret_cast<void***>(esi55) != 60) {
            edi56 = esi55;
            ecx57 = 0xffffffff;
            do {
                if (!ecx57) 
                    break;
                --ecx57;
                ++edi56;
                ++esi55;
            } while (*reinterpret_cast<void***>(edi56));
            ecx58 = reinterpret_cast<void**>(~ecx57 + 7);
            eax59 = fun_413320(ecx58, ecx58, v44, v39, v37, v33, v31, 1, v28, a2, a3, a4);
            ebx53 = eax59;
            eax60 = "<b>";
            edx61 = reinterpret_cast<unsigned char>(ebx53) - reinterpret_cast<uint32_t>("<b>");
            do {
                *reinterpret_cast<signed char*>(&ecx58) = *eax60;
                *reinterpret_cast<signed char*>(edx61 + reinterpret_cast<uint32_t>(eax60)) = *reinterpret_cast<signed char*>(&ecx58);
                ++eax60;
            } while (*reinterpret_cast<signed char*>(&ecx58));
            edi62 = esi55;
            ecx63 = 0xffffffff;
            do {
                if (!ecx63) 
                    break;
                --ecx63;
                ++edi62;
            } while (*reinterpret_cast<void***>(edi62));
            ecx64 = ~ecx63;
            esi65 = reinterpret_cast<void***>(reinterpret_cast<unsigned char>(edi62) - ecx64);
            edx66 = ecx64;
            edi67 = ebx53;
            ecx68 = 0xffffffff;
            do {
                if (!ecx68) 
                    break;
                --ecx68;
                ++edi67;
                ++esi65;
            } while (*reinterpret_cast<void***>(edi67));
            edi69 = edi67 - 1;
            ecx70 = edx66 >> 2;
            while (ecx70) {
                --ecx70;
                *reinterpret_cast<void***>(edi69) = *esi65;
                edi69 = edi69 + 4;
                esi65 = esi65 + 4;
            }
            ecx71 = edx66 & 3;
            while (ecx71) {
                --ecx71;
                *reinterpret_cast<void***>(edi69) = *esi65;
                ++edi69;
                ++esi65;
            }
            edi72 = ebx53;
            ecx73 = 0xffffffff;
            do {
                if (!ecx73) 
                    break;
                --ecx73;
                ++edi72;
            } while (*reinterpret_cast<void***>(edi72));
            eax74 = g41a57c;
            edi75 = edi72 - 1;
            esi55 = ebx53;
            *reinterpret_cast<void***>(edi75) = eax74;
            cl76 = g41a580;
            *reinterpret_cast<void***>(edi75 + 4) = cl76;
        }
        edx77 = g41f328;
        v45 = esi55;
        esi78 = GetDlgItem;
        eax79 = reinterpret_cast<void**>(esi78(edx77, 0x416, v45, v44));
        fun_405a50(eax79, edx77, 0x416, v45, v44, v39, v37, v33, v31, 1, v28, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27);
        eax80 = g41f29c;
        eax81 = fun_403a00(eax80, 1, eax79, edx77, 0x416, v45, v44, v39, v37, v33, v31, 1, v28, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24);
        ecx82 = g41f328;
        eax83 = reinterpret_cast<void**>(esi78(ecx82, 0x417, eax81, 0x416, v45, v44));
        fun_405a50(eax83, ecx82, 0x417, eax81, 0x416, v45, v44, v39, v37, v33, v31, 1, v28, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25);
        if (ebx53) {
            fun_413483(ecx82, ebx53, 0x417, eax81, 0x416, v45, v44, ecx82, ebx53, 0x417, eax81, 0x416, v45, v44);
        }
        edx84 = ebp35->f28;
        ecx85 = g41f27c;
        eax86 = ebp35->f16;
        v87 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx85 + 12)) - reinterpret_cast<unsigned char>(eax86));
        eax88 = g41f328;
        SetWindowPos(eax88, 0, eax86, 0, v87, edx84, 4, 0x417, eax81, 0x416, v45, v44);
        ecx89 = g41f328;
        esi43 = ShowWindow;
        esi43(ecx89, 5, eax88, 0, eax86, 0, v87, edx84, 4, 0x417, eax81, 0x416, v45, v44);
        edx90 = g41f328;
        UpdateWindow(edx90, ecx89, 5, eax88, 0, eax86, 0, v87, edx84, 4, 0x417, eax81, 0x416, v45, v44);
    }
    eax91 = g41f304;
    if (eax91) {
        DeleteObject(eax91, v45, v44);
        g41f304 = reinterpret_cast<void**>(0);
    }
    if (!ebp35->f16) {
        eax92 = g41f324;
        v93 = reinterpret_cast<void**>(0);
        v94 = eax92;
        esi43(v94, 0, v45, v44);
    } else {
        eax95 = ebp35->f20;
        if (reinterpret_cast<int1_t>(eax95 == 0xffffffff)) {
            eax95 = reinterpret_cast<void**>(GetSysColor(15, v45, v44));
        }
        v93 = eax95;
        eax96 = reinterpret_cast<void**>(CreateSolidBrush(v93, v45, v44));
        g41f304 = eax96;
        eax97 = g41f27c;
        v94 = reinterpret_cast<void**>(4);
        eax98 = g41f324;
        edx99 = ebp35->f16;
        v100 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax97 + 16)) - *reinterpret_cast<uint32_t*>(eax97 + 88);
        SetWindowPos(eax98, 0, 0, 0, edx99, v100, 4, v93, v45, v44);
        ecx101 = g41f324;
        esi43(ecx101, 5, eax98, 0, 0, 0, edx99, v100, 4, v93, v45, v44);
        edx102 = g41f324;
        UpdateWindow(edx102, ecx101, 5, eax98, 0, 0, 0, edx99, v100, 4, v93, v45, v44);
    }
    ecx103 = g41f328;
    ebx104 = IsWindowVisible;
    v105 = ecx103;
    eax106 = reinterpret_cast<int32_t>(ebx104(v105, v94, v93, v45, v44));
    esi107 = InvalidateRect;
    if (eax106) {
        edx108 = g41f328;
        esi107(edx108, 0, 1, v105, v94, v93, v45, v44);
    }
    eax109 = g41f324;
    v110 = eax109;
    eax111 = reinterpret_cast<int32_t>(ebx104());
    if (eax111) {
        ecx112 = g41f324;
        esi107(ecx112, 0, 1);
    }
    eax113 = g41f338;
    ecx114 = g41f330;
    v115 = v39;
    v116 = eax113;
    v117 = ecx114;
    g41f2e0 = reinterpret_cast<void**>(0);
    eax118 = reinterpret_cast<void**>(CreateDialogParamA());
    esi119 = eax118;
    if (!esi119) {
        addr_4052f6_45:
    } else {
        zf120 = g41f2e0 == 0;
        if (zf120) {
            ebx121 = RedrawWindow;
            do {
                addr_405292_48:
                eax122 = g41f0ec;
                edx123 = 0;
                *reinterpret_cast<unsigned char*>(&edx123) = reinterpret_cast<uint1_t>(eax122 == 0);
                fun_404ef0(edx123, v117, 0x70, v116, v115);
                eax124 = g41f2e0;
                if (eax124) 
                    break;
                zf125 = g41f0ec == 0;
                if (zf125) 
                    goto addr_405292_48;
                if (!1) {
                    ebx121(esi119, 0, 0, 0x180);
                }
                eax126 = fun_409b00(v117, 0x70, v116, v115, 0, v110, v105, v94, v93, v45, v44, v39, v37, v33, v31, 1, v28, a2, a3, a4);
                if (!eax126) {
                    fun_408d00(ecx114, 0);
                }
                zf127 = g41f2e0 == 0;
            } while (zf127);
        }
        DestroyWindow(esi119);
        eax128 = g41f2e0;
        if (!eax128) 
            goto addr_4052f6_45;
    }
    goto v110;
}

void** g41f2c0 = reinterpret_cast<void**>(0);

void** g41f2bc = reinterpret_cast<void**>(0);

void** g41f0f0 = reinterpret_cast<void**>(0);

void** g41f0f4 = reinterpret_cast<void**>(0);

int32_t g41a2ac = 0x41be2a;

void** fun_406c80(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22) {
    void** v23;
    void** eax24;
    void** eax25;
    void** v26;
    void** ebp27;
    void*** esp28;
    void** v29;
    void** esi30;
    void** v31;
    void** v32;
    void** v33;
    void** v34;
    void** eax35;
    void** v36;
    void** v37;
    void** v38;
    void** v39;
    int32_t eax40;
    int1_t zf41;
    void** v42;
    void** ebx43;
    void** ebx44;
    void*** esp45;
    void** v46;
    void** edi47;
    void** edi48;
    void** eax49;
    void** v50;
    void** eax51;
    uint32_t ecx52;
    uint32_t edx53;
    uint32_t esi54;
    int32_t edx55;
    uint32_t ecx56;
    void** eax57;
    int32_t edx58;
    uint32_t ecx59;
    void** eax60;
    int32_t edx61;
    uint32_t ecx62;
    void** eax63;
    int32_t edx64;
    uint32_t edx65;
    int32_t ebx66;
    void** eax67;
    void** ebp68;
    void** v69;
    void** ebx70;
    void** eax71;
    void** eax72;
    void* ecx73;
    void** edx74;
    void** esi75;
    int32_t edx76;
    uint32_t ecx77;
    void** eax78;
    int32_t edx79;
    uint32_t ecx80;
    void** eax81;
    int32_t edx82;
    uint32_t ecx83;
    void** eax84;
    void* edx85;
    uint32_t edx86;
    void** v87;
    void** ebx88;
    void** eax89;
    void** eax90;
    void** eax91;
    int32_t eax92;
    void** eax93;
    void** v94;
    int32_t eax95;
    void** eax96;
    void** v97;
    void** eax98;
    void** eax99;
    void* esp100;
    void** v101;
    void** v102;
    void** edx103;
    void** eax104;
    void** eax105;
    int32_t eax106;
    uint32_t ecx107;
    unsigned char dl108;
    signed char* ebp109;
    signed char* edi110;
    int32_t edi111;
    unsigned char cl112;
    int32_t esi113;
    int16_t ax114;
    void** ecx115;
    void** ecx116;
    void** edx117;
    void** al118;
    void** edx119;
    void** v120;
    void** eax121;
    void** ecx122;
    void** eax123;

    v23 = reinterpret_cast<void**>(__return_address());
    eax24 = g41f10c;
    g41f0e4 = eax24;
    eax25 = g41f2c0;
    v26 = ebp27;
    esp28 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 16 - 4 - 4);
    v29 = esi30;
    g41f364 = reinterpret_cast<void**>(0);
    g41f0e8 = reinterpret_cast<void**>(0xffffffff);
    g41f0e0 = reinterpret_cast<void**>(0);
    g41f2bc = reinterpret_cast<void**>(1);
    if (!eax25) {
        eax35 = fun_4065c0(ecx, v29, v26, v31, v32, v33, v34, v23, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22);
        esp28 = esp28 - 4 + 4;
        g41f364 = eax35;
        if (eax35) {
            addr_406d02_3:
            return 0;
        } else {
            eax40 = fun_406350(v29, v26, v36, v37, v38, v39, v23, a2);
            esp28 = esp28 - 4 + 4;
            if (*reinterpret_cast<unsigned char*>(&eax40) & 1) {
                g41f364 = reinterpret_cast<void**>(11);
                return 0;
            }
            if (*reinterpret_cast<unsigned char*>(&eax40) & 2) {
                g41f364 = reinterpret_cast<void**>(10);
                return 0;
            }
            zf41 = g41f364 == 0;
            if (!zf41) 
                goto addr_406d02_3;
        }
        g41f2c0 = reinterpret_cast<void**>(1);
    }
    v42 = ebx43;
    ebx44 = g41f110;
    esp45 = esp28 - 4 - 4;
    v46 = edi47;
    edi48 = g41f0f0;
    eax49 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebx44) >> 1);
    v50 = eax49;
    if (!eax49) {
        eax51 = g41f0f4;
        ecx52 = 0;
        edx53 = reinterpret_cast<unsigned char>(edi48) >> 2;
        if (edx53) {
            esi54 = edx53;
            do {
                edx55 = 0;
                *reinterpret_cast<void***>(&edx55) = *reinterpret_cast<void***>(eax51);
                ecx56 = (ecx52 >> 31) + ecx52 * 2 + edx55;
                eax57 = eax51 + 1;
                edx58 = 0;
                *reinterpret_cast<void***>(&edx58) = *reinterpret_cast<void***>(eax57);
                ecx59 = (ecx56 >> 31) + ecx56 * 2 + edx58;
                eax60 = eax57 + 1;
                edx61 = 0;
                *reinterpret_cast<void***>(&edx61) = *reinterpret_cast<void***>(eax60);
                ecx62 = (ecx59 >> 31) + ecx59 * 2 + edx61;
                eax63 = eax60 + 1;
                edx64 = 0;
                *reinterpret_cast<void***>(&edx64) = *reinterpret_cast<void***>(eax63);
                ecx52 = (ecx62 >> 31) + ecx62 * 2 + edx64;
                eax51 = eax63 + 1;
                --esi54;
            } while (esi54);
        }
        edx65 = reinterpret_cast<unsigned char>(edi48) & 3;
        if (edx65) {
            do {
                ebx66 = 0;
                *reinterpret_cast<void***>(&ebx66) = *reinterpret_cast<void***>(eax51);
                ebx44 = ebx44;
                ecx52 = (ecx52 >> 31) + ecx52 * 2 + ebx66;
                ++eax51;
                --edx65;
            } while (edx65);
        }
        eax67 = g41f258;
        g41f25c = reinterpret_cast<void**>(0);
        ecx = reinterpret_cast<void**>(ecx52 ^ 0x7d39ec5a);
        if (ecx == *reinterpret_cast<void***>(eax67 + 34)) {
            g41f25c = reinterpret_cast<void**>(1);
        }
        if (ecx == *reinterpret_cast<void***>(eax67 + 6)) {
            g41f25c = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(g41f25c) ^ reinterpret_cast<unsigned char>(1));
        }
    }
    ebp68 = g41f10c;
    v69 = reinterpret_cast<void**>(0);
    if (reinterpret_cast<unsigned char>(ebx44) > reinterpret_cast<unsigned char>(0)) {
        do {
            ebx70 = *reinterpret_cast<void***>(ebp68 + 8);
            eax71 = v50 - 1;
            v50 = eax71;
            if (!eax71) {
                eax72 = g41f0f4;
                ecx73 = reinterpret_cast<void*>(0);
                edx74 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi48) >> 2);
                if (edx74) {
                    esi75 = edx74;
                    do {
                        edx76 = 0;
                        *reinterpret_cast<void***>(&edx76) = *reinterpret_cast<void***>(eax72);
                        ecx77 = (reinterpret_cast<uint32_t>(ecx73) >> 31) + reinterpret_cast<uint32_t>(ecx73) * 2 + edx76;
                        eax78 = eax72 + 1;
                        edx79 = 0;
                        *reinterpret_cast<void***>(&edx79) = *reinterpret_cast<void***>(eax78);
                        ecx80 = (ecx77 >> 31) + ecx77 * 2 + edx79;
                        eax81 = eax78 + 1;
                        edx82 = 0;
                        *reinterpret_cast<void***>(&edx82) = *reinterpret_cast<void***>(eax81);
                        ecx83 = (ecx80 >> 31) + ecx80 * 2 + edx82;
                        eax84 = eax81 + 1;
                        edx85 = reinterpret_cast<void*>(0);
                        *reinterpret_cast<void***>(&edx85) = *reinterpret_cast<void***>(eax84);
                        ecx73 = reinterpret_cast<void*>((ecx83 >> 31) + ecx83 * 2 + reinterpret_cast<int32_t>(edx85));
                        eax72 = eax84 + 1;
                        --esi75;
                    } while (esi75);
                }
                edx86 = reinterpret_cast<unsigned char>(edi48) & 3;
                if (edx86) {
                    do {
                        v87 = ebx70;
                        ebx88 = reinterpret_cast<void**>(0);
                        ebx88 = *reinterpret_cast<void***>(eax72);
                        ebx70 = v87;
                        ecx73 = reinterpret_cast<void*>((reinterpret_cast<uint32_t>(ecx73) >> 31) + reinterpret_cast<uint32_t>(ecx73) * 2 + reinterpret_cast<unsigned char>(ebx88));
                        ++eax72;
                        --edx86;
                    } while (edx86);
                }
                eax89 = g41f258;
                g41f25c = reinterpret_cast<void**>(0);
                ecx = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ecx73) ^ 0x7d39ec5a);
                if (ecx == *reinterpret_cast<void***>(eax89 + 34)) {
                    g41f25c = reinterpret_cast<void**>(1);
                }
                if (ecx == *reinterpret_cast<void***>(eax89 + 6)) {
                    g41f25c = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(g41f25c) ^ 1);
                }
            }
            if (!(*reinterpret_cast<unsigned char*>(&ebx70 + 1) & 3) && !(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebp68 + 4)) & 2)) {
                eax90 = fun_4092d0(ebp68, v46, v42, v29);
                esp45 = esp45 - 4 - 4 + 4 + 4;
                if ((!(*reinterpret_cast<unsigned char*>(&ebx70) & 64) || (eax91 = g41f0d0, eax92 = fun_401100(eax91, v46), esp45 = esp45 - 4 - 4 + 4 + 4, !eax92)) && (eax93 = g41f0d0, !!*reinterpret_cast<void***>(eax93))) {
                    if (!eax90) {
                        addr_406f2c_36:
                        if (*reinterpret_cast<unsigned char*>(&ebx70) & 6 && (eax95 = fun_409830(ecx, ebp68, v46, v42, v29, v26, v50, v87, v69, v94, v23, a2, a3, a4, a5, a6), esp45 = esp45 - 4 - 4 + 4 + 4, !eax95)) {
                            eax96 = *reinterpret_cast<void***>(ebp68 + 8);
                            *reinterpret_cast<unsigned char*>(&eax96) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax96) | 64);
                            *reinterpret_cast<void***>(ebp68 + 8) = eax96;
                        }
                    } else {
                        v87 = reinterpret_cast<void**>(0);
                        eax98 = fun_401140(eax93, 0, v46, v42, v29, v26, v50, 0, v69, v97, v23, a2, a3, a4, a5, a6, a7, a8, a9);
                        esp45 = esp45 - 4 - 4 - 4 + 4 + 8;
                        if (eax98 != 0xffffffff) {
                            eax99 = fun_4012c0(eax98, v46, v42);
                            ecx = *reinterpret_cast<void***>(ebp68 + 24);
                            esp100 = reinterpret_cast<void*>(esp45 - 4 - 4 + 4 + 4);
                            if (eax99 == ecx) {
                                ecx = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp100) + 28);
                                fun_405500(eax98, reinterpret_cast<int32_t>(esp100) + 20, ecx, v46, v42, v29, v26, v50, 0, v69, v101, v23, a2);
                                esp100 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp100) - 4 - 4 - 4 - 4 + 4 + 12);
                            }
                            fun_4013c0(eax98, v46, v42, v29, v26, v50, 0, v69, v102, v23, a2, a3, a4, a5, a6, a7, a8, a9, a10);
                            esp45 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp100) - 4 - 4 + 4 + 4);
                        }
                        if (*reinterpret_cast<void***>(ebp68 + 20)) 
                            goto addr_406f2c_36;
                        if (!0) 
                            goto addr_406f2c_36;
                    }
                }
                edi48 = g41f0f0;
            }
            edx103 = v69 + 1;
            v69 = edx103;
            eax104 = fun_403b10(ebp68, v46, v42, v29, v26, v50);
            ebp68 = eax104;
            eax105 = g41f110;
            esp45 = esp45 - 4 - 4 + 4 + 4;
        } while (reinterpret_cast<unsigned char>(edx103) < reinterpret_cast<unsigned char>(eax105));
    }
    eax106 = g41a2ac;
    ecx107 = 0xffffffff;
    dl108 = 63;
    ebp109 = reinterpret_cast<signed char*>(eax106 - 0x1dfa);
    edi110 = ebp109;
    do {
        if (!ecx107) 
            break;
        --ecx107;
        ++edi110;
    } while (*edi110);
    edi111 = 0;
    cl112 = 63;
    esi113 = reinterpret_cast<int32_t>(~ecx107) - 1 - 1;
    if (!(reinterpret_cast<uint1_t>(esi113 < 0) | reinterpret_cast<uint1_t>(esi113 == 0))) {
        do {
            dl108 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(dl108 >> 1) + reinterpret_cast<unsigned char>(dl108 << 7));
            ax114 = reinterpret_cast<int16_t>(*reinterpret_cast<signed char*>(edi111 + reinterpret_cast<int32_t>(ebp109)) * reinterpret_cast<signed char>(reinterpret_cast<unsigned char>(dl108 & 1) + 2));
            cl112 = reinterpret_cast<unsigned char>(cl112 + *reinterpret_cast<signed char*>(&ax114));
            ++edi111;
        } while (edi111 < esi113);
    }
    if (esi113 < 30 || cl112 != *reinterpret_cast<unsigned char*>(esi113 + reinterpret_cast<int32_t>(ebp109))) {
        ecx115 = g41f334;
        SetTimer(ecx115, 11, 0x5dc, 0);
    }
    ecx116 = g41f36c;
    edx117 = g41f280;
    do {
        al118 = *reinterpret_cast<void***>(ecx116);
        ++ecx116;
        *reinterpret_cast<void***>(edx117) = al118;
        ++edx117;
    } while (al118);
    edx119 = g41f280;
    eax121 = fun_401140(edx119, 0, v29, v26, v50, v87, v69, v120, v23, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
    g41a2bc = eax121;
    if (!reinterpret_cast<int1_t>(eax121 == 0xffffffff)) {
        ecx122 = g41f108;
        fun_401260(eax121, ecx122 + 4, v29, v26, v50, v87, v69);
        g41f0ec = reinterpret_cast<void**>(1);
        goto v23;
    } else {
        eax123 = g41f280;
        g41f364 = reinterpret_cast<void**>(16);
        fun_407050(eax123, v29, v26, v50);
        goto v23;
    }
}

void** g41a710 = reinterpret_cast<void**>(32);

void fun_405fa0(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29) {
    void** v30;
    void** v31;
    void** ebx32;
    void** v33;
    void** ebp34;
    void** v35;
    void** esi36;
    void** v37;
    void** edi38;
    void** ecx39;
    void** eax40;
    void** ebp41;
    void** eax42;
    void** edx43;
    int32_t edi44;
    void** v45;
    void** v46;
    void* esp47;
    void** eax48;
    void** ecx49;
    int32_t eax50;
    void** ebx51;
    void** eax52;
    void* edx53;
    void** edi54;
    uint32_t ecx55;
    void*** esp56;
    void** v57;
    void** eax58;
    uint32_t ecx59;
    void** edi60;
    uint32_t ecx61;
    void*** esi62;
    uint32_t edx63;
    void** edi64;
    uint32_t ecx65;
    void** edi66;
    uint32_t ecx67;
    uint32_t ecx68;
    void** eax69;
    void** ecx70;
    void** eax71;
    void** edx72;
    int32_t ebx73;
    void** esi74;
    void** eax75;
    void** v76;
    void** eax77;
    void** ecx78;
    void** eax79;
    int1_t zf80;
    void* ecx81;

    v30 = reinterpret_cast<void**>(__return_address());
    v31 = ebx32;
    v33 = ebp34;
    v35 = esi36;
    v37 = edi38;
    g41f2a0 = a1;
    fun_405a00(v37, v35, v33);
    ecx39 = g41f29c;
    eax40 = fun_403a00(ecx39, 0, v37, v35, v33, v31, v30, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29);
    ebp41 = eax40;
    eax42 = fun_403a00(7, 0, ecx39, 0, v37, v35, v33, v31, v30, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27);
    edx43 = g41f334;
    edi44 = SetWindowTextA;
    v45 = eax42;
    v46 = edx43;
    edi44();
    esp47 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4 - 4 + 4 - 4 - 4 - 4 + 4 - 4 - 4 - 4 + 4 + 16 - 4 - 4 - 4 + 4);
    if (*reinterpret_cast<void***>(ebp41)) {
        eax48 = g41f27c;
        ecx49 = g41f258;
        if (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax48)) & 2)) {
            if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx49 + 2)) & 0x20000000 && (eax50 = fun_4021c0(ecx49, 0x400, reinterpret_cast<int32_t>(esp47) + 20, v46, v45, v37, v35, v33, v31, v30, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12), esp47 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp47) - 4 - 4 - 4 + 4 + 8), !!eax50)) {
                ebx51 = v31;
                eax52 = eax42;
                edx53 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ebx51) - reinterpret_cast<unsigned char>(eax42));
                do {
                    ecx49 = *reinterpret_cast<void***>(eax52);
                    *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(edx53) + reinterpret_cast<unsigned char>(eax52)) = ecx49;
                    ++eax52;
                } while (ecx49);
                edi54 = ebx51;
                ecx55 = 0xffffffff;
                esp56 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp47) - 4);
                v57 = ebx51;
                do {
                    if (!ecx55) 
                        break;
                    --ecx55;
                    ++edi54;
                } while (*reinterpret_cast<void***>(edi54));
                eax58 = g41a710;
                ecx59 = 0xffffffff;
                *reinterpret_cast<void***>(edi54 + 0xffffffff) = eax58;
                edi60 = ebp41;
                do {
                    if (!ecx59) 
                        break;
                    --ecx59;
                    ++edi60;
                } while (*reinterpret_cast<void***>(edi60));
                ecx61 = ~ecx59;
                esi62 = reinterpret_cast<void***>(reinterpret_cast<unsigned char>(edi60) - ecx61);
                edx63 = ecx61;
                edi64 = ebx51;
                ecx65 = 0xffffffff;
                do {
                    if (!ecx65) 
                        break;
                    --ecx65;
                    ++edi64;
                    ++esi62;
                } while (*reinterpret_cast<void***>(edi64));
                edi66 = edi64 - 1;
                ecx67 = edx63 >> 2;
                while (ecx67) {
                    --ecx67;
                    *reinterpret_cast<void***>(edi66) = *esi62;
                    edi66 = edi66 + 4;
                    esi62 = esi62 + 4;
                }
                ecx68 = edx63 & 3;
                while (ecx68) {
                    --ecx68;
                    *reinterpret_cast<void***>(edi66) = *esi62;
                    ++edi66;
                    ++esi62;
                }
                eax69 = g41f334;
                SetWindowTextA(eax69, v57);
                ecx70 = reinterpret_cast<void**>(esp56 - 4 - 4 + 4 + 20);
                fun_402200(ecx70, ecx70, eax69, v57, v46, v45, v37, v35, v33, v31, v30, a1, a2, a3, a4, a5, a6, a7, a8, a9);
            }
        } else {
            if (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx49 + 2)) & 0x20000000)) {
                eax71 = g41f338;
                edi44(eax71, eax42);
            } else {
                edx72 = g41f338;
                edi44(edx72, ebp41);
            }
        }
    }
    ebx73 = GetDlgItem;
    esi74 = reinterpret_cast<void**>(2);
    do {
        eax75 = g41f2a0;
        v76 = esi74 + 0x3e6;
        eax77 = reinterpret_cast<void**>(ebx73());
        if (eax77) {
            ecx78 = g41f29c;
            eax79 = fun_403a00(ecx78, esi74, eax75, v76, v46, v45, v37, v35, v33, v31, v30, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25);
            fun_405a50(eax77, eax79, ecx78, esi74, eax75, v76, v46, v45, v37, v35, v33, v31, v30, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24);
        }
        ++esi74;
    } while (reinterpret_cast<signed char>(esi74 + 0xfffffffe) < reinterpret_cast<signed char>(4));
    fun_406190(1, 0, eax75, v76, v46, v45, v37, v35, v33, v31, v30, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22);
    fun_406190(2, 1, 1, 0, eax75, v76, v46, v45, v37, v35, v33, v31, v30, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
    fun_406190(4, 2, 2, 1, 1, 0, eax75, v76, v46, v45, v37, v35, v33, v31, v30, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
    zf80 = g41a2a6 == -1;
    if (!zf80) {
    }
    ecx81 = g41f374;
    if (!ecx81) {
    }
    fun_406130();
    goto v37;
}

int32_t GetDiskFreeSpaceA = 0x1904c;

uint32_t fun_402220(void** a1, int32_t* a2) {
    int32_t* ebp3;
    void* esp4;
    uint32_t esi5;
    void** eax6;
    void* edx7;
    void** ecx8;
    signed char v9;
    signed char v10;
    void** eax11;
    void* esp12;
    signed char v13;
    signed char v14;
    int32_t eax15;
    void* esp16;
    signed char v17;
    signed char v18;
    void** ecx19;
    void** edi20;
    void* esp21;
    void* esp22;
    void** esp23;
    int32_t eax24;
    int32_t v25;
    void* esp26;
    int32_t eax27;
    int32_t v28;
    int32_t* v29;

    ebp3 = a2;
    esp4 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 0x124 - 4 - 4);
    esi5 = 0xffffffff;
    if (ebp3) {
        *ebp3 = 1;
    }
    eax6 = a1;
    if (!eax6 || !*reinterpret_cast<void***>(eax6)) {
        return 0xffffffff;
    }
    edx7 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp4) + 36 - reinterpret_cast<unsigned char>(eax6));
    do {
        ecx8 = *reinterpret_cast<void***>(eax6);
        *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(edx7) + reinterpret_cast<unsigned char>(eax6)) = ecx8;
        ++eax6;
    } while (ecx8);
    if (v9 != 58) 
        goto addr_40227b_8;
    if (v10 == 92) 
        goto addr_402277_10;
    addr_40227b_8:
    eax11 = reinterpret_cast<void**>(LoadLibraryA());
    esp12 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp4) - 4 - 4 - 4 - 4 + 4);
    if (!eax11) {
        addr_40231e_11:
        if ((v13 != 92 || v14 != 92) && v14 == 58) {
        }
    } else {
        eax15 = reinterpret_cast<int32_t>(GetProcAddress());
        esp16 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp12) - 4 - 4 - 4 + 4);
        if (eax15) {
            if (v17 != 92 || v18 != 92) {
                ecx19 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp16) + 44);
                fun_402150(ecx19, ecx19, eax11, "GetDiskFreeSpaceExA", "KERNEL32.DLL", edi20);
                esp21 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp16) - 4 - 4 + 4);
            } else {
                fun_402110(ecx8, reinterpret_cast<int32_t>(esp16) + 44, eax11, "GetDiskFreeSpaceExA", "KERNEL32.DLL", edi20);
                esp21 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp16) - 4 - 4 + 4);
            }
            esp22 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp21) + 4);
            esp23 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp22) - 4 - 4);
            eax24 = reinterpret_cast<int32_t>(eax15(esp23 + 13, reinterpret_cast<int32_t>(esp22) + 20, reinterpret_cast<int32_t>(esp22) + 36, reinterpret_cast<int32_t>(esp22) + 28));
            esp16 = reinterpret_cast<void*>(esp23 - 1 - 1 - 1 + 1);
            if (eax24) {
                if (0) {
                    esi5 = 0x7e001069;
                } else {
                    esi5 = 0xfffffffe;
                }
            }
        }
        FreeLibrary();
        esp12 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp16) - 4 - 4 + 4);
        if (esi5 == 0xffffffff) 
            goto addr_402317_22;
        if (!v25) 
            goto addr_402395_24; else 
            goto addr_402317_22;
    }
    esp26 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp12) - 4 - 4);
    eax27 = reinterpret_cast<int32_t>(GetDiskFreeSpaceA(reinterpret_cast<int32_t>(esp26) - 4 + 56, reinterpret_cast<int32_t>(esp26) + 36));
    if (eax27) {
        if (esi5 == 0xffffffff) {
        }
        if (ebp3) {
            *ebp3 = 0;
        }
    }
    addr_402395_24:
    goto v28;
    addr_402317_22:
    ebp3 = v29;
    goto addr_40231e_11;
    addr_402277_10:
    goto addr_40227b_8;
}

int32_t VerFindFileA = 0x19a04;

void fun_40d0b0() {
    int1_t zf1;

    zf1 = g41f370 == 0;
    if (!zf1) {
    }
    goto VerFindFileA;
}

void fun_413cd2(void** ecx, void** a2, void** a3, void** a4) {
    int32_t v5;
    void** edx6;
    void** eax7;
    int1_t zf8;
    void** v9;
    void** eax10;
    void** edi11;
    void** esi12;
    void** ebx13;
    void** ebp14;
    void** edi15;
    int1_t zf16;
    void** ebx17;
    int32_t esi18;
    void** v19;
    void** v20;
    void** v21;
    void** v22;
    void** eax23;
    void** v24;
    void** edx25;
    void** ecx26;
    void** v27;
    unsigned char* ecx28;

    v5 = reinterpret_cast<int32_t>(__return_address());
    edx6 = a2;
    eax7 = reinterpret_cast<void**>(0);
    if (!edx6) {
        zf8 = g41f3e8 == 0;
        if (!zf8) {
            v9 = g41f3f8;
            eax10 = reinterpret_cast<void**>(MultiByteToWideChar(v9, 9, a3, 0xff, 0, 0));
            if (!eax10) {
                addr_413d4e_4:
                g41f388 = reinterpret_cast<uint32_t*>(42);
                goto addr_413dcc_5;
            } else {
                addr_413dcb_6:
                goto addr_413dcc_5;
            }
        } else {
            fun_415df0(ecx, a3, edi11, esi12, ebx13, ebp14);
            goto addr_413dcc_5;
        }
    }
    edi15 = a4;
    if (!edi15) 
        goto addr_413dcc_5;
    zf16 = g41f3e8 == 0;
    if (zf16) 
        goto addr_413cfa_10;
    ebx17 = a3;
    esi18 = MultiByteToWideChar;
    v19 = edi15;
    v20 = edx6;
    v21 = ebx17;
    v22 = g41f3f8;
    eax10 = reinterpret_cast<void**>(esi18(v22, 9, v21, 0xff, v20, v19));
    if (eax10) 
        goto addr_413dcb_6;
    eax10 = reinterpret_cast<void**>(GetLastError(v22, 9, v21, 0xff, v20, v19));
    if (eax10 != 0x7a) 
        goto addr_413d4e_4;
    eax23 = ebx17;
    v24 = edi15 + 0xffffffff;
    do {
        if (!*reinterpret_cast<void***>(eax23)) 
            break;
        edx25 = g41ec70;
        if (*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(edx25 + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax23)) * 2) + 1) & 0x80) {
            ++eax23;
        }
        ecx26 = v24;
        ++eax23;
        --v24;
    } while (ecx26);
    v27 = g41f3f8;
    eax10 = reinterpret_cast<void**>(esi18(v27, 1, ebx17, reinterpret_cast<unsigned char>(eax23) - reinterpret_cast<unsigned char>(ebx17), a2, edi15, v22, 9, v21, 0xff, v20, v19));
    if (eax10) 
        goto addr_413dcc_5;
    goto addr_413d4e_4;
    addr_413cfa_10:
    if (reinterpret_cast<unsigned char>(edi15) <= reinterpret_cast<unsigned char>(0)) {
        addr_413dcc_5:
        goto v5;
    } else {
        do {
            ecx28 = reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(a3) + reinterpret_cast<unsigned char>(eax7));
            *reinterpret_cast<void***>(edx6) = reinterpret_cast<void**>(static_cast<uint16_t>(*ecx28));
            if (!*ecx28) 
                goto addr_413dcc_5;
            ++eax7;
            edx6 = edx6 + 1 + 1;
        } while (reinterpret_cast<unsigned char>(eax7) < reinterpret_cast<unsigned char>(edi15));
    }
    goto addr_413dcc_5;
}

int32_t fun_413dfb(void** ecx, void** a2, void** a3);

void fun_4095c0(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7) {
    void** v8;
    void** v9;
    void** esi10;
    void** esi11;
    void** v12;
    void** edi13;
    void** eax14;
    void** v15;
    int32_t eax16;
    int1_t zf17;
    void** ebx18;
    void** edx19;
    int32_t eax20;
    int1_t zf21;
    int32_t eax22;
    void** edi23;
    void** ecx24;
    void** v25;
    void** edx26;
    int32_t eax27;
    int32_t eax28;
    void** eax29;
    int32_t ecx30;
    int32_t ecx31;
    void** eax32;
    void** ecx33;
    void** v34;

    v8 = reinterpret_cast<void**>(__return_address());
    v9 = esi10;
    esi11 = a3;
    v12 = edi13;
    *reinterpret_cast<void***>(esi11 + 4) = reinterpret_cast<void**>(27);
    eax14 = g41f0d0;
    v15 = eax14;
    eax16 = fun_41317d(ecx, *reinterpret_cast<unsigned char*>(&v15), 2, v12, v9);
    if (!eax16 || (zf17 = reinterpret_cast<int1_t>(g41f388 == 13), !zf17)) {
        ebx18 = a4;
        do {
            edx19 = g41f0d0;
            eax20 = fun_413dd1(ecx, edx19, v12, v9);
            if (!eax20) 
                break;
            zf21 = reinterpret_cast<int1_t>(g41f388 == 13);
            if (!zf21) 
                break;
            eax22 = fun_4096b0(esi11, ebx18, v12, v9, v8, a2, a3, a4, a5, a6, a7);
        } while (eax22 == 4);
        goto addr_409680_6;
    } else {
        edi23 = a4;
        do {
            ecx24 = g41f0d0;
            v25 = ecx24;
            fun_41303c(ecx24, *reinterpret_cast<unsigned char*>(&v25), 0x180, v12, v9);
            edx26 = g41f0d0;
            eax27 = fun_413dd1(ecx24, edx26, v25, 0x180);
            if (!eax27) 
                goto addr_409625_9;
            eax28 = fun_4096b0(esi11, edi23, v12, v9, v8, a2, a3, a4, a5, a6, a7);
        } while (eax28 == 4);
        goto addr_409621_11;
    }
    eax29 = g41f0d0;
    fun_413dfb(ecx, ebx18, eax29);
    ecx30 = 0;
    *reinterpret_cast<unsigned char*>(&ecx30) = reinterpret_cast<uint1_t>(!!eax20);
    ecx31 = ecx30 + ecx30 + 23;
    *reinterpret_cast<void***>(esi11 + 4) = *reinterpret_cast<void***>(&ecx31);
    goto a2;
    addr_409680_6:
    goto a2;
    addr_409625_9:
    eax32 = g41f0d0;
    fun_413dfb(ecx24, edi23, eax32);
    ecx33 = g41f0d0;
    v34 = ecx33;
    fun_41303c(ecx33, *reinterpret_cast<unsigned char*>(&v34), 0x100, edi23, eax32);
    *reinterpret_cast<void***>(esi11 + 4) = reinterpret_cast<void**>(23);
    goto a2;
    addr_409621_11:
    goto a2;
}

void** fun_402950(void** a1, void** a2, int32_t a3, void** a4, void** a5) {
    void** v6;
    void** ebx7;
    void** ebx8;
    void** v9;
    void** esi10;
    void** v11;
    void** v12;
    void** v13;
    void** v14;
    void** v15;
    void** v16;
    void** v17;
    void** v18;
    void** v19;
    void** v20;
    void** v21;
    void** v22;
    void** v23;
    void** v24;
    void** v25;
    void** eax26;
    void** esi27;
    void** v28;
    void** ebp29;
    void*** esp30;
    void** v31;
    void** edi32;
    uint32_t eax33;
    uint32_t v34;
    uint32_t edx35;
    void* esp36;
    uint32_t edi37;
    uint32_t ebp38;
    void** v39;
    void** v40;
    void** v41;
    void** v42;
    void** v43;
    void** v44;
    void** v45;
    void** v46;
    void** v47;
    void** v48;
    void** v49;
    void** v50;
    void** v51;
    void** v52;
    void** eax53;
    int32_t v54;
    void** v55;
    uint32_t v56;
    void** v57;
    void* esp58;
    int32_t eax59;
    int32_t v60;
    uint32_t ecx61;
    uint32_t v62;
    void** v63;
    void** eax64;
    uint32_t ebx65;
    uint32_t eax66;
    uint32_t v67;
    uint32_t eax68;
    uint32_t v69;
    uint32_t ebx70;
    uint32_t v71;
    void** v72;
    uint32_t eax73;
    uint32_t v74;
    uint32_t edx75;
    void** v76;
    uint32_t eax77;
    uint32_t v78;
    uint32_t edx79;
    uint32_t eax80;
    void** v81;
    void** v82;
    void** v83;
    void** v84;
    void** v85;
    void** v86;
    void** v87;
    void** v88;
    void** v89;
    void** v90;
    void** v91;
    void** v92;
    void** v93;
    void** v94;
    void** eax95;

    v6 = ebx7;
    ebx8 = a2;
    v9 = esi10;
    *reinterpret_cast<void***>(ebx8) = reinterpret_cast<void**>(0);
    eax26 = fun_401140(a1, 0, v9, v6, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25);
    esi27 = eax26;
    if (esi27 == 0xffffffff) {
        addr_402b65_2:
        return eax26;
    } else {
        v28 = ebp29;
        esp30 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 68 - 4 - 4 - 4 - 4 - 4 + 4 + 8 - 4 - 4);
        v31 = edi32;
        fun_4011c0(esi27, esp30 + 56, 12, v31, v28);
        eax33 = v34;
        edx35 = 0;
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx35) + 1) = *reinterpret_cast<signed char*>(&eax33);
        esp36 = reinterpret_cast<void*>(esp30 - 4 - 4 - 4 - 4 + 4 + 12);
        edi37 = (eax33 & 0xffff) >> 8 | edx35 & 0xffff;
        ebp38 = 0;
        if (!edi37) {
            addr_402b5a_4:
            eax26 = fun_4013c0(esi27, v31, v28, v9, v6, v39, v40, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51, v52);
            goto addr_402b65_2;
        } else {
            do {
                if (ebp38 >= 40) 
                    goto addr_402b5a_4;
                eax53 = fun_4011c0(esi27, reinterpret_cast<int32_t>(esp36) + 40, 16, v31, v28);
                esp36 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp36) - 4 - 4 - 4 - 4 + 4 + 12);
                if (eax53) 
                    goto addr_402b5a_4;
                if (v54 == 0x656d616e) 
                    break;
                ++ebp38;
            } while (ebp38 < edi37);
            goto addr_4029de_9;
        }
    }
    v55 = reinterpret_cast<void**>((v56 & 0xff0000 | v56 >> 16) >> 8 | (v56 & 0xff00 | v56 << 16) << 8);
    fun_401260(esi27, v55, v31, v28, v9, v6, v57);
    esp58 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp36) - 4 - 4 - 4 + 4);
    fun_4011c0(esi27, reinterpret_cast<int32_t>(esp58) + 24, 6, esi27, v55);
    eax59 = v60;
    ecx61 = 0;
    *reinterpret_cast<signed char*>(&ecx61) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax59) + 1);
    esp36 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp58) - 4 - 4 - 4 - 4 + 4 + 20);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx61) + 1) = *reinterpret_cast<signed char*>(&eax59);
    if (!0) {
        v62 = ecx61 & 0xffff;
        do {
            v63 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp36) + 24);
            fun_4011c0(esi27, v63, 12, v31, v28);
            eax64 = fun_401240(esi27, esi27, v63, 12, v31);
            esp36 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp36) - 4 - 4 - 4 - 4 + 4 - 4 - 4 + 4 + 16);
            if (!1 && !1) {
                ebx65 = 0;
                eax66 = v67;
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx65) + 1) = *reinterpret_cast<signed char*>(&eax66);
                eax68 = v69;
                ebx70 = 0;
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx70) + 1) = *reinterpret_cast<signed char*>(&eax68);
                fun_401260(esi27, ((v71 & 0xff0000 | v71 >> 16) >> 8 | (v71 & 0xff00 | v71 << 16) << 8) + ((eax66 & 0xffff) >> 8 | ebx65 & 0xffff) + ((eax68 & 0xffff) >> 8 | ebx70 & 0xffff), v31, v28, v9, v6, v72);
                eax73 = v74;
                ebx8 = ebx8;
                edx75 = 0;
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx75) + 1) = *reinterpret_cast<signed char*>(&eax73);
                v76 = reinterpret_cast<void**>((eax73 & 0xffff) >> 8 | edx75 & 0xffff);
                fun_4011c0(esi27, ebx8, v76, esi27, ((v71 & 0xff0000 | v71 >> 16) >> 8 | (v71 & 0xff00 | v71 << 16) << 8) + ((eax66 & 0xffff) >> 8 | ebx65 & 0xffff) + ((eax68 & 0xffff) >> 8 | ebx70 & 0xffff));
                eax77 = v78;
                edx79 = 0;
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx79) + 1) = *reinterpret_cast<signed char*>(&eax77);
                *reinterpret_cast<signed char*>(((eax77 & 0xffff) >> 8 | edx79 & 0xffff) + reinterpret_cast<unsigned char>(ebx8)) = 0;
                fun_401260(esi27, eax64, esi27, ebx8, v76, esi27, ((v71 & 0xff0000 | v71 >> 16) >> 8 | (v71 & 0xff00 | v71 << 16) << 8) + ((eax66 & 0xffff) >> 8 | ebx65 & 0xffff) + ((eax68 & 0xffff) >> 8 | ebx70 & 0xffff));
                esp36 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp36) - 4 - 4 - 4 + 4 - 4 - 4 - 4 - 4 + 4 - 4 - 4 - 4 + 4 + 28);
            }
            eax80 = v62 - 1;
            v62 = eax80;
        } while (eax80);
        goto addr_402b5a_4;
    }
    addr_4029de_9:
    eax95 = fun_4013c0(esi27, v31, v28, v9, v6, v81, v82, v83, v84, v85, v86, v87, v88, v89, v90, v91, v92, v93, v94);
    return eax95;
}

void** fun_407490(void** ecx, void** a2, void** a3, void** a4, void** a5) {
    void** v6;
    void** edx7;
    void** v8;
    void** esi9;
    void*** esp10;
    void** v11;
    void** edi12;
    void** edi13;
    uint32_t ecx14;
    void** eax15;
    void** ecx16;
    void** eax17;
    void* esp18;
    void** edx19;
    void** eax20;
    void* esp21;
    void** esi22;
    uint32_t ecx23;
    void** edi24;
    void** ecx25;
    void** edx26;
    void** esi27;
    void** cl28;
    void** ecx29;
    void** eax30;
    void** edx31;
    void** ecx32;
    void** edx33;
    void** ecx34;
    void*** esi35;
    void** cl36;
    void** eax37;
    void** ecx38;

    v6 = reinterpret_cast<void**>(__return_address());
    edx7 = g41f0c4;
    v8 = esi9;
    esp10 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4);
    v11 = edi12;
    edi13 = edx7;
    ecx14 = 0xffffffff;
    do {
        if (!ecx14) 
            break;
        --ecx14;
        ++edi13;
    } while (*reinterpret_cast<void***>(edi13));
    eax15 = g41f0d0;
    ecx16 = reinterpret_cast<void**>(~ecx14 - 1);
    eax17 = fun_413850(eax15, edx7, ecx16);
    esp18 = reinterpret_cast<void*>(esp10 - 4 - 4 - 4 - 4 + 4 + 12 - 4);
    if (eax17) {
        edx19 = g41f0d0;
        eax20 = fun_4131d0(ecx16, edx19, 92, v11, v8, v6, a2, a3, a4, a5);
        esp21 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp18) - 4 - 4 + 4 + 8);
        if (!eax20) {
            esi22 = g41f0d0;
            ecx23 = 0xffffffff;
            edi24 = esi22;
            do {
                if (!ecx23) 
                    break;
                --ecx23;
                ++edi24;
                ++esi22;
            } while (*reinterpret_cast<void***>(edi24));
            ecx25 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(~ecx23) - 1 + reinterpret_cast<unsigned char>(esi22) + 0xffffffff);
        } else {
            *reinterpret_cast<void***>(eax20) = reinterpret_cast<void**>(0);
            edx26 = g41f0d0;
            esi27 = g41f0cc;
            do {
                cl28 = *reinterpret_cast<void***>(edx26);
                ++edx26;
                *reinterpret_cast<void***>(esi27) = cl28;
                ++esi27;
            } while (cl28);
            ecx25 = g41f0cc;
            esi22 = eax20 + 1;
            *reinterpret_cast<void***>(eax20) = reinterpret_cast<void**>(92);
        }
    } else {
        ecx29 = g41f0d0;
        esi22 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx16) + reinterpret_cast<unsigned char>(ecx29));
        eax30 = fun_4131d0(ecx29, esi22, 92, v11, v8, v6, a2, a3, a4, a5);
        esp21 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp18) - 4 - 4 + 4 + 8);
        if (eax30) {
            *reinterpret_cast<void***>(eax30) = reinterpret_cast<void**>(0);
            edx31 = g41f0cc;
            *reinterpret_cast<void***>(edx31) = reinterpret_cast<void**>(46);
            ecx32 = g41f0cc;
            edx33 = esi22;
            *reinterpret_cast<void***>(ecx32 + 1) = reinterpret_cast<void**>(92);
            ecx34 = g41f0cc;
            esi35 = reinterpret_cast<void***>(ecx34 + 2);
            do {
                cl36 = *reinterpret_cast<void***>(edx33);
                ++edx33;
                *esi35 = cl36;
                ++esi35;
            } while (cl36);
            ecx25 = g41f0cc;
            esi22 = eax30 + 1;
            *reinterpret_cast<void***>(eax30) = reinterpret_cast<void**>(92);
        } else {
            ecx25 = reinterpret_cast<void**>(".");
        }
    }
    fun_4075a0(ecx25, a2, ecx25, v11, v8, v6, a2, a3, a4, a5);
    fun_4075a0(ecx25, a2, esi22, a2, ecx25, v11, v8, v6, a2, a3);
    eax37 = fun_401200(a2, reinterpret_cast<int32_t>(esp21) - 4 - 4 - 4 + 4 - 4 - 4 - 4 + 4 + 32, 1, a2, esi22, a2, ecx25);
    ecx38 = g41f0cc;
    *reinterpret_cast<void***>(ecx38) = reinterpret_cast<void**>(0);
    return eax37;
}

uint32_t fun_40d0e8(void** a1, void** a2, void** a3, void** a4, void** a5, void* a6, void** a7, void* a8, void** a9, int32_t a10) {
    goto VerFindFileA;
}

int32_t MoveFileA = 0x19b00;

int32_t fun_413dfb(void** ecx, void** a2, void** a3) {
    int32_t eax4;
    uint32_t eax5;

    eax4 = reinterpret_cast<int32_t>(MoveFileA());
    if (eax4) {
        eax5 = 0;
    } else {
        eax5 = reinterpret_cast<uint32_t>(GetLastError());
    }
    if (!eax5) {
        return 0;
    } else {
        fun_41427a(ecx, eax5, __return_address(), a2);
        return -1;
    }
}

int32_t GetFileVersionInfoSizeA = 0x19a3c;

void** fun_40d0fa() {
    goto GetFileVersionInfoSizeA;
}

void** g41f0b4 = reinterpret_cast<void**>(0);

int32_t g41f0ac = 0;

void fun_401f00(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29) {
    void** esi30;
    void** eax31;
    void*** esp32;
    void** edx33;
    void** v34;
    void** eax35;
    void** esi36;
    void** v37;
    void** v38;
    int32_t eax39;

    esi30 = a1;
    if (reinterpret_cast<unsigned char>(esi30) > reinterpret_cast<unsigned char>(100)) {
        esi30 = reinterpret_cast<void**>(100);
    }
    eax31 = g41f0b0;
    g41f0b4 = esi30;
    if (eax31) {
        esp32 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 8 - 4 - 4);
        wsprintfA(esp32 + 8, "%d%%", esi30);
        edx33 = g41f0b0;
        v34 = reinterpret_cast<void**>(esp32 - 4 - 4 - 4 + 4 + 12 + 4);
        eax35 = reinterpret_cast<void**>(GetDlgItem(edx33, 0x3f2, v34));
        fun_405a50(eax35, edx33, 0x3f2, v34, esi36, v37, v38, __return_address(), a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29);
    }
    eax39 = g41f0ac;
    if (eax39) {
        SendMessageA(eax39, 0x402, esi30, 0);
    }
    return;
}

void fun_401ed0(void** a1, void** a2, void** a3) {
    int32_t eax4;

    g41f0b0 = a1;
    eax4 = reinterpret_cast<int32_t>(GetDlgItem(a1, 0x3f1, __return_address()));
    g41f0ac = eax4;
    SendMessageA();
    goto eax4;
}

void** fun_40b510(void** a1, void** a2, int32_t a3) {
    void** edx4;
    void** eax5;
    int32_t esi6;
    int1_t zf7;
    int32_t edi8;

    edx4 = a2;
    eax5 = a1;
    esi6 = 0;
    *reinterpret_cast<void***>(edx4) = reinterpret_cast<void**>(0);
    zf7 = reinterpret_cast<int1_t>(*reinterpret_cast<void***>(eax5) == 32);
    if (zf7) {
        do {
            ++eax5;
        } while (*reinterpret_cast<void***>(eax5 + 1) == 32);
    }
    edi8 = a3;
    if (!reinterpret_cast<int1_t>(*reinterpret_cast<void***>(eax5) == 34)) {
        while (*reinterpret_cast<void***>(eax5) != 32 && *reinterpret_cast<void***>(eax5)) {
            if (esi6 >= edi8) {
                ++eax5;
            } else {
                *reinterpret_cast<void***>(edx4) = *reinterpret_cast<void***>(eax5);
                ++edx4;
                ++eax5;
                ++esi6;
            }
        }
        if (esi6 < edi8) 
            goto addr_40b57e_9;
    } else {
        while (1) {
            addr_40b53a_10:
            ++eax5;
            while (*reinterpret_cast<void***>(eax5) != 34 && *reinterpret_cast<void***>(eax5)) {
                if (esi6 >= edi8) 
                    goto addr_40b53a_10;
                *reinterpret_cast<void***>(edx4) = *reinterpret_cast<void***>(eax5);
                ++edx4;
                ++eax5;
                ++esi6;
            }
            break;
        }
        if (esi6 >= edi8) 
            goto addr_40b558_15; else 
            goto addr_40b555_16;
    }
    addr_40b581_17:
    return eax5;
    addr_40b57e_9:
    *reinterpret_cast<void***>(edx4) = reinterpret_cast<void**>(0);
    goto addr_40b581_17;
    addr_40b558_15:
    if (reinterpret_cast<int1_t>(*reinterpret_cast<void***>(eax5) == 34)) {
        return eax5 + 1;
    }
    addr_40b555_16:
    *reinterpret_cast<void***>(edx4) = reinterpret_cast<void**>(0);
    goto addr_40b558_15;
}

void** g41f268 = reinterpret_cast<void**>(0);

uint32_t g41f114 = 0;

void** fun_40b150(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14) {
    void** v15;
    void** edi16;
    void** esi17;
    void** ebp18;
    void** ebx19;
    void** eax20;
    void** edi21;
    void** eax22;
    void** eax23;
    int32_t eax24;
    void** ecx25;
    void** ebx26;
    void** ecx27;
    void** esi28;
    void** eax29;
    uint32_t ebp30;
    uint32_t ebp31;
    int32_t edx32;
    uint32_t esi33;
    void** ebp34;
    uint32_t esi35;
    int32_t edx36;

    v15 = reinterpret_cast<void**>(0);
    fun_401260(a2, 0x3f4, edi16, esi17, ebp18, ebx19, 0);
    eax20 = fun_4012c0(a2, a2, 0x3f4);
    if (reinterpret_cast<signed char>(eax20) >= reinterpret_cast<signed char>(0x1e808c)) {
        edi21 = reinterpret_cast<void**>(0x1e808c);
    } else {
        eax22 = fun_4012c0(a2, edi16, esi17);
        edi21 = eax22;
    }
    eax23 = g41f268;
    if (eax23) 
        goto addr_40b1b0_5;
    eax24 = fun_4021c0(ecx, edi21 + 8, 0x41f268, edi16, esi17, ebp18, ebx19, 0, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
    if (!eax24) 
        goto addr_40b2c4_7;
    addr_40b1b0_5:
    ecx25 = g41f268;
    fun_4011c0(a2, ecx25, edi21, edi16, esi17);
    ebx26 = g41f268;
    ecx27 = reinterpret_cast<void**>(0);
    esi28 = *reinterpret_cast<void***>(ebx26);
    eax29 = ebx26 + 8;
    g41f0f4 = eax29;
    g41f0f0 = esi28;
    if (!edi21) 
        goto addr_40b2c4_7;
    ebp30 = g41f114;
    do {
        if (reinterpret_cast<int1_t>(*reinterpret_cast<void***>(eax29) == 0x7777)) {
            if (*reinterpret_cast<void***>(eax29 + 2) == 0x48295467) 
                goto addr_40b2b0_11;
            if (*reinterpret_cast<void***>(eax29 + 2) == 0x696c632e) 
                goto addr_40b234_13;
        }
        if (esi28) {
            ebp31 = (ebp30 >> 31) + ebp30 * 2;
            edx32 = 0;
            g41f114 = ebp31;
            *reinterpret_cast<void***>(&edx32) = *reinterpret_cast<void***>(eax29);
            ebp30 = ebp31 + edx32;
            --esi28;
            g41f114 = ebp30;
        }
        ++eax29;
        ++ecx27;
    } while (reinterpret_cast<unsigned char>(ecx27) < reinterpret_cast<unsigned char>(edi21));
    return 0;
    addr_40b2b0_11:
    v15 = reinterpret_cast<void**>(1);
    g41f288 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax29) - reinterpret_cast<unsigned char>(ebx26) + 0x3fa);
    goto addr_40b2c4_7;
    addr_40b234_13:
    esi33 = 0;
    ebp34 = eax29;
    g41f114 = 0;
    g41f0f4 = ebp34;
    if (reinterpret_cast<unsigned char>(ecx27) >= reinterpret_cast<unsigned char>(edi21)) 
        goto addr_40b2c4_7;
    do {
        esi35 = (esi33 >> 31) + esi33 * 2;
        edx36 = 0;
        g41f114 = esi35;
        *reinterpret_cast<void***>(&edx36) = *reinterpret_cast<void***>(eax29);
        esi33 = esi35 + edx36;
        ++eax29;
        g41f114 = esi33;
        if (!reinterpret_cast<int1_t>(*reinterpret_cast<void***>(eax29) == 0x7777)) 
            continue;
        if (*reinterpret_cast<void***>(eax29 + 2) == 0x696c632e) 
            break;
        ++ecx27;
    } while (reinterpret_cast<unsigned char>(ecx27) < reinterpret_cast<unsigned char>(edi21));
    goto addr_40b278_21;
    g41f0f0 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax29) - reinterpret_cast<unsigned char>(ebp34));
    if (reinterpret_cast<unsigned char>(ecx27) >= reinterpret_cast<unsigned char>(edi21)) {
        addr_40b2c4_7:
        return v15;
    } else {
        do {
            if (!reinterpret_cast<int1_t>(*reinterpret_cast<void***>(eax29) == 0x7777)) 
                continue;
            if (*reinterpret_cast<void***>(eax29 + 2) == 0x48295467) 
                goto addr_40b2b0_11;
            ++eax29;
            ++ecx27;
        } while (reinterpret_cast<unsigned char>(ecx27) < reinterpret_cast<unsigned char>(edi21));
    }
    return 0;
    addr_40b278_21:
    return 0;
}

struct s81 {
    signed char[4240624] pad4240624;
    void** f4240624;
};

void** g41f0d8 = reinterpret_cast<void**>(0);

void** g41f298 = reinterpret_cast<void**>(0);

void fun_40b370(void** a1) {
    void** esi2;
    void** v3;
    void** ecx4;
    void** eax5;
    struct s81* eax6;
    void** eax7;
    void** v8;
    void** eax9;
    void** v10;
    void** eax11;
    void** al12;
    void** eax13;

    esi2 = a1;
    if (esi2 && *reinterpret_cast<void***>(esi2)) {
        if (reinterpret_cast<int1_t>(*reinterpret_cast<void***>(esi2) == 32)) {
            do {
                ++esi2;
            } while (*reinterpret_cast<void***>(esi2 + 1) == 32);
        }
        while (*reinterpret_cast<void***>(esi2) == 45 || reinterpret_cast<int1_t>(*reinterpret_cast<void***>(esi2) == 47)) {
            v3 = reinterpret_cast<void**>(static_cast<int32_t>(reinterpret_cast<signed char>(*reinterpret_cast<void***>(esi2 + 1))));
            esi2 = esi2 + 1 + 1;
            eax5 = fun_413e29(ecx4, v3);
            eax6 = reinterpret_cast<struct s81*>(eax5 + 0xffffffbe);
            if (reinterpret_cast<uint32_t>(eax6) <= 20) {
                ecx4 = reinterpret_cast<void**>(0);
                ecx4 = eax6->f4240624;
                switch (ecx4) {
                case 0:
                    g41f2b8 = reinterpret_cast<void**>(0);
                    if (reinterpret_cast<signed char>(*reinterpret_cast<void***>(esi2)) >= reinterpret_cast<signed char>(48) && (reinterpret_cast<signed char>(*reinterpret_cast<void***>(esi2)) <= reinterpret_cast<signed char>(57) && ((eax7 = *reinterpret_cast<void***>(esi2) - 48, ++esi2, g41f2b8 = eax7, ecx4 = *reinterpret_cast<void***>(esi2), reinterpret_cast<signed char>(ecx4) >= reinterpret_cast<signed char>(48)) && reinterpret_cast<signed char>(ecx4) <= reinterpret_cast<signed char>(57)))) {
                        ecx4 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ecx4 + reinterpret_cast<uint32_t>(eax7 + reinterpret_cast<unsigned char>(eax7) * 4) * 2) + 0xffffffd0);
                        g41f2b8 = ecx4;
                        break;
                    }
                case 1:
                    v8 = reinterpret_cast<void**>(static_cast<int32_t>(reinterpret_cast<signed char>(*reinterpret_cast<void***>(esi2))));
                    eax9 = fun_413e29(ecx4, v8);
                    if (reinterpret_cast<int1_t>(eax9 == 69) && (v10 = reinterpret_cast<void**>(static_cast<int32_t>(reinterpret_cast<signed char>(*reinterpret_cast<void***>(esi2 + 1)))), eax11 = fun_413e29(ecx4, v10), reinterpret_cast<int1_t>(eax11 == 76))) {
                        g41f0dc = reinterpret_cast<void**>(1);
                        break;
                    }
                case 2:
                    g41f294 = reinterpret_cast<void**>(1);
                    break;
                case 3:
                    g41f0d8 = reinterpret_cast<void**>(1);
                    break;
                case 4:
                    g41a2b8 = reinterpret_cast<void**>(0);
                    break;
                case 5:
                    al12 = *reinterpret_cast<void***>(esi2);
                    if (!al12) 
                        goto addr_40b465_16;
                    if (!reinterpret_cast<int1_t>(al12 == 32)) 
                        goto addr_40b49a_18;
                    addr_40b465_16:
                    g41f0d4 = reinterpret_cast<void**>(1);
                    break;
                case 6:
                    ecx4 = g41f36c;
                    eax13 = fun_40b510(esi2, ecx4, 0x104);
                    esi2 = eax13;
                    break;
                case 7:
                    g41f298 = reinterpret_cast<void**>(1);
                case 8:
                    goto 0x40b494;
                }
            }
            al12 = *reinterpret_cast<void***>(esi2);
            if (al12 == 32) {
                do {
                    addr_40b4b9_22:
                    ++esi2;
                } while (*reinterpret_cast<void***>(esi2 + 1) == 32);
            } else {
                do {
                    addr_40b49a_18:
                    if (!al12) 
                        goto addr_40b4b0_23;
                    if (al12 == 45) 
                        goto addr_40b4b0_23;
                    if (al12 == 47) 
                        goto addr_40b4b0_23;
                    al12 = *reinterpret_cast<void***>(esi2 + 1);
                    ++esi2;
                } while (!reinterpret_cast<int1_t>(al12 == 32));
                goto addr_40b4ae_27;
            }
            continue;
            addr_40b4b0_23:
            if (!reinterpret_cast<int1_t>(*reinterpret_cast<void***>(esi2) == 32)) 
                continue; else 
                goto addr_40b4b9_22;
            addr_40b4ae_27:
            goto addr_40b4b9_22;
        }
    }
    return;
}

struct s82 {
    void** f0;
    signed char[3] pad4;
    void** f4;
};

void fun_40b0d0(void** a1) {
    void** eax2;
    void** ecx3;
    void*** edx4;
    void** al5;
    void** ecx6;
    void** edx7;
    void*** ecx8;
    void** al9;

    eax2 = g41f34c;
    if (eax2 != 0xffffffff) {
        ecx3 = g41f350;
        edx4 = *reinterpret_cast<void****>(reinterpret_cast<unsigned char>(eax2) * 4 + 0x41f198);
        do {
            al5 = *reinterpret_cast<void***>(ecx3);
            ++ecx3;
            *edx4 = al5;
            ++edx4;
        } while (al5);
    }
    g41f110 = reinterpret_cast<void**>(0);
    g41f34c = a1;
    g41f10c = reinterpret_cast<void**>(0);
    if (*reinterpret_cast<struct s82**>(reinterpret_cast<unsigned char>(a1) * 4 + 0x41f218)) {
        ecx6 = reinterpret_cast<void**>(&(*reinterpret_cast<struct s82**>(reinterpret_cast<unsigned char>(a1) * 4 + 0x41f218))->f4);
        g41f110 = (*reinterpret_cast<struct s82**>(reinterpret_cast<unsigned char>(a1) * 4 + 0x41f218))->f0;
        g41f10c = ecx6;
    }
    edx7 = g41f350;
    g41f258 = *reinterpret_cast<void***>(reinterpret_cast<unsigned char>(a1) * 4 + 0x41f1d8);
    ecx8 = *reinterpret_cast<void****>(reinterpret_cast<unsigned char>(a1) * 4 + 0x41f198);
    do {
        al9 = *ecx8;
        ++ecx8;
        *reinterpret_cast<void***>(edx7) = al9;
        ++edx7;
    } while (al9);
    return;
}

int32_t GetTempPathA = 0x19126;

void** fun_405480(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11) {
    void** v12;
    void** v13;
    void** ebx14;
    void** v15;
    void** ebp16;
    void** ebp17;
    void** v18;
    void** esi19;
    void** esi20;
    void** v21;
    void** edi22;
    void** ebx23;
    void** v24;
    void** v25;
    void** ecx26;
    void** edi27;
    uint32_t ecx28;
    void** v29;
    void** eax30;
    void** eax31;

    v12 = reinterpret_cast<void**>(__return_address());
    v13 = ebx14;
    v15 = ebp16;
    ebp17 = a2;
    v18 = esi19;
    esi20 = a1;
    v21 = edi22;
    ebx23 = reinterpret_cast<void**>(1);
    do {
        v24 = esi20;
        GetTempPathA();
        v25 = esi20;
        fun_402110(ecx26, v25, 0x104, v24, v21, v18);
        edi27 = esi20;
        ecx28 = 0xffffffff;
        v29 = ebx23;
        do {
            if (!ecx28) 
                break;
            --ecx28;
            ++edi27;
            ++esi20;
        } while (*reinterpret_cast<void***>(edi27));
        ecx26 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(~ecx28) - 1 + reinterpret_cast<unsigned char>(esi20));
        wsprintfA(ecx26, ebp17, v29, v25);
        eax30 = fun_401140(esi20, 0, ecx26, ebp17, v29, v25, 0x104, v24, v21, v18, v15, v13, v12, a1, a2, a3, a4, a5, a6);
        if (eax30 == 0xffffffff) {
            eax31 = fun_401190(esi20);
            if (!reinterpret_cast<int1_t>(eax31 == 0xffffffff)) 
                break;
        } else {
            fun_4013c0(eax30, 0x104, v24, v21, v18, v15, v13, v12, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
        }
        ++ebx23;
    } while (reinterpret_cast<signed char>(ebx23) < reinterpret_cast<signed char>(0x3e7));
    goto v15;
}

uint32_t g41f2f8 = 0;

int32_t FindWindowA = 0x19642;

int32_t GetLastActivePopup = 0x1962c;

int32_t BringWindowToTop = 0x19618;

int32_t IsIconic = 0x195ea;

int32_t GetVersion = 0x19264;

int16_t g41f2f4 = 0;

int32_t OleInitialize = 0x199d8;

void fun_402e70();

int32_t fun_40bf80(void** ecx, void** a2) {
    void** v3;
    void** ebx4;
    void** v5;
    void** esi6;
    void** v7;
    void** edi8;
    void** v9;
    void** v10;
    void** v11;
    void** v12;
    void** v13;
    void** v14;
    void** v15;
    void** v16;
    void** v17;
    void** v18;
    void** v19;
    void** v20;
    void** v21;
    void** v22;
    void** v23;
    void** v24;
    void** eax25;
    void** ecx26;
    void** v27;
    void** v28;
    void* esp29;
    void** edx30;
    uint32_t ecx31;
    void** edi32;
    void** eax33;
    uint32_t edi34;
    uint32_t edx35;
    uint32_t esi36;
    int32_t ecx37;
    uint32_t edx38;
    void** eax39;
    int32_t ecx40;
    uint32_t edx41;
    void** eax42;
    int32_t ecx43;
    uint32_t edx44;
    void** eax45;
    int32_t ecx46;
    void** edi47;
    void** ecx48;
    int32_t ebx49;
    void** eax50;
    void* esp51;
    uint32_t eax52;
    int1_t zf53;
    void** v54;
    void** v55;
    void** v56;
    void** v57;
    void** v58;
    void** v59;
    void** eax60;
    int32_t ebx61;
    int32_t eax62;
    int32_t v63;
    void** v64;
    int16_t ax65;
    int16_t cx66;
    void** ecx67;
    uint32_t esi68;
    void** v69;
    int32_t eax70;
    void** eax71;
    int32_t esi72;
    int32_t eax73;
    int32_t eax74;
    void** v75;
    void** v76;
    void** v77;
    void** v78;
    void** v79;
    void** v80;
    void** v81;
    void** v82;
    void** v83;
    void** v84;
    void** v85;
    void** v86;
    void** v87;
    void** v88;
    void** v89;
    void** v90;
    void** v91;
    void** v92;
    void** v93;
    void** v94;
    int32_t v95;

    v3 = ebx4;
    v5 = esi6;
    v7 = edi8;
    fun_4021c0(ecx, 0x104, 0x41f36c, v7, v5, v3, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24);
    eax25 = g41f36c;
    ecx26 = g41f330;
    v27 = eax25;
    v28 = ecx26;
    GetModuleFileNameA(v28, v27);
    esp29 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 0x94 - 4 - 4 - 4 - 4 - 4 - 4 + 4 + 8 - 4 - 4 - 4 - 4 + 4);
    edx30 = g41f36c;
    ecx31 = 0xffffffff;
    edi32 = edx30;
    do {
        if (!ecx31) 
            break;
        --ecx31;
        ++edi32;
    } while (*reinterpret_cast<void***>(edi32));
    eax33 = edx30;
    edi34 = reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(~ecx31) - 1);
    edx35 = 0;
    esi36 = edi34 >> 2;
    if (esi36) {
        do {
            ecx37 = 0;
            *reinterpret_cast<void***>(&ecx37) = *reinterpret_cast<void***>(eax33);
            edx38 = (edx35 >> 31) + edx35 * 2 + ecx37;
            eax39 = eax33 + 1;
            ecx40 = 0;
            *reinterpret_cast<void***>(&ecx40) = *reinterpret_cast<void***>(eax39);
            edx41 = (edx38 >> 31) + edx38 * 2 + ecx40;
            eax42 = eax39 + 1;
            ecx43 = 0;
            *reinterpret_cast<void***>(&ecx43) = *reinterpret_cast<void***>(eax42);
            edx44 = (edx41 >> 31) + edx41 * 2 + ecx43;
            eax45 = eax42 + 1;
            ecx46 = 0;
            *reinterpret_cast<void***>(&ecx46) = *reinterpret_cast<void***>(eax45);
            edx35 = (edx44 >> 31) + edx44 * 2 + ecx46;
            eax33 = eax45 + 1;
            --esi36;
        } while (esi36);
    }
    edi47 = reinterpret_cast<void**>(edi34 & 3);
    ecx48 = edi47;
    if (edi47) {
        do {
            ebx49 = 0;
            *reinterpret_cast<void***>(&ebx49) = *reinterpret_cast<void***>(eax33);
            edx35 = (edx35 >> 31) + edx35 * 2 + ebx49;
            ++eax33;
            --ecx48;
        } while (ecx48);
    }
    g41f2f8 = edx35;
    eax50 = reinterpret_cast<void**>(FindWindowA("InstItClass", 0, v28, v27));
    esp51 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp29) - 4 - 4 - 4 + 4);
    if (eax50 && (eax52 = reinterpret_cast<uint32_t>(SendMessageA(eax50, 0x8001, 1, 2, "InstItClass", 0, v28, v27)), esp51 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp51) - 4 - 4 - 4 - 4 - 4 + 4), zf53 = eax52 == g41f2f8, zf53)) {
        fun_402200(ecx48, 0x41f36c, eax50, 0x8001, 1, 2, "InstItClass", 0, v28, v27, 0x104, v7, v5, v3, v54, v55, v56, v57, v58, v59);
        eax60 = reinterpret_cast<void**>(GetLastActivePopup());
        ebx61 = BringWindowToTop;
        ebx61();
        eax62 = reinterpret_cast<int32_t>(IsIconic());
        if (eax62) {
            ShowWindow(eax50, 9);
        }
        if (eax50 != eax60) {
            ebx61(eax60);
        }
        goto v63;
    }
    g41f34c = reinterpret_cast<void**>(0xffffffff);
    g41f330 = v64;
    ax65 = reinterpret_cast<int16_t>(GetVersion("InstItClass", 0, v28, v27));
    *reinterpret_cast<signed char*>(&cx66) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ax65) + 1);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&cx66) + 1) = *reinterpret_cast<signed char*>(&ax65);
    g41f2f4 = cx66;
    ecx67 = reinterpret_cast<void**>(37);
    esi68 = 0x2000;
    v69 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp51) - 4 + 4 + 12);
    while (ecx67) {
        --ecx67;
        esi68 = esi68 + 4;
    }
    g41f2f0 = esi68;
    eax70 = reinterpret_cast<int32_t>(GetVersionExA());
    if (!eax70) 
        goto addr_40c1a2_18;
    eax71 = v5 - 1;
    if (!eax71) {
        g41f2f0 = esi68;
        if (1) {
            if (0) {
                addr_40c1a2_18:
                OleInitialize();
                fun_402e70();
                esi72 = LoadLibraryA;
                eax73 = reinterpret_cast<int32_t>(esi72());
                g41f2c8 = eax73;
                if (eax73) {
                    g41f2c4 = reinterpret_cast<void**>(1);
                } else {
                    eax74 = reinterpret_cast<int32_t>(esi72("RICHED32.DLL"));
                    g41f2c8 = eax74;
                }
            } else {
                addr_40c198_24:
                g41f2f0 = 0x8000;
                goto addr_40c1a2_18;
            }
            fun_4021c0(ecx67, 0x104, 0x41f280, "RICHED20.DLL", 0, v69, "InstItClass", 0, v28, 0x94, 0x104, v7, v5, v3, v75, v76, v77, v78, v79, v80, v81, v82);
            fun_4021c0(ecx67, 0x104, 0x41f350, 0x104, 0x41f280, "RICHED20.DLL", 0, v69, "InstItClass", 0, v28, 0x94, 0x104, v7, v5, v3, v83, v84, v85, v86, v87, v88);
            fun_4021c0(ecx67, 0x208, 0x41f0d0, 0x104, 0x41f350, 0x104, 0x41f280, "RICHED20.DLL", 0, v69, "InstItClass", 0, v28, 0x94, 0x104, v7, v5, v3, v89, v90, v91, v92);
            fun_4021c0(ecx67, 0x104, 0x41f0cc, 0x208, 0x41f0d0, 0x104, 0x41f350, 0x104, 0x41f280, "RICHED20.DLL", 0, v69, "InstItClass", 0, v28, 0x94, 0x104, v7, v5, v3, v93, v94);
            fun_4021c0(ecx67, 0x104, 0x41f354, 0x104, 0x41f0cc, 0x208, 0x41f0d0, 0x104, 0x41f350, 0x104, 0x41f280, "RICHED20.DLL", 0, v69, "InstItClass", 0, v28, 0x94, 0x104, v7, v5, v3);
            fun_4021c0(ecx67, 0x104, 0x41f0c8, 0x104, 0x41f354, 0x104, 0x41f0cc, 0x208, 0x41f0d0, 0x104, 0x41f350, 0x104, 0x41f280, "RICHED20.DLL", 0, v69, "InstItClass", 0, v28, 0x94, 0x104, v7);
            fun_4021c0(ecx67, 0x104, 0x41f0c4, 0x104, 0x41f0c8, 0x104, 0x41f354, 0x104, 0x41f0cc, 0x208, 0x41f0d0, 0x104, 0x41f350, 0x104, 0x41f280, "RICHED20.DLL", 0, v69, "InstItClass", 0, v28, 0x94);
            goto v95;
        } else {
            if (1) 
                goto addr_40c198_24;
            if (!0) {
                g41f2f0 = 0x4000;
                goto addr_40c1a2_18;
            }
        }
    } else {
        if (!(eax71 - 1) && (ecx67 = reinterpret_cast<void**>(0), g41f2ec = reinterpret_cast<void**>(1), *reinterpret_cast<unsigned char*>(&ecx67) = 0, g41f2f0 = 0x10000, g41f2e8 = reinterpret_cast<void**>(0), !0)) {
            g41f2f0 = 0x40000;
            if (1) {
                if (!0) {
                    g41f2e4 = reinterpret_cast<void**>(1);
                    g41f2f0 = 0x80000;
                    goto addr_40c1a2_18;
                }
            } else {
                if (!1) {
                    g41f2f0 = 0x20000;
                    goto addr_40c1a2_18;
                }
            }
        }
    }
}

void fun_402e80(int32_t a1);

/* COMCTL32.dll:17 */
int32_t COMCTL32_dll_17 = 0x80000011;

void fun_402e70() {
    fun_402e80(__return_address());
    goto COMCTL32_dll_17;
}

void** fun_413ef5(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6) {
    void** v7;
    void** ebx8;
    void** edi9;
    void** esi10;
    void** ebx11;
    struct s59* eax12;
    void** ecx13;
    void** v14;
    int1_t zf15;
    void** eax16;
    void** esi17;
    void** v18;
    void** eax19;
    void** edi20;
    void** eax21;
    void** edi22;

    v7 = reinterpret_cast<void**>(0);
    ebx8 = a2;
    eax12 = fun_415df0(ecx, ebx8, edi9, esi10, ebx11, 0);
    ecx13 = ebx8;
    if (reinterpret_cast<uint32_t>(eax12) < 1 || !reinterpret_cast<int1_t>(*reinterpret_cast<void***>(ebx8 + 1) == 58)) {
        if (a3) {
            *reinterpret_cast<void***>(a3) = reinterpret_cast<void**>(0);
        }
    } else {
        if (a3) {
            fun_41650f(ecx13, a3, ebx8, 2);
            *reinterpret_cast<void***>(a3 + 2) = reinterpret_cast<void**>(0);
        }
        ebx8 = ebx8 + 1 + 1;
    }
    v14 = reinterpret_cast<void**>(0);
    zf15 = *reinterpret_cast<void***>(ebx8) == 0;
    eax16 = ebx8;
    esi17 = reinterpret_cast<void**>(0xff);
    v18 = eax16;
    if (zf15) {
        addr_413fb2_8:
        ecx13 = a4;
        if (ecx13) {
            *reinterpret_cast<void***>(ecx13) = reinterpret_cast<void**>(0);
        }
    } else {
        do {
            ecx13 = *reinterpret_cast<void***>(eax16);
            if (!(*reinterpret_cast<unsigned char*>(ecx13 + 0x41f781) & 4)) {
                if (ecx13 == 47 || ecx13 == 92) {
                    ecx13 = eax16 + 1;
                    v14 = ecx13;
                } else {
                    if (reinterpret_cast<int1_t>(ecx13 == 46)) {
                        v7 = eax16;
                    }
                }
            } else {
                ++eax16;
            }
            ++eax16;
        } while (*reinterpret_cast<void***>(eax16));
        v18 = eax16;
        if (!v14) 
            goto addr_413fb2_8; else 
            goto addr_413f88_18;
    }
    addr_413fbc_19:
    if (!v7 || reinterpret_cast<unsigned char>(v7) < reinterpret_cast<unsigned char>(ebx8)) {
        if (a5) {
            eax19 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax16) - reinterpret_cast<unsigned char>(ebx8));
            if (reinterpret_cast<unsigned char>(eax19) < reinterpret_cast<unsigned char>(0xff)) {
                esi17 = eax19;
            }
            fun_41650f(ecx13, a5, ebx8, esi17);
            *reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(esi17) + reinterpret_cast<unsigned char>(a5)) = 0;
        }
        eax16 = a6;
        if (eax16) {
            *reinterpret_cast<void***>(eax16) = reinterpret_cast<void**>(0);
        }
    } else {
        if (a5) {
            edi20 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v7) - reinterpret_cast<unsigned char>(ebx8));
            if (reinterpret_cast<unsigned char>(edi20) >= reinterpret_cast<unsigned char>(0xff)) {
                edi20 = reinterpret_cast<void**>(0xff);
            }
            fun_41650f(ecx13, a5, ebx8, edi20);
            *reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(edi20) + reinterpret_cast<unsigned char>(a5)) = 0;
            eax16 = v18;
        }
        if (a6) {
            eax21 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax16) - reinterpret_cast<unsigned char>(v7));
            if (reinterpret_cast<unsigned char>(eax21) < reinterpret_cast<unsigned char>(0xff)) {
                esi17 = eax21;
            }
            eax16 = fun_41650f(ecx13, a6, v7, esi17);
            *reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(esi17) + reinterpret_cast<unsigned char>(a6)) = 0;
        }
    }
    return eax16;
    addr_413f88_18:
    if (a4) {
        edi22 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v14) - reinterpret_cast<unsigned char>(ebx8));
        if (reinterpret_cast<unsigned char>(edi22) >= reinterpret_cast<unsigned char>(0xff)) {
            edi22 = reinterpret_cast<void**>(0xff);
        }
        fun_41650f(ecx13, a4, ebx8, edi22);
        *reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(edi22) + reinterpret_cast<unsigned char>(a4)) = 0;
        eax16 = v18;
    }
    ebx8 = v14;
    goto addr_413fbc_19;
}

void fun_40d350(struct s17* a1) {
    struct s17* eax2;
    signed char cl3;
    unsigned char cl4;
    void** edx5;
    uint32_t edi6;
    unsigned char* ebp7;
    int32_t ebx8;
    void** esi9;
    int32_t v10;
    int32_t v11;
    void** ebx12;
    uint32_t v13;
    void*** ecx14;
    void** v15;
    unsigned char edx16;
    void*** v17;
    void** ecx18;
    unsigned char* v19;
    void** ebp20;
    void** v21;
    uint32_t ebx22;
    struct s16* ecx23;
    void** ebp24;
    void** esi25;
    void** ebx26;
    unsigned char cl27;
    void*** ebp28;
    void** edx29;
    void** ecx30;
    void** ecx31;
    void** edi32;
    void** esi33;
    unsigned char ecx34;
    void** edx35;
    void** ecx36;
    void** ecx37;
    void** edi38;
    void** esi39;
    unsigned char ecx40;
    void** edx41;
    void** ecx42;
    void** ecx43;
    void** edi44;
    void** esi45;
    unsigned char ecx46;
    void** ecx47;
    void** ecx48;
    void** ecx49;
    void** esi50;
    void** edi51;
    void** edi52;
    unsigned char ebx53;
    void** ecx54;
    uint32_t edx55;
    void** ebx56;
    uint32_t ebx57;
    struct s16* ecx58;
    void** ecx59;
    unsigned char esi60;
    void** ecx61;
    unsigned char ebx62;
    void** ecx63;
    unsigned char ebx64;

    eax2 = a1;
    cl3 = eax2->f16;
    if (!cl3) {
        cl4 = eax2->f8;
        edx5 = eax2->f1088;
        edi6 = eax2->f3168;
        ebp7 = eax2->f0->f16;
        ebx8 = eax2->f0->f20;
        esi9 = eax2->f12;
        v10 = ebx8;
        v11 = ebx8;
        ebx12 = eax2->f64064;
        *reinterpret_cast<unsigned char*>(&v13) = cl4;
        ecx14 = eax2->f3148;
        v15 = edx5;
        edx16 = eax2->f60;
        v17 = ecx14;
        ecx18 = eax2->f56;
        v19 = ebp7;
        ebp20 = v15;
        v21 = ebx12 + 1;
        goto addr_40d674_3;
    } else {
        while (eax2->f0->f20) {
            if (eax2->f12) {
                ebx22 = 0;
                *eax2->f0->f16 = eax2->f8;
                *reinterpret_cast<unsigned char*>(&ebx22) = eax2->f8;
                ecx23 = eax2->f0;
                ebp24 = eax2->f12 - 1;
                eax2->f3168 = *reinterpret_cast<uint32_t*>((eax2->f3168 >> 24 ^ ebx22) * 4 + 0x41aa68) ^ eax2->f3168 << 8;
                eax2->f12 = ebp24;
                ecx23->f16 = ecx23->f16 + 1;
                eax2->f0->f20 = eax2->f0->f20 - 1;
                eax2->f0->f24 = eax2->f0->f24 + 1;
                if (eax2->f0->f24) 
                    continue;
                eax2->f0->f28 = eax2->f0->f28 + 1;
                continue;
            }
            esi25 = eax2->f1088;
            ebx26 = eax2->f64064 + 1;
            if (esi25 == ebx26) 
                break;
            cl27 = eax2->f60;
            ebp28 = eax2->f3148;
            edx29 = eax2->f56;
            eax2->f12 = reinterpret_cast<void**>(1);
            eax2->f8 = cl27;
            ecx30 = ebp28[reinterpret_cast<unsigned char>(edx29) * 4];
            eax2->f56 = ecx30;
            eax2->f56 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx30) >> 8);
            if (eax2->f20) 
                goto addr_40d439_10;
            ecx31 = eax2->f24 + 1;
            eax2->f20 = *reinterpret_cast<void***>(reinterpret_cast<unsigned char>(eax2->f24) * 4 + 0x41ae68);
            eax2->f24 = ecx31;
            if (reinterpret_cast<int1_t>(ecx31 == 0x200)) 
                goto addr_40d432_12;
            addr_40d439_10:
            edi32 = eax2->f20 - 1;
            eax2->f20 = edi32;
            esi33 = esi25 + 1;
            *reinterpret_cast<unsigned char*>(&a1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ecx30) ^ static_cast<unsigned char>(reinterpret_cast<uint1_t>(edi32 == 1)));
            eax2->f1088 = esi33;
            if (esi33 == ebx26) 
                continue;
            ecx34 = reinterpret_cast<unsigned char>(reinterpret_cast<uint32_t>(a1) & 0xff);
            if (ecx34 == eax2->f60) {
                edx35 = eax2->f56;
                eax2->f12 = reinterpret_cast<void**>(2);
                ecx36 = ebp28[reinterpret_cast<unsigned char>(edx35) * 4];
                eax2->f56 = ecx36;
                eax2->f56 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx36) >> 8);
                if (!edi32 && (ecx37 = eax2->f24 + 1, eax2->f20 = *reinterpret_cast<void***>(reinterpret_cast<unsigned char>(eax2->f24) * 4 + 0x41ae68), eax2->f24 = ecx37, reinterpret_cast<int1_t>(ecx37 == 0x200))) {
                    eax2->f24 = reinterpret_cast<void**>(0);
                }
                edi38 = eax2->f20 - 1;
                eax2->f20 = edi38;
                esi39 = esi33 + 1;
                *reinterpret_cast<unsigned char*>(&a1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ecx36) ^ static_cast<unsigned char>(reinterpret_cast<uint1_t>(edi38 == 1)));
                eax2->f1088 = esi39;
                if (esi39 == ebx26) 
                    continue;
                ecx40 = reinterpret_cast<unsigned char>(reinterpret_cast<uint32_t>(a1) & 0xff);
                if (ecx40 == eax2->f60) {
                    edx41 = eax2->f56;
                    eax2->f12 = reinterpret_cast<void**>(3);
                    ecx42 = ebp28[reinterpret_cast<unsigned char>(edx41) * 4];
                    eax2->f56 = ecx42;
                    eax2->f56 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx42) >> 8);
                    if (!edi38 && (ecx43 = eax2->f24 + 1, eax2->f20 = *reinterpret_cast<void***>(reinterpret_cast<unsigned char>(eax2->f24) * 4 + 0x41ae68), eax2->f24 = ecx43, reinterpret_cast<int1_t>(ecx43 == 0x200))) {
                        eax2->f24 = reinterpret_cast<void**>(0);
                    }
                    edi44 = eax2->f20 - 1;
                    eax2->f20 = edi44;
                    esi45 = esi39 + 1;
                    *reinterpret_cast<unsigned char*>(&a1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ecx42) ^ static_cast<unsigned char>(reinterpret_cast<uint1_t>(edi44 == 1)));
                    eax2->f1088 = esi45;
                    if (esi45 == ebx26) 
                        continue;
                    ecx46 = reinterpret_cast<unsigned char>(reinterpret_cast<uint32_t>(a1) & 0xff);
                    if (ecx46 == eax2->f60) {
                        ecx47 = ebp28[reinterpret_cast<unsigned char>(eax2->f56) * 4];
                        eax2->f56 = ecx47;
                        *reinterpret_cast<unsigned char*>(&a1) = *reinterpret_cast<unsigned char*>(&ecx47);
                        eax2->f56 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx47) >> 8);
                        if (!edi44 && (ecx48 = eax2->f24 + 1, eax2->f20 = *reinterpret_cast<void***>(reinterpret_cast<unsigned char>(eax2->f24) * 4 + 0x41ae68), eax2->f24 = ecx48, reinterpret_cast<int1_t>(ecx48 == 0x200))) {
                            eax2->f24 = reinterpret_cast<void**>(0);
                        }
                        ecx49 = eax2->f20 - 1;
                        esi50 = esi45 + 1;
                        eax2->f20 = ecx49;
                        *reinterpret_cast<unsigned char*>(&ebx26) = reinterpret_cast<uint1_t>(ecx49 == 1);
                        edi51 = eax2->f56;
                        eax2->f1088 = esi50;
                        eax2->f12 = reinterpret_cast<void**>((reinterpret_cast<unsigned char>(ebx26) & 0xff ^ reinterpret_cast<uint32_t>(a1) & 0xff) + 4);
                        edi52 = ebp28[reinterpret_cast<unsigned char>(edi51) * 4];
                        ebx53 = reinterpret_cast<unsigned char>(0);
                        eax2->f56 = edi52;
                        *reinterpret_cast<void***>(&ebx53) = eax2->f56;
                        eax2->f60 = ebx53;
                        eax2->f56 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi52) >> 8);
                        if (!ecx49 && (ecx54 = eax2->f24 + 1, eax2->f20 = *reinterpret_cast<void***>(reinterpret_cast<unsigned char>(eax2->f24) * 4 + 0x41ae68), eax2->f24 = ecx54, reinterpret_cast<int1_t>(ecx54 == 0x200))) {
                            eax2->f24 = reinterpret_cast<void**>(0);
                        }
                        edx55 = 0;
                        ebx56 = eax2->f20 - 1;
                        eax2->f20 = ebx56;
                        *reinterpret_cast<unsigned char*>(&edx55) = reinterpret_cast<uint1_t>(ebx56 == 1);
                        eax2->f60 = reinterpret_cast<unsigned char>(eax2->f60 ^ edx55);
                        eax2->f1088 = esi50 + 1;
                        continue;
                    } else {
                        eax2->f60 = ecx46;
                        continue;
                    }
                } else {
                    eax2->f60 = ecx40;
                    continue;
                }
            } else {
                eax2->f60 = ecx34;
                continue;
            }
            addr_40d432_12:
            eax2->f24 = reinterpret_cast<void**>(0);
            goto addr_40d439_10;
        }
    }
    addr_40d738_30:
    return;
    addr_40d777_31:
    esi9 = reinterpret_cast<void**>(1);
    addr_40d6d2_32:
    ebx57 = eax2->f0->f24;
    eax2->f0->f24 = ebx57 - v10 + v11;
    if (eax2->f0->f24 < ebx57) {
        eax2->f0->f28 = eax2->f0->f28 + 1;
    }
    eax2->f60 = edx16;
    eax2->f12 = esi9;
    eax2->f56 = ecx18;
    ecx58 = eax2->f0;
    eax2->f3148 = v17;
    eax2->f3168 = edi6;
    eax2->f8 = *reinterpret_cast<unsigned char*>(&v13);
    eax2->f1088 = v15;
    ecx58->f16 = v19;
    eax2->f0->f20 = v10;
    goto addr_40d738_30;
    addr_40d6d0_35:
    esi9 = reinterpret_cast<void**>(0);
    goto addr_40d6d2_32;
    while (ebp20 != v21) {
        *reinterpret_cast<unsigned char*>(&v13) = edx16;
        ecx59 = v17[reinterpret_cast<unsigned char>(ecx18) * 4];
        *reinterpret_cast<unsigned char*>(&a1) = *reinterpret_cast<unsigned char*>(&ecx59);
        ecx18 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx59) >> 8);
        esi60 = reinterpret_cast<unsigned char>(reinterpret_cast<uint32_t>(a1) & 0xff);
        ++ebp20;
        v15 = ebp20;
        if (esi60 == edx16) {
            if (ebp20 != v21) {
                esi9 = reinterpret_cast<void**>(2);
                ecx61 = v17[reinterpret_cast<unsigned char>(ecx18) * 4];
                *reinterpret_cast<unsigned char*>(&a1) = *reinterpret_cast<unsigned char*>(&ecx61);
                ecx18 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx61) >> 8);
                ++ebp20;
                v15 = ebp20;
                if (ebp20 != v21) {
                    ebx62 = reinterpret_cast<unsigned char>(reinterpret_cast<uint32_t>(a1) & 0xff);
                    if (ebx62 == edx16) {
                        esi9 = reinterpret_cast<void**>(3);
                        ecx63 = v17[reinterpret_cast<unsigned char>(ecx18) * 4];
                        *reinterpret_cast<unsigned char*>(&a1) = *reinterpret_cast<unsigned char*>(&ecx63);
                        ecx18 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx63) >> 8);
                        ++ebp20;
                        v15 = ebp20;
                        if (ebp20 != v21) {
                            ebx64 = reinterpret_cast<unsigned char>(reinterpret_cast<uint32_t>(a1) & 0xff);
                            if (ebx64 == edx16) {
                                esi9 = reinterpret_cast<void**>((reinterpret_cast<unsigned char>(v17[reinterpret_cast<unsigned char>(ecx18) * 4]) & 0xff) + 4);
                                edx16 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(v17[(reinterpret_cast<unsigned char>(v17[reinterpret_cast<unsigned char>(ecx18) * 4]) >> 8) * 4]) & 0xff);
                                ecx18 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v17[(reinterpret_cast<unsigned char>(v17[reinterpret_cast<unsigned char>(ecx18) * 4]) >> 8) * 4]) >> 8);
                                ebp20 = ebp20 + 2;
                                v15 = ebp20;
                            } else {
                                edx16 = ebx64;
                            }
                        }
                    } else {
                        edx16 = ebx62;
                    }
                }
                addr_40d674_3:
                if (reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(esi9) < reinterpret_cast<signed char>(0)) | reinterpret_cast<uint1_t>(esi9 == 0)) 
                    continue;
                while (1) {
                    if (!v10) 
                        goto addr_40d6d2_32;
                    if (esi9 == 1) 
                        break;
                    *v19 = *reinterpret_cast<unsigned char*>(&v13);
                    edi6 = edi6 << 8 ^ *reinterpret_cast<uint32_t*>((edi6 >> 24 ^ v13 & 0xff) * 4 + 0x41aa68);
                    --esi9;
                    ++v19;
                    ebp20 = v15;
                    --v10;
                }
            }
        } else {
            edx16 = esi60;
        }
        if (!v10) 
            goto addr_40d777_31;
        *v19 = *reinterpret_cast<unsigned char*>(&v13);
        edi6 = edi6 << 8 ^ *reinterpret_cast<uint32_t*>((edi6 >> 24 ^ v13 & 0xff) * 4 + 0x41aa68);
        ++v19;
        --v10;
    }
    goto addr_40d6d0_35;
}

void fun_403960(void** a1, void** a2) {
    return;
}

void fun_410490(struct s17* a1) {
    struct s17* eax2;
    void* ecx3;

    eax2 = a1;
    ecx3 = reinterpret_cast<void*>(0);
    eax2->f3176 = reinterpret_cast<void**>(0);
    do {
        if (*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax2) + reinterpret_cast<uint32_t>(ecx3) + 0xc6c)) {
            *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax2) + reinterpret_cast<unsigned char>(eax2->f3176) + 0xd7c) = *reinterpret_cast<signed char*>(&ecx3);
            eax2->f3176 = eax2->f3176 + 1;
        }
        ecx3 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx3) + 1);
    } while (reinterpret_cast<int32_t>(ecx3) < reinterpret_cast<int32_t>(0x100));
    return;
}

int32_t fun_4105d0(void** a1) {
    void** ecx2;
    void** esi3;
    uint32_t esi4;
    void** v5;

    if (!a1 || (ecx2 = *reinterpret_cast<void***>(a1 + 28), ecx2 == 0)) {
        return -2;
    } else {
        *reinterpret_cast<void***>(a1 + 20) = reinterpret_cast<void**>(0);
        *reinterpret_cast<void***>(a1 + 8) = reinterpret_cast<void**>(0);
        *reinterpret_cast<void***>(a1 + 24) = reinterpret_cast<void**>(0);
        esi3 = *reinterpret_cast<void***>(ecx2 + 12);
        esi4 = -reinterpret_cast<unsigned char>(esi3);
        *reinterpret_cast<void***>(ecx2) = reinterpret_cast<void**>(esi4 - (esi4 + reinterpret_cast<uint1_t>(esi4 < esi4 + reinterpret_cast<uint1_t>(!!esi3))) & 7);
        v5 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(a1 + 28) + 20);
        fun_410bd0(v5, a1, 0);
        return 0;
    }
}

int32_t fun_412ab0(void** a1, void** a2, int32_t* a3, int32_t* a4, void** a5);

struct s83 {
    void** f0;
    signed char[3] pad4;
    void** f4;
};

void** fun_411bd0(void** a1, void** a2, void** a3);

void** fun_410cf0(void** a1, void** a2, void** a3) {
    int32_t* v4;
    int32_t* ebx5;
    void** ebx6;
    int32_t* v7;
    int32_t* ebp8;
    void** edx9;
    void** eax10;
    void** ebp11;
    void** v12;
    void** ecx13;
    void** v14;
    void** eax15;
    void** v16;
    void** esi17;
    void*** esp18;
    void** v19;
    void** edi20;
    void** v21;
    void** v22;
    void** eax23;
    void** v24;
    void** esi25;
    void** edi26;
    void** eax27;
    uint32_t ecx28;
    void** ecx29;
    uint32_t eax30;
    void** ebp31;
    uint32_t ecx32;
    void*** esp33;
    int32_t** esp34;
    int32_t* v35;
    int32_t** esp36;
    int32_t* v37;
    void** v38;
    void** v39;
    int32_t v40;
    int32_t v41;
    int32_t v42;
    int32_t v43;
    void** v44;
    void** v45;
    void** eax46;
    void** eax47;
    uint32_t ecx48;
    void** ecx49;
    void** ecx50;
    void** edi51;
    void** ecx52;
    void** eax53;
    void** edx54;
    void** eax55;
    void** eax56;
    void** edx57;
    void** esi58;
    void** esi59;
    void** edi60;
    void** edx61;
    uint32_t ecx62;
    uint32_t ecx63;
    void** edx64;
    void** ecx65;
    void** eax66;
    void** edi67;
    void** esi68;
    void** eax69;
    uint32_t ecx70;
    void** ecx71;
    void** eax72;
    uint32_t ecx73;
    void** ecx74;
    void** eax75;
    void** edi76;
    uint32_t eax77;
    void** eax78;
    uint32_t ecx79;
    void** ecx80;
    void** eax81;
    void** edx82;
    void** edx83;
    void** edx84;
    void*** ecx85;
    void*** eax86;
    void** edx87;
    void** eax88;
    void** v89;
    void** eax90;
    uint32_t ecx91;
    void** ecx92;
    uint32_t eax93;
    void* edx94;
    struct s83* eax95;
    void* v96;
    void** eax97;
    void** v98;
    void* ecx99;
    uint32_t eax100;
    void* v101;
    uint32_t eax102;
    uint32_t eax103;
    void** ecx104;
    void** v105;
    uint32_t eax106;
    uint32_t ecx107;
    void** ecx108;
    void* ecx109;
    uint32_t edi110;
    uint32_t eax111;
    void* ecx112;
    uint32_t v113;
    void** v114;
    void** eax115;
    int32_t ecx116;
    uint32_t edx117;
    void* ecx118;
    void** ecx119;
    void** eax120;
    void*** esp121;
    void*** v122;
    void**** esp123;
    void*** v124;
    void*** v125;
    void** edx126;
    void*** v127;
    void** ecx128;
    void** eax129;
    void** edx130;
    void** eax131;
    void** v132;
    void** v133;
    void** eax134;
    void** edi135;
    void** edx136;
    void** ecx137;
    void** eax138;
    void** ecx139;
    void** ecx140;
    void** edx141;
    void** eax142;
    void** eax143;
    void** esi144;
    void** ebp145;
    void** eax146;
    void** ebp147;
    void** ebp148;
    void** edx149;
    void** eax150;
    void** eax151;
    void** esi152;
    void** ebp153;
    void** eax154;
    void** ebp155;
    void** ecx156;
    void** eax157;
    void** ebp158;
    void** ecx159;
    void** eax160;
    void** ebp161;
    void** eax162;
    void** ebp163;
    void** eax164;
    void** esi165;
    void** ebp166;
    void** eax167;
    void** ebp168;
    void* edx169;
    void** eax170;
    void** ebp171;
    void** esi172;
    void** ecx173;
    void** eax174;
    void** esi175;
    void** ebp176;
    void** eax177;
    void** edi178;
    void** edx179;
    void** ecx180;
    void** eax181;
    void** eax182;
    void** v183;
    int1_t zf184;
    void** edi185;
    void** ecx186;
    void** eax187;
    void** edi188;
    void** edx189;
    void** ecx190;
    void** eax191;
    void** eax192;
    void** v193;
    void** edi194;
    void** ecx195;
    void** ecx196;
    void** eax197;
    void** ecx198;
    void* edx199;
    void** eax200;
    void** ecx201;
    void* edx202;
    void** eax203;
    void** esi204;
    void** ebp205;
    void** eax206;

    v4 = ebx5;
    ebx6 = a1;
    v7 = ebp8;
    edx9 = *reinterpret_cast<void***>(a2 + 4);
    eax10 = *reinterpret_cast<void***>(ebx6 + 32);
    ebp11 = *reinterpret_cast<void***>(ebx6 + 28);
    v12 = *reinterpret_cast<void***>(a2);
    ecx13 = *reinterpret_cast<void***>(ebx6 + 52);
    v14 = eax10;
    eax15 = *reinterpret_cast<void***>(ebx6 + 48);
    v16 = esi17;
    esp18 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 48 - 4 - 4 - 4 - 4);
    v19 = edi20;
    v21 = edx9;
    v22 = ecx13;
    if (reinterpret_cast<unsigned char>(ecx13) >= reinterpret_cast<unsigned char>(eax15)) {
        eax23 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx6 + 44)) - reinterpret_cast<unsigned char>(ecx13));
    } else {
        eax23 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax15) - reinterpret_cast<unsigned char>(ecx13) - 1);
    }
    v24 = eax23;
    while (1) {
        switch (*reinterpret_cast<void***>(ebx6)) {
        case 0:
            esi25 = v14;
            if (reinterpret_cast<unsigned char>(ebp11) >= reinterpret_cast<unsigned char>(3)) {
                edi26 = v12;
            } else {
                eax27 = v21;
                edi26 = v12;
                do {
                    if (!eax27) 
                        goto addr_411464_11;
                    ecx28 = 0;
                    --eax27;
                    *reinterpret_cast<void***>(&ecx28) = *reinterpret_cast<void***>(edi26);
                    a3 = reinterpret_cast<void**>(0);
                    ecx29 = ebp11;
                    ebp11 = ebp11 + 8;
                    v21 = eax27;
                    esi25 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi25) | ecx28 << *reinterpret_cast<unsigned char*>(&ecx29));
                    ++edi26;
                    v14 = esi25;
                    v12 = edi26;
                } while (reinterpret_cast<unsigned char>(ebp11) < reinterpret_cast<unsigned char>(3));
            }
            eax30 = reinterpret_cast<unsigned char>(esi25) & 7;
            *reinterpret_cast<void***>(ebx6 + 24) = reinterpret_cast<void**>(eax30 & 1);
            switch (eax30 >> 1) {
            case 0:
                ebp31 = ebp11 - 3;
                *reinterpret_cast<void***>(ebx6) = reinterpret_cast<void**>(1);
                ecx32 = reinterpret_cast<unsigned char>(ebp31) & 7;
                esi25 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi25) >> 3 >> *reinterpret_cast<signed char*>(&ecx32));
                ebp11 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebp31) - ecx32);
                v14 = esi25;
                continue;
            case 1:
                esp33 = esp18 - 4;
                esp34 = reinterpret_cast<int32_t**>(esp33 - 4);
                v35 = reinterpret_cast<int32_t*>(esp18 + 36);
                esp36 = esp34 - 1;
                v37 = reinterpret_cast<int32_t*>(esp33 + 44);
                v38 = reinterpret_cast<void**>(esp34 + 13);
                v39 = reinterpret_cast<void**>(esp36 + 15);
                fun_412ab0(v39, v38, v37, v35, a2);
                v40 = v41;
                v42 = v43;
                eax46 = fun_411b90(*reinterpret_cast<void***>(&v42), *reinterpret_cast<signed char*>(&v40), v44, v45, a2, v39, v38, v37, v35, a2);
                esp18 = reinterpret_cast<void***>(esp36 - 1 - 1 - 1 + 1 - 1 - 1 - 1 - 1 - 1 - 1 + 1 + 10);
                *reinterpret_cast<void***>(ebx6 + 4) = eax46;
                if (!eax46) 
                    goto addr_4114a3_18;
                esi25 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi25) >> 3);
                v14 = esi25;
                ebp11 = ebp11 - 3;
                *reinterpret_cast<void***>(ebx6) = reinterpret_cast<void**>(6);
                continue;
            case 2:
                esi25 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi25) >> 3);
                v14 = esi25;
                ebp11 = ebp11 - 3;
                *reinterpret_cast<void***>(ebx6) = reinterpret_cast<void**>(3);
                continue;
            case 3:
                goto 0x4114df;
            }
        case 1:
            esi25 = v14;
            edi26 = v21;
            eax47 = v12;
            if (reinterpret_cast<unsigned char>(ebp11) < reinterpret_cast<unsigned char>(32)) {
                do {
                    if (!edi26) 
                        goto addr_41152e_23;
                    ecx48 = 0;
                    a3 = reinterpret_cast<void**>(0);
                    *reinterpret_cast<void***>(&ecx48) = *reinterpret_cast<void***>(eax47);
                    --edi26;
                    ecx49 = ebp11;
                    ebp11 = ebp11 + 8;
                    v21 = edi26;
                    esi25 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi25) | ecx48 << *reinterpret_cast<unsigned char*>(&ecx49));
                    ++eax47;
                    v12 = eax47;
                } while (reinterpret_cast<unsigned char>(ebp11) < reinterpret_cast<unsigned char>(32));
            }
            ecx50 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi25) & 0xffff);
            if (~reinterpret_cast<unsigned char>(esi25) >> 16 ^ reinterpret_cast<unsigned char>(ecx50)) 
                goto addr_411569_26;
            ebp11 = reinterpret_cast<void**>(0);
            *reinterpret_cast<void***>(ebx6 + 4) = ecx50;
            v14 = reinterpret_cast<void**>(0);
            if (ecx50) {
                *reinterpret_cast<void***>(ebx6) = reinterpret_cast<void**>(2);
                continue;
            }
        case 2:
            edi51 = v21;
            if (!edi51) 
                goto addr_4115ae_30;
            ecx52 = v24;
            if (ecx52) {
                addr_410f66_32:
                eax53 = *reinterpret_cast<void***>(ebx6 + 4);
                a3 = reinterpret_cast<void**>(0);
                if (reinterpret_cast<unsigned char>(eax53) > reinterpret_cast<unsigned char>(edi51)) {
                    eax53 = edi51;
                }
            } else {
                ecx52 = *reinterpret_cast<void***>(ebx6 + 44);
                edx54 = v22;
                if (edx54 != ecx52 || (eax55 = *reinterpret_cast<void***>(ebx6 + 48), eax55 == *reinterpret_cast<void***>(ebx6 + 40))) {
                    addr_410ef5_35:
                    *reinterpret_cast<void***>(ebx6 + 52) = edx54;
                    eax56 = fun_412ae0(ecx52, ebx6, a2, a3, v19, v16);
                    edx57 = *reinterpret_cast<void***>(ebx6 + 52);
                    esi58 = *reinterpret_cast<void***>(ebx6 + 48);
                    esp18 = esp18 - 4 - 4 - 4 - 4 + 4 + 12;
                    v22 = edx57;
                    if (reinterpret_cast<unsigned char>(edx57) >= reinterpret_cast<unsigned char>(esi58)) {
                        ecx52 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx6 + 44)) - reinterpret_cast<unsigned char>(edx57));
                        goto addr_410f29_37;
                    } else {
                        ecx52 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi58) - reinterpret_cast<unsigned char>(edx57) - 1);
                        goto addr_410f29_37;
                    }
                } else {
                    edx54 = *reinterpret_cast<void***>(ebx6 + 40);
                    v22 = edx54;
                    if (reinterpret_cast<unsigned char>(edx54) >= reinterpret_cast<unsigned char>(eax55)) {
                        ecx52 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx52) - reinterpret_cast<unsigned char>(edx54));
                    } else {
                        ecx52 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax55) - reinterpret_cast<unsigned char>(edx54) - 1);
                    }
                    v24 = ecx52;
                    if (ecx52) 
                        goto addr_410f66_32; else 
                        goto addr_410ef5_35;
                }
            }
            if (reinterpret_cast<unsigned char>(eax53) > reinterpret_cast<unsigned char>(ecx52)) {
                eax53 = ecx52;
            }
            esi59 = v12;
            edi60 = v22;
            edx61 = eax53;
            ecx62 = reinterpret_cast<unsigned char>(eax53) >> 2;
            while (ecx62) {
                --ecx62;
                *reinterpret_cast<void***>(edi60) = *reinterpret_cast<void***>(esi59);
                edi60 = edi60 + 4;
                esi59 = esi59 + 4;
            }
            ecx63 = reinterpret_cast<unsigned char>(edx61) & 3;
            edx64 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v24) - reinterpret_cast<unsigned char>(eax53));
            while (ecx63) {
                --ecx63;
                *reinterpret_cast<void***>(edi60) = *reinterpret_cast<void***>(esi59);
                ++edi60;
                ++esi59;
            }
            v12 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v12) + reinterpret_cast<unsigned char>(eax53));
            edi26 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v21) - reinterpret_cast<unsigned char>(eax53));
            esi25 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v22) + reinterpret_cast<unsigned char>(eax53));
            ecx65 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx6 + 4)) - reinterpret_cast<unsigned char>(eax53));
            v21 = edi26;
            v22 = esi25;
            v24 = edx64;
            *reinterpret_cast<void***>(ebx6 + 4) = ecx65;
            if (ecx65) 
                continue; else 
                break;
            addr_410f29_37:
            eax66 = *reinterpret_cast<void***>(ebx6 + 44);
            v24 = ecx52;
            if (edx57 == eax66 && esi58 != *reinterpret_cast<void***>(ebx6 + 40)) {
                edx57 = *reinterpret_cast<void***>(ebx6 + 40);
                v22 = edx57;
                if (reinterpret_cast<unsigned char>(edx57) >= reinterpret_cast<unsigned char>(esi58)) {
                    ecx52 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax66) - reinterpret_cast<unsigned char>(edx57));
                } else {
                    ecx52 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi58) - reinterpret_cast<unsigned char>(edx57) - 1);
                }
                v24 = ecx52;
            }
            if (!ecx52) 
                goto addr_4115f5_57;
            edi51 = v21;
            goto addr_410f66_32;
        case 3:
            edi67 = v14;
            if (reinterpret_cast<unsigned char>(ebp11) < reinterpret_cast<unsigned char>(14)) {
                esi68 = v21;
                eax69 = v12;
                do {
                    if (!esi68) 
                        goto addr_411634_62;
                    ecx70 = 0;
                    --esi68;
                    *reinterpret_cast<void***>(&ecx70) = *reinterpret_cast<void***>(eax69);
                    a3 = reinterpret_cast<void**>(0);
                    ecx71 = ebp11;
                    ebp11 = ebp11 + 8;
                    v21 = esi68;
                    edi67 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi67) | ecx70 << *reinterpret_cast<unsigned char*>(&ecx71));
                    ++eax69;
                    v12 = eax69;
                } while (reinterpret_cast<unsigned char>(ebp11) < reinterpret_cast<unsigned char>(14));
            }
            eax72 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi67) & 0x3fff);
            *reinterpret_cast<void***>(ebx6 + 4) = eax72;
            ecx73 = reinterpret_cast<unsigned char>(eax72) & 31;
            if (ecx73 > 29) 
                goto addr_4116b3_65;
            if ((reinterpret_cast<unsigned char>(eax72) & 0x3e0) > 0x3a0) 
                goto addr_4116b3_65;
            esi25 = a2;
            ecx74 = *reinterpret_cast<void***>(esi25 + 40);
            eax75 = reinterpret_cast<void**>(*reinterpret_cast<void***>(esi25 + 32)(ecx74, (reinterpret_cast<unsigned char>(eax72) >> 5 & 31) + ecx73 + 0x102, 4));
            esp18 = esp18 - 4 - 4 - 4 - 4 + 4 + 12;
            *reinterpret_cast<void***>(ebx6 + 12) = eax75;
            if (!eax75) 
                goto addr_411677_68;
            edi76 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi67) >> 14);
            ebp11 = ebp11 - 14;
            *reinterpret_cast<void***>(ebx6 + 8) = reinterpret_cast<void**>(0);
            *reinterpret_cast<void***>(ebx6) = reinterpret_cast<void**>(4);
            goto addr_41108d_70;
        case 4:
            edi76 = v14;
            esi25 = a2;
            goto addr_41108d_70;
        case 5:
            edi76 = v14;
            esi25 = a2;
            goto addr_411176_73;
        case 6:
            edi76 = v14;
            esi25 = a2;
            goto addr_4113c6_75;
        case 7:
            goto 0x41187c;
        case 9:
            goto 0x411927;
        case 8:
            goto 0x4118e3;
        }
        eax77 = -reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx6 + 24));
        *reinterpret_cast<void***>(ebx6) = reinterpret_cast<void**>(eax77 - (eax77 + reinterpret_cast<uint1_t>(eax77 < eax77 + reinterpret_cast<uint1_t>(!!*reinterpret_cast<void***>(ebx6 + 24)))) & 7);
        continue;
        addr_41108d_70:
        if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx6 + 8)) < reinterpret_cast<unsigned char>((reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx6 + 4)) >> 10) + 4)) {
            do {
                if (reinterpret_cast<unsigned char>(ebp11) < reinterpret_cast<unsigned char>(3)) {
                    eax78 = v12;
                    do {
                        if (!v21) 
                            goto addr_411700_80;
                        ecx79 = 0;
                        *reinterpret_cast<void***>(&ecx79) = *reinterpret_cast<void***>(eax78);
                        --v21;
                        ecx80 = ebp11;
                        ebp11 = ebp11 + 8;
                        a3 = reinterpret_cast<void**>(0);
                        edi76 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi76) | ecx79 << *reinterpret_cast<unsigned char*>(&ecx80));
                        ++eax78;
                        v12 = eax78;
                    } while (reinterpret_cast<unsigned char>(ebp11) < reinterpret_cast<unsigned char>(3));
                }
                eax81 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi76) & 7);
                ebp11 = ebp11 - 3;
                edi76 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi76) >> 3);
                *reinterpret_cast<void***>(*reinterpret_cast<void***>(ebx6 + 12) + *reinterpret_cast<int32_t*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx6 + 8)) * 4 + 0x4184cc) * 4) = eax81;
                edx82 = *reinterpret_cast<void***>(ebx6 + 8) + 1;
                *reinterpret_cast<void***>(ebx6 + 8) = edx82;
            } while (reinterpret_cast<unsigned char>(edx82) < reinterpret_cast<unsigned char>((reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx6 + 4)) >> 10) + 4));
        }
        if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx6 + 8)) < reinterpret_cast<unsigned char>(19)) {
            do {
                *reinterpret_cast<void***>(*reinterpret_cast<void***>(ebx6 + 12) + *reinterpret_cast<int32_t*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx6 + 8)) * 4 + 0x4184cc) * 4) = reinterpret_cast<void**>(0);
                edx83 = *reinterpret_cast<void***>(ebx6 + 8) + 1;
                *reinterpret_cast<void***>(ebx6 + 8) = edx83;
            } while (reinterpret_cast<unsigned char>(edx83) < reinterpret_cast<unsigned char>(19));
        }
        edx84 = *reinterpret_cast<void***>(ebx6 + 36);
        ecx85 = reinterpret_cast<void***>(ebx6 + 20);
        eax86 = reinterpret_cast<void***>(ebx6 + 16);
        edx87 = *reinterpret_cast<void***>(ebx6 + 12);
        *eax86 = reinterpret_cast<void**>(7);
        eax88 = fun_4123a0(ecx85, edx87, eax86, ecx85, edx84, esi25);
        esp18 = esp18 - 4 - 4 - 4 - 4 - 4 - 4 + 4 + 20;
        v89 = eax88;
        if (eax88) 
            goto addr_41173f_86;
        *reinterpret_cast<void***>(ebx6 + 8) = eax88;
        *reinterpret_cast<void***>(ebx6) = reinterpret_cast<void**>(5);
        addr_411176_73:
        if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx6 + 8)) < reinterpret_cast<unsigned char>((reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx6 + 4)) >> 5 & 31) + (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx6 + 4)) & 31) + 0x102)) {
            do {
                eax90 = *reinterpret_cast<void***>(ebx6 + 16);
                if (reinterpret_cast<unsigned char>(ebp11) < reinterpret_cast<unsigned char>(eax90)) {
                    do {
                        if (!v21) 
                            goto addr_411759_90;
                        ecx91 = 0;
                        a3 = reinterpret_cast<void**>(0);
                        --v21;
                        *reinterpret_cast<void***>(&ecx91) = *reinterpret_cast<void***>(v12);
                        ecx92 = ebp11;
                        ebp11 = ebp11 + 8;
                        edi76 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi76) | ecx91 << *reinterpret_cast<unsigned char*>(&ecx92));
                        ++v12;
                    } while (reinterpret_cast<unsigned char>(ebp11) < reinterpret_cast<unsigned char>(eax90));
                }
                eax93 = *reinterpret_cast<uint32_t*>(reinterpret_cast<unsigned char>(eax90) * 4 + 0x41ca48) & reinterpret_cast<unsigned char>(edi76);
                edx94 = reinterpret_cast<void*>(0);
                *reinterpret_cast<signed char*>(&edx94) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(*reinterpret_cast<void***>(ebx6 + 20) + eax93 * 8) + 1);
                eax95 = reinterpret_cast<struct s83*>(*reinterpret_cast<void***>(ebx6 + 20) + eax93 * 8);
                v96 = edx94;
                eax97 = eax95->f4;
                v98 = eax97;
                if (reinterpret_cast<unsigned char>(eax97) >= reinterpret_cast<unsigned char>(16)) {
                    ecx99 = reinterpret_cast<void*>(7);
                    if (eax97 != 18) {
                        ecx99 = reinterpret_cast<void*>(eax97 + 0xfffffff2);
                    }
                    eax100 = reinterpret_cast<uint32_t>(eax97 - 18);
                    v101 = ecx99;
                    eax102 = -eax100;
                    eax103 = eax102 - (eax102 + reinterpret_cast<uint1_t>(eax102 < eax102 + reinterpret_cast<uint1_t>(!!eax100)));
                    ecx104 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ecx99) + reinterpret_cast<uint32_t>(edx94));
                    *reinterpret_cast<unsigned char*>(&eax103) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax103) & 0xf8);
                    v105 = ecx104;
                    eax106 = eax103 + 11;
                    if (reinterpret_cast<unsigned char>(ebp11) < reinterpret_cast<unsigned char>(ecx104)) {
                        do {
                            if (!v21) 
                                goto addr_411759_90;
                            ecx107 = 0;
                            a3 = reinterpret_cast<void**>(0);
                            --v21;
                            *reinterpret_cast<void***>(&ecx107) = *reinterpret_cast<void***>(v12);
                            ecx108 = ebp11;
                            ebp11 = ebp11 + 8;
                            edi76 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi76) | ecx107 << *reinterpret_cast<unsigned char*>(&ecx108));
                            ++v12;
                        } while (reinterpret_cast<unsigned char>(ebp11) < reinterpret_cast<unsigned char>(v105));
                        edx94 = v96;
                    }
                    ecx109 = edx94;
                    edi110 = reinterpret_cast<unsigned char>(edi76) >> *reinterpret_cast<signed char*>(&ecx109);
                    eax111 = eax106 + (*reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(v101) * 4 + 0x41ca48) & edi110);
                    ecx112 = v101;
                    edi76 = reinterpret_cast<void**>(edi110 >> *reinterpret_cast<signed char*>(&ecx112));
                    v113 = eax111;
                    ebp11 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebp11) - (reinterpret_cast<uint32_t>(ecx112) + reinterpret_cast<uint32_t>(edx94)));
                    v114 = *reinterpret_cast<void***>(ebx6 + 8);
                    if (eax111 + reinterpret_cast<unsigned char>(v114) > (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx6 + 4)) >> 5 & 31) + (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx6 + 4)) & 31) + 0x102) 
                        goto addr_411798_100;
                    if (!reinterpret_cast<int1_t>(v98 == 16)) {
                        eax115 = v114;
                        ecx116 = 0;
                    } else {
                        eax115 = v114;
                        if (reinterpret_cast<unsigned char>(eax115) < reinterpret_cast<unsigned char>(1)) 
                            goto addr_411798_100;
                        ecx116 = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(*reinterpret_cast<void***>(ebx6 + 12) + reinterpret_cast<unsigned char>(eax115) * 4) - 4);
                    }
                    do {
                        ++eax115;
                        *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(*reinterpret_cast<void***>(ebx6 + 12) + reinterpret_cast<unsigned char>(eax115) * 4) - 4) = ecx116;
                        edx117 = v113 - 1;
                        v113 = edx117;
                    } while (edx117);
                } else {
                    ecx118 = edx94;
                    ebp11 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebp11) - reinterpret_cast<uint32_t>(edx94));
                    edi76 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi76) >> *reinterpret_cast<signed char*>(&ecx118));
                    *reinterpret_cast<void***>(*reinterpret_cast<void***>(ebx6 + 12) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx6 + 8)) * 4) = eax97;
                    eax115 = *reinterpret_cast<void***>(ebx6 + 8) + 1;
                }
                *reinterpret_cast<void***>(ebx6 + 8) = eax115;
            } while (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx6 + 8)) < reinterpret_cast<unsigned char>((reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx6 + 4)) >> 5 & 31) + (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx6 + 4)) & 31) + 0x102));
        }
        ecx119 = *reinterpret_cast<void***>(ebx6 + 36);
        eax120 = *reinterpret_cast<void***>(ebx6 + 4);
        esp121 = esp18 - 4 - 4;
        v122 = esp121 + 64;
        esp123 = reinterpret_cast<void****>(esp121 - 4 - 4);
        v124 = esp121 + 68;
        v125 = reinterpret_cast<void***>(esp123 + 11);
        edx126 = *reinterpret_cast<void***>(ebx6 + 12);
        v127 = reinterpret_cast<void***>(esp123 + 12);
        ecx128 = reinterpret_cast<void**>((reinterpret_cast<unsigned char>(eax120) >> 5 & 31) + 1);
        *reinterpret_cast<void***>(ebx6 + 20) = reinterpret_cast<void**>(0);
        eax129 = fun_412920(ecx128, (reinterpret_cast<unsigned char>(eax120) & 31) + 0x101, ecx128, edx126, v127, v125, v124, v122, ecx119, esi25);
        edx130 = *reinterpret_cast<void***>(ebx6 + 12);
        v89 = eax129;
        eax131 = *reinterpret_cast<void***>(esi25 + 40);
        *reinterpret_cast<void***>(esi25 + 36)(eax131, edx130, (reinterpret_cast<unsigned char>(eax120) & 31) + 0x101, ecx128, edx126, v127, v125, v124, v122, ecx119, esi25);
        if (v89) 
            goto addr_4117ec_109;
        eax134 = fun_411b90(9, 6, v132, v133, esi25, v19, v16, v7, v4, v12);
        esp18 = reinterpret_cast<void***>(esp123 - 1 - 1 - 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 + 1 + 11 - 1 - 1 - 1 - 1 - 1 - 1 + 1 + 5);
        if (!eax134) 
            goto addr_411838_111;
        *reinterpret_cast<void***>(ebx6 + 4) = eax134;
        *reinterpret_cast<void***>(ebx6) = reinterpret_cast<void**>(6);
        addr_4113c6_75:
        *reinterpret_cast<void***>(ebx6 + 32) = edi76;
        *reinterpret_cast<void***>(ebx6 + 28) = ebp11;
        edi135 = *reinterpret_cast<void***>(esi25);
        *reinterpret_cast<void***>(esi25 + 4) = v21;
        edx136 = *reinterpret_cast<void***>(esi25 + 8);
        ecx137 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v12) - reinterpret_cast<unsigned char>(edi135));
        *reinterpret_cast<void***>(esi25) = v12;
        *reinterpret_cast<void***>(esi25 + 8) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx136) + reinterpret_cast<unsigned char>(ecx137));
        *reinterpret_cast<void***>(ebx6 + 52) = v22;
        eax138 = fun_411bd0(ebx6, esi25, a3);
        esp18 = esp18 - 4 - 4 - 4 - 4 + 4 + 12;
        if (!reinterpret_cast<int1_t>(eax138 == 1)) 
            goto addr_4118c8_113;
        ecx139 = *reinterpret_cast<void***>(ebx6 + 4);
        a3 = reinterpret_cast<void**>(0);
        fun_412380(ecx139, esi25);
        ecx140 = *reinterpret_cast<void***>(ebx6 + 52);
        edi26 = *reinterpret_cast<void***>(esi25);
        edx141 = *reinterpret_cast<void***>(esi25 + 4);
        ebp11 = *reinterpret_cast<void***>(ebx6 + 28);
        v14 = *reinterpret_cast<void***>(ebx6 + 32);
        eax142 = *reinterpret_cast<void***>(ebx6 + 48);
        esp18 = esp18 - 4 - 4 - 4 + 4 + 8;
        v12 = edi26;
        v21 = edx141;
        v22 = ecx140;
        if (reinterpret_cast<unsigned char>(ecx140) >= reinterpret_cast<unsigned char>(eax142)) {
            eax143 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx6 + 44)) - reinterpret_cast<unsigned char>(ecx140));
        } else {
            eax143 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax142) - reinterpret_cast<unsigned char>(ecx140) - 1);
        }
        v24 = eax143;
        if (*reinterpret_cast<void***>(ebx6 + 24)) 
            goto addr_411874_118;
        *reinterpret_cast<void***>(ebx6) = reinterpret_cast<void**>(0);
    }
    *reinterpret_cast<void***>(ebx6 + 32) = v14;
    *reinterpret_cast<void***>(ebx6 + 28) = ebp11;
    esi144 = *reinterpret_cast<void***>(a2);
    ebp145 = *reinterpret_cast<void***>(a2 + 8);
    *reinterpret_cast<void***>(a2 + 4) = v21;
    *reinterpret_cast<void***>(a2) = v12;
    *reinterpret_cast<void***>(a2 + 8) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebp145) + (reinterpret_cast<unsigned char>(v12) - reinterpret_cast<unsigned char>(esi144)));
    *reinterpret_cast<void***>(ebx6 + 52) = v22;
    eax146 = fun_412ae0(v22, ebx6, a2, 0xfe, v19, v16);
    return eax146;
    ecx140 = v22;
    edi26 = v12;
    esi25 = a2;
    addr_411888_122:
    *reinterpret_cast<void***>(ebx6 + 52) = ecx140;
    eax138 = fun_412ae0(ecx140, ebx6, esi25, a3, v19, v16);
    ecx137 = *reinterpret_cast<void***>(ebx6 + 52);
    if (*reinterpret_cast<void***>(ebx6 + 48) == ecx137) {
        *reinterpret_cast<void***>(ebx6) = reinterpret_cast<void**>(8);
    } else {
        *reinterpret_cast<void***>(ebx6 + 28) = ebp11;
        *reinterpret_cast<void***>(ebx6 + 32) = v14;
        ebp147 = *reinterpret_cast<void***>(esi25);
        *reinterpret_cast<void***>(esi25 + 4) = v21;
        *reinterpret_cast<void***>(esi25) = edi26;
        *reinterpret_cast<void***>(esi25 + 8) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi25 + 8)) + (reinterpret_cast<unsigned char>(edi26) - reinterpret_cast<unsigned char>(ebp147)));
        *reinterpret_cast<void***>(ebx6 + 52) = ecx137;
        goto addr_4118c8_113;
    }
    addr_4118ef_125:
    *reinterpret_cast<void***>(ebx6 + 32) = v14;
    *reinterpret_cast<void***>(ebx6 + 28) = ebp11;
    ebp148 = *reinterpret_cast<void***>(esi25);
    *reinterpret_cast<void***>(esi25 + 4) = v21;
    edx149 = *reinterpret_cast<void***>(esi25 + 8);
    *reinterpret_cast<void***>(esi25 + 8) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx149) + (reinterpret_cast<unsigned char>(edi26) - reinterpret_cast<unsigned char>(ebp148)));
    *reinterpret_cast<void***>(esi25) = edi26;
    *reinterpret_cast<void***>(ebx6 + 52) = ecx137;
    eax150 = fun_412ae0(ecx137, ebx6, esi25, 1, v19, v16);
    return eax150;
    addr_4118c8_113:
    eax151 = fun_412ae0(ecx137, ebx6, esi25, eax138, v19, v16);
    return eax151;
    ecx137 = v22;
    edi26 = v12;
    esi25 = a2;
    goto addr_4118ef_125;
    *reinterpret_cast<void***>(ebx6 + 32) = v14;
    *reinterpret_cast<void***>(ebx6 + 28) = ebp11;
    esi152 = *reinterpret_cast<void***>(a2);
    ebp153 = *reinterpret_cast<void***>(a2 + 8);
    *reinterpret_cast<void***>(a2 + 4) = v21;
    *reinterpret_cast<void***>(a2) = v12;
    *reinterpret_cast<void***>(a2 + 8) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebp153) + (reinterpret_cast<unsigned char>(v12) - reinterpret_cast<unsigned char>(esi152)));
    *reinterpret_cast<void***>(ebx6 + 52) = v22;
    eax154 = fun_412ae0(v22, ebx6, a2, 0xfd, v19, v16);
    return eax154;
    *reinterpret_cast<void***>(ebx6) = reinterpret_cast<void**>(9);
    *reinterpret_cast<void***>(a2 + 24) = reinterpret_cast<void**>("invalid block type");
    *reinterpret_cast<void***>(ebx6 + 32) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi25) >> 3);
    *reinterpret_cast<void***>(ebx6 + 28) = ebp11 + 0xfffffffd;
    ebp155 = *reinterpret_cast<void***>(a2 + 8);
    *reinterpret_cast<void***>(a2 + 4) = v21;
    ecx156 = *reinterpret_cast<void***>(a2);
    *reinterpret_cast<void***>(a2 + 8) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebp155) + (reinterpret_cast<unsigned char>(edi26) - reinterpret_cast<unsigned char>(ecx156)));
    *reinterpret_cast<void***>(a2) = edi26;
    *reinterpret_cast<void***>(ebx6 + 52) = v22;
    eax157 = fun_412ae0(v22, ebx6, a2, 0xfd, v19, v16);
    return eax157;
    addr_4114a3_18:
    *reinterpret_cast<void***>(ebx6 + 32) = esi25;
    *reinterpret_cast<void***>(ebx6 + 28) = ebp11;
    ebp158 = *reinterpret_cast<void***>(a2 + 8);
    *reinterpret_cast<void***>(a2 + 4) = v21;
    ecx159 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi26) - reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a2)));
    *reinterpret_cast<void***>(a2 + 8) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebp158) + reinterpret_cast<unsigned char>(ecx159));
    *reinterpret_cast<void***>(a2) = edi26;
    *reinterpret_cast<void***>(ebx6 + 52) = v22;
    eax160 = fun_412ae0(ecx159, ebx6, a2, 0xfc, v19, v16);
    return eax160;
    addr_411464_11:
    *reinterpret_cast<void***>(ebx6 + 32) = esi25;
    *reinterpret_cast<void***>(ebx6 + 28) = ebp11;
    ebp161 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a2 + 8)) + (reinterpret_cast<unsigned char>(edi26) - reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a2))));
    *reinterpret_cast<void***>(a2 + 4) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(a2 + 8) = ebp161;
    *reinterpret_cast<void***>(a2) = edi26;
    *reinterpret_cast<void***>(ebx6 + 52) = v22;
    eax162 = fun_412ae0(a3, ebx6, a2, a3, v19, v16);
    return eax162;
    addr_411569_26:
    *reinterpret_cast<void***>(ebx6) = reinterpret_cast<void**>(9);
    *reinterpret_cast<void***>(a2 + 24) = reinterpret_cast<void**>("invalid stored block lengths");
    *reinterpret_cast<void***>(ebx6 + 32) = esi25;
    *reinterpret_cast<void***>(ebx6 + 28) = ebp11;
    ebp163 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a2 + 8)) + (reinterpret_cast<unsigned char>(eax47) - reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a2))));
    *reinterpret_cast<void***>(a2) = eax47;
    *reinterpret_cast<void***>(a2 + 4) = edi26;
    *reinterpret_cast<void***>(a2 + 8) = ebp163;
    *reinterpret_cast<void***>(ebx6 + 52) = v22;
    eax164 = fun_412ae0(a2, ebx6, a2, 0xfd, v19, v16);
    return eax164;
    addr_41152e_23:
    *reinterpret_cast<void***>(ebx6 + 32) = esi25;
    *reinterpret_cast<void***>(ebx6 + 28) = ebp11;
    esi165 = *reinterpret_cast<void***>(a2);
    ebp166 = *reinterpret_cast<void***>(a2 + 8);
    *reinterpret_cast<void***>(a2 + 4) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(a2) = eax47;
    *reinterpret_cast<void***>(a2 + 8) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebp166) + (reinterpret_cast<unsigned char>(eax47) - reinterpret_cast<unsigned char>(esi165)));
    *reinterpret_cast<void***>(ebx6 + 52) = v22;
    eax167 = fun_412ae0(a2, ebx6, a2, a3, v19, v16);
    return eax167;
    addr_4115ae_30:
    *reinterpret_cast<void***>(ebx6 + 32) = v14;
    *reinterpret_cast<void***>(ebx6 + 28) = ebp11;
    ebp168 = *reinterpret_cast<void***>(a2 + 8);
    edx169 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(v12) - reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a2)));
    *reinterpret_cast<void***>(a2) = v12;
    *reinterpret_cast<void***>(a2 + 4) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(a2 + 8) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebp168) + reinterpret_cast<uint32_t>(edx169));
    *reinterpret_cast<void***>(ebx6 + 52) = v22;
    eax170 = fun_412ae0(v22, ebx6, a2, a3, v19, v16);
    return eax170;
    addr_4115f5_57:
    *reinterpret_cast<void***>(ebx6 + 32) = v14;
    *reinterpret_cast<void***>(ebx6 + 28) = ebp11;
    ebp171 = *reinterpret_cast<void***>(a2);
    esi172 = *reinterpret_cast<void***>(a2 + 8);
    *reinterpret_cast<void***>(a2 + 4) = v21;
    *reinterpret_cast<void***>(a2) = v12;
    ecx173 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v12) - reinterpret_cast<unsigned char>(ebp171));
    *reinterpret_cast<void***>(a2 + 8) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi172) + reinterpret_cast<unsigned char>(ecx173));
    *reinterpret_cast<void***>(ebx6 + 52) = edx57;
    eax174 = fun_412ae0(ecx173, ebx6, a2, eax56, v19, v16);
    return eax174;
    addr_4116b3_65:
    *reinterpret_cast<void***>(ebx6) = reinterpret_cast<void**>(9);
    *reinterpret_cast<void***>(a2 + 24) = reinterpret_cast<void**>("too many length or distance symbols");
    *reinterpret_cast<void***>(ebx6 + 32) = edi67;
    *reinterpret_cast<void***>(ebx6 + 28) = ebp11;
    esi175 = *reinterpret_cast<void***>(a2);
    ebp176 = *reinterpret_cast<void***>(a2 + 8);
    *reinterpret_cast<void***>(a2 + 4) = v21;
    *reinterpret_cast<void***>(a2) = v12;
    *reinterpret_cast<void***>(a2 + 8) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebp176) + (reinterpret_cast<unsigned char>(v12) - reinterpret_cast<unsigned char>(esi175)));
    *reinterpret_cast<void***>(ebx6 + 52) = v22;
    eax177 = fun_412ae0(v22, ebx6, a2, 0xfd, v19, v16);
    return eax177;
    addr_411677_68:
    *reinterpret_cast<void***>(ebx6 + 32) = edi67;
    *reinterpret_cast<void***>(ebx6 + 28) = ebp11;
    edi178 = *reinterpret_cast<void***>(esi25);
    edx179 = *reinterpret_cast<void***>(esi25 + 8);
    *reinterpret_cast<void***>(esi25 + 4) = v21;
    ecx180 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v12) - reinterpret_cast<unsigned char>(edi178));
    *reinterpret_cast<void***>(esi25) = v12;
    *reinterpret_cast<void***>(esi25 + 8) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx179) + reinterpret_cast<unsigned char>(ecx180));
    *reinterpret_cast<void***>(ebx6 + 52) = v22;
    eax181 = fun_412ae0(ecx180, ebx6, esi25, 0xfc, v19, v16);
    return eax181;
    addr_41173f_86:
    eax182 = *reinterpret_cast<void***>(esi25 + 40);
    v183 = *reinterpret_cast<void***>(ebx6 + 12);
    *reinterpret_cast<void***>(esi25 + 36)(eax182, v183);
    zf184 = reinterpret_cast<int1_t>(v89 == 0xfffffffd);
    addr_4117f1_129:
    if (zf184) {
        *reinterpret_cast<void***>(ebx6) = reinterpret_cast<void**>(9);
    }
    *reinterpret_cast<void***>(ebx6 + 32) = edi76;
    *reinterpret_cast<void***>(ebx6 + 28) = ebp11;
    edi185 = *reinterpret_cast<void***>(esi25);
    *reinterpret_cast<void***>(esi25 + 4) = v21;
    ecx186 = *reinterpret_cast<void***>(esi25 + 8);
    *reinterpret_cast<void***>(esi25) = v12;
    *reinterpret_cast<void***>(esi25 + 8) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx186) + (reinterpret_cast<unsigned char>(v12) - reinterpret_cast<unsigned char>(edi185)));
    *reinterpret_cast<void***>(ebx6 + 52) = v22;
    eax187 = fun_412ae0(v89, ebx6, esi25, v89, v19, v16);
    return eax187;
    addr_4117ec_109:
    zf184 = reinterpret_cast<int1_t>(v89 == 0xfffffffd);
    goto addr_4117f1_129;
    addr_411838_111:
    *reinterpret_cast<void***>(ebx6 + 32) = edi76;
    *reinterpret_cast<void***>(ebx6 + 28) = ebp11;
    edi188 = *reinterpret_cast<void***>(esi25);
    *reinterpret_cast<void***>(esi25 + 4) = v21;
    edx189 = *reinterpret_cast<void***>(esi25 + 8);
    ecx190 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v12) - reinterpret_cast<unsigned char>(edi188));
    *reinterpret_cast<void***>(esi25 + 8) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx189) + reinterpret_cast<unsigned char>(ecx190));
    *reinterpret_cast<void***>(esi25) = v12;
    *reinterpret_cast<void***>(ebx6 + 52) = v22;
    eax191 = fun_412ae0(ecx190, ebx6, esi25, 0xfc, v19, v16);
    return eax191;
    addr_411874_118:
    *reinterpret_cast<void***>(ebx6) = reinterpret_cast<void**>(7);
    goto addr_411888_122;
    addr_411798_100:
    eax192 = *reinterpret_cast<void***>(esi25 + 40);
    v193 = *reinterpret_cast<void***>(ebx6 + 12);
    *reinterpret_cast<void***>(esi25 + 36)(eax192, v193);
    *reinterpret_cast<void***>(ebx6) = reinterpret_cast<void**>(9);
    *reinterpret_cast<void***>(esi25 + 24) = reinterpret_cast<void**>("invalid bit length repeat");
    *reinterpret_cast<void***>(ebx6 + 32) = edi76;
    *reinterpret_cast<void***>(ebx6 + 28) = ebp11;
    edi194 = *reinterpret_cast<void***>(esi25);
    *reinterpret_cast<void***>(esi25 + 4) = v21;
    ecx195 = *reinterpret_cast<void***>(esi25 + 8);
    *reinterpret_cast<void***>(esi25) = v12;
    ecx196 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx195) + (reinterpret_cast<unsigned char>(v12) - reinterpret_cast<unsigned char>(edi194)));
    *reinterpret_cast<void***>(esi25 + 8) = ecx196;
    *reinterpret_cast<void***>(ebx6 + 52) = v22;
    eax197 = fun_412ae0(ecx196, ebx6, esi25, 0xfd, eax192, v193);
    return eax197;
    addr_411759_90:
    *reinterpret_cast<void***>(ebx6 + 32) = edi76;
    *reinterpret_cast<void***>(ebx6 + 28) = ebp11;
    ecx198 = *reinterpret_cast<void***>(esi25 + 8);
    edx199 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(v12) - reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi25)));
    *reinterpret_cast<void***>(esi25) = v12;
    *reinterpret_cast<void***>(esi25 + 8) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx198) + reinterpret_cast<uint32_t>(edx199));
    *reinterpret_cast<void***>(esi25 + 4) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ebx6 + 52) = v22;
    eax200 = fun_412ae0(a3, ebx6, esi25, a3, v19, v16);
    return eax200;
    addr_411700_80:
    *reinterpret_cast<void***>(ebx6 + 32) = edi76;
    *reinterpret_cast<void***>(ebx6 + 28) = ebp11;
    ecx201 = *reinterpret_cast<void***>(esi25 + 8);
    edx202 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(v12) - reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi25)));
    *reinterpret_cast<void***>(esi25) = v12;
    *reinterpret_cast<void***>(esi25 + 8) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx201) + reinterpret_cast<uint32_t>(edx202));
    *reinterpret_cast<void***>(esi25 + 4) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ebx6 + 52) = v22;
    eax203 = fun_412ae0(a3, ebx6, esi25, a3, v19, v16);
    return eax203;
    addr_411634_62:
    *reinterpret_cast<void***>(ebx6 + 32) = edi67;
    *reinterpret_cast<void***>(ebx6 + 28) = ebp11;
    esi204 = *reinterpret_cast<void***>(a2);
    ebp205 = *reinterpret_cast<void***>(a2 + 8);
    *reinterpret_cast<void***>(a2) = v12;
    *reinterpret_cast<void***>(a2 + 4) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(a2 + 8) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebp205) + (reinterpret_cast<unsigned char>(v12) - reinterpret_cast<unsigned char>(esi204)));
    *reinterpret_cast<void***>(ebx6 + 52) = v22;
    eax206 = fun_412ae0(v22, ebx6, a2, a3, v19, v16);
    return eax206;
}

void** g41b850 = reinterpret_cast<void**>(9);

void** g41b854 = reinterpret_cast<void**>(5);

int32_t fun_412ab0(void** a1, void** a2, int32_t* a3, int32_t* a4, void** a5) {
    void** ecx6;
    void** eax7;

    ecx6 = g41b850;
    *reinterpret_cast<void***>(a1) = ecx6;
    eax7 = g41b854;
    *reinterpret_cast<void***>(a2) = eax7;
    *a3 = 0x41b858;
    *a4 = 0x41c858;
    return 0;
}

struct s84 {
    void** f0;
    signed char f1;
    signed char[2] pad4;
    void** f4;
};

void** fun_411bd0(void** a1, void** a2, void** a3) {
    void** v4;
    void** esi5;
    void** esi6;
    void** v7;
    void** edi8;
    void** edi9;
    void** edx10;
    void** eax11;
    void** ebp12;
    void** ebx13;
    void** v14;
    void** ecx15;
    void** v16;
    void** edx17;
    void** v18;
    void** ecx19;
    void** v20;
    void** ecx21;
    void** ebx22;
    void** ecx23;
    void** ecx24;
    void** edx25;
    int32_t ecx26;
    int32_t edx27;
    void** eax28;
    void** edx29;
    void** ecx30;
    void** ecx31;
    void** eax32;
    uint32_t eax33;
    void** ecx34;
    void** eax35;
    void** v36;
    void** ecx37;
    uint32_t eax38;
    struct s84* eax39;
    uint32_t ecx40;
    struct s84* v41;
    void** ecx42;
    void** ecx43;
    void** eax44;
    void** v45;
    void** ecx46;
    uint32_t eax47;
    void** ecx48;
    void** ecx49;
    void** eax50;
    void** v51;
    void** ecx52;
    uint32_t eax53;
    struct s84* eax54;
    uint32_t ecx55;
    void** ecx56;
    void** eax57;
    void** v58;
    void** ecx59;
    uint32_t eax60;
    void** ecx61;
    void** v62;
    void** ecx63;
    int1_t zf64;
    void** v65;
    void** eax66;
    void** v67;
    void** eax68;
    void** ecx69;
    void** eax70;
    int1_t zf71;
    void** v72;
    void** eax73;
    void** ecx74;
    void** ecx75;
    void** cl76;
    int1_t zf77;
    void** v78;
    void** eax79;
    void** eax80;
    void** ecx81;
    void** eax82;
    int1_t zf83;
    void** v84;
    void** eax85;
    void** ebx86;
    void** eax87;
    void** ecx88;
    void** eax89;
    void** eax90;
    void** ebx91;
    void** ecx92;
    void** ebx93;
    void** eax94;
    void** ebx95;
    void** eax96;
    void** ecx97;
    void** eax98;
    void** ebx99;
    void** ecx100;
    void** ecx101;
    void** eax102;
    void** ebx103;
    void** eax104;
    void** ecx105;
    void** eax106;
    void** eax107;
    void** ecx108;
    void** eax109;
    void** ebx110;
    void** ecx111;
    void** eax112;

    v4 = esi5;
    esi6 = a1;
    v7 = edi8;
    edi9 = a2;
    edx10 = *reinterpret_cast<void***>(esi6 + 32);
    eax11 = *reinterpret_cast<void***>(esi6 + 4);
    ebp12 = *reinterpret_cast<void***>(edi9);
    ebx13 = *reinterpret_cast<void***>(esi6 + 28);
    v14 = *reinterpret_cast<void***>(edi9 + 4);
    ecx15 = *reinterpret_cast<void***>(esi6 + 48);
    v16 = edx10;
    edx17 = *reinterpret_cast<void***>(esi6 + 52);
    v18 = eax11;
    if (reinterpret_cast<unsigned char>(edx17) >= reinterpret_cast<unsigned char>(ecx15)) {
        ecx19 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi6 + 44)) - reinterpret_cast<unsigned char>(edx17));
    } else {
        ecx19 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx15) - reinterpret_cast<unsigned char>(edx17) - 1);
    }
    v20 = ecx19;
    while (1) {
        ecx21 = *reinterpret_cast<void***>(eax11);
        switch (ecx21) {
        case 0:
            if (reinterpret_cast<unsigned char>(v20) >= reinterpret_cast<unsigned char>(0x102) && reinterpret_cast<unsigned char>(v14) >= reinterpret_cast<unsigned char>(10)) {
                *reinterpret_cast<void***>(esi6 + 32) = v16;
                *reinterpret_cast<void***>(esi6 + 28) = ebx13;
                ebx22 = *reinterpret_cast<void***>(edi9);
                *reinterpret_cast<void***>(edi9 + 4) = v14;
                ecx23 = *reinterpret_cast<void***>(edi9 + 8);
                *reinterpret_cast<void***>(edi9) = ebp12;
                *reinterpret_cast<void***>(edi9 + 8) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx23) + (reinterpret_cast<unsigned char>(ebp12) - reinterpret_cast<unsigned char>(ebx22)));
                *reinterpret_cast<void***>(esi6 + 52) = edx17;
                ecx24 = *reinterpret_cast<void***>(v18 + 24);
                edx25 = *reinterpret_cast<void***>(v18 + 20);
                ecx26 = 0;
                edx27 = 0;
                *reinterpret_cast<signed char*>(&ecx26) = *reinterpret_cast<signed char*>(v18 + 17);
                *reinterpret_cast<void***>(&edx27) = *reinterpret_cast<void***>(v18 + 16);
                eax28 = fun_412c20(edx27, ecx26, edx25, ecx24, esi6, edi9);
                edx29 = *reinterpret_cast<void***>(esi6 + 32);
                ebp12 = *reinterpret_cast<void***>(edi9);
                ebx13 = *reinterpret_cast<void***>(esi6 + 28);
                v14 = *reinterpret_cast<void***>(edi9 + 4);
                ecx30 = *reinterpret_cast<void***>(esi6 + 48);
                v16 = edx29;
                edx17 = *reinterpret_cast<void***>(esi6 + 52);
                a3 = eax28;
                if (reinterpret_cast<unsigned char>(edx17) >= reinterpret_cast<unsigned char>(ecx30)) {
                    ecx31 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi6 + 44)) - reinterpret_cast<unsigned char>(edx17));
                } else {
                    ecx31 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx30) - reinterpret_cast<unsigned char>(edx17) - 1);
                }
                v20 = ecx31;
                if (eax28) {
                    eax32 = eax28 - 1;
                    eax33 = -reinterpret_cast<unsigned char>(eax32);
                    *reinterpret_cast<void***>(v18) = reinterpret_cast<void**>((eax33 - (eax33 + reinterpret_cast<uint1_t>(eax33 < eax33 + reinterpret_cast<uint1_t>(!!eax32))) & 2) + 7);
                    eax11 = v18;
                    continue;
                }
            }
            eax11 = v18;
            ecx34 = reinterpret_cast<void**>(0);
            ecx34 = *reinterpret_cast<void***>(eax11 + 16);
            *reinterpret_cast<void***>(eax11) = reinterpret_cast<void**>(1);
            *reinterpret_cast<void***>(eax11 + 12) = ecx34;
            *reinterpret_cast<void***>(eax11 + 8) = *reinterpret_cast<void***>(eax11 + 20);
        case 1:
            eax35 = *reinterpret_cast<void***>(eax11 + 12);
            v36 = eax35;
            if (reinterpret_cast<unsigned char>(ebx13) < reinterpret_cast<unsigned char>(eax35)) {
                do {
                    if (!v14) 
                        goto addr_412179_16;
                    ecx37 = ebx13;
                    --v14;
                    eax38 = 0;
                    *reinterpret_cast<void***>(&eax38) = *reinterpret_cast<void***>(ebp12);
                    ebx13 = ebx13 + 8;
                    a3 = reinterpret_cast<void**>(0);
                    eax35 = v36;
                    ++ebp12;
                    v16 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v16) | eax38 << *reinterpret_cast<unsigned char*>(&ecx37));
                } while (reinterpret_cast<unsigned char>(ebx13) < reinterpret_cast<unsigned char>(eax35));
            }
            eax39 = reinterpret_cast<struct s84*>(*reinterpret_cast<void***>(v18 + 8) + (*reinterpret_cast<uint32_t*>(reinterpret_cast<unsigned char>(eax35) * 4 + 0x41ca48) & reinterpret_cast<unsigned char>(v16)) * 8);
            ecx40 = 0;
            v41 = eax39;
            *reinterpret_cast<signed char*>(&ecx40) = eax39->f1;
            v16 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v16) >> *reinterpret_cast<signed char*>(&ecx40));
            ebx13 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebx13) - ecx40);
            ecx42 = reinterpret_cast<void**>(0);
            ecx42 = v41->f0;
            if (ecx42) {
                if (!(reinterpret_cast<unsigned char>(ecx42) & 16)) {
                    if (reinterpret_cast<unsigned char>(ecx42) & 64) {
                        eax11 = v18;
                        if (!(reinterpret_cast<unsigned char>(ecx42) & 32)) 
                            goto addr_41216a_22;
                        *reinterpret_cast<void***>(eax11) = reinterpret_cast<void**>(7);
                        continue;
                    }
                } else {
                    eax11 = v18;
                    *reinterpret_cast<void***>(eax11 + 8) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx42) & 15);
                    ecx43 = v41->f4;
                    *reinterpret_cast<void***>(eax11) = reinterpret_cast<void**>(2);
                    *reinterpret_cast<void***>(eax11 + 4) = ecx43;
                    continue;
                }
            } else {
                eax11 = v18;
                *reinterpret_cast<void***>(eax11 + 8) = v41->f4;
                *reinterpret_cast<void***>(eax11) = reinterpret_cast<void**>(6);
                continue;
            }
        case 2:
            eax44 = *reinterpret_cast<void***>(eax11 + 8);
            v45 = eax44;
            if (reinterpret_cast<unsigned char>(ebx13) < reinterpret_cast<unsigned char>(eax44)) {
                do {
                    if (!v14) 
                        goto addr_412179_16;
                    ecx46 = ebx13;
                    --v14;
                    eax47 = 0;
                    *reinterpret_cast<void***>(&eax47) = *reinterpret_cast<void***>(ebp12);
                    ebx13 = ebx13 + 8;
                    a3 = reinterpret_cast<void**>(0);
                    eax44 = v45;
                    ++ebp12;
                    v16 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v16) | eax47 << *reinterpret_cast<unsigned char*>(&ecx46));
                } while (reinterpret_cast<unsigned char>(ebx13) < reinterpret_cast<unsigned char>(eax44));
            }
            *reinterpret_cast<void***>(v18 + 4) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(v18 + 4)) + (*reinterpret_cast<uint32_t*>(reinterpret_cast<unsigned char>(eax44) * 4 + 0x41ca48) & reinterpret_cast<unsigned char>(v16)));
            ecx48 = v45;
            v16 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v16) >> *reinterpret_cast<signed char*>(&ecx48));
            ebx13 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebx13) - reinterpret_cast<unsigned char>(ecx48));
            eax11 = v18;
            ecx49 = reinterpret_cast<void**>(0);
            *reinterpret_cast<signed char*>(&ecx49) = *reinterpret_cast<signed char*>(eax11 + 17);
            *reinterpret_cast<void***>(eax11) = reinterpret_cast<void**>(3);
            *reinterpret_cast<void***>(eax11 + 12) = ecx49;
            *reinterpret_cast<void***>(eax11 + 8) = *reinterpret_cast<void***>(eax11 + 24);
        case 3:
            eax50 = *reinterpret_cast<void***>(eax11 + 12);
            v51 = eax50;
            if (reinterpret_cast<unsigned char>(ebx13) < reinterpret_cast<unsigned char>(eax50)) {
                do {
                    if (!v14) 
                        goto addr_412179_16;
                    ecx52 = ebx13;
                    --v14;
                    eax53 = 0;
                    *reinterpret_cast<void***>(&eax53) = *reinterpret_cast<void***>(ebp12);
                    ebx13 = ebx13 + 8;
                    a3 = reinterpret_cast<void**>(0);
                    eax50 = v51;
                    ++ebp12;
                    v16 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v16) | eax53 << *reinterpret_cast<unsigned char*>(&ecx52));
                } while (reinterpret_cast<unsigned char>(ebx13) < reinterpret_cast<unsigned char>(eax50));
            }
            eax54 = reinterpret_cast<struct s84*>(*reinterpret_cast<void***>(v18 + 8) + (*reinterpret_cast<uint32_t*>(reinterpret_cast<unsigned char>(eax50) * 4 + 0x41ca48) & reinterpret_cast<unsigned char>(v16)) * 8);
            ecx55 = 0;
            v41 = eax54;
            *reinterpret_cast<signed char*>(&ecx55) = eax54->f1;
            ebx13 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebx13) - ecx55);
            ecx42 = reinterpret_cast<void**>(0);
            v16 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v16) >> *reinterpret_cast<signed char*>(&ecx55));
            ecx42 = v41->f0;
            if (!(reinterpret_cast<unsigned char>(ecx42) & 16)) {
                if (reinterpret_cast<unsigned char>(ecx42) & 64) 
                    goto addr_4121b4_35;
                break;
            } else {
                eax11 = v18;
                *reinterpret_cast<void***>(eax11 + 8) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx42) & 15);
                ecx56 = v41->f4;
                *reinterpret_cast<void***>(eax11) = reinterpret_cast<void**>(4);
                *reinterpret_cast<void***>(eax11 + 12) = ecx56;
                continue;
            }
        case 4:
            eax57 = *reinterpret_cast<void***>(eax11 + 8);
            v58 = eax57;
            if (reinterpret_cast<unsigned char>(ebx13) < reinterpret_cast<unsigned char>(eax57)) {
                do {
                    if (!v14) 
                        goto addr_412179_16;
                    ecx59 = ebx13;
                    --v14;
                    eax60 = 0;
                    *reinterpret_cast<void***>(&eax60) = *reinterpret_cast<void***>(ebp12);
                    ebx13 = ebx13 + 8;
                    a3 = reinterpret_cast<void**>(0);
                    eax57 = v58;
                    ++ebp12;
                    v16 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v16) | eax60 << *reinterpret_cast<unsigned char*>(&ecx59));
                } while (reinterpret_cast<unsigned char>(ebx13) < reinterpret_cast<unsigned char>(eax57));
            }
            *reinterpret_cast<void***>(v18 + 12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(v18 + 12)) + (*reinterpret_cast<uint32_t*>(reinterpret_cast<unsigned char>(eax57) * 4 + 0x41ca48) & reinterpret_cast<unsigned char>(v16)));
            ecx61 = v58;
            v16 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v16) >> *reinterpret_cast<signed char*>(&ecx61));
            ebx13 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebx13) - reinterpret_cast<unsigned char>(ecx61));
            *reinterpret_cast<void***>(v18) = reinterpret_cast<void**>(5);
        case 5:
            if (reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(edx17) - reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi6 + 40))) >= reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(v18 + 12))) {
                v62 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx17) - reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(v18 + 12)));
            } else {
                v62 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi6 + 44)) - reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi6 + 40)) - reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(v18 + 12)) + reinterpret_cast<unsigned char>(edx17));
            }
            eax11 = v18;
            if (*reinterpret_cast<void***>(eax11 + 4)) {
                do {
                    ecx63 = v20;
                    if (ecx63) {
                        addr_41205b_47:
                        ++edx17;
                        a3 = reinterpret_cast<void**>(0);
                        *reinterpret_cast<void***>(edx17 + 0xffffffff) = *reinterpret_cast<void***>(v62);
                        ++v62;
                        --v20;
                        if (v62 == *reinterpret_cast<void***>(esi6 + 44)) {
                            v62 = *reinterpret_cast<void***>(esi6 + 40);
                            continue;
                        }
                    } else {
                        zf64 = edx17 == *reinterpret_cast<void***>(esi6 + 44);
                        v65 = *reinterpret_cast<void***>(esi6 + 44);
                        if (!zf64 || (ecx63 = *reinterpret_cast<void***>(esi6 + 40), *reinterpret_cast<void***>(esi6 + 48) == ecx63)) {
                            addr_411ff4_50:
                            *reinterpret_cast<void***>(esi6 + 52) = edx17;
                            eax66 = fun_412ae0(ecx63, esi6, edi9, a3, v7, v4);
                            edx17 = *reinterpret_cast<void***>(esi6 + 52);
                            v67 = eax66;
                            eax68 = *reinterpret_cast<void***>(esi6 + 48);
                            if (reinterpret_cast<unsigned char>(edx17) >= reinterpret_cast<unsigned char>(eax68)) {
                                ecx69 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi6 + 44)) - reinterpret_cast<unsigned char>(edx17));
                            } else {
                                ecx69 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax68) - reinterpret_cast<unsigned char>(edx17) - 1);
                            }
                        } else {
                            edx17 = ecx63;
                            if (reinterpret_cast<unsigned char>(edx17) >= reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi6 + 48))) {
                                eax70 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v65) - reinterpret_cast<unsigned char>(edx17));
                            } else {
                                eax70 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi6 + 48)) - reinterpret_cast<unsigned char>(edx17) - 1);
                            }
                            v20 = eax70;
                            if (eax70) 
                                goto addr_412057_57; else 
                                goto addr_411ff4_50;
                        }
                    }
                    v20 = ecx69;
                    zf71 = edx17 == *reinterpret_cast<void***>(esi6 + 44);
                    v72 = *reinterpret_cast<void***>(esi6 + 44);
                    if (zf71 && eax68 != *reinterpret_cast<void***>(esi6 + 40)) {
                        edx17 = *reinterpret_cast<void***>(esi6 + 40);
                        if (reinterpret_cast<unsigned char>(edx17) >= reinterpret_cast<unsigned char>(eax68)) {
                            eax73 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v72) - reinterpret_cast<unsigned char>(edx17));
                        } else {
                            eax73 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax68) - reinterpret_cast<unsigned char>(edx17) - 1);
                        }
                        v20 = eax73;
                    }
                    if (!v20) 
                        goto addr_4121fd_64;
                    addr_412057_57:
                    eax11 = v18;
                    goto addr_41205b_47;
                    ecx74 = *reinterpret_cast<void***>(eax11 + 4) - 1;
                    *reinterpret_cast<void***>(eax11 + 4) = ecx74;
                } while (ecx74);
            }
            *reinterpret_cast<void***>(eax11) = reinterpret_cast<void**>(0);
            continue;
        case 6:
            ecx75 = v20;
            if (ecx75) {
                addr_412148_68:
                cl76 = *reinterpret_cast<void***>(eax11 + 8);
                a3 = reinterpret_cast<void**>(0);
                *reinterpret_cast<void***>(edx17) = cl76;
                ++edx17;
                --v20;
                *reinterpret_cast<void***>(eax11) = reinterpret_cast<void**>(0);
                continue;
            } else {
                zf77 = edx17 == *reinterpret_cast<void***>(esi6 + 44);
                v78 = *reinterpret_cast<void***>(esi6 + 44);
                if (!zf77 || (ecx75 = *reinterpret_cast<void***>(esi6 + 40), *reinterpret_cast<void***>(esi6 + 48) == ecx75)) {
                    addr_4120e1_70:
                    *reinterpret_cast<void***>(esi6 + 52) = edx17;
                    eax79 = fun_412ae0(ecx75, esi6, edi9, a3, v7, v4);
                    edx17 = *reinterpret_cast<void***>(esi6 + 52);
                    v67 = eax79;
                    eax80 = *reinterpret_cast<void***>(esi6 + 48);
                    if (reinterpret_cast<unsigned char>(edx17) >= reinterpret_cast<unsigned char>(eax80)) {
                        ecx81 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi6 + 44)) - reinterpret_cast<unsigned char>(edx17));
                    } else {
                        ecx81 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax80) - reinterpret_cast<unsigned char>(edx17) - 1);
                    }
                } else {
                    edx17 = ecx75;
                    if (reinterpret_cast<unsigned char>(edx17) >= reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi6 + 48))) {
                        eax82 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v78) - reinterpret_cast<unsigned char>(edx17));
                    } else {
                        eax82 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi6 + 48)) - reinterpret_cast<unsigned char>(edx17) - 1);
                    }
                    v20 = eax82;
                    if (eax82) 
                        goto addr_412144_77; else 
                        goto addr_4120e1_70;
                }
            }
            v20 = ecx81;
            zf83 = edx17 == *reinterpret_cast<void***>(esi6 + 44);
            v84 = *reinterpret_cast<void***>(esi6 + 44);
            if (zf83 && eax80 != *reinterpret_cast<void***>(esi6 + 40)) {
                edx17 = *reinterpret_cast<void***>(esi6 + 40);
                if (reinterpret_cast<unsigned char>(edx17) >= reinterpret_cast<unsigned char>(eax80)) {
                    eax85 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v84) - reinterpret_cast<unsigned char>(edx17));
                } else {
                    eax85 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax80) - reinterpret_cast<unsigned char>(edx17) - 1);
                }
                v20 = eax85;
            }
            if (!v20) 
                goto addr_4121fd_64;
            addr_412144_77:
            eax11 = v18;
            goto addr_412148_68;
        case 8:
            goto 0x4122a7;
        case 7:
            goto 0x412238;
        case 9:
            goto 0x4122df;
        }
        *reinterpret_cast<void***>(v18 + 12) = ecx42;
        eax11 = v18;
        *reinterpret_cast<void***>(eax11 + 8) = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(v41) + reinterpret_cast<unsigned char>(v41->f4) * 8);
    }
    *reinterpret_cast<void***>(esi6 + 32) = v16;
    *reinterpret_cast<void***>(esi6 + 28) = ebx13;
    ebx86 = *reinterpret_cast<void***>(edi9);
    *reinterpret_cast<void***>(edi9 + 4) = v14;
    eax87 = *reinterpret_cast<void***>(edi9 + 8);
    ecx88 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebp12) - reinterpret_cast<unsigned char>(ebx86));
    *reinterpret_cast<void***>(edi9 + 8) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax87) + reinterpret_cast<unsigned char>(ecx88));
    *reinterpret_cast<void***>(edi9) = ebp12;
    *reinterpret_cast<void***>(esi6 + 52) = edx17;
    eax89 = fun_412ae0(ecx88, esi6, edi9, 0xfe, v7, v4);
    return eax89;
    if (reinterpret_cast<unsigned char>(ebx13) > reinterpret_cast<unsigned char>(7)) {
        ebx13 = ebx13 - 8;
        ecx21 = v14 + 1;
        --ebp12;
        v14 = ecx21;
    }
    *reinterpret_cast<void***>(esi6 + 52) = edx17;
    eax90 = fun_412ae0(ecx21, esi6, edi9, a3, v7, v4);
    edx17 = *reinterpret_cast<void***>(esi6 + 52);
    if (*reinterpret_cast<void***>(esi6 + 48) == edx17) {
        *reinterpret_cast<void***>(v18) = reinterpret_cast<void**>(8);
    } else {
        *reinterpret_cast<void***>(esi6 + 28) = ebx13;
        *reinterpret_cast<void***>(esi6 + 32) = v16;
        ebx91 = *reinterpret_cast<void***>(edi9);
        *reinterpret_cast<void***>(edi9 + 4) = v14;
        ecx92 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebp12) - reinterpret_cast<unsigned char>(ebx91));
        ebx93 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi9 + 8)) + reinterpret_cast<unsigned char>(ecx92));
        *reinterpret_cast<void***>(edi9 + 8) = ebx93;
        *reinterpret_cast<void***>(edi9) = ebp12;
        *reinterpret_cast<void***>(esi6 + 52) = edx17;
        eax94 = fun_412ae0(ecx92, esi6, edi9, eax90, v7, v4);
        return eax94;
    }
    *reinterpret_cast<void***>(esi6 + 32) = v16;
    *reinterpret_cast<void***>(esi6 + 28) = ebx13;
    ebx95 = *reinterpret_cast<void***>(edi9);
    *reinterpret_cast<void***>(edi9 + 4) = v14;
    eax96 = *reinterpret_cast<void***>(edi9 + 8);
    ecx97 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebp12) - reinterpret_cast<unsigned char>(ebx95));
    *reinterpret_cast<void***>(edi9 + 8) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax96) + reinterpret_cast<unsigned char>(ecx97));
    *reinterpret_cast<void***>(edi9) = ebp12;
    *reinterpret_cast<void***>(esi6 + 52) = edx17;
    eax98 = fun_412ae0(ecx97, esi6, edi9, 1, v7, v4);
    return eax98;
    *reinterpret_cast<void***>(esi6 + 32) = v16;
    *reinterpret_cast<void***>(esi6 + 28) = ebx13;
    ebx99 = *reinterpret_cast<void***>(edi9);
    *reinterpret_cast<void***>(edi9 + 4) = v14;
    ecx100 = *reinterpret_cast<void***>(edi9 + 8);
    ecx101 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx100) + (reinterpret_cast<unsigned char>(ebp12) - reinterpret_cast<unsigned char>(ebx99)));
    *reinterpret_cast<void***>(edi9 + 8) = ecx101;
    *reinterpret_cast<void***>(edi9) = ebp12;
    *reinterpret_cast<void***>(esi6 + 52) = edx17;
    eax102 = fun_412ae0(ecx101, esi6, edi9, 0xfd, v7, v4);
    return eax102;
    addr_41216a_22:
    *reinterpret_cast<void***>(eax11) = reinterpret_cast<void**>(9);
    *reinterpret_cast<void***>(edi9 + 24) = reinterpret_cast<void**>("invalid literal/length code");
    addr_4121c5_93:
    *reinterpret_cast<void***>(esi6 + 32) = v16;
    *reinterpret_cast<void***>(esi6 + 28) = ebx13;
    ebx103 = *reinterpret_cast<void***>(edi9);
    *reinterpret_cast<void***>(edi9 + 4) = v14;
    eax104 = *reinterpret_cast<void***>(edi9 + 8);
    ecx105 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebp12) - reinterpret_cast<unsigned char>(ebx103));
    *reinterpret_cast<void***>(edi9 + 8) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax104) + reinterpret_cast<unsigned char>(ecx105));
    *reinterpret_cast<void***>(edi9) = ebp12;
    *reinterpret_cast<void***>(esi6 + 52) = edx17;
    eax106 = fun_412ae0(ecx105, esi6, edi9, 0xfd, v7, v4);
    return eax106;
    addr_412179_16:
    *reinterpret_cast<void***>(esi6 + 28) = ebx13;
    *reinterpret_cast<void***>(esi6 + 32) = v16;
    eax107 = *reinterpret_cast<void***>(edi9 + 8);
    ecx108 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebp12) - reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi9)));
    *reinterpret_cast<void***>(edi9 + 4) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(edi9) = ebp12;
    *reinterpret_cast<void***>(edi9 + 8) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax107) + reinterpret_cast<unsigned char>(ecx108));
    *reinterpret_cast<void***>(esi6 + 52) = edx17;
    eax109 = fun_412ae0(ecx108, esi6, edi9, a3, v7, v4);
    return eax109;
    addr_4121b4_35:
    *reinterpret_cast<void***>(v18) = reinterpret_cast<void**>(9);
    *reinterpret_cast<void***>(edi9 + 24) = reinterpret_cast<void**>("invalid distance code");
    goto addr_4121c5_93;
    addr_4121fd_64:
    *reinterpret_cast<void***>(esi6 + 32) = v16;
    *reinterpret_cast<void***>(esi6 + 28) = ebx13;
    ebx110 = *reinterpret_cast<void***>(edi9);
    *reinterpret_cast<void***>(edi9 + 4) = v14;
    ecx111 = *reinterpret_cast<void***>(edi9 + 8);
    *reinterpret_cast<void***>(edi9) = ebp12;
    *reinterpret_cast<void***>(edi9 + 8) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx111) + (reinterpret_cast<unsigned char>(ebp12) - reinterpret_cast<unsigned char>(ebx110)));
    *reinterpret_cast<void***>(esi6 + 52) = edx17;
    eax112 = fun_412ae0(v67, esi6, edi9, v67, v7, v4);
    return eax112;
}

int32_t g41f3d0 = 0;

int32_t GetCurrentProcess = 0x1921a;

int32_t TerminateProcess = 0x19a7e;

int32_t g41f3cc = 0;

signed char g41f3c8 = 0;

void** g41f8bc = reinterpret_cast<void**>(0);

void** g41f8b8 = reinterpret_cast<void**>(0);

void** fun_4130ca(int32_t a1, int32_t a2, int32_t a3) {
    int32_t v4;
    void** v5;
    void** edi6;
    int1_t zf7;
    int32_t eax8;
    void** v9;
    void** ebx10;
    int32_t ebx11;
    void** eax12;
    void** ecx13;
    void** esi14;
    void** eax15;
    int1_t cf16;
    void** eax17;

    v4 = reinterpret_cast<int32_t>(__return_address());
    v5 = edi6;
    zf7 = g41f3d0 == 1;
    if (zf7) {
        eax8 = reinterpret_cast<int32_t>(GetCurrentProcess(v4));
        TerminateProcess(eax8, v4);
    }
    v9 = ebx10;
    ebx11 = a3;
    g41f3cc = 1;
    g41f3c8 = *reinterpret_cast<signed char*>(&ebx11);
    if (!a2) {
        eax12 = g41f8bc;
        if (eax12) {
            ecx13 = g41f8b8;
            esi14 = ecx13 + 0xfffffffc;
            if (reinterpret_cast<unsigned char>(esi14) >= reinterpret_cast<unsigned char>(eax12)) {
                do {
                    eax15 = *reinterpret_cast<void***>(esi14);
                    if (eax15) {
                        eax15();
                    }
                    esi14 = esi14 - 4;
                    cf16 = reinterpret_cast<unsigned char>(esi14) < reinterpret_cast<unsigned char>(g41f8bc);
                } while (!cf16);
            }
        }
        fun_413163(ecx13, 0x41a018, 0x41a01c, v9, v5);
    }
    eax17 = fun_413163(0x41a01c, 0x41a020, 0x41a028, v9, v5);
    if (!ebx11) {
        g41f3d0 = 1;
        eax17 = reinterpret_cast<void**>(ExitProcess(0x41a028, v4));
    }
    return eax17;
}

void** fun_41558e(void** a1, void** a2, void** a3, int32_t a4, void** a5, signed char a6, void** a7, void** a8);

int32_t fun_4154f3(void** ecx, void** a2, void** a3, void** a4, int32_t a5, void** a6, void** a7, void** a8, int32_t a9, int32_t a10, int32_t a11, void** a12, void** a13, void** a14) {
    int32_t eax15;
    void** ecx16;
    int32_t v17;

    if (*reinterpret_cast<void***>(a6) != 0x19930520) {
        fun_415d92(ecx);
    }
    if (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a2 + 4)) & 0x66)) {
        if (!*reinterpret_cast<void***>(a6 + 12)) {
            addr_415587_5:
            eax15 = 1;
        } else {
            if (!reinterpret_cast<int1_t>(*reinterpret_cast<void***>(a2) == 0xe06d7363) || (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a2 + 20)) <= reinterpret_cast<unsigned char>(0x19930520) || (ecx16 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(a2 + 28) + 8), ecx16 == 0))) {
                v17 = a9;
                fun_41558e(a2, a3, a4, a5, a6, *reinterpret_cast<signed char*>(&v17), a7, a8);
                goto addr_415587_5;
            } else {
                eax15 = reinterpret_cast<int32_t>(ecx16(a2, a3, a4, a5, a6, a7, a8, static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&a9))));
            }
        }
        return eax15;
    } else {
        if (*reinterpret_cast<void***>(a6 + 4) && !a7) {
            fun_41583a(ecx, a3, a5, a6, 0xff);
            goto addr_415587_5;
        }
    }
}

int32_t RtlUnwind = 0x19ae6;

void fun_417e70() {
    goto RtlUnwind;
}

int32_t HeapCreate = 0x19b6c;

int32_t HeapDestroy = 0x19b5e;

int32_t fun_414456(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14) {
    void** eax15;
    void** eax16;
    void*** eax17;
    void** eax18;
    void** v19;

    eax15 = reinterpret_cast<void**>(0);
    *reinterpret_cast<unsigned char*>(&eax15) = reinterpret_cast<uint1_t>(a2 == 0);
    eax16 = reinterpret_cast<void**>(HeapCreate());
    g41f8a4 = eax16;
    if (eax16) {
        eax17 = fun_41430e(ecx, eax15, 0x1000, 0, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
        g41f8a8 = eax17;
        if (!reinterpret_cast<int1_t>(eax17 == 3)) {
            if (!reinterpret_cast<int1_t>(eax17 == 2)) 
                goto addr_4144af_4;
            eax18 = fun_414dd5();
        } else {
            eax18 = fun_4144b3();
            ecx = reinterpret_cast<void**>(0x3f8);
        }
        if (eax18) {
            addr_4144af_4:
            goto eax15;
        } else {
            v19 = g41f8a4;
            HeapDestroy(ecx, v19);
        }
    }
    goto eax15;
}

void** g41f2b0 = reinterpret_cast<void**>(0);

int32_t ExitWindowsEx = 0x195f6;

int32_t OpenProcessToken = 0x1991e;

int32_t LookupPrivilegeValueA = 0x19906;

int32_t AdjustTokenPrivileges = 0x198ee;

int32_t GetDriveTypeA = 0x1922e;

int32_t DialogBoxParamA = 0x19606;

void** fun_40aa80(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29);

int32_t fun_40bb70(void** ecx, void** a2, int32_t a3, int32_t a4, void** a5, uint32_t a6, void** a7, void** a8, void** a9, void** a10) {
    void** v11;
    void** ebx12;
    int32_t eax13;
    void** v14;
    void** esi15;
    int32_t esi16;
    void** v17;
    void** edi18;
    void** eax19;
    void** eax20;
    void** ecx21;
    void** eax22;
    int32_t esi23;
    void* esp24;
    void** edx25;
    void** eax26;
    int1_t zf27;
    int1_t zf28;
    void** v29;
    void** v30;
    void** v31;
    void** v32;
    void** v33;
    void** v34;
    void** v35;
    void** v36;
    void** v37;
    void** eax38;
    void** eax39;
    void** v40;
    void** v41;
    void** v42;
    void** v43;
    int32_t eax44;
    void* esp45;
    void** v46;
    void** v47;
    void** v48;
    void** v49;
    void** v50;
    void** v51;
    void** v52;
    void** v53;
    void** v54;
    void** v55;
    void** v56;
    void** v57;
    void** v58;
    void** v59;
    void** v60;
    void** v61;
    void** v62;
    void** v63;
    void** v64;
    void** v65;
    void** v66;
    void** v67;
    void** v68;
    void* esp69;
    int1_t zf70;
    int1_t zf71;
    void* v72;
    int32_t eax73;
    int32_t eax74;
    int1_t zf75;
    int32_t v76;
    void** eax77;
    int1_t zf78;
    void** v79;
    void** v80;
    void** v81;
    void** v82;
    void** v83;
    void** v84;
    void** v85;
    void** v86;
    void** v87;
    void** eax88;
    int1_t zf89;
    void** v90;
    void** v91;
    void** v92;
    void** v93;
    void** v94;
    void** v95;
    void** v96;
    void** v97;
    int32_t eax98;
    void** v99;
    void** v100;
    void** v101;
    void** v102;
    void** v103;
    void** edx104;
    void** eax105;
    void** eax106;
    int32_t eax107;
    int32_t eax108;
    void** v109;
    void** v110;
    void** v111;
    void** v112;
    void** v113;
    void** v114;
    void** v115;
    void** v116;
    void** v117;
    void** v118;
    void** v119;
    void** v120;
    void** v121;
    void** v122;
    int1_t zf123;
    int1_t zf124;
    void** eax125;
    void* esp126;
    void** edx127;
    void* esp128;
    void** eax129;
    int1_t zf130;
    int1_t zf131;
    int1_t zf132;
    int1_t zf133;
    int32_t eax134;
    int1_t zf135;
    void** edx136;
    void** eax137;
    void** v138;
    void** v139;
    void** v140;
    void** v141;
    void** v142;
    void** v143;
    void** v144;
    void** v145;
    void** v146;
    void** v147;
    void** v148;
    void** v149;
    void** v150;
    void** v151;
    void** v152;
    void** v153;
    void** v154;
    void** v155;
    void** v156;
    void** v157;
    void** v158;
    void** v159;
    void** v160;
    void** v161;
    void** v162;
    void** v163;
    void** v164;
    void** eax165;
    void** eax166;
    int32_t eax167;
    int1_t zf168;
    void** eax169;
    void** v170;
    int1_t zf171;
    int32_t esi172;
    void* esp173;
    void* v174;
    int32_t eax175;
    int32_t edi176;
    int32_t* esp177;
    int32_t v178;
    int32_t ebp179;
    int32_t ebp180;
    void* v181;
    void* esp182;
    int32_t eax183;
    int1_t zf184;
    int1_t zf185;
    int1_t zf186;
    int1_t zf187;
    void** v188;
    void** v189;
    void** v190;
    void** v191;
    void** eax192;
    void** v193;
    void** v194;
    void** v195;
    void** v196;
    void** v197;
    void** v198;
    void** v199;
    void** v200;
    void** v201;
    void** v202;

    v11 = ebx12;
    eax13 = fun_40bf80(ecx, a2);
    if (!eax13) {
        return eax13;
    }
    v14 = esi15;
    esi16 = GetSystemMetrics;
    v17 = edi18;
    eax19 = reinterpret_cast<void**>(esi16());
    g41f2d4 = eax19;
    eax20 = reinterpret_cast<void**>(esi16());
    g41f2d0 = eax20;
    ecx21 = a2;
    fun_40b370(ecx21);
    eax22 = g41f0dc;
    esi23 = GetModuleFileNameA;
    esp24 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 0x22c - 4 - 4 - 4 + 4 + 4 - 4 - 4 - 4 - 4 + 4 - 4 - 4 + 4 - 4 - 4 + 4 + 4);
    if (eax22) {
        edx25 = g41f0d0;
        eax26 = g41f330;
        esi23(eax26, edx25, 0x104);
        ecx21 = g41f0d0;
        fun_40b590(ecx21, 0, ecx21, eax26, edx25, 0x104, ecx21, 0, ecx21, eax26, edx25, 0x104);
        esp24 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp24) - 4 - 4 - 4 - 4 + 4 - 4 - 4 - 4 + 4 + 8);
    }
    zf27 = g41f2b8 == 0;
    if (!zf27) 
        goto addr_40bc0b_6;
    zf28 = g41f2b0 == 0;
    if (zf28) 
        goto addr_40bc29_8;
    addr_40bc0b_6:
    eax38 = fun_40c510(1, 0, v17, v14, v11, 0, 0, v29, v30, v31, v32, v33, v34, v35, v36, v37);
    esp24 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp24) - 4 + 4);
    v11 = eax38;
    if (!eax38) 
        goto addr_40becf_9;
    eax39 = g41f2b8;
    if (eax39) {
        v40 = eax39 - 1;
        fun_40b0d0(v40);
        fun_403b20(0x1000000, 0, 0, v40, 1, 0, v17, v14, v11, 0, 0, v41, v42, v43);
        fun_403b20(0x2000000, 0, 0, 0x1000000, 0, 0, v40, 1, 0, v17, v14, v11, 0, 0);
        fun_403b20(0x3000000, 0, 0, 0x2000000, 0, 0, 0x1000000, 0, 0, v40, 1, 0, v17, v14);
        esp24 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp24) - 4 - 4 + 4 - 4 - 4 - 4 - 4 + 4 - 4 - 4 - 4 - 4 + 4 - 4 - 4 - 4 - 4 + 4 + 40);
    } else {
        addr_40bc29_8:
        eax44 = fun_40c2e0();
        esp24 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp24) - 4 + 4);
        if (!eax44) 
            goto addr_40becf_9; else 
            goto addr_40bc36_12;
    }
    addr_40bed7_13:
    esp45 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp24) + 4 + 4);
    if (v11) {
        fun_40b2d0(ecx21, v17, v14, v11, 0, 0, v46, v47, v48, v49, v50, v51, v52, v53, v54, v55, v56);
        esp45 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp45) - 4 + 4);
    }
    fun_40c260(ecx21, v17, v14, v11, 0, 0, v57, v58, v59, v60, v61, v62, v63, v64, v65, v66, v67, v68);
    esp69 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp45) - 4 + 4);
    zf70 = reinterpret_cast<int1_t>(g41f35c == 16);
    if (!zf70) 
        goto addr_40bf52_16;
    zf71 = g41f2ec == 0;
    if (zf71) {
        addr_40bf49_18:
        ExitWindowsEx(2, 0);
        goto addr_40bf52_16;
    } else {
        v72 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp69) + 8);
        eax73 = reinterpret_cast<int32_t>(GetCurrentProcess(40, v72));
        eax74 = reinterpret_cast<int32_t>(OpenProcessToken(eax73, 40, v72));
        esp69 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp69) - 4 - 4 - 4 + 4 - 4 - 4 + 4);
        if (!eax74) {
            addr_40bf52_16:
            if (!v14) {
            }
        } else {
            LookupPrivilegeValueA(0, "SeShutdownPrivilege");
            AdjustTokenPrivileges(reinterpret_cast<int32_t>(esp69) + 16, 0, reinterpret_cast<int32_t>(esp69) - 4 - 4 - 4 - 4 + 4 - 4 - 4 + 20, 0, 0, 0, 0, "SeShutdownPrivilege");
            goto addr_40bf49_18;
        }
    }
    zf75 = g41f35c == 0;
    if (!zf75) {
    }
    goto v76;
    addr_40bc36_12:
    eax77 = g41f0dc;
    if (eax77 || (zf78 = g41f0d8 == 0, !zf78)) {
        addr_40bca8_25:
        if (v11 || (eax88 = fun_40c510(1, 0, v17, v14, v11, 0, 0, v79, v80, v81, v82, v83, v84, v85, v86, v87), esp24 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp24) - 4 + 4), v11 = eax88, !!eax88)) {
            zf89 = g41f360 == 0;
            if (zf89) {
                ecx21 = g41f27c;
                if (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx21 + 20)) & 2)) {
                    fun_402c30();
                    esp24 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp24) - 4 + 4);
                }
                eax98 = fun_40c360(1, 0, v17, v14, v11, 0, 0, v90, v91, v92, v93, v94, v95, v96, v97);
                esp24 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp24) - 4 + 4);
                if (!eax98) 
                    goto addr_40becf_9;
            } else {
                fun_40a230(ecx21, 0, 1, 0, v17, v14, v11, 0, 0, v99, v100, v101, v102, v103);
                esp24 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp24) - 4 - 4 + 4 + 4);
                goto addr_40bcf5_31;
            }
        } else {
            addr_40becf_9:
            v14 = reinterpret_cast<void**>(0xffffffff);
            goto addr_40bed7_13;
        }
    } else {
        edx104 = g41f0d0;
        eax105 = g41f330;
        esi23(eax105, edx104, 0x104);
        eax106 = g41f0d0;
        ecx21 = *reinterpret_cast<void***>(eax106);
        if ((!reinterpret_cast<int1_t>(ecx21 == 92) || *reinterpret_cast<void***>(eax106 + 1) != ecx21) && (ecx21 && reinterpret_cast<int1_t>(*reinterpret_cast<void***>(eax106 + 1) == 58))) {
            *reinterpret_cast<void***>(eax106 + 3) = reinterpret_cast<void**>(0);
            eax106 = g41f0d0;
        }
        eax107 = reinterpret_cast<int32_t>(GetDriveTypeA(eax106, eax105, edx104, 0x104));
        esp24 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp24) - 4 - 4 - 4 - 4 + 4 - 4 - 4 + 4);
        if (eax107 == 2) 
            goto addr_40bc96_35;
        if (eax107 != 5) 
            goto addr_40bca8_25;
        addr_40bc96_35:
        eax108 = fun_40b7c0(a3, 0, eax106, eax105, edx104, 0x104);
        esp24 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp24) - 4 - 4 - 4 + 4 + 8);
        if (eax108) 
            goto addr_40bec8_37; else 
            goto addr_40bca8_25;
    }
    fun_405310(1, 0, v17, v14, v11, 0, 0, v109, v110, v111, v112, v113, v114, v115, v116, v117, v118, v119, v120, v121, v122);
    esp24 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp24) - 4 + 4);
    addr_40bcf5_31:
    zf123 = g41f358 == 0;
    if (zf123 && ((zf124 = g41f364 == 0, zf124) && (eax125 = g41f0f8, !!eax125))) {
        fun_4092d0(eax125, 1, 0, v17, eax125, 1, 0, v17);
        esp126 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp24) - 4 - 4 + 4);
        edx127 = g41f0d0;
        wsprintfA(reinterpret_cast<int32_t>(esp126) + 52, "rundll32 desk.cpl,InstallScreenSaver %s", edx127, eax125);
        esp128 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp126) - 4 - 4 - 4 - 4 + 4 + 16);
        ecx21 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp128) + 48);
        WinExec(ecx21, 1);
        esp24 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp128) - 4 - 4 - 4 + 4);
    }
    eax129 = g41f334;
    if (eax129) {
        ShowWindow(eax129, 0);
        esp24 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp24) - 4 - 4 - 4 + 4);
    }
    zf130 = g41f35c == 0;
    if (!zf130 && (zf131 = g41f364 == 0, zf131)) {
        zf132 = g41f358 == 0;
        if (zf132 && ((zf133 = g41f2b4 == 0, zf133) && (eax134 = fun_403ab0(1, 0), esp24 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp24) - 4 + 4), !!eax134))) {
            fun_40b7c0(a3, 1, 1, 0, v17, v14);
            esp24 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp24) - 4 - 4 - 4 + 4 + 8);
        }
        zf135 = g41f360 == 0;
        if ((zf135 || (edx136 = g41f27c, eax137 = *reinterpret_cast<void***>(edx136), *reinterpret_cast<signed char*>(&eax137 + 1) < 0)) && ((eax165 = fun_403a00(6, 8, 1, 0, v17, v14, v11, 0, 0, v138, v139, v140, v141, v142, v143, v144, v145, v146, v147, v148, v149, v150, v151, v152, v153, v154, v155, v156, v157, v158, v159, v160, v161, v162, v163, v164), esp24 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp24) - 4 - 4 - 4 + 4 + 8), !!eax165) && (*reinterpret_cast<void***>(eax165) && ((eax166 = g41f338, ecx21 = g41f330, eax167 = reinterpret_cast<int32_t>(DialogBoxParamA(ecx21, 0x83, eax166, fun_40aa80, 0)), esp24 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp24) - 4 - 4 - 4 - 4 - 4 - 4 + 4), eax167 == 1) && (zf168 = g41f358 == 0, zf168))))) {
            g41f35c = reinterpret_cast<void**>(16);
        }
    }
    eax169 = g41f334;
    if (eax169) {
        v170 = eax169;
        DestroyWindow(v170);
        esp24 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp24) - 4 - 4 + 4);
        zf171 = reinterpret_cast<int1_t>(g41f35c == 16);
        if (!zf171 && (esi172 = GetMessageA, esp173 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp24) - 4 - 4), v174 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp173) + 28), eax175 = reinterpret_cast<int32_t>(esi172(v174, 0, 0, 0, v170)), esp24 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp173) - 4 - 4 - 4 + 4), !!eax175)) {
            edi176 = TranslateMessage;
            esp177 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp24) - 4);
            v178 = ebp179;
            ebp180 = DispatchMessageA;
            do {
                v181 = reinterpret_cast<void*>(esp177 + 6);
                edi176(v181, v178, v174, 0, 0, 0, v170);
                esp182 = reinterpret_cast<void*>(esp177 - 1 - 1 + 1);
                ecx21 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp182) + 24);
                ebp180(ecx21, v181, v178, v174, 0, 0, 0, v170);
                eax183 = reinterpret_cast<int32_t>(esi172());
                esp177 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp182) - 4 - 4 + 4 - 4 - 4 - 4 - 4 - 4 + 4);
            } while (eax183);
            esp24 = reinterpret_cast<void*>(esp177 + 1);
        }
        g41f334 = reinterpret_cast<void**>(0);
        g41f338 = reinterpret_cast<void**>(0);
    }
    zf184 = g41f358 == 0;
    if (zf184 && ((zf185 = g41f35c == 0, zf185) && ((zf186 = g41f2b4 == 0, zf186) && ((zf187 = g41f364 == 0, zf187) && (fun_403b20(0x3000000, 0, 1, 1, 0, v17, v14, v11, 0, 0, v188, v189, v190, v191), eax192 = g41a2b8, esp24 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp24) - 4 - 4 - 4 - 4 + 4 + 12), !!eax192))))) {
        fun_403b20(0x4000000, 1, 1, 1, 0, v17, v14, v11, 0, 0, v193, v194, v195, v196);
        esp24 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp24) - 4 - 4 - 4 - 4 + 4 + 12);
        goto addr_40bed7_13;
    }
    addr_40bec8_37:
    fun_40c260(ecx21, eax106, eax105, edx104, 0x104, 1, 0, v17, v14, v11, 0, 0, v197, v198, v199, v200, v201, v202);
    esp24 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp24) - 4 + 4);
    goto addr_40bed7_13;
}

void** fun_4166da(void** a1);

int32_t UnhandledExceptionFilter = 0x19bf8;

void** g41f424 = reinterpret_cast<void**>(0);

int32_t g41eff8 = 3;

int32_t g41effc = 7;

void** g41f004 = reinterpret_cast<void**>(0x8c);

uint32_t fun_416599(void** a1, void** a2) {
    void** eax3;
    void** ebx4;
    uint32_t eax5;
    void** ecx6;
    void** v7;
    int32_t ecx8;
    int32_t edx9;
    int32_t edx10;
    int32_t edx11;
    uint32_t* esi12;
    void** esi13;

    eax3 = fun_4166da(a1);
    if (!eax3 || (ebx4 = *reinterpret_cast<void***>(eax3 + 8), ebx4 == 0)) {
        eax5 = reinterpret_cast<uint32_t>(UnhandledExceptionFilter(a1, a2));
    } else {
        if (!reinterpret_cast<int1_t>(ebx4 == 5)) {
            if (ebx4 != 1) {
                ecx6 = g41f424;
                v7 = ecx6;
                g41f424 = a2;
                if (!reinterpret_cast<int1_t>(*reinterpret_cast<void***>(eax3 + 4) == 8)) {
                    *reinterpret_cast<void***>(eax3 + 8) = reinterpret_cast<void**>(0);
                    ebx4();
                } else {
                    ecx8 = g41eff8;
                    edx9 = g41effc;
                    edx10 = edx9 + ecx8;
                    if (ecx8 < edx10) {
                        edx11 = edx10 - ecx8;
                        esi12 = reinterpret_cast<uint32_t*>((ecx8 + ecx8 * 2) * 4 + 0x41ef88);
                        do {
                            *esi12 = 0;
                            esi12 = esi12 + 3;
                            --edx11;
                        } while (edx11);
                    }
                    esi13 = g41f004;
                    if (!reinterpret_cast<int1_t>(*reinterpret_cast<void***>(eax3) == 0xc000008e)) {
                        if (!reinterpret_cast<int1_t>(*reinterpret_cast<void***>(eax3) == 0xc0000090)) {
                            if (!reinterpret_cast<int1_t>(*reinterpret_cast<void***>(eax3) == 0xc0000091)) {
                                if (!reinterpret_cast<int1_t>(*reinterpret_cast<void***>(eax3) == 0xc0000093)) {
                                    if (!reinterpret_cast<int1_t>(*reinterpret_cast<void***>(eax3) == 0xc000008d)) {
                                        if (!reinterpret_cast<int1_t>(*reinterpret_cast<void***>(eax3) == 0xc000008f)) {
                                            if (reinterpret_cast<int1_t>(*reinterpret_cast<void***>(eax3) == 0xc0000092)) {
                                                g41f004 = reinterpret_cast<void**>(0x8a);
                                            }
                                        } else {
                                            g41f004 = reinterpret_cast<void**>(0x86);
                                        }
                                    } else {
                                        g41f004 = reinterpret_cast<void**>(0x82);
                                    }
                                } else {
                                    g41f004 = reinterpret_cast<void**>(0x85);
                                }
                            } else {
                                g41f004 = reinterpret_cast<void**>(0x84);
                            }
                        } else {
                            g41f004 = reinterpret_cast<void**>(0x81);
                        }
                    } else {
                        g41f004 = reinterpret_cast<void**>(0x83);
                    }
                    ebx4();
                    g41f004 = esi13;
                }
                g41f424 = v7;
            }
            eax5 = 0xffffffff;
        } else {
            *reinterpret_cast<void***>(eax3 + 8) = reinterpret_cast<void**>(0);
            eax5 = 1;
        }
    }
    return eax5;
}

void*** fun_416fdb(void** a1, void** a2, void** a3, uint32_t a4) {
    void*** v5;
    void** edi6;
    void** bl7;
    void** esi8;
    int1_t less_or_equal9;
    void** ecx10;
    uint32_t eax11;
    void** eax12;
    void** v13;
    void*** eax14;
    void** ecx15;
    void*** v16;
    int1_t less_or_equal17;
    void** esi18;
    void** eax19;
    void** eax20;
    int1_t less_or_equal21;
    void** eax22;
    void** eax23;
    void** eax24;
    uint32_t ecx25;
    void** v26;
    uint32_t ecx27;
    uint32_t ecx28;
    unsigned char cl29;

    v5 = reinterpret_cast<void***>(0);
    edi6 = a1;
    bl7 = *reinterpret_cast<void***>(edi6);
    esi8 = edi6 + 1;
    while (1) {
        less_or_equal9 = reinterpret_cast<signed char>(g41ee7c) <= reinterpret_cast<signed char>(1);
        if (less_or_equal9) {
            ecx10 = g41ec70;
            eax11 = reinterpret_cast<unsigned char>(bl7);
            *reinterpret_cast<void***>(&eax11) = *reinterpret_cast<void***>(ecx10 + eax11 * 2);
            eax12 = reinterpret_cast<void**>(eax11 & 8);
        } else {
            eax12 = fun_4160ba(ecx10, static_cast<uint32_t>(reinterpret_cast<unsigned char>(bl7)), 8);
            ecx10 = reinterpret_cast<void**>(8);
        }
        if (!eax12) 
            break;
        bl7 = *reinterpret_cast<void***>(esi8);
        ++esi8;
    }
    v13 = esi8;
    if (!reinterpret_cast<int1_t>(bl7 == 45)) {
        if (!reinterpret_cast<int1_t>(bl7 == 43)) {
            addr_41703c_9:
            if (reinterpret_cast<signed char>(a3) < reinterpret_cast<signed char>(0) || (a3 == 1 || reinterpret_cast<signed char>(a3) > reinterpret_cast<signed char>(36))) {
                if (a2) {
                    *reinterpret_cast<void***>(a2) = edi6;
                }
                eax14 = reinterpret_cast<void***>(0);
            } else {
                ecx15 = reinterpret_cast<void**>(16);
                if (a3) {
                    addr_417084_14:
                    if (reinterpret_cast<int1_t>(a3 == 16) && (reinterpret_cast<int1_t>(bl7 == 48) && (*reinterpret_cast<void***>(esi8) == 0x78 || reinterpret_cast<int1_t>(*reinterpret_cast<void***>(esi8) == 88)))) {
                        bl7 = *reinterpret_cast<void***>(esi8 + 1);
                        v13 = esi8 + 1 + 1;
                    }
                } else {
                    if (bl7 == 48) {
                        if (*reinterpret_cast<void***>(esi8) == 0x78 || *reinterpret_cast<void***>(esi8) == 88) {
                            a3 = reinterpret_cast<void**>(16);
                            goto addr_417084_14;
                        } else {
                            a3 = reinterpret_cast<void**>(8);
                        }
                    } else {
                        a3 = reinterpret_cast<void**>(10);
                    }
                }
                v16 = reinterpret_cast<void***>(-1 / reinterpret_cast<unsigned char>(a3));
                while (1) {
                    less_or_equal17 = reinterpret_cast<signed char>(g41ee7c) <= reinterpret_cast<signed char>(1);
                    esi18 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(bl7)));
                    if (less_or_equal17) {
                        eax19 = g41ec70;
                        eax19 = *reinterpret_cast<void***>(eax19 + reinterpret_cast<unsigned char>(esi18) * 2);
                        eax20 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax19) & 4);
                    } else {
                        eax20 = fun_4160ba(ecx15, esi18, 4);
                        ecx15 = reinterpret_cast<void**>(4);
                    }
                    if (!eax20) {
                        less_or_equal21 = reinterpret_cast<signed char>(g41ee7c) <= reinterpret_cast<signed char>(1);
                        if (less_or_equal21) {
                            eax22 = g41ec70;
                            eax22 = *reinterpret_cast<void***>(eax22 + reinterpret_cast<unsigned char>(esi18) * 2);
                            eax23 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax22) & 0x103);
                        } else {
                            eax23 = fun_4160ba(ecx15, esi18, 0x103);
                            ecx15 = reinterpret_cast<void**>(0x103);
                        }
                        if (!eax23) 
                            break;
                        eax20 = fun_413e29(ecx15, static_cast<int32_t>(reinterpret_cast<signed char>(bl7)));
                        ecx15 = eax20 - 55;
                    } else {
                        ecx15 = bl7 - 48;
                    }
                    if (reinterpret_cast<unsigned char>(ecx15) >= reinterpret_cast<unsigned char>(a3)) 
                        break;
                    a4 = a4 | 8;
                    if (reinterpret_cast<uint32_t>(v5) < reinterpret_cast<uint32_t>(v16) || v5 == v16 && reinterpret_cast<unsigned char>(ecx15) <= reinterpret_cast<unsigned char>(-1 % reinterpret_cast<unsigned char>(a3))) {
                        v5 = reinterpret_cast<void***>(reinterpret_cast<uint32_t>(v5) * reinterpret_cast<unsigned char>(a3) + reinterpret_cast<unsigned char>(ecx15));
                    } else {
                        a4 = a4 | 4;
                    }
                    eax24 = v13;
                    ++v13;
                    bl7 = *reinterpret_cast<void***>(eax24);
                }
                ecx25 = a4;
                v26 = v13 - 1;
                if (*reinterpret_cast<unsigned char*>(&ecx25) & 8) {
                    if (*reinterpret_cast<unsigned char*>(&ecx25) & 4 || !(*reinterpret_cast<unsigned char*>(&ecx25) & 1) && ((ecx27 = ecx25 & 2, !!ecx27) && reinterpret_cast<uint32_t>(v5) > 0x80000000 || !ecx27 && reinterpret_cast<uint32_t>(v5) > 0x7fffffff)) {
                        g41f388 = reinterpret_cast<uint32_t*>(34);
                        if (!(*reinterpret_cast<unsigned char*>(&a4) & 1)) {
                            ecx28 = a4;
                            cl29 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ecx28) & 2);
                            *reinterpret_cast<unsigned char*>(&ecx28) = -cl29;
                            v5 = reinterpret_cast<void***>(-(ecx28 - (ecx28 + reinterpret_cast<uint1_t>(ecx28 < ecx28 + reinterpret_cast<uint1_t>(!!cl29)))) + 0x7fffffff);
                        } else {
                            v5 = reinterpret_cast<void***>(0xffffffff);
                        }
                    }
                } else {
                    if (a2) {
                        v26 = a1;
                    }
                    v5 = reinterpret_cast<void***>(0);
                }
                if (a2) {
                    *reinterpret_cast<void***>(a2) = v26;
                }
                if (*reinterpret_cast<unsigned char*>(&a4) & 2) {
                    v5 = reinterpret_cast<void***>(-reinterpret_cast<uint32_t>(v5));
                }
                eax14 = v5;
            }
        } else {
            addr_417036_50:
            bl7 = *reinterpret_cast<void***>(esi8);
            ++esi8;
            v13 = esi8;
            goto addr_41703c_9;
        }
        return eax14;
    } else {
        a4 = a4 | 2;
        goto addr_417036_50;
    }
}

void** fun_41558e(void** a1, void** a2, void** a3, int32_t a4, void** a5, signed char a6, void** a7, void** a8) {
    void* esp9;
    void* esp10;
    int32_t v11;
    void** eax12;
    void** v13;
    void** ecx14;
    void** esi15;
    void* esp16;
    void** eax17;
    int32_t eax18;
    void** eax19;
    void** esp20;
    void** v21;
    void** esp22;
    void** v23;
    int32_t eax24;
    void** edi25;
    struct s73* eax26;
    struct s73* ebx27;
    void** v28;
    void** v29;
    struct s74* v30;
    uint1_t less_or_equal31;
    int32_t v32;
    struct s1* edi33;
    uint1_t less_or_equal34;
    void** v35;
    void** v36;
    void** v37;
    void** eax38;
    void** v39;
    void* esp40;
    void** eax41;
    void** esp42;
    void** esp43;
    void** v44;
    void** eax45;
    void* v46;
    int32_t eax47;
    int32_t eax48;
    void** eax49;
    uint32_t eax50;
    void** v51;
    void** eax52;
    void** eax53;
    void** v54;
    void** v55;
    void** v56;
    void** v57;
    void** esi58;
    void** eax59;

    esp9 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    esp10 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp9) - 24);
    *reinterpret_cast<unsigned char*>(&v11) = 0;
    eax12 = *reinterpret_cast<void***>(a2 + 8);
    v13 = eax12;
    if (reinterpret_cast<signed char>(eax12) < reinterpret_cast<signed char>(0xffffffff) || (ecx14 = a5, reinterpret_cast<signed char>(eax12) >= reinterpret_cast<signed char>(*reinterpret_cast<void***>(ecx14 + 4)))) {
        eax12 = fun_415d92(ecx14);
        esp10 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp10) - 4 + 4);
    }
    esi15 = a1;
    esp16 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp10) - 4 - 4 - 4);
    if (!reinterpret_cast<int1_t>(*reinterpret_cast<void***>(esi15) == 0xe06d7363)) 
        goto addr_41570a_4;
    if (reinterpret_cast<int1_t>(*reinterpret_cast<void***>(esi15 + 16) == 3) && (reinterpret_cast<int1_t>(*reinterpret_cast<void***>(esi15 + 20) == 0x19930520) && !*reinterpret_cast<void***>(esi15 + 28))) {
        esi15 = g41f40c;
        if (!esi15) {
            addr_415705_7:
            return eax12;
        } else {
            eax17 = g41f410;
            a3 = eax17;
            *reinterpret_cast<unsigned char*>(&v11) = 1;
            eax18 = fun_4175c9(esi15);
            ecx14 = reinterpret_cast<void**>(1);
            esp16 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp16) - 4 - 4 - 4 + 4 + 4 + 4);
            if (!eax18) {
                fun_415d92(1);
                esp16 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp16) - 4 + 4);
            }
            if (!reinterpret_cast<int1_t>(*reinterpret_cast<void***>(esi15) == 0xe06d7363)) 
                goto addr_41570a_4;
            if (reinterpret_cast<int1_t>(*reinterpret_cast<void***>(esi15 + 16) == 3) && (reinterpret_cast<int1_t>(*reinterpret_cast<void***>(esi15 + 20) == 0x19930520) && !*reinterpret_cast<void***>(esi15 + 28))) {
                fun_415d92(1);
                esp16 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp16) - 4 + 4);
            }
        }
    }
    if (!reinterpret_cast<int1_t>(*reinterpret_cast<void***>(esi15) == 0xe06d7363) || (!reinterpret_cast<int1_t>(*reinterpret_cast<void***>(esi15 + 16) == 3) || !reinterpret_cast<int1_t>(*reinterpret_cast<void***>(esi15 + 20) == 0x19930520))) {
        addr_41570a_4:
        if (a6) {
            eax19 = *reinterpret_cast<void***>(&g0);
            esp20 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp16) - 4 - 4 - 4 - 4 - 4);
            *reinterpret_cast<void***>(&g0) = esp20;
            v21 = ecx14;
            esp22 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp20 - 4) - 4 - 4 - 4 - 4);
            v23 = esp22;
            eax24 = g41f418;
            if (eax24) 
                goto addr_415d6e_16;
        } else {
            eax12 = fun_415735(ecx14, esi15, a2, a3, a4, a5, v13, a7, a8);
            goto addr_415705_7;
        }
    } else {
        edi25 = v13;
        eax26 = fun_413b66(ecx14, a5, a7, edi25, reinterpret_cast<int32_t>(esp9) - 4, reinterpret_cast<int32_t>(esp9) + 0xffffffe8);
        ebx27 = eax26;
        while (eax12 = v28, reinterpret_cast<unsigned char>(eax12) < reinterpret_cast<unsigned char>(v29)) {
            if (reinterpret_cast<signed char>(ebx27->f0) > reinterpret_cast<signed char>(edi25) || reinterpret_cast<signed char>(edi25) > reinterpret_cast<signed char>(ebx27->f4)) {
                addr_4156ea_21:
                ++v28;
                ++ebx27;
                continue;
            } else {
                v30 = ebx27->f16;
                less_or_equal31 = reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(ebx27->f12 < 0) | reinterpret_cast<uint1_t>(ebx27->f12 == 0));
                v32 = ebx27->f12;
                if (less_or_equal31) {
                    addr_4156e7_23:
                    edi25 = v13;
                    goto addr_4156ea_21;
                } else {
                    do {
                        edi33 = reinterpret_cast<struct s1*>(*reinterpret_cast<void***>(*reinterpret_cast<void***>(esi15 + 28) + 12) + 4);
                        less_or_equal34 = reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(*reinterpret_cast<void***>(*reinterpret_cast<void***>(*reinterpret_cast<void***>(esi15 + 28) + 12))) < reinterpret_cast<signed char>(0)) | reinterpret_cast<uint1_t>(*reinterpret_cast<void***>(*reinterpret_cast<void***>(*reinterpret_cast<void***>(esi15 + 28) + 12)) == 0));
                        v35 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(*reinterpret_cast<void***>(esi15 + 28) + 12));
                        if (!less_or_equal34) {
                            do {
                                v36 = *reinterpret_cast<void***>(esi15 + 28);
                                v37 = edi33->f0;
                                eax38 = fun_4157dd(v30, v37, v36);
                                if (eax38) 
                                    goto addr_4156c3_26;
                                --v35;
                                edi33 = reinterpret_cast<struct s1*>(&edi33->f4);
                            } while (reinterpret_cast<signed char>(v35) > reinterpret_cast<signed char>(eax38));
                        }
                        --v32;
                        ++v30;
                    } while (v32 > 0);
                }
            }
            goto addr_4156e7_23;
            addr_4156c3_26:
            v39 = edi33->f0;
            fun_4158ee(ecx14, esi15, a2, a3, a4, a5, v30, v39, ebx27, a7, a8, v11);
            goto addr_4156e7_23;
        }
        if (!a6) 
            goto addr_415705_7; else 
            goto addr_4156fb_31;
    }
    addr_415d84_32:
    fun_415d8d(ecx14, 0x19930520, esi15, 0xe06d7363, v23, v21, eax19);
    fun_416e71(ecx14, 10);
    fun_417cfe(22);
    fun_4130b9(10, 3);
    esp40 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp22 - 4) + 4 - 4 - 4 + 4 - 4 - 4 + 4 + 4 + 4 - 4 - 4 + 4 - 4);
    eax41 = *reinterpret_cast<void***>(&g0);
    esp42 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp40) - 4 - 4 - 4 - 4);
    *reinterpret_cast<void***>(&g0) = esp42;
    esp43 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp42 - 24) - 4 - 4 - 4);
    v44 = esp43;
    eax45 = g41f538;
    if (!eax45) {
        v46 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp40) + 0xffffffe4);
        eax47 = reinterpret_cast<int32_t>(GetStringTypeW(10, 1, 0x4187ec, 1, v46));
        esp43 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp43 - 4) - 4 + 4 - 4 - 4 - 4 - 4 + 4);
        if (!eax47) {
            eax48 = reinterpret_cast<int32_t>(GetStringTypeA(10, 0, 1, 0x4187e8, 1, reinterpret_cast<uint32_t>(esp40) + 0xffffffe4, 1, 0x4187ec, 1, v46));
            if (!eax48) 
                goto addr_4177f0_38;
            eax45 = reinterpret_cast<void**>(2);
            esp43 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp43 - 4) - 4 - 4 - 4 - 4 - 4 + 4 - 4 + 4);
        } else {
            eax45 = reinterpret_cast<void**>(1);
        }
        g41f538 = eax45;
    }
    if (!reinterpret_cast<int1_t>(eax45 == 2)) {
        if (!reinterpret_cast<int1_t>(eax45 == 1)) {
            addr_4177f0_38:
        } else {
            if (!v21) {
                eax49 = g41f3f8;
                v21 = eax49;
            }
            eax50 = reinterpret_cast<uint32_t>(-0x416d60);
            v51 = reinterpret_cast<void**>((eax50 - (eax50 + reinterpret_cast<uint1_t>(eax50 < eax50 + 1)) & 8) + 1);
            eax52 = reinterpret_cast<void**>(MultiByteToWideChar(10, v21, v51, esi15, 0xe06d7363, 0, 0));
            if (!eax52) 
                goto addr_4177f0_38; else 
                goto addr_41778d_47;
        }
    } else {
        eax53 = eax19;
        if (!eax53) {
            eax53 = g41f3e8;
        }
        GetStringTypeA(10, eax53, 0x19930520, esi15, 0xe06d7363, v23);
    }
    addr_4177f2_51:
    *reinterpret_cast<void***>(&g0) = eax41;
    goto 3;
    addr_41778d_47:
    fun_414180(10, v21, v51, esi15, 0xe06d7363, 0, 0, 0x19930520, esi15, 0xe06d7363, v54, v55, eax52, v56, v44, v57, eax41, 0x416d60, 0x418af8, 0);
    esi58 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp43 - 4) - 4 - 4 - 4 - 4 - 4 - 4 + 4 - 4 + 4);
    fun_415420(10, esi58, 0, reinterpret_cast<unsigned char>(eax52) + reinterpret_cast<unsigned char>(eax52), v21, v51, esi15, 0xe06d7363, 0, 0);
    if (!esi58) 
        goto addr_4177f0_38;
    eax59 = reinterpret_cast<void**>(MultiByteToWideChar(10, v21, 1, esi15, 0xe06d7363, esi58, eax52, v21, v51, esi15, 0xe06d7363, 0, 0));
    if (!eax59) 
        goto addr_4177f0_38;
    GetStringTypeW(10, 0x19930520, esi58, eax59, v23, v21, 1, esi15, 0xe06d7363, esi58, eax52, v21, v51, esi15, 0xe06d7363, 0, 0);
    goto addr_4177f2_51;
    addr_415d6e_16:
    eax24();
    esp22 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp22 - 4) + 4);
    goto addr_415d84_32;
    addr_4156fb_31:
    eax12 = fun_415c63(ecx14, esi15);
    goto addr_415705_7;
}

int32_t fun_4158d8(void** ecx, int32_t** a2) {
    void** eax3;
    void** esp4;
    void** v5;
    void** esp6;
    void** v7;
    int32_t eax8;
    void** edi9;
    void** esi10;
    void** ebx11;
    void* esp12;
    void** eax13;
    void** esp14;
    void** esp15;
    void** v16;
    void** eax17;
    void* v18;
    int32_t eax19;
    int32_t eax20;
    void** eax21;
    uint32_t eax22;
    void** v23;
    void** eax24;
    void** eax25;
    void** edi26;
    void** esi27;
    void** ebx28;
    void** v29;
    void** v30;
    void** v31;
    void** v32;
    void** esi33;
    void** eax34;

    if (**a2 != 0xe06d7363) {
        return 0;
    }
    eax3 = *reinterpret_cast<void***>(&g0);
    esp4 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4 - 4);
    *reinterpret_cast<void***>(&g0) = esp4;
    v5 = ecx;
    esp6 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp4 - 4) - 4 - 4 - 4 - 4);
    v7 = esp6;
    eax8 = g41f418;
    if (eax8) 
        goto addr_415d6e_5;
    addr_415d84_6:
    fun_415d8d(ecx, edi9, esi10, ebx11, v7, v5, eax3);
    fun_416e71(ecx, 10);
    fun_417cfe(22);
    fun_4130b9(10, 3);
    esp12 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp6 - 4) + 4 - 4 - 4 + 4 - 4 - 4 + 4 + 4 + 4 - 4 - 4 + 4 - 4);
    eax13 = *reinterpret_cast<void***>(&g0);
    esp14 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp12) - 4 - 4 - 4 - 4);
    *reinterpret_cast<void***>(&g0) = esp14;
    esp15 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp14 - 24) - 4 - 4 - 4);
    v16 = esp15;
    eax17 = g41f538;
    if (!eax17) {
        v18 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp12) + 0xffffffe4);
        eax19 = reinterpret_cast<int32_t>(GetStringTypeW(10, 1, 0x4187ec, 1, v18));
        esp15 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp15 - 4) - 4 + 4 - 4 - 4 - 4 - 4 + 4);
        if (!eax19) {
            eax20 = reinterpret_cast<int32_t>(GetStringTypeA(10, 0, 1, 0x4187e8, 1, reinterpret_cast<uint32_t>(esp12) + 0xffffffe4, 1, 0x4187ec, 1, v18));
            if (!eax20) 
                goto addr_4177f0_12;
            eax17 = reinterpret_cast<void**>(2);
            esp15 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp15 - 4) - 4 - 4 - 4 - 4 - 4 + 4 - 4 + 4);
        } else {
            eax17 = reinterpret_cast<void**>(1);
        }
        g41f538 = eax17;
    }
    if (!reinterpret_cast<int1_t>(eax17 == 2)) {
        if (!reinterpret_cast<int1_t>(eax17 == 1)) {
            addr_4177f0_12:
        } else {
            if (!v5) {
                eax21 = g41f3f8;
                v5 = eax21;
            }
            eax22 = reinterpret_cast<uint32_t>(-0x416d60);
            v23 = reinterpret_cast<void**>((eax22 - (eax22 + reinterpret_cast<uint1_t>(eax22 < eax22 + 1)) & 8) + 1);
            eax24 = reinterpret_cast<void**>(MultiByteToWideChar(10, v5, v23, esi10, ebx11, 0, 0));
            if (!eax24) 
                goto addr_4177f0_12; else 
                goto addr_41778d_21;
        }
    } else {
        eax25 = eax3;
        if (!eax25) {
            eax25 = g41f3e8;
        }
        GetStringTypeA(10, eax25, edi9, esi10, ebx11, v7);
    }
    addr_4177f2_25:
    *reinterpret_cast<void***>(&g0) = eax13;
    goto 3;
    addr_41778d_21:
    fun_414180(10, v5, v23, esi10, ebx11, 0, 0, edi26, esi27, ebx28, v29, v30, eax24, v31, v16, v32, eax13, 0x416d60, 0x418af8, 0);
    esi33 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp15 - 4) - 4 - 4 - 4 - 4 - 4 - 4 + 4 - 4 + 4);
    fun_415420(10, esi33, 0, reinterpret_cast<unsigned char>(eax24) + reinterpret_cast<unsigned char>(eax24), v5, v23, esi10, ebx11, 0, 0);
    if (!esi33) 
        goto addr_4177f0_12;
    eax34 = reinterpret_cast<void**>(MultiByteToWideChar(10, v5, 1, esi10, ebx11, esi33, eax24, v5, v23, esi10, ebx11, 0, 0));
    if (!eax34) 
        goto addr_4177f0_12;
    GetStringTypeW(10, edi9, esi33, eax34, v7, v5, 1, esi10, ebx11, esi33, eax24, v5, v23, esi10, ebx11, 0, 0);
    goto addr_4177f2_25;
    addr_415d6e_5:
    eax8();
    esp6 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp6 - 4) + 4);
    goto addr_415d84_6;
}

int32_t fun_4139c4(void** a1, void** a2, int32_t a3, void** a4, int32_t a5) {
    void** eax6;
    int32_t eax7;

    eax6 = *reinterpret_cast<void***>(&g0);
    *reinterpret_cast<void***>(&g0) = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 + 0xffffffec);
    eax7 = fun_415cf0(a1, a3, a1, a5);
    *reinterpret_cast<void***>(&g0) = eax6;
    return eax7;
}

struct s85 {
    signed char[16] pad16;
    int32_t f16;
};

struct s86 {
    signed char[20] pad20;
    int32_t f20;
};

void** fun_415a2f(void** ecx) {
    int32_t esi2;
    int32_t ebp3;
    int32_t ebp4;
    void** eax5;
    int32_t ebp6;
    int32_t* edi7;
    struct s85* edi8;
    struct s86* edi9;
    int32_t ebp10;
    int32_t ebx11;
    int32_t ebp12;
    int32_t ebx13;
    void** edi14;

    *reinterpret_cast<int32_t*>(esi2 - 4) = *reinterpret_cast<int32_t*>(ebp3 - 40);
    g41f40c = *reinterpret_cast<void***>(ebp4 - 28);
    eax5 = *reinterpret_cast<void***>(ebp6 - 32);
    g41f410 = eax5;
    if (*edi7 == 0xe06d7363 && (edi8->f16 == 3 && (edi9->f20 == 0x19930520 && (*reinterpret_cast<int32_t*>(ebp10 - 36) == ebx11 && *reinterpret_cast<int32_t*>(ebp12 - 44) != ebx13)))) {
        fun_413c8e();
        eax5 = fun_415c63(ecx, edi14);
    }
    return eax5;
}

struct s87 {
    int32_t f0;
    signed char[12] pad16;
    int32_t f16;
    int32_t f20;
    signed char[4] pad28;
    int32_t f28;
};

int32_t fun_415a75(struct s87** a1) {
    if ((*a1)->f0 != 0xe06d7363 || ((*a1)->f16 != 3 || ((*a1)->f20 != 0x19930520 || (*a1)->f28))) {
        return 0;
    } else {
        return 1;
    }
}

void** fun_4176bb(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, int32_t a8, int16_t a9, void* a10, int32_t a11) {
    void* esp12;
    void** eax13;
    void** esp14;
    void** esp15;
    void** v16;
    void** eax17;
    void* v18;
    int32_t eax19;
    int32_t eax20;
    void** eax21;
    void** eax22;
    uint32_t eax23;
    void** v24;
    void** eax25;
    void** eax26;
    void** edi27;
    void** esi28;
    void** ebx29;
    void** v30;
    void** v31;
    void** v32;
    void** v33;
    void** esi34;
    void** eax35;

    esp12 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax13 = *reinterpret_cast<void***>(&g0);
    esp14 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp12) - 4 - 4 - 4 - 4);
    *reinterpret_cast<void***>(&g0) = esp14;
    esp15 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp14 - 24) - 4 - 4 - 4);
    v16 = esp15;
    eax17 = g41f538;
    if (!eax17) {
        v18 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp12) + 0xffffffe4);
        eax19 = reinterpret_cast<int32_t>(GetStringTypeW(ecx, 1, 0x4187ec, 1, v18));
        esp15 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp15 - 4) - 4 + 4 - 4 - 4 - 4 - 4 + 4);
        if (!eax19) {
            eax20 = reinterpret_cast<int32_t>(GetStringTypeA(ecx, 0, 1, 0x4187e8, 1, reinterpret_cast<int32_t>(esp12) + 0xffffffe4, 1, 0x4187ec, 1, v18));
            if (!eax20) 
                goto addr_4177f0_4;
            eax17 = reinterpret_cast<void**>(2);
            esp15 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp15 - 4) - 4 - 4 - 4 - 4 - 4 + 4 - 4 + 4);
        } else {
            eax17 = reinterpret_cast<void**>(1);
        }
        g41f538 = eax17;
    }
    if (!reinterpret_cast<int1_t>(eax17 == 2)) {
        if (!reinterpret_cast<int1_t>(eax17 == 1)) {
            addr_4177f0_4:
            eax21 = reinterpret_cast<void**>(0);
        } else {
            if (!a6) {
                eax22 = g41f3f8;
                a6 = eax22;
            }
            eax23 = reinterpret_cast<uint32_t>(-a8);
            v24 = reinterpret_cast<void**>((eax23 - (eax23 + reinterpret_cast<uint1_t>(eax23 < eax23 + reinterpret_cast<uint1_t>(!!a8))) & 8) + 1);
            eax25 = reinterpret_cast<void**>(MultiByteToWideChar(ecx, a6, v24, a3, a4, 0, 0));
            if (!eax25) 
                goto addr_4177f0_4; else 
                goto addr_41778d_13;
        }
    } else {
        eax26 = a7;
        if (!eax26) {
            eax26 = g41f3e8;
        }
        eax21 = reinterpret_cast<void**>(GetStringTypeA(ecx, eax26, a2, a3, a4, a5));
    }
    addr_4177f2_17:
    *reinterpret_cast<void***>(&g0) = eax13;
    return eax21;
    addr_41778d_13:
    fun_414180(ecx, a6, v24, a3, a4, 0, 0, edi27, esi28, ebx29, v30, v31, eax25, v32, v16, v33, eax13, 0x416d60, 0x418af8, 0);
    esi34 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp15 - 4) - 4 - 4 - 4 - 4 - 4 - 4 + 4 - 4 + 4);
    fun_415420(ecx, esi34, 0, reinterpret_cast<unsigned char>(eax25) + reinterpret_cast<unsigned char>(eax25), a6, v24, a3, a4, 0, 0);
    if (!esi34) 
        goto addr_4177f0_4;
    eax35 = reinterpret_cast<void**>(MultiByteToWideChar(ecx, a6, 1, a3, a4, esi34, eax25, a6, v24, a3, a4, 0, 0));
    if (!eax35) 
        goto addr_4177f0_4;
    eax21 = reinterpret_cast<void**>(GetStringTypeW(ecx, a2, esi34, eax35, a5, a6, 1, a3, a4, esi34, eax25, a6, v24, a3, a4, 0, 0));
    goto addr_4177f2_17;
}

int32_t GetACP = 0x19be2;

int32_t GetOEMCP = 0x19bec;

void** fun_4162c8(void** a1) {
    void** eax2;

    eax2 = a1;
    g41f420 = reinterpret_cast<void**>(0);
    if (!reinterpret_cast<int1_t>(eax2 == 0xfffffffe)) {
        if (!reinterpret_cast<int1_t>(eax2 == 0xfffffffd)) {
            if (reinterpret_cast<int1_t>(eax2 == 0xfffffffc)) {
                eax2 = g41f3f8;
                g41f420 = reinterpret_cast<void**>(1);
            }
            return eax2;
        } else {
            g41f420 = reinterpret_cast<void**>(1);
            goto GetACP;
        }
    } else {
        g41f420 = reinterpret_cast<void**>(1);
        goto GetOEMCP;
    }
}

int32_t g41f000 = 10;

void** g41ef80 = reinterpret_cast<void**>(5);

void** fun_4166da(void** a1) {
    void** edx2;
    int32_t ecx3;
    int1_t zf4;
    void** eax5;
    void** esi6;

    edx2 = a1;
    ecx3 = g41f000;
    zf4 = g41ef80 == edx2;
    eax5 = reinterpret_cast<void**>(0x41ef80);
    if (!zf4) {
        esi6 = reinterpret_cast<void**>((ecx3 + ecx3 * 2) * 4 + 0x41ef80);
        do {
            eax5 = eax5 + 12;
            if (reinterpret_cast<unsigned char>(eax5) >= reinterpret_cast<unsigned char>(esi6)) 
                break;
        } while (*reinterpret_cast<void***>(eax5) != edx2);
    }
    if (reinterpret_cast<unsigned char>(eax5) >= reinterpret_cast<unsigned char>((ecx3 + ecx3 * 2) * 4 + 0x41ef80) || *reinterpret_cast<void***>(eax5) != edx2) {
        eax5 = reinterpret_cast<void**>(0);
    }
    return eax5;
}

uint32_t fun_417815(unsigned char a1, uint32_t a2, unsigned char a3) {
    uint32_t eax4;
    uint32_t eax5;

    eax4 = a1;
    if (!(*reinterpret_cast<unsigned char*>(eax4 + 0x41f781) & a3)) {
        if (!a2) {
            eax5 = 0;
        } else {
            eax5 = static_cast<uint32_t>(*reinterpret_cast<uint16_t*>(" " + eax4 * 2)) & a2;
        }
        if (!eax5) {
            return eax5;
        }
    }
    return 1;
}

struct s88 {
    void** f0;
    void** f1;
    void** f2;
    void** f3;
};

void** fun_417940(void** ecx, void** a2, void** a3, void** a4) {
    void** esi5;
    void** edi6;
    void** eax7;
    uint32_t ecx8;
    uint32_t edx9;
    struct s88* esi10;
    void** edi11;
    uint32_t ecx12;
    uint32_t edx13;

    esi5 = a3;
    edi6 = a2;
    eax7 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(a4) + reinterpret_cast<unsigned char>(esi5));
    if (reinterpret_cast<unsigned char>(edi6) <= reinterpret_cast<unsigned char>(esi5) || reinterpret_cast<unsigned char>(edi6) >= reinterpret_cast<unsigned char>(eax7)) {
        if (reinterpret_cast<unsigned char>(edi6) & 3) {
            if (reinterpret_cast<unsigned char>(a4) < reinterpret_cast<unsigned char>(4)) {
                goto *reinterpret_cast<int32_t*>(reinterpret_cast<unsigned char>(a4 - 4) * 4 + 0x417a98);
            } else {
                goto *reinterpret_cast<int32_t*>("zA" + (reinterpret_cast<unsigned char>(edi6) & 3) * 4);
            }
        }
        ecx8 = reinterpret_cast<unsigned char>(a4) >> 2;
        edx9 = reinterpret_cast<unsigned char>(a4) & 3;
        if (ecx8 >= 8) 
            goto addr_417973_7;
    } else {
        esi10 = reinterpret_cast<struct s88*>(reinterpret_cast<unsigned char>(a4) + reinterpret_cast<unsigned char>(esi5) + 0xfffffffc);
        edi11 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(a4) + reinterpret_cast<unsigned char>(edi6) + 0xfffffffc);
        if (reinterpret_cast<unsigned char>(edi11) & 3) {
            eax7 = edi11;
            if (reinterpret_cast<unsigned char>(a4) >= reinterpret_cast<unsigned char>(4)) {
                goto *reinterpret_cast<int32_t*>("|A" + (reinterpret_cast<unsigned char>(eax7) & 3) * 4);
            }
            goto *reinterpret_cast<int32_t*>("0|A" + reinterpret_cast<unsigned char>(a4) * 4);
        } else {
            ecx12 = reinterpret_cast<unsigned char>(a4) >> 2;
            edx13 = reinterpret_cast<unsigned char>(a4) & 3;
            if (ecx12 < 8) {
                goto *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(-ecx12) * 4 + 0x417bd0);
                goto *reinterpret_cast<int32_t*>("0|A" + edx13 * 4);
            } else {
                while (ecx12) {
                    --ecx12;
                    *reinterpret_cast<void***>(edi11) = esi10->f0;
                    edi11 = edi11 + 0xfffffffc;
                    --esi10;
                }
                goto *reinterpret_cast<int32_t*>("0|A" + edx13 * 4);
            }
        }
    }
    switch (ecx8) {
        addr_417a7f_20:
    case 0:
        switch (edx9) {
        case 0:
            return eax7;
        case 1:
            *reinterpret_cast<void***>(edi6) = *reinterpret_cast<void***>(esi5);
            return a2;
        case 2:
            *reinterpret_cast<void***>(edi6) = *reinterpret_cast<void***>(esi5);
            *reinterpret_cast<void***>(edi6 + 1) = *reinterpret_cast<void***>(esi5 + 1);
            return a2;
        case 3:
            *reinterpret_cast<void***>(edi6) = *reinterpret_cast<void***>(esi5);
            *reinterpret_cast<void***>(edi6 + 1) = *reinterpret_cast<void***>(esi5 + 1);
            *reinterpret_cast<void***>(edi6 + 2) = *reinterpret_cast<void***>(esi5 + 2);
            return a2;
        }
        addr_417a6c_27:
    case 1:
        *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(edi6 + ecx8 * 4) - 4) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esi5 + ecx8 * 4) - 4);
        eax7 = reinterpret_cast<void**>(ecx8 * 4);
        esi5 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi5) + reinterpret_cast<unsigned char>(eax7));
        edi6 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi6) + reinterpret_cast<unsigned char>(eax7));
        goto addr_417a7f_20;
        addr_417a64_28:
    case 2:
        *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(edi6 + ecx8 * 4) - 8) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esi5 + ecx8 * 4) - 8);
        goto addr_417a6c_27;
        addr_417a5c_29:
    case 3:
        *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(edi6 + ecx8 * 4) - 12) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esi5 + ecx8 * 4) - 12);
        goto addr_417a64_28;
        addr_417a54_30:
    case 4:
        *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(edi6 + ecx8 * 4) - 16) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esi5 + ecx8 * 4) - 16);
        goto addr_417a5c_29;
        addr_417a4c_31:
    case 5:
        *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(edi6 + ecx8 * 4) - 20) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esi5 + ecx8 * 4) - 20);
        goto addr_417a54_30;
    case 6:
        *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(edi6 + ecx8 * 4) - 24) = eax7;
        goto addr_417a4c_31;
    case 7:
    }
    addr_417973_7:
    while (ecx8) {
        --ecx8;
        *reinterpret_cast<void***>(edi6) = *reinterpret_cast<void***>(esi5);
        edi6 = edi6 + 4;
        esi5 = esi5 + 4;
    }
    goto *reinterpret_cast<int32_t*>(edx9 * 4 + 0x417a88);
    return eax7;
    *reinterpret_cast<void***>(edi11 + 3) = esi10->f3;
    return a2;
    *reinterpret_cast<void***>(edi11 + 3) = esi10->f3;
    *reinterpret_cast<void***>(edi11 + 2) = esi10->f2;
    return a2;
    *reinterpret_cast<void***>(edi11 + 3) = esi10->f3;
    *reinterpret_cast<void***>(edi11 + 2) = esi10->f2;
    *reinterpret_cast<void***>(edi11 + 1) = esi10->f1;
    return a2;
}

void** g41f548 = reinterpret_cast<void**>(0);

struct s89 {
    signed char[4] pad4;
    void** f4;
    signed char[3] pad8;
    void** f8;
};

struct s89* fun_417e2b(void** a1);

void** g41f554 = reinterpret_cast<void**>(0);

void** g41f54c = reinterpret_cast<void**>(0);

void** g41f550 = reinterpret_cast<void**>(0);

uint32_t fun_417cfe(void** a1) {
    void** edi2;
    void** eax3;
    void** esi4;
    void** eax5;
    void** eax6;
    void** eax7;
    void** eax8;
    struct s89* eax9;
    void** ecx10;
    void** eax11;
    uint32_t eax12;
    uint32_t eax13;
    void** ebx14;
    void** edx15;
    int32_t eax16;
    int32_t ecx17;
    int32_t ecx18;
    int32_t ecx19;
    uint32_t* edx20;

    edi2 = a1;
    eax3 = edi2 - 1 - 1;
    if (!eax3) {
        esi4 = g41f548;
        eax5 = reinterpret_cast<void**>(0x41f548);
    } else {
        eax6 = eax3 - 1 - 1;
        if (!eax6 || ((eax7 = eax6 - 4, eax7 == 0) || (eax8 = eax7 - 3, eax8 == 0))) {
            eax9 = fun_417e2b(edi2);
            esi4 = *reinterpret_cast<void***>(&eax9->f8);
            eax5 = reinterpret_cast<void**>(&eax9->f8);
            ecx10 = edi2;
        } else {
            eax11 = eax8 - 4;
            if (!eax11) {
                esi4 = g41f554;
                eax5 = reinterpret_cast<void**>(0x41f554);
            } else {
                eax12 = reinterpret_cast<uint32_t>(eax11 - 6);
                if (!eax12) {
                    esi4 = g41f54c;
                    eax5 = reinterpret_cast<void**>(0x41f54c);
                } else {
                    if (!(eax12 - 1)) {
                        esi4 = g41f550;
                        eax5 = reinterpret_cast<void**>(0x41f550);
                    } else {
                        eax13 = 0xffffffff;
                        goto addr_417e27_12;
                    }
                }
            }
        }
    }
    if (!reinterpret_cast<int1_t>(esi4 == 1)) {
        if (!esi4) {
            eax5 = fun_4130b9(ecx10, 3);
        }
        if (edi2 == 8) 
            goto addr_417d99_17;
        if (edi2 == 11) 
            goto addr_417d99_17;
        if (!reinterpret_cast<int1_t>(edi2 == 4)) 
            goto addr_417dbf_20;
    } else {
        eax13 = 0;
        goto addr_417e27_12;
    }
    addr_417d99_17:
    ebx14 = g41f424;
    g41f424 = reinterpret_cast<void**>(0);
    if (!reinterpret_cast<int1_t>(edi2 == 8)) {
        *reinterpret_cast<void***>(eax5) = reinterpret_cast<void**>(0);
        if (!reinterpret_cast<int1_t>(edi2 == 8)) {
            esi4();
            if (edi2 == 11 || reinterpret_cast<int1_t>(edi2 == 4)) {
                addr_417e11_24:
                g41f424 = ebx14;
                if (reinterpret_cast<int1_t>(edi2 == 8)) {
                    g41f004 = a1;
                    goto addr_417e24_26;
                }
            } else {
                addr_417e24_26:
                eax13 = 0;
            }
        } else {
            addr_417df5_27:
            esi4();
            goto addr_417e11_24;
        }
    } else {
        edx15 = g41f004;
        g41f004 = reinterpret_cast<void**>(0x8c);
        a1 = edx15;
        goto addr_417dc2_29;
    }
    addr_417e27_12:
    return eax13;
    addr_417dc2_29:
    if (reinterpret_cast<int1_t>(edi2 == 8)) {
        eax16 = g41eff8;
        ecx17 = g41effc;
        ecx18 = ecx17 + eax16;
        if (eax16 < ecx18) {
            ecx19 = ecx18 - eax16;
            edx20 = reinterpret_cast<uint32_t*>((eax16 + eax16 * 2) * 4 + 0x41ef88);
            do {
                *edx20 = 0;
                edx20 = edx20 + 3;
                --ecx19;
            } while (ecx19);
            goto addr_417df5_27;
        }
    }
    addr_417dbf_20:
    ebx14 = a1;
    goto addr_417dc2_29;
}

void** g41ef84 = reinterpret_cast<void**>(11);

struct s89* fun_417e2b(void** a1) {
    void** edx2;
    int32_t ecx3;
    int1_t zf4;
    struct s89* eax5;
    struct s89* esi6;

    edx2 = a1;
    ecx3 = g41f000;
    zf4 = g41ef84 == edx2;
    eax5 = reinterpret_cast<struct s89*>(0x41ef80);
    if (!zf4) {
        esi6 = reinterpret_cast<struct s89*>((ecx3 + ecx3 * 2) * 4 + 0x41ef80);
        do {
            eax5 = reinterpret_cast<struct s89*>(reinterpret_cast<uint32_t>(eax5) + 12);
            if (reinterpret_cast<uint32_t>(eax5) >= reinterpret_cast<uint32_t>(esi6)) 
                break;
        } while (eax5->f4 != edx2);
    }
    if (reinterpret_cast<uint32_t>(eax5) >= (ecx3 + ecx3 * 2) * 4 + 0x41ef80 || eax5->f4 != edx2) {
        eax5 = reinterpret_cast<struct s89*>(0);
    }
    return eax5;
}

struct s90 {
    signed char[4207236] pad4207236;
    signed char f4207236;
    signed char[1235] pad4208472;
    signed char f4208472;
};

void** fun_402ef0(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6) {
    void** v7;
    void** ebx8;
    void** v9;
    void** ebp10;
    void** v11;
    void** v12;
    void** v13;
    void** v14;
    void** v15;
    void** v16;
    void** v17;
    void** v18;
    void** eax19;
    void** ebx20;
    void** v21;
    void** ebp22;
    void** v23;
    void** esi24;
    void** v25;
    void** edi26;
    void** v27;
    void** v28;
    void** v29;
    void** v30;
    void** v31;
    void** eax32;
    void** esi33;
    void** v34;
    void* esp35;
    void** v36;
    void** eax37;
    void* esp38;
    struct s90* eax39;
    int32_t ecx40;
    void** ebx41;
    void** eax42;
    void*** esp43;
    void** v44;
    void** eax45;
    void** eax46;
    void** eax47;
    void** esi48;
    void** eax49;
    void** ecx50;
    void** eax51;
    int32_t esi52;
    uint32_t edx53;
    uint32_t ecx54;
    void** eax55;
    uint32_t edx56;
    uint32_t ecx57;
    void** eax58;
    uint32_t edx59;
    uint32_t ecx60;
    void** eax61;
    void* edx62;
    uint32_t edx63;
    void* ebx64;
    void** eax65;
    void** eax66;
    void** eax67;
    void** eax68;
    int32_t esi69;
    uint32_t edx70;
    uint32_t ecx71;
    void** eax72;
    uint32_t edx73;
    uint32_t ecx74;
    void** eax75;
    uint32_t edx76;
    uint32_t ecx77;
    void** eax78;
    void* edx79;
    uint32_t edx80;
    void* ebx81;

    v7 = ebx8;
    v9 = ebp10;
    eax19 = fun_413320(ecx, 0x2000, v9, v7, v11, v12, v13, v14, v15, v16, v17, v18);
    ebx20 = eax19;
    v21 = ebx20;
    if (!ebx20) {
        ebp22 = reinterpret_cast<void**>(0xfffffffc);
    } else {
        v23 = esi24;
        v25 = edi26;
        eax32 = fun_413320(ecx, 0x8000, v25, v23, v9, v7, v27, v21, v28, v29, v30, v31);
        esi33 = eax32;
        v34 = esi33;
        if (!esi33) {
            ebp22 = reinterpret_cast<void**>(0xfffffffc);
            goto addr_4030e5_5;
        } else {
            ecx = reinterpret_cast<void**>(14);
            esp35 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 64 - 4 - 4 - 4 - 4 + 4 + 4 - 4 - 4 - 4 - 4 + 4 + 4 - 4);
            while (ecx) {
                --ecx;
                esi33 = esi33 + 4;
            }
            v36 = reinterpret_cast<void**>(0);
            eax37 = fun_410780(reinterpret_cast<int32_t>(esp35) + 28, "1.1.3", 56);
            ebp22 = eax37;
            esp38 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp35) - 4 - 4 - 4 + 4 + 12);
            if (ebp22) 
                goto addr_403229_10; else 
                goto addr_402f68_11;
        }
    }
    addr_4030fd_12:
    eax39 = reinterpret_cast<struct s90*>(ebp22 + 11);
    if (reinterpret_cast<uint32_t>(eax39) > 12) 
        goto addr_403265_13;
    ecx40 = 0;
    *reinterpret_cast<signed char*>(&ecx40) = eax39->f4207236;
    switch (ecx40) {
    case 0:
        return 4;
    case 1:
        return 3;
    case 2:
        return 2;
    case 3:
        g41f28c = reinterpret_cast<void**>(0);
        return 0;
        addr_403265_13:
    case 4:
        return 1;
    }
    addr_4030e5_5:
    if (esi33) {
        fun_413483(ecx, esi33, v25, v23, v9, v7, v34);
    }
    fun_413483(ecx, ebx20, v25, v23, v9, v7, v34);
    goto addr_4030fd_12;
    addr_403229_10:
    ecx = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebp22) & 0xff);
    *reinterpret_cast<unsigned char*>(&ecx + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ecx + 1) | 16);
    g41f28c = ecx;
    goto addr_4030e5_5;
    addr_402f68_11:
    ebx41 = a4;
    while (1) {
        if (!v36) {
            eax42 = reinterpret_cast<void**>(0x2000);
            if (ebx41 != 0xffffffff) {
                eax42 = ebx41;
                if (reinterpret_cast<unsigned char>(ebx41) >= reinterpret_cast<unsigned char>(0x2000)) {
                    eax42 = reinterpret_cast<void**>(0x2000);
                }
                ebx41 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebx41) - reinterpret_cast<unsigned char>(eax42));
            }
            ecx = v21;
            v36 = eax42;
            if (!eax42) 
                goto addr_40311a_27;
            esp43 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp38) - 4 - 4 - 4);
            v44 = ecx;
            ecx = reinterpret_cast<void**>(esp43 + 100);
            eax45 = fun_407320(ecx, v44, eax42, 1);
            esp38 = reinterpret_cast<void*>(esp43 - 4 - 4 + 4 + 16);
            if (eax45) 
                goto addr_4030bd_29;
            if (!v36) 
                goto addr_40311a_27;
        }
        eax46 = fun_4107a0(reinterpret_cast<int32_t>(esp38) + 24, 0);
        ebp22 = eax46;
        esp38 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp38) - 4 - 4 - 4 + 4 + 8);
        if (ebp22 && ebp22 != 1) {
            eax47 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax46) & 0xff);
            *reinterpret_cast<unsigned char*>(&eax47 + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax47 + 1) | 17);
            g41f28c = eax47;
        }
        if (1) {
            esi48 = a5;
        } else {
            ecx = a2;
            eax49 = fun_401200(ecx, esi33, 0, v25, v23, v9, v7);
            esp38 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp38) - 4 - 4 - 4 - 4 + 4 + 12);
            if (eax49) 
                goto addr_4030c4_36;
            if (!a6) 
                goto addr_403090_38; else 
                goto addr_40301b_39;
        }
        addr_4030b0_40:
        if (ebp22) 
            break;
        esi33 = v34;
        continue;
        addr_403090_38:
        esi48 = a5;
        if (esi48) {
            *reinterpret_cast<void***>(esi48) = *reinterpret_cast<void***>(esi48);
        }
        ecx = v34;
        goto addr_4030b0_40;
        addr_40301b_39:
        ecx50 = *reinterpret_cast<void***>(a6);
        eax51 = esi33;
        if (!1) {
            esi52 = 0;
            do {
                edx53 = 0;
                *reinterpret_cast<void***>(&edx53) = *reinterpret_cast<void***>(eax51);
                ecx54 = (reinterpret_cast<unsigned char>(ecx50) >> 31) + reinterpret_cast<unsigned char>(ecx50) * 2 + edx53;
                eax55 = eax51 + 1;
                edx56 = 0;
                *reinterpret_cast<void***>(&edx56) = *reinterpret_cast<void***>(eax55);
                ecx57 = (ecx54 >> 31) + ecx54 * 2 + edx56;
                eax58 = eax55 + 1;
                edx59 = 0;
                *reinterpret_cast<void***>(&edx59) = *reinterpret_cast<void***>(eax58);
                ecx60 = (ecx57 >> 31) + ecx57 * 2 + edx59;
                eax61 = eax58 + 1;
                edx62 = reinterpret_cast<void*>(0);
                *reinterpret_cast<void***>(&edx62) = *reinterpret_cast<void***>(eax61);
                ecx50 = reinterpret_cast<void**>((ecx60 >> 31) + ecx60 * 2 + reinterpret_cast<uint32_t>(edx62));
                eax51 = eax61 + 1;
                --esi52;
            } while (esi52);
        }
        edx63 = 0;
        if (!1) {
            do {
                ebx64 = reinterpret_cast<void*>(0);
                *reinterpret_cast<void***>(&ebx64) = *reinterpret_cast<void***>(eax51);
                ebx41 = ebx41;
                ecx50 = reinterpret_cast<void**>((reinterpret_cast<unsigned char>(ecx50) >> 31) + reinterpret_cast<unsigned char>(ecx50) * 2 + reinterpret_cast<uint32_t>(ebx64));
                ++eax51;
                --edx63;
            } while (edx63);
        }
        *reinterpret_cast<void***>(a6) = ecx50;
        goto addr_403090_38;
    }
    if (ebp22 == 1) {
        do {
            addr_40311e_50:
            eax65 = fun_4107a0(reinterpret_cast<int32_t>(esp38) + 24, 4);
            ebp22 = eax65;
            esp38 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp38) - 4 - 4 - 4 + 4 + 8);
            if (ebp22 && ebp22 != 1) {
                eax66 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax65) & 0xff);
                *reinterpret_cast<unsigned char*>(&eax66 + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax66 + 1) | 17);
                g41f28c = eax66;
            }
            if (1) 
                goto addr_4030d0_53;
            ecx = a2;
            eax67 = fun_401200(ecx, v34, 0, v25, v23, v9, v7);
            esp38 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp38) - 4 - 4 - 4 - 4 + 4 + 12);
            if (eax67) 
                break;
            ecx = a6;
            if (ecx) {
                ecx = *reinterpret_cast<void***>(ecx);
                eax68 = v34;
                if (!1) {
                    esi69 = 0;
                    do {
                        edx70 = 0;
                        *reinterpret_cast<void***>(&edx70) = *reinterpret_cast<void***>(eax68);
                        ecx71 = (reinterpret_cast<unsigned char>(ecx) >> 31) + reinterpret_cast<unsigned char>(ecx) * 2 + edx70;
                        eax72 = eax68 + 1;
                        edx73 = 0;
                        *reinterpret_cast<void***>(&edx73) = *reinterpret_cast<void***>(eax72);
                        ecx74 = (ecx71 >> 31) + ecx71 * 2 + edx73;
                        eax75 = eax72 + 1;
                        edx76 = 0;
                        *reinterpret_cast<void***>(&edx76) = *reinterpret_cast<void***>(eax75);
                        ecx77 = (ecx74 >> 31) + ecx74 * 2 + edx76;
                        eax78 = eax75 + 1;
                        edx79 = reinterpret_cast<void*>(0);
                        *reinterpret_cast<void***>(&edx79) = *reinterpret_cast<void***>(eax78);
                        ecx = reinterpret_cast<void**>((ecx77 >> 31) + ecx77 * 2 + reinterpret_cast<uint32_t>(edx79));
                        eax68 = eax78 + 1;
                        --esi69;
                    } while (esi69);
                    esi48 = a5;
                }
                edx80 = 0;
                if (!1) {
                    do {
                        ebx81 = reinterpret_cast<void*>(0);
                        *reinterpret_cast<void***>(&ebx81) = *reinterpret_cast<void***>(eax68);
                        ecx = reinterpret_cast<void**>((reinterpret_cast<unsigned char>(ecx) >> 31) + reinterpret_cast<unsigned char>(ecx) * 2 + reinterpret_cast<uint32_t>(ebx81));
                        ++eax68;
                        --edx80;
                    } while (edx80);
                }
                *reinterpret_cast<void***>(a6) = ecx;
            }
            if (esi48) {
                *reinterpret_cast<void***>(esi48) = *reinterpret_cast<void***>(esi48);
            }
        } while (!ebp22);
        goto addr_403206_66;
    } else {
        addr_4030d0_53:
        esi33 = v34;
        goto addr_4030d4_67;
    }
    ebp22 = reinterpret_cast<void**>(0xfffffff5);
    goto addr_4030d0_53;
    addr_403206_66:
    goto addr_4030d0_53;
    addr_4030d4_67:
    fun_410620(reinterpret_cast<int32_t>(esp38) + 24);
    ebx20 = v21;
    goto addr_4030e5_5;
    addr_4030c4_36:
    ebp22 = reinterpret_cast<void**>(0xfffffff5);
    goto addr_4030d4_67;
    addr_40311a_27:
    esi48 = a5;
    goto addr_40311e_50;
    addr_4030bd_29:
    ebp22 = reinterpret_cast<void**>(0xfffffff6);
    goto addr_4030d4_67;
}

void** fun_4035b0(void** ecx, void** a2, void** a3, void** a4, void** a5) {
    void** v6;
    void** ebx7;
    void** v8;
    void** esi9;
    void** v10;
    void** v11;
    void** v12;
    void** v13;
    void** v14;
    void** v15;
    void** v16;
    void** v17;
    void** eax18;
    void** ebx19;
    void** esi20;
    void*** esp21;
    void** v22;
    void** edi23;
    int32_t ecx24;
    void** ecx25;
    void** v26;
    void* esp27;
    void** eax28;
    void* esp29;
    struct s90* eax30;
    int32_t ecx31;
    void** edx32;
    void** v33;
    void** edi34;
    void** eax35;
    void*** esp36;
    void** eax37;
    void** eax38;
    void** edx39;
    void** eax40;

    v6 = ebx7;
    v8 = esi9;
    eax18 = fun_413320(ecx, 0x2000, v8, v6, v10, v11, v12, v13, v14, v15, v16, v17);
    ebx19 = eax18;
    if (!ebx19) {
        esi20 = reinterpret_cast<void**>(0xfffffffc);
    } else {
        esp21 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 56 - 4 - 4 - 4 - 4 + 4 + 4 - 4);
        v22 = edi23;
        ecx24 = 14;
        while (ecx24) {
            --ecx24;
        }
        ecx25 = a2;
        v26 = reinterpret_cast<void**>(0);
        esp27 = reinterpret_cast<void*>(esp21 - 4);
        eax28 = fun_410780(reinterpret_cast<int32_t>(esp27) + 16, "1.1.3", 56);
        esi20 = eax28;
        esp29 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp27) - 4 - 4 - 4 + 4 + 12);
        if (esi20) 
            goto addr_4036ff_7; else 
            goto addr_40360c_8;
    }
    addr_4036a5_9:
    eax30 = reinterpret_cast<struct s90*>(esi20 + 11);
    if (reinterpret_cast<uint32_t>(eax30) > 12) 
        goto addr_403738_10;
    ecx31 = 0;
    *reinterpret_cast<signed char*>(&ecx31) = eax30->f4208472;
    switch (ecx31) {
    case 0:
        return 4;
    case 1:
        return 3;
    case 2:
        return 2;
    case 3:
        g41f28c = reinterpret_cast<void**>(0);
        return 0;
        addr_403738_10:
    case 4:
        return 1;
    }
    addr_4036ff_7:
    edx32 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi20) & 0xff);
    *reinterpret_cast<unsigned char*>(&edx32 + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&edx32 + 1) | 48);
    g41f28c = edx32;
    addr_40369b_16:
    fun_413483(ecx25, ebx19, v22, v8, v6, v33, v26, ecx25, ebx19, v22, v8, v6, v33, v26);
    goto addr_4036a5_9;
    addr_40360c_8:
    edi34 = a5;
    do {
        if (!v26) {
            eax35 = reinterpret_cast<void**>(0x2000);
            if (edi34 != 0xffffffff) {
                eax35 = edi34;
                if (reinterpret_cast<unsigned char>(edi34) >= reinterpret_cast<unsigned char>(0x2000)) {
                    eax35 = reinterpret_cast<void**>(0x2000);
                }
                edi34 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi34) - reinterpret_cast<unsigned char>(eax35));
            }
            v33 = ebx19;
            v26 = eax35;
            if (!eax35) 
                goto addr_4036c2_23;
            esp36 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp29) - 4 - 4);
            eax37 = fun_407320(esp36 + 84, ebx19, eax35, 1);
            esp29 = reinterpret_cast<void*>(esp36 - 4 - 4 - 4 + 4 + 16);
            if (eax37) 
                goto addr_403689_25;
            if (!v26) 
                goto addr_4036c2_23;
        }
        ecx25 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp29) + 12);
        eax38 = fun_4107a0(ecx25, 0);
        esi20 = eax38;
        esp29 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp29) - 4 - 4 - 4 + 4 + 8);
    } while (!esi20);
    if (esi20 == 1) 
        goto addr_4036cb_29;
    edx39 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi20) & 0xff);
    *reinterpret_cast<unsigned char*>(&edx39 + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&edx39 + 1) | 49);
    g41f28c = edx39;
    addr_4036c6_31:
    if (!reinterpret_cast<int1_t>(esi20 == 1)) {
        addr_40368e_32:
        fun_410620(reinterpret_cast<int32_t>(esp29) + 12);
        goto addr_40369b_16;
    } else {
        do {
            addr_4036cb_29:
            eax40 = fun_4107a0(reinterpret_cast<int32_t>(esp29) + 12, 4);
            esi20 = eax40;
            esp29 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp29) - 4 - 4 - 4 + 4 + 8);
        } while (!esi20);
    }
    if (esi20 != 1) {
        ecx25 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi20) & 0xff);
        *reinterpret_cast<unsigned char*>(&ecx25 + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ecx25 + 1) | 49);
        g41f28c = ecx25;
        goto addr_40368e_32;
    }
    addr_4036c2_23:
    if (!esi20) 
        goto addr_4036cb_29; else 
        goto addr_4036c6_31;
    addr_403689_25:
    esi20 = reinterpret_cast<void**>(0xfffffff6);
    goto addr_40368e_32;
}

void fun_403970(void** a1, void** a2, void** a3, void** a4) {
    void** ebp5;
    int32_t edi6;
    void** v7;
    int32_t eax8;
    int32_t esi9;
    int32_t v10;
    int32_t ebx11;
    int32_t ebx12;
    int32_t eax13;

    if (a1 && ((ebp5 = a2, !!ebp5) && (edi6 = GetWindow, v7 = a1, eax8 = reinterpret_cast<int32_t>(edi6(v7, 5)), esi9 = eax8, !!esi9))) {
        v10 = ebx11;
        ebx12 = SendMessageA;
        do {
            ebx12(esi9, 48, ebp5, 0, v10, v7, 5);
            eax13 = reinterpret_cast<int32_t>(edi6());
            esi9 = eax13;
        } while (esi9);
    }
    return;
}

void fun_402e80(int32_t a1) {
    int32_t eax2;
    int32_t eax3;

    eax2 = reinterpret_cast<int32_t>(LoadLibraryA());
    g41f0a4 = eax2;
    if (eax2) {
        eax3 = reinterpret_cast<int32_t>(GetProcAddress(eax2, "SetThemeAppProperties"));
        g41f0a0 = eax3;
    }
    goto "uxtheme.dll";
}

void fun_415de3(void** ecx, int32_t a2, int32_t a3, int32_t a4, int32_t* a5, void** a6, void** a7, int32_t a8, int32_t a9) {
    void** eax10;
    void** esp11;
    void** v12;
    void** esp13;
    void** v14;
    int32_t eax15;
    void** edi16;
    void** esi17;
    void** ebx18;
    void* esp19;
    void** eax20;
    void** esp21;
    void** esp22;
    void** v23;
    void** eax24;
    void* v25;
    int32_t eax26;
    int32_t eax27;
    void** eax28;
    uint32_t eax29;
    void** v30;
    void** eax31;
    void** eax32;
    void** edi33;
    void** esi34;
    void** ebx35;
    void** v36;
    void** v37;
    void** v38;
    void** v39;
    void** esi40;
    void** eax41;

    eax10 = *reinterpret_cast<void***>(&g0);
    esp11 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4 - 4);
    *reinterpret_cast<void***>(&g0) = esp11;
    v12 = ecx;
    esp13 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp11 - 4) - 4 - 4 - 4 - 4);
    v14 = esp13;
    eax15 = g41f418;
    if (eax15) {
        eax15();
        esp13 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp13 - 4) + 4);
    }
    fun_415d8d(ecx, edi16, esi17, ebx18, v14, v12, eax10);
    fun_416e71(ecx, 10);
    fun_417cfe(22);
    fun_4130b9(10, 3);
    esp19 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp13 - 4) + 4 - 4 - 4 + 4 - 4 - 4 + 4 + 4 + 4 - 4 - 4 + 4 - 4);
    eax20 = *reinterpret_cast<void***>(&g0);
    esp21 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp19) - 4 - 4 - 4 - 4);
    *reinterpret_cast<void***>(&g0) = esp21;
    esp22 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp21 - 24) - 4 - 4 - 4);
    v23 = esp22;
    eax24 = g41f538;
    if (!eax24) {
        v25 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp19) + 0xffffffe4);
        eax26 = reinterpret_cast<int32_t>(GetStringTypeW(10, 1, 0x4187ec, 1, v25));
        esp22 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp22 - 4) - 4 + 4 - 4 - 4 - 4 - 4 + 4);
        if (!eax26) {
            eax27 = reinterpret_cast<int32_t>(GetStringTypeA(10, 0, 1, 0x4187e8, 1, reinterpret_cast<uint32_t>(esp19) + 0xffffffe4, 1, 0x4187ec, 1, v25));
            if (!eax27) 
                goto addr_4177f0_11;
            eax24 = reinterpret_cast<void**>(2);
            esp22 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp22 - 4) - 4 - 4 - 4 - 4 - 4 + 4 - 4 + 4);
        } else {
            eax24 = reinterpret_cast<void**>(1);
        }
        g41f538 = eax24;
    }
    if (!reinterpret_cast<int1_t>(eax24 == 2)) {
        if (!reinterpret_cast<int1_t>(eax24 == 1)) {
            addr_4177f0_11:
        } else {
            if (!v12) {
                eax28 = g41f3f8;
                v12 = eax28;
            }
            eax29 = reinterpret_cast<uint32_t>(-0x416d60);
            v30 = reinterpret_cast<void**>((eax29 - (eax29 + reinterpret_cast<uint1_t>(eax29 < eax29 + 1)) & 8) + 1);
            eax31 = reinterpret_cast<void**>(MultiByteToWideChar(10, v12, v30, esi17, ebx18, 0, 0));
            if (!eax31) 
                goto addr_4177f0_11; else 
                goto addr_41778d_20;
        }
    } else {
        eax32 = eax10;
        if (!eax32) {
            eax32 = g41f3e8;
        }
        GetStringTypeA(10, eax32, edi16, esi17, ebx18, v14);
    }
    addr_4177f2_24:
    *reinterpret_cast<void***>(&g0) = eax20;
    goto 3;
    addr_41778d_20:
    fun_414180(10, v12, v30, esi17, ebx18, 0, 0, edi33, esi34, ebx35, v36, v37, eax31, v38, v23, v39, eax20, 0x416d60, 0x418af8, 0);
    esi40 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp22 - 4) - 4 - 4 - 4 - 4 - 4 - 4 + 4 - 4 + 4);
    fun_415420(10, esi40, 0, reinterpret_cast<unsigned char>(eax31) + reinterpret_cast<unsigned char>(eax31), v12, v30, esi17, ebx18, 0, 0);
    if (!esi40) 
        goto addr_4177f0_11;
    eax41 = reinterpret_cast<void**>(MultiByteToWideChar(10, v12, 1, esi17, ebx18, esi40, eax31, v12, v30, esi17, ebx18, 0, 0));
    if (!eax41) 
        goto addr_4177f0_11;
    GetStringTypeW(10, edi16, esi40, eax41, v14, v12, 1, esi17, ebx18, esi40, eax31, v12, v30, esi17, ebx18, 0, 0);
    goto addr_4177f2_24;
}

void fun_415d8d(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7) {
    void* esp8;
    void** eax9;
    void** esp10;
    void** esp11;
    void** v12;
    void** eax13;
    void* v14;
    int32_t eax15;
    int32_t eax16;
    void** eax17;
    uint32_t eax18;
    void** v19;
    void** eax20;
    void** eax21;
    void** edi22;
    void** esi23;
    void** ebx24;
    void** v25;
    void** v26;
    void** v27;
    void** v28;
    void** esi29;
    void** eax30;

    fun_416e71(ecx, 10);
    fun_417cfe(22);
    fun_4130b9(10, 3);
    esp8 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 + 4 - 4 - 4 + 4 + 4 + 4 - 4 - 4 + 4 - 4);
    eax9 = *reinterpret_cast<void***>(&g0);
    esp10 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp8) - 4 - 4 - 4 - 4);
    *reinterpret_cast<void***>(&g0) = esp10;
    esp11 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp10 - 24) - 4 - 4 - 4);
    v12 = esp11;
    eax13 = g41f538;
    if (!eax13) {
        v14 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp8) + 0xffffffe4);
        eax15 = reinterpret_cast<int32_t>(GetStringTypeW(10, 1, 0x4187ec, 1, v14));
        esp11 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp11 - 4) - 4 + 4 - 4 - 4 - 4 - 4 + 4);
        if (!eax15) {
            eax16 = reinterpret_cast<int32_t>(GetStringTypeA(10, 0, 1, 0x4187e8, 1, reinterpret_cast<int32_t>(esp8) + 0xffffffe4, 1, 0x4187ec, 1, v14));
            if (!eax16) 
                goto addr_4177f0_6;
            eax13 = reinterpret_cast<void**>(2);
            esp11 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp11 - 4) - 4 - 4 - 4 - 4 - 4 + 4 - 4 + 4);
        } else {
            eax13 = reinterpret_cast<void**>(1);
        }
        g41f538 = eax13;
    }
    if (!reinterpret_cast<int1_t>(eax13 == 2)) {
        if (!reinterpret_cast<int1_t>(eax13 == 1)) {
            addr_4177f0_6:
        } else {
            if (!a5) {
                eax17 = g41f3f8;
                a5 = eax17;
            }
            eax18 = -reinterpret_cast<unsigned char>(a7);
            v19 = reinterpret_cast<void**>((eax18 - (eax18 + reinterpret_cast<uint1_t>(eax18 < eax18 + reinterpret_cast<uint1_t>(!!a7))) & 8) + 1);
            eax20 = reinterpret_cast<void**>(MultiByteToWideChar(10, a5, v19, a2, a3, 0, 0));
            if (!eax20) 
                goto addr_4177f0_6; else 
                goto addr_41778d_15;
        }
    } else {
        eax21 = a6;
        if (!eax21) {
            eax21 = g41f3e8;
        }
        GetStringTypeA(10, eax21, __return_address(), a2, a3, a4);
    }
    addr_4177f2_19:
    *reinterpret_cast<void***>(&g0) = eax9;
    goto 3;
    addr_41778d_15:
    fun_414180(10, a5, v19, a2, a3, 0, 0, edi22, esi23, ebx24, v25, v26, eax20, v27, v12, v28, eax9, 0x416d60, 0x418af8, 0);
    esi29 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp11 - 4) - 4 - 4 - 4 - 4 - 4 - 4 + 4 - 4 + 4);
    fun_415420(10, esi29, 0, reinterpret_cast<unsigned char>(eax20) + reinterpret_cast<unsigned char>(eax20), a5, v19, a2, a3, 0, 0);
    if (!esi29) 
        goto addr_4177f0_6;
    eax30 = reinterpret_cast<void**>(MultiByteToWideChar(10, a5, 1, a2, a3, esi29, eax20, a5, v19, a2, a3, 0, 0));
    if (!eax30) 
        goto addr_4177f0_6;
    GetStringTypeW(10, __return_address(), esi29, eax30, a4, a5, 1, a2, a3, esi29, eax20, a5, v19, a2, a3, 0, 0);
    goto addr_4177f2_19;
}

void fun_401034() {
    int32_t* eax1;
    int32_t* eax2;
    signed char* eax3;
    signed char* eax4;
    signed char al5;
    signed char* eax6;
    signed char* eax7;
    signed char al8;

    *eax1 = *eax2 + 1;
    *eax3 = reinterpret_cast<signed char>(*eax4 + al5);
    *eax6 = reinterpret_cast<signed char>(*eax7 + al8);
}

void fun_40103c() {
    int32_t* eax1;
    int32_t* eax2;
    signed char* eax3;
    signed char* eax4;
    signed char al5;
    signed char* eax6;
    signed char* eax7;
    signed char al8;

    *eax1 = *eax2 + 1;
    *eax3 = reinterpret_cast<signed char>(*eax4 + al5);
    *eax6 = reinterpret_cast<signed char>(*eax7 + al8);
}

void fun_401045() {
    int32_t* eax1;
    int32_t* eax2;
    signed char* eax3;
    signed char* eax4;
    signed char al5;
    signed char* eax6;
    signed char* eax7;
    signed char al8;
    signed char* eax9;
    signed char* eax10;
    signed char al11;

    *eax1 = *eax2 + 1;
    *eax3 = reinterpret_cast<signed char>(*eax4 + al5);
    *eax6 = reinterpret_cast<signed char>(*eax7 + al8);
    *eax9 = reinterpret_cast<signed char>(*eax10 + al11);
}

void fun_401055(signed char* ecx) {
    int32_t* eax2;
    int32_t* eax3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;
    signed char al7;
    signed char* eax8;
    signed char* eax9;
    signed char al10;
    signed char* eax11;
    signed char* eax12;
    signed char bh13;
    signed char* eax14;
    signed char* eax15;
    signed char al16;
    signed char* eax17;
    signed char* eax18;
    signed char al19;
    signed char* eax20;
    signed char* eax21;
    signed char al22;
    signed char* edi23;
    signed char* edi24;
    int32_t eax25;
    int32_t eax26;
    int32_t eax27;
    int32_t eax28;
    signed char ah29;
    unsigned char* eax30;
    unsigned char* eax31;
    unsigned char al32;
    signed char* eax33;
    signed char* eax34;
    signed char al35;
    signed char* eax36;
    signed char* eax37;
    signed char al38;
    signed char* eax39;
    signed char* eax40;
    signed char al41;
    signed char* eax42;
    signed char* eax43;
    signed char al44;
    unsigned char* eax45;
    unsigned char* eax46;
    unsigned char al47;
    signed char* eax48;
    signed char* eax49;
    signed char al50;
    unsigned char* eax51;
    unsigned char* eax52;
    unsigned char al53;
    signed char* eax54;
    signed char* eax55;
    signed char al56;

    *eax2 = *eax3 + 1;
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
    *ecx = reinterpret_cast<signed char>(*ecx + al7);
    *eax8 = reinterpret_cast<signed char>(*eax9 + al10);
    *eax11 = reinterpret_cast<signed char>(*eax12 + bh13);
    *eax14 = reinterpret_cast<signed char>(*eax15 + al16);
    *eax17 = reinterpret_cast<signed char>(*eax18 + al19);
    *eax20 = reinterpret_cast<signed char>(*eax21 + al22);
    *edi23 = reinterpret_cast<signed char>(*edi24 + *reinterpret_cast<signed char*>(&ecx));
    *reinterpret_cast<signed char*>(eax25 + eax26 + 68) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(eax27 + eax28 + 68) + ah29);
    *eax30 = reinterpret_cast<unsigned char>(*eax31 | al32);
    *eax33 = reinterpret_cast<signed char>(*eax34 + al35);
    *eax36 = reinterpret_cast<signed char>(*eax37 + al38);
    *eax39 = reinterpret_cast<signed char>(*eax40 + al41);
    *eax42 = reinterpret_cast<signed char>(*eax43 + al44);
    *eax45 = reinterpret_cast<unsigned char>(*eax46 | al47);
    *eax48 = reinterpret_cast<signed char>(*eax49 + al50);
    *eax51 = reinterpret_cast<unsigned char>(*eax52 | al53);
    *eax54 = reinterpret_cast<signed char>(*eax55 + al56);
}

void fun_40107f() {
    int32_t* eax1;
    int32_t* eax2;
    int32_t* eax3;
    int32_t* eax4;
    int32_t ebp5;
    int32_t ebp6;
    signed char bl7;

    *eax1 = *eax2 + 1;
    *eax3 = *eax4 + 1;
    *reinterpret_cast<signed char*>(ebp5 - 61) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebp6 - 61) + bl7);
}

void fun_4034dd(int32_t ecx) {
    int32_t esi2;
    int32_t esi3;
    signed char bh4;
    int32_t edi5;
    int32_t edi6;
    unsigned char* eax7;
    unsigned char al8;

    *reinterpret_cast<signed char*>(esi2 - 0x4affbfcc) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(esi3 - 0x4affbfcc) + bh4);
    *reinterpret_cast<signed char*>(edi5 - 0x2fffbfcc) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(edi6 - 0x2fffbfcc) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    *reinterpret_cast<unsigned char*>(&eax7) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(al8 ^ 64) ^ 64) ^ 64);
    *eax7 = reinterpret_cast<unsigned char>(*eax7 + *reinterpret_cast<unsigned char*>(&eax7));
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + reinterpret_cast<int32_t>(eax7)) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + reinterpret_cast<int32_t>(eax7)) + reinterpret_cast<int32_t>(eax7);
}

void fun_417333() {
    __asm__("in al, 0x8b");
}

void fun_4174cb(int32_t ecx) {
    int32_t eax2;
    signed char al3;
    unsigned char al4;
    uint1_t cf5;
    void* edi6;
    void* edi7;
    void* esi8;
    void* edi9;
    void* esi10;
    void* edi11;
    void* esi12;
    void* edi13;
    void* esi14;
    void* edi15;
    void* esi16;

    *reinterpret_cast<unsigned char*>(&eax2) = reinterpret_cast<unsigned char>(al3 - reinterpret_cast<unsigned char>(0x75 - reinterpret_cast<uint1_t>(al4 < reinterpret_cast<unsigned char>(0x75 - cf5))));
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edi6) + ecx * 4 + 24) = eax2;
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edi7) + ecx * 4 + 20) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esi8) + ecx * 4 + 20);
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edi9) + ecx * 4 + 16) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esi10) + ecx * 4 + 16);
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edi11) + ecx * 4 + 12) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esi12) + ecx * 4 + 12);
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edi13) + ecx * 4 + 8) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esi14) + ecx * 4 + 8);
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edi15) + ecx * 4 + 4) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esi16) + ecx * 4 + 4);
}

void fun_417a43() {
    __asm__("in al, 0x8b");
}

void fun_417bdb(int32_t ecx) {
    int32_t eax2;
    signed char al3;
    unsigned char al4;
    uint1_t cf5;
    void* edi6;
    void* edi7;
    void* esi8;
    void* edi9;
    void* esi10;
    void* edi11;
    void* esi12;
    void* edi13;
    void* esi14;
    void* edi15;
    void* esi16;

    *reinterpret_cast<unsigned char*>(&eax2) = reinterpret_cast<unsigned char>(al3 - reinterpret_cast<unsigned char>(0x75 - reinterpret_cast<uint1_t>(al4 < reinterpret_cast<unsigned char>(0x75 - cf5))));
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edi6) + ecx * 4 + 24) = eax2;
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edi7) + ecx * 4 + 20) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esi8) + ecx * 4 + 20);
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edi9) + ecx * 4 + 16) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esi10) + ecx * 4 + 16);
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edi11) + ecx * 4 + 12) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esi12) + ecx * 4 + 12);
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edi13) + ecx * 4 + 8) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esi14) + ecx * 4 + 8);
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edi15) + ecx * 4 + 4) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esi16) + ecx * 4 + 4);
}

void fun_40100e() {
    int1_t below_or_equal1;
    int1_t below_or_equal2;
    signed char* eax3;
    signed char* eax4;
    signed char al5;
    signed char* eax6;
    signed char* eax7;
    signed char al8;
    int32_t ebx9;
    int32_t ebx10;
    signed char ah11;
    signed char* eax12;
    signed char* eax13;
    signed char al14;
    signed char* eax15;
    signed char* eax16;
    signed char al17;

    __asm__("das ");
    __asm__("das ");
    if (!below_or_equal1) 
        goto 0x40108e;
    if (!below_or_equal2) 
        goto 0x401047;
    __asm__("arpl [ecx+ebp*2+0x63], bp");
    __asm__("arpl [cs:edi+0x6d], bp");
    *eax3 = reinterpret_cast<signed char>(*eax4 + al5);
    *eax6 = reinterpret_cast<signed char>(*eax7 + al8);
    *reinterpret_cast<signed char*>(ebx9 - 2) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebx10 - 2) + ah11);
    __asm__("sti ");
    *eax12 = reinterpret_cast<signed char>(*eax13 + al14);
    *eax15 = reinterpret_cast<signed char>(*eax16 + al17);
}

struct s91 {
    signed char f0;
    signed char f1;
};

struct s92 {
    signed char[1] pad1;
    int32_t f1;
};

void fun_404238(signed char* ecx) {
    int32_t eax2;
    int32_t eax3;
    signed char* ebx4;
    signed char* ebx5;
    signed char* edx6;
    signed char* edx7;
    signed char dl8;
    struct s91* eax9;
    int32_t* edx10;
    struct s92* edx11;
    signed char* eax12;

    eax2 = eax3 + 1 + 1;
    ecx[eax2 * 2] = reinterpret_cast<signed char>(ecx[eax2 * 2] + *reinterpret_cast<signed char*>(&eax2));
    *ebx4 = reinterpret_cast<signed char>(*ebx5 + *reinterpret_cast<signed char*>(&ecx));
    *edx6 = reinterpret_cast<signed char>(*edx7 + dl8);
    eax9 = reinterpret_cast<struct s91*>(eax2 + 1 + 1 + 1);
    eax9->f0 = reinterpret_cast<signed char>(eax9->f0 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax9) + 1));
    edx10 = &edx11->f1;
    eax12 = &eax9->f1;
    *eax12 = reinterpret_cast<signed char>(*eax12 + *reinterpret_cast<signed char*>(&eax12));
    *edx10 = *edx10 + reinterpret_cast<int32_t>(eax12);
}

struct s93 {
    signed char[32] pad32;
    int32_t f32;
    int32_t f36;
};

void** g41f278 = reinterpret_cast<void**>(0);

void** fun_4044f0(void** a1, void** a2, void** a3, void** a4) {
    void** v5;
    void** esi6;
    void*** esp7;
    void** edi8;
    void** ebp9;
    void** edx10;
    void** eax11;
    struct s93* esi12;
    int32_t v13;
    int32_t v14;
    void** eax15;
    uint32_t eax16;
    void** v17;
    void** v18;
    int32_t eax19;
    void** eax20;
    void** edx21;
    void** eax22;
    void** esi23;
    void** ebx24;
    void** eax25;
    void** edi26;
    void** v27;
    void** v28;
    void** eax29;
    void** eax30;
    void** v31;
    void** edi32;
    void** v33;
    void** v34;
    void** v35;
    void** edi36;
    void* esi37;
    void** ecx38;
    void** eax39;
    void** ebp40;
    int32_t v41;
    uint32_t v42;
    void** ecx43;
    void* v44;
    uint32_t v45;
    void** edx46;
    void** v47;
    void** ecx48;
    uint32_t eax49;
    void** eax50;
    int32_t v51;

    v5 = esi6;
    esp7 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 0x78 - 4 - 4 - 4 - 4);
    edi8 = a2;
    if (reinterpret_cast<unsigned char>(edi8) > reinterpret_cast<unsigned char>(0x132)) {
        if (reinterpret_cast<unsigned char>(edi8) < reinterpret_cast<unsigned char>(0x135) || reinterpret_cast<unsigned char>(edi8) > reinterpret_cast<unsigned char>(0x136) && !reinterpret_cast<int1_t>(edi8 == 0x138)) {
            addr_404560_3:
            ebp9 = a1;
            goto addr_404567_4;
        } else {
            addr_4046ea_5:
            edx10 = g41f27c;
            eax11 = g41f29c;
            esi12 = *reinterpret_cast<struct s93**>(reinterpret_cast<uint32_t>(edx10 + reinterpret_cast<unsigned char>(eax11) * 4) + 0x7e);
            if (esi12 && (esi12->f32 != -1 || esi12->f36 != -1)) {
                if (esi12->f36 != -1) {
                    v13 = esi12->f36;
                    SetTextColor(a3, v13);
                }
                if (esi12->f32 != -1) {
                    v14 = esi12->f32;
                    SetBkColor(a3, v14);
                }
                eax15 = g41f300;
                return eax15;
            }
        }
    }
    if (edi8 == 0x132) 
        goto addr_4046ea_5;
    eax16 = reinterpret_cast<uint32_t>(edi8 - 15);
    if (eax16) 
        goto addr_404517_13;
    ebp9 = a1;
    v17 = reinterpret_cast<void**>(esp7 + 72);
    v18 = ebp9;
    eax19 = reinterpret_cast<int32_t>(BeginPaint(v18, v17));
    esp7 = esp7 - 4 - 4 - 4 + 4;
    if (!eax19) {
        addr_404567_4:
        eax20 = fun_403e70(a4, ebp9, edi8, a3, a4);
        return eax20;
    } else {
        edx21 = g41f27c;
        eax22 = g41f29c;
        esi23 = reinterpret_cast<void**>(0);
        ebx24 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(edx21 + reinterpret_cast<unsigned char>(eax22) * 4) + 0x7e);
        if (!ebx24) {
            addr_4046b9_16:
            EndPaint(ebp9, esp7 + 72, v18, v17);
            goto addr_404567_4;
        } else {
            eax25 = *reinterpret_cast<void***>(ebx24);
            edi26 = reinterpret_cast<void**>(0);
            v27 = reinterpret_cast<void**>(0);
            v28 = reinterpret_cast<void**>(0);
            if (*reinterpret_cast<unsigned char*>(&eax25 + 1) & 1) {
                v27 = reinterpret_cast<void**>(esp7 + 56);
                GetClientRect(ebp9, esp7 + 56, v18, v17);
                esp7 = esp7 - 4 - 4 - 4 + 4;
            }
            if (!*reinterpret_cast<void***>(ebx24 + 40)) 
                goto addr_40468c_20;
            eax29 = g41f278;
            if (eax29[reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx24 + 40))]) 
                goto addr_404606_22;
        }
    }
    addr_40468c_20:
    if (!v27) {
        addr_4046b2_23:
        edi8 = reinterpret_cast<void**>(__return_address());
        goto addr_4046b9_16;
    } else {
        addr_404694_24:
        eax30 = *reinterpret_cast<void***>(ebx24 + 32);
        fun_404290(ebp9, v31, esi23, v28, v27, eax30, edi26, v18, v17, edi32, v5, v27, v28, v33, v34, v35);
        esp7 = esp7 - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4 + 28;
        goto addr_4046b2_23;
    }
    addr_404606_22:
    edi36 = *reinterpret_cast<void***>(ebx24);
    esi37 = eax29[reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx24 + 40))];
    esi23 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esi37) + reinterpret_cast<uint32_t>(eax29));
    edi26 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi36) >> 10 & 1);
    GetClientRect(ebp9, esp7 + 40, v18, v17);
    esp7 = esp7 - 4 - 4 - 4 + 4;
    ecx38 = *reinterpret_cast<void***>(ebx24);
    eax39 = reinterpret_cast<void**>(0);
    ebp40 = reinterpret_cast<void**>(0);
    v28 = reinterpret_cast<void**>(0);
    if (*reinterpret_cast<unsigned char*>(&ecx38 + 1) & 2 && (eax39 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(v41 - reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi23 + 8)) - v42 - v42) >> 1), v28 = eax39, !(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(eax39) < reinterpret_cast<signed char>(0)) | reinterpret_cast<uint1_t>(eax39 == 0)))) {
        ebp40 = eax39;
    }
    if (!(*reinterpret_cast<unsigned char*>(&ecx38 + 1) & 8)) {
        ecx43 = ebp40;
    } else {
        ecx43 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(v44) - reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi23 + 4)) - reinterpret_cast<unsigned char>(ebp40) - v45);
    }
    edx46 = *reinterpret_cast<void***>(esi23 + 4);
    ebp9 = v47;
    v27 = ecx43;
    ecx48 = *reinterpret_cast<void***>(esi23 + 8);
    v33 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx46) + reinterpret_cast<unsigned char>(ecx43));
    v34 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx48) + reinterpret_cast<unsigned char>(eax39));
    v5 = reinterpret_cast<void**>(esp7 + 24);
    goto addr_404694_24;
    addr_404517_13:
    eax49 = eax16 - 0x73;
    if (!eax49) {
        eax50 = g41f300;
        if (eax50) {
            DeleteObject(eax50);
            g41f300 = reinterpret_cast<void**>(0);
        }
        g41f328 = reinterpret_cast<void**>(0);
        goto addr_404560_3;
    } else {
        if (!(eax49 - 0x8e)) {
            ShowWindow();
            goto v51;
        }
    }
}

struct s94 {
    signed char[20] pad20;
    int32_t f20;
};

void** fun_404750(void** a1, void** a2, void** a3, void** a4) {
    void** esi5;
    void*** esp6;
    void** ebp7;
    void** edx8;
    void** eax9;
    int32_t v10;
    uint32_t eax11;
    void** ecx12;
    void** v13;
    int32_t eax14;
    void** eax15;
    void** edx16;
    void** eax17;
    void*** esp18;
    void** edi19;
    void** ebx20;
    void** v21;
    void** esi22;
    int1_t zf23;
    void** v24;
    void** v25;
    void** ebx26;
    void** eax27;
    void** eax28;
    void** v29;
    void** edi30;
    void** v31;
    void** v32;
    void** edi33;
    void* esi34;
    void** ebx35;
    void** ecx36;
    void* v37;
    uint32_t v38;
    void** ecx39;
    void* v40;
    uint32_t v41;
    void** ebp42;
    void** ecx43;
    void** eax44;
    int32_t v45;
    uint32_t v46;
    void** v47;
    uint32_t eax48;
    void** eax49;
    int32_t v50;

    esi5 = a2;
    esp6 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 0x7c - 4 - 4 - 4);
    if (reinterpret_cast<unsigned char>(esi5) > reinterpret_cast<unsigned char>(0x132)) {
        if (reinterpret_cast<unsigned char>(esi5) < reinterpret_cast<unsigned char>(0x135) || reinterpret_cast<unsigned char>(esi5) > reinterpret_cast<unsigned char>(0x136) && !reinterpret_cast<int1_t>(esi5 == 0x138)) {
            addr_4047be_3:
            ebp7 = a1;
            goto addr_4047c5_4;
        } else {
            addr_40496a_5:
            edx8 = g41f27c;
            eax9 = g41f29c;
            if (*reinterpret_cast<struct s94**>(reinterpret_cast<uint32_t>(edx8 + reinterpret_cast<unsigned char>(eax9) * 4) + 0x7e) && (*reinterpret_cast<struct s94**>(reinterpret_cast<uint32_t>(edx8 + reinterpret_cast<unsigned char>(eax9) * 4) + 0x7e))->f20 != -1) {
                SetBkColor();
                goto v10;
            }
        }
    }
    if (esi5 == 0x132) 
        goto addr_40496a_5;
    eax11 = reinterpret_cast<uint32_t>(esi5 - 15);
    if (eax11) 
        goto addr_404776_9;
    ebp7 = a1;
    ecx12 = reinterpret_cast<void**>(esp6 + 72);
    v13 = ebp7;
    eax14 = reinterpret_cast<int32_t>(BeginPaint(v13, ecx12));
    esp6 = esp6 - 4 - 4 - 4 + 4;
    if (!eax14) {
        addr_4047c5_4:
        eax15 = fun_403e70(ecx12, ebp7, esi5, a3, a4);
        return eax15;
    } else {
        edx16 = g41f27c;
        eax17 = g41f29c;
        esp18 = esp6 - 4;
        edi19 = reinterpret_cast<void**>(0);
        ebx20 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(edx16 + reinterpret_cast<unsigned char>(eax17) * 4) + 0x7e);
        v21 = ebx20;
        if (!ebx20) {
            addr_404938_12:
            ecx12 = reinterpret_cast<void**>(esp18 + 76);
            EndPaint();
            goto addr_4047c5_4;
        } else {
            esi22 = reinterpret_cast<void**>(0);
            zf23 = (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx20)) & 16) == 0;
            v24 = reinterpret_cast<void**>(0);
            v25 = reinterpret_cast<void**>(0);
            if (!zf23) {
                v24 = reinterpret_cast<void**>(esp18 + 60);
                GetClientRect(ebp7, esp18 + 60, ebx26, v13, ecx12);
                esp18 = esp18 - 4 - 4 - 4 + 4;
            }
            if (!*reinterpret_cast<void***>(ebx20 + 24)) 
                goto addr_40490b_16;
            eax27 = g41f278;
            if (eax27[reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx20 + 24))]) 
                goto addr_404867_18;
        }
    }
    addr_40490b_16:
    if (!v24) {
        addr_404931_19:
        esi5 = reinterpret_cast<void**>(__return_address());
        goto addr_404938_12;
    } else {
        addr_404913_20:
        eax28 = *reinterpret_cast<void***>(ebx20 + 20);
        fun_404290(ebp7, v29, esi22, v25, v24, eax28, edi19, ebx26, v13, ecx12, edi30, v24, v21, v25, v31, v32);
        esp18 = esp18 - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4 + 28;
        goto addr_404931_19;
    }
    addr_404867_18:
    edi33 = *reinterpret_cast<void***>(ebx20);
    esi34 = eax27[reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx20 + 24))];
    esi22 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esi34) + reinterpret_cast<uint32_t>(eax27));
    edi19 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi33) >> 6 & 1);
    GetClientRect(ebp7, esp18 + 44, ebx26, v13, ecx12);
    esp18 = esp18 - 4 - 4 - 4 + 4;
    ebx35 = *reinterpret_cast<void***>(esi22 + 4);
    v25 = reinterpret_cast<void**>(0);
    v21 = reinterpret_cast<void**>(0);
    v31 = ebx35;
    ecx36 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(v37) - v38);
    if (reinterpret_cast<signed char>(ebx35) >= reinterpret_cast<signed char>(ecx36)) {
        v31 = ecx36;
    }
    ecx39 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(v40) - v41);
    ebp42 = *reinterpret_cast<void***>(esi22 + 8);
    v32 = ebp42;
    if (reinterpret_cast<signed char>(ebp42) >= reinterpret_cast<signed char>(ecx39)) {
        v32 = ecx39;
    }
    if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi30)) & 32) {
        __asm__("cdq ");
        __asm__("cdq ");
        ecx43 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(reinterpret_cast<int32_t>(v37) - reinterpret_cast<unsigned char>(ebx35) - v38 - v38) >> 1);
        eax44 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(v45 - reinterpret_cast<unsigned char>(ebp42) - v46 - v46) >> 1);
        v21 = ecx43;
        v25 = eax44;
        v31 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebx35) + reinterpret_cast<unsigned char>(ecx43));
        v32 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebp42) + reinterpret_cast<unsigned char>(eax44));
    }
    ebx20 = edi30;
    ebp7 = v47;
    v24 = reinterpret_cast<void**>(esp18 + 28);
    goto addr_404913_20;
    addr_404776_9:
    eax48 = eax11 - 0x73;
    if (!eax48) {
        eax49 = g41f304;
        if (eax49) {
            DeleteObject(eax49);
            g41f304 = reinterpret_cast<void**>(0);
        }
        g41f324 = reinterpret_cast<void**>(0);
        goto addr_4047be_3;
    } else {
        if (!(eax48 - 0x8e)) {
            ShowWindow();
            goto v50;
        }
    }
}

struct s95 {
    signed char[4213832] pad4213832;
    signed char f4213832;
};

int32_t g41f308 = 0;

void** g41f314 = reinterpret_cast<void**>(0);

int32_t SetDlgItemTextA = 0x19446;

int32_t g41f2ac = 0;

void** fun_4049b0(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6) {
    void*** esp7;
    struct s95* eax8;
    void** ecx9;
    void** edx10;
    int32_t v11;
    void** eax12;
    uint32_t eax13;
    void** v14;
    int32_t eax15;
    void** edx16;
    void** v17;
    void** edx18;
    void* esp19;
    void** v20;
    void** v21;
    void** edi22;
    void** esi23;
    void** ebp24;
    void** v25;
    uint32_t eax26;
    int32_t eax27;
    void** eax28;
    void** esi29;
    int32_t eax30;
    void** eax31;
    void** edx32;
    void** v33;
    void** ebx34;
    void** v35;
    void** v36;
    int32_t edi37;
    void** eax38;
    void** eax39;
    void** v40;
    void** v41;
    void** v42;
    void** v43;
    void** v44;
    void** v45;
    void** v46;
    void** v47;
    void** v48;
    void** v49;
    void** v50;
    void** v51;
    void** v52;
    void** v53;
    void** v54;
    void** v55;
    void** v56;
    void** v57;
    void** v58;
    void** v59;
    void** eax60;
    void** v61;
    void** v62;
    void** v63;
    void** v64;
    void** v65;
    void** v66;
    void** v67;
    void** v68;
    void** v69;
    void** v70;
    void** v71;
    void** v72;
    void** v73;
    void** v74;
    void** v75;
    void** v76;
    void** v77;
    void** v78;
    void** v79;
    void** v80;
    void** eax81;
    int32_t edi82;
    void** eax83;
    void** v84;
    void** v85;
    void** v86;
    void** v87;
    void** v88;
    void** v89;
    void** v90;
    void** v91;
    void** v92;
    void** v93;
    void** v94;
    void** v95;
    void** v96;
    void** v97;
    void** v98;
    void** v99;
    void** v100;
    void** v101;
    void** v102;
    void** v103;
    void** eax104;
    void** ecx105;
    int32_t v106;
    void** eax107;
    int32_t eax108;
    void** eax109;
    void** eax110;
    int32_t eax111;
    int32_t eax112;
    void** v113;
    void** v114;
    void** v115;
    void** v116;
    void** v117;
    void** v118;
    void** v119;
    void** v120;
    void** v121;
    void** v122;
    void** v123;
    void** v124;
    void** v125;
    void** v126;
    void** v127;
    void** v128;
    void** v129;
    void** v130;
    void** v131;
    void** v132;
    int32_t eax133;

    esp7 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 80 - 4 - 4 - 4 - 4);
    if (reinterpret_cast<unsigned char>(a2) > reinterpret_cast<unsigned char>(0x111)) {
        eax8 = reinterpret_cast<struct s95*>(a2 + 0xfffffece);
        if (reinterpret_cast<uint32_t>(eax8) > 6) 
            goto addr_404ae0_3;
        ecx9 = reinterpret_cast<void**>(0);
        *reinterpret_cast<signed char*>(&ecx9) = eax8->f4213832;
        switch (ecx9) {
        case 0:
            edx10 = g41f27c;
            if (*reinterpret_cast<void***>(edx10 + 84) != 0xffffffff) {
                SetBkColor();
                goto v11;
            }
            addr_404ae0_3:
        case 1:
            eax12 = fun_403e70(ecx9, a1, a2, a3, a4);
            return eax12;
        }
    }
    if (a2 != 0x111) {
        eax13 = reinterpret_cast<uint32_t>(a2 - 15);
        if (!eax13) {
            ecx9 = reinterpret_cast<void**>(esp7 + 32);
            v14 = ecx9;
            eax15 = reinterpret_cast<int32_t>(BeginPaint(a1, v14));
            esp7 = esp7 - 4 - 4 - 4 + 4;
            if (eax15) {
                edx16 = g41f27c;
                if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx16 + 20)) & 1) {
                    v17 = reinterpret_cast<void**>(esp7 + 16);
                    GetClientRect(a1, v17, a1, v14);
                    edx18 = g41f27c;
                    esp19 = reinterpret_cast<void*>(esp7 - 4 - 4 - 4 + 4 - 4);
                    ecx9 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp19) + 20);
                    v20 = *reinterpret_cast<void***>(edx18 + 84);
                    fun_404290(a1, v21, 0, 0, ecx9, v20, 0, a1, v17, a1, v14, edi22, esi23, ebp24, esi23 + 2, v25);
                    esp7 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp19) - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4 + 28);
                }
                EndPaint(a1, esp7 + 32, a1, v14);
                goto addr_404ae0_3;
            }
        } else {
            eax26 = eax13 - 0x73;
            if (!eax26) {
                eax27 = g41f308;
                if (eax27) {
                    DeleteObject(eax27);
                    g41f308 = 0;
                }
                g41f31c = reinterpret_cast<void**>(0);
                goto addr_404ae0_3;
            } else {
                if (!(eax26 - 0x8e)) {
                    eax28 = g41f27c;
                    esi29 = *reinterpret_cast<void***>(eax28 + 84);
                    eax30 = reinterpret_cast<int32_t>(CreateSolidBrush(esi29));
                    g41f308 = eax30;
                    eax31 = g41f27c;
                    edx32 = *reinterpret_cast<void***>(eax31 + 92);
                    v33 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(*reinterpret_cast<void**>(eax31 + 96)) + reinterpret_cast<unsigned char>(eax31));
                    fun_4040c0(a1, edx32, v33, esi29, 0xff, esi29, edi22, esi23, ebp24, ebx34, v35, v36);
                    edi37 = GetDlgItem;
                    eax38 = reinterpret_cast<void**>(edi37(a1, 1, esi29));
                    g41f318 = eax38;
                    eax39 = reinterpret_cast<void**>(edi37(a1, 2, a1, 1, esi29));
                    g41f314 = eax39;
                    eax60 = fun_403a00(8, 0, a1, 2, a1, 1, esi29, edi22, esi23, ebp24, ebx34, v40, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51, v52, v53, v54, v55, v56, v57, v58, v59, __return_address(), a1, a2, a3, a4);
                    SetDlgItemTextA(a1, 0x415, eax60, a1, 2, a1, 1, esi29);
                    eax81 = fun_403a00(8, 1, a1, 0x415, eax60, a1, 2, a1, 1, esi29, edi22, esi23, ebp24, ebx34, v61, v62, v63, v64, v65, v66, v67, v68, v69, v70, v71, v72, v73, v74, v75, v76, v77, v78, v79, v80, __return_address(), a1);
                    edi82 = SetWindowTextA;
                    eax83 = g41f318;
                    edi82(eax83, eax81, a1, 0x415, eax60, a1, 2, a1, 1, esi29);
                    eax104 = fun_403a00(8, 2, eax83, eax81, a1, 0x415, eax60, a1, 2, a1, 1, esi29, edi22, esi23, ebp24, ebx34, v84, v85, v86, v87, v88, v89, v90, v91, v92, v93, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103);
                    ecx105 = g41f314;
                    edi82(ecx105, eax104, eax83, eax81, a1, 0x415, eax60, a1, 2, a1, 1, esi29);
                    SetWindowPos();
                    goto v106;
                }
            }
        }
    }
    eax107 = g41f320;
    if (!eax107) 
        goto addr_404b79_20;
    eax108 = reinterpret_cast<int32_t>(SendMessageA(eax107, 0x111, a3, a4));
    if (eax108) 
        goto addr_404ae0_3;
    addr_404b79_20:
    ecx9 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(a3) & 0xffff);
    eax109 = ecx9 - 1;
    if (eax109) 
        goto addr_404b86_22;
    addr_404b94_23:
    g41f2e0 = ecx9;
    goto addr_404ae0_3;
    addr_404b86_22:
    eax110 = eax109 - 1;
    if (!eax110) {
        eax111 = g41f37c;
        if (!(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax111) + 1) & 1)) {
            eax112 = g41f2ac;
            if (!eax112 && (eax133 = fun_403a50(14, 15, edi22, esi23, ebp24, ebx34, v113, v114, v115, v116, v117, v118, v119, v120, v121, v122, v123, v124, v125, v126, v127, v128, v129, v130, v131, v132, __return_address(), a1, a2, a3, a4, a5, a6), !!eax133)) {
                g41f2e0 = reinterpret_cast<void**>(2);
                g41f2b4 = reinterpret_cast<void**>(1);
                goto addr_404ae0_3;
            }
        } else {
            g41f2e0 = reinterpret_cast<void**>(2);
            goto addr_404ae0_3;
        }
    } else {
        if (eax110 - 0x413) 
            goto addr_404ae0_3; else 
            goto addr_404b94_23;
    }
}

struct s96 {
    signed char[1] pad1;
    signed char f1;
};

void fun_404c3d(void* ecx) {
    void* ecx2;
    unsigned char* eax3;
    int32_t eax4;
    signed char* eax5;
    int32_t eax6;
    uint1_t cf7;
    int32_t* ecx8;
    signed char* eax9;
    int32_t eax10;
    signed char* eax11;
    struct s96* eax12;

    ecx2 = ecx;
    eax3[eax4 * 2] = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(eax5[eax6 * 2] + *reinterpret_cast<signed char*>(&ecx2)) + cf7);
    ecx8 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ecx2) - 1);
    if (reinterpret_cast<uint1_t>(!!ecx8) & reinterpret_cast<uint1_t>(!!eax9[eax10 * 2])) 
        goto 0x404c90;
    eax11 = &eax12->f1;
    *eax11 = reinterpret_cast<signed char>(*eax11 + *reinterpret_cast<signed char*>(&eax11));
    *ecx8 = *ecx8 + reinterpret_cast<int32_t>(eax11);
    *eax11 = reinterpret_cast<signed char>(*eax11 + *reinterpret_cast<signed char*>(&eax11));
    *eax11 = reinterpret_cast<signed char>(*eax11 + reinterpret_cast<int32_t>(eax11));
}

struct s97 {
    signed char[77] pad77;
    signed char f77;
};

struct s98 {
    signed char[64] pad64;
    unsigned char f64;
};

struct s99 {
    signed char[64] pad64;
    unsigned char f64;
};

struct s100 {
    signed char[76] pad76;
    signed char f76;
};

struct s101 {
    signed char[76] pad76;
    signed char f76;
};

struct s102 {
    signed char[77] pad77;
    signed char f77;
};

struct s103 {
    signed char[77] pad77;
    signed char f77;
};

void fun_404e19(struct s97* ecx) {
    struct s97* ecx2;
    struct s98* ebp3;
    struct s99* ebp4;
    struct s100* eax5;
    struct s101* eax6;
    signed char bh7;
    void* eax8;
    void* eax9;
    signed char dh10;
    struct s102* edx11;
    struct s103* edx12;
    signed char dl13;
    signed char* eax14;

    ecx2 = ecx;
    ebp3->f64 = reinterpret_cast<unsigned char>(ebp4->f64 & *reinterpret_cast<unsigned char*>(&ecx2));
    eax5->f76 = reinterpret_cast<signed char>(eax6->f76 + bh7);
    eax8 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(eax9) + 1);
    *reinterpret_cast<unsigned char*>(&ecx2) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ecx2) + *reinterpret_cast<signed char*>(&eax8));
    ecx2->f77 = reinterpret_cast<signed char>(ecx2->f77 + dh10);
    edx11->f77 = reinterpret_cast<signed char>(edx12->f77 + dl13);
    eax14 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax8) + 1 + 1 + 1);
    *eax14 = reinterpret_cast<signed char>(*eax14 + *reinterpret_cast<signed char*>(&eax14));
}

int32_t CheckRadioButton = 0x19524;

int32_t SetFocus = 0x19518;

void fun_4062a0(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25) {
    uint32_t eax26;
    void** esi27;
    uint32_t eax28;
    void** eax29;
    void** edx30;

    eax26 = reinterpret_cast<uint32_t>(a2 - 0x110);
    if (!eax26) {
        fun_404c50(a1, 0x110, a3, a4, esi27, __return_address(), a1, a2);
        fun_405fa0(a1, 5, esi27, __return_address(), a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25);
        CheckRadioButton();
        SetFocus();
        goto a1;
    } else {
        if (!(eax26 - 1)) {
            eax28 = (reinterpret_cast<unsigned char>(a3) & 0xffff) - 0x3ea;
            if (!eax28) {
                eax29 = g41f318;
                EnableWindow();
                goto eax29;
            } else {
                if (!(eax28 - 1)) {
                    edx30 = g41f318;
                    EnableWindow();
                    goto edx30;
                }
            }
        }
        goto fun_404c50;
    }
}

void** fun_406b50(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31) {
    uint32_t eax32;
    void** edi33;
    void** esi34;
    void* esp35;
    int32_t eax36;
    void** eax37;
    void** ecx38;
    void** eax39;
    void** edx40;
    void** eax41;
    void** eax42;
    void** eax43;
    int32_t eax44;
    void** eax45;
    void** eax46;

    eax32 = reinterpret_cast<uint32_t>(a2 - 0x110);
    if (!eax32) {
        fun_404c50(a1, 0x110, a3, a4, edi33, esi34, __return_address(), a1);
        fun_405fa0(a1, 7, edi33, esi34, __return_address(), a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24);
        esp35 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 16 + 4 - 4 - 4 - 4 + 4);
        eax36 = fun_4021c0(a3, 0x400, reinterpret_cast<int32_t>(esp35) + 20, a1, 7, edi33, esi34, __return_address(), a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
        if (eax36) {
            eax37 = g41f350;
            fun_402150(a3, eax37, edi33, esi34, __return_address(), a1);
            ecx38 = g41f350;
            eax39 = fun_403a00(4, 3, ecx38, edi33, esi34, __return_address(), a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30);
            wsprintfA(a1, eax39, ecx38);
            edx40 = g41f350;
            fun_402110(ecx38, edx40, a1, eax39, ecx38, edi33);
            eax41 = reinterpret_cast<void**>(GetDlgItem(a1, 0x3e9, a1));
            fun_405a50(eax41, a1, 0x3e9, a1, edi33, esi34, __return_address(), a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30);
            fun_402200(ecx38, reinterpret_cast<int32_t>(esp35) - 4 - 4 - 4 + 4 + 16 - 4 - 4 + 4 + 4 - 4 - 4 - 4 - 4 + 4 + 8 - 4 - 4 - 4 + 4 - 4 - 4 + 4 + 16 - 4 - 4 - 4 - 4 + 4 - 4 - 4 + 4 + 20, eax41, a1, 0x3e9, a1, edi33, esi34, __return_address(), a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
        }
        fun_406190(2, 3, edi33, esi34, __return_address(), a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28);
        SetFocus();
        goto esi34;
    } else {
        if (eax32 - 1 || ((reinterpret_cast<unsigned char>(a3) & 0xffff) - 1 || ((eax42 = g41f378, eax42 == 0) || ((eax43 = fun_403a00(7, 7, edi33, esi34, __return_address(), a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31), *reinterpret_cast<void***>(eax43) == 0) || (eax44 = fun_4039c0(eax43, 36, edi33, esi34, __return_address(), a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26), eax44 != 7))))) {
            eax45 = fun_404c50(a1, a2, a3, a4, edi33, esi34, __return_address(), a1);
            return eax45;
        } else {
            eax46 = fun_403ff0(a1, edi33, esi34, __return_address());
            return eax46;
        }
    }
}

void fun_408666();

int32_t fun_408660() {
    return fun_408666;
}

int32_t IsDlgButtonChecked = 0x1957e;

int32_t CheckDlgButton = 0x1956c;

int32_t GetWindowRect = 0x192d8;

void** g7e9;

void** g41a9c0 = reinterpret_cast<void**>(58);

void** g41a9c2 = reinterpret_cast<void**>(0);

int32_t g41f368 = 0;

int32_t FormatMessageA = 0x191fa;

int32_t ScreenToClient = 0x192c6;

void** fun_40a3b0(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24) {
    void** v25;
    uint32_t eax26;
    void** v27;
    void** esi28;
    uint32_t eax29;
    void** eax30;
    int32_t v31;
    void** v32;
    void** v33;
    void** v34;
    void** v35;
    void** v36;
    void** v37;
    void** v38;
    void** v39;
    void** eax40;
    void** v41;
    void** v42;
    void** eax43;
    void** v44;
    void** v45;
    void** v46;
    void** eax47;
    void** v48;
    void** v49;
    void** v50;
    void** v51;
    void** v52;
    void** v53;
    void** v54;
    void** v55;
    void** eax56;
    void** eax57;
    void** esi58;
    void** v59;
    void** ebx60;
    void** v61;
    void** ebp62;
    void** v63;
    void** edi64;
    void** v65;
    void** v66;
    void** v67;
    void** v68;
    void** v69;
    void** v70;
    void** v71;
    void** v72;
    void** v73;
    int32_t ebx74;
    void** v75;
    void** eax76;
    void* esp77;
    int32_t edi78;
    void** v79;
    void** v80;
    void** eax81;
    void* esp82;
    void** ebp83;
    void** ecx84;
    void** edx85;
    void** v86;
    void** eax87;
    void* esp88;
    void** v89;
    void** eax90;
    int32_t ebp91;
    void** v92;
    void** v93;
    void* esp94;
    void** v95;
    void** v96;
    void** eax97;
    void** v98;
    void** v99;
    void** eax100;
    void** v101;
    void** v102;
    void** eax103;
    void** v104;
    void** ecx105;
    void** v106;
    void** v107;
    void** v108;
    void* esp109;
    int1_t zf110;
    int32_t eax111;
    void* esp112;
    void** eax113;
    int32_t ebp114;
    void** esi115;
    void* esp116;
    void*** ecx117;
    void** edx118;
    void** al119;
    int1_t zf120;
    void*** ecx121;
    void** edx122;
    void** al123;
    void** edi124;
    uint32_t ecx125;
    void* esp126;
    void** ax127;
    void** edi128;
    void* esp129;
    void** edi130;
    uint32_t ecx131;
    int32_t eax132;
    void** eax133;
    void** eax134;
    void** ecx135;
    void** eax136;
    void** edi137;
    void*** esp138;
    void** v139;
    uint32_t ecx140;
    void** eax141;
    void*** esp142;
    void** v143;
    void** edi144;
    uint32_t ecx145;
    void** edi146;
    void** edi147;
    void** dl148;
    void** edx149;
    void** eax150;
    void** v151;
    void** edx152;
    void** v153;
    void** v154;
    void** v155;
    void** v156;
    void** v157;
    void** eax158;
    int32_t v159;
    void** eax160;
    void** edx161;
    void** v162;
    void** v163;
    void** v164;
    void** v165;
    void** v166;
    void** eax167;
    void** v168;
    void** v169;
    void** v170;
    void** v171;
    void** v172;
    void** eax173;
    void** v174;
    void* esp175;
    void** v176;
    void** edi177;
    void** v178;
    void** v179;
    void** v180;
    void** eax181;
    void** eax182;
    void** v183;
    void** v184;
    int32_t eax185;
    void** eax186;

    v25 = reinterpret_cast<void**>(__return_address());
    eax26 = reinterpret_cast<uint32_t>(a2 - 0x110);
    v27 = esi28;
    if (eax26) {
        if (!(eax26 - 1)) {
            eax29 = reinterpret_cast<unsigned char>(a3) & 0xffff;
            if (reinterpret_cast<int32_t>(eax29) > reinterpret_cast<int32_t>(0x3f6)) {
                if (eax29 == 0x3f7) {
                    eax30 = reinterpret_cast<void**>(IsDlgButtonChecked());
                    g41a2b8 = eax30;
                    fun_403ff0(a1, a1, 0x3f7, v27);
                    goto v31;
                }
            } else {
                if (eax29 == 0x3f6) {
                    fun_403b20(0x4000000, 2, 1, v27, v32, v33, v34, v35, v36, v37, v38, v39, v25, a1);
                    eax40 = fun_403ff0(a1, 0x4000000, 2, 1);
                    return eax40;
                } else {
                    if (!(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(eax29) < reinterpret_cast<int32_t>(0)) | reinterpret_cast<uint1_t>(eax29 == 0)) && reinterpret_cast<int32_t>(eax29) <= reinterpret_cast<int32_t>(2)) {
                        g41f2e0 = reinterpret_cast<void**>(2);
                        eax43 = fun_403ff0(a1, v27, v41, v42);
                        return eax43;
                    }
                }
            }
        }
        eax47 = fun_404c50(a1, a2, a3, a4, v27, v44, v45, v46);
        return eax47;
    }
    eax56 = fun_403a00(6, 9, v27, v48, v49, v50, v51, v52, v53, v54, v55, v25, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24);
    if (*reinterpret_cast<void***>(eax56)) {
        g41f35c = reinterpret_cast<void**>(1);
    }
    eax57 = g41f364;
    if (eax57) {
        g41f35c = reinterpret_cast<void**>(0);
    }
    esi58 = a1;
    v59 = ebx60;
    v61 = ebp62;
    v63 = edi64;
    fun_404c50(esi58, 0x110, a3, a4, v63, v61, v59, v27);
    fun_405fa0(esi58, 0x102, v63, v61, v59, v27, v65, v66, v67, v68, v69, v70, v71, v72, v25, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
    v73 = esi58;
    SetDlgItemTextA(v73);
    ebx74 = GetDlgItem;
    v75 = esi58;
    eax76 = reinterpret_cast<void**>(ebx74(v75, 0x3f6, v73));
    esp77 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 32 - 4 - 4 - 4 - 4 + 4 + 8 - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 16 + 4 - 4 - 4 - 4 + 4 + 8 - 4 - 4 - 4 - 4 + 4 - 4 - 4 - 4 + 4);
    edi78 = ShowWindow;
    v79 = eax76;
    if (eax76) {
        edi78(eax76, 0, v75, 0x3f6, v73);
        esp77 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp77) - 4 - 4 - 4 + 4);
    }
    v80 = esi58;
    eax81 = reinterpret_cast<void**>(ebx74());
    esp82 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp77) - 4 - 4 - 4 + 4);
    ebp83 = eax81;
    if (ebp83) {
        ecx84 = g41a2b8;
        CheckDlgButton(esi58, 0x3f7, ecx84);
        edi78(ebp83, 0, esi58, 0x3f7, ecx84);
        esp82 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp82) - 4 - 4 - 4 - 4 + 4 - 4 - 4 - 4 + 4);
    }
    edx85 = g41f2a0;
    v86 = edx85;
    eax87 = reinterpret_cast<void**>(ebx74(v86, 0x3e8));
    esp88 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp82) - 4 - 4 - 4 + 4);
    v89 = eax87;
    eax90 = g41f364;
    if (!eax90) 
        goto addr_40a539_20;
    addr_40a6f9_21:
    ebp91 = GetWindowRect;
    v92 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp88) + 16);
    v93 = v89;
    ebp91();
    esp94 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp88) - 4 - 4 - 4 + 4);
    v95 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp94) + 32);
    v96 = esi58;
    eax97 = reinterpret_cast<void**>(ebx74());
    v98 = eax97;
    ebp91(v98);
    v99 = esi58;
    eax100 = reinterpret_cast<void**>(ebx74());
    v101 = eax100;
    edi78();
    v102 = esi58;
    eax103 = reinterpret_cast<void**>(ebx74(v102, 0x3ea, 0));
    v104 = eax103;
    edi78(v104, v102, 0x3ea, 0);
    ecx105 = reinterpret_cast<void**>(0x3e9 - reinterpret_cast<unsigned char>(v101));
    v106 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v95) - reinterpret_cast<unsigned char>(v99));
    v107 = ecx105;
    v108 = v80;
    SetWindowPos(v108, 0, 0, 0, v107, v106, 6, v104, v102, 0x3ea, 0);
    esp109 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp94) - 4 - 4 - 4 - 4 + 4 - 4 - 4 + 4 - 4 - 4 - 4 - 4 + 4 - 4 - 4 + 4 - 4 - 4 - 4 - 4 + 4 - 4 - 4 + 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4);
    zf110 = reinterpret_cast<int1_t>(g41f364 == 15);
    if (!zf110) {
        eax111 = fun_4021c0(ecx105, 0x800, reinterpret_cast<int32_t>(esp109) + 52, v108, 0, 0, 0, v107, v106, 6, v104, v102, 0x3ea, 0, v101, v99, 0x3e9, 0, v98, v96, 0x3ea, v95);
        esp112 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp109) - 4 - 4 - 4 + 4 + 8);
        if (!eax111) {
            addr_40a8dd_23:
            g41f2b4 = reinterpret_cast<void**>(1);
        } else {
            eax113 = g41f364;
            ebp114 = wsprintfA;
            esi115 = reinterpret_cast<void**>(0x7e9);
            if (!reinterpret_cast<int1_t>(eax113 == 0x3e8)) {
                if (!reinterpret_cast<int1_t>(eax113 == 31)) {
                    fun_405420(0x7e9, eax113, v108, 0, 0, 0, v107, v106, 6, v104, v102, 0x3ea, 0, v101, v99, 0x3e9, 0, v98, v96, 0x3ea, v95, v93, v92, v86, 0x3e8, v80, 0x3f7, v75, 0x3f6, v73, 0x3eb, 0x41f380, v63, v61);
                    esp116 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp112) - 4 - 4 - 4 + 4 + 8);
                    goto addr_40a8b4_27;
                } else {
                    ecx117 = g41f354;
                    edx118 = reinterpret_cast<void**>(0x7e9);
                    do {
                        al119 = *ecx117;
                        ++ecx117;
                        *reinterpret_cast<void***>(edx118) = al119;
                        ++edx118;
                    } while (al119);
                    zf120 = g7e9 == 0;
                    if (zf120) 
                        goto addr_40a85e_31; else 
                        goto addr_40a841_32;
                }
            } else {
                ecx121 = g41f354;
                edx122 = reinterpret_cast<void**>(0x7e9);
                do {
                    al123 = *ecx121;
                    ++ecx121;
                    *reinterpret_cast<void***>(edx122) = al123;
                    ++edx122;
                } while (al123);
                edi124 = reinterpret_cast<void**>(0x7e9);
                ecx125 = 0xffffffff;
                esp126 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp112) - 4);
                do {
                    if (!ecx125) 
                        break;
                    --ecx125;
                    ++edi124;
                    ++esi115;
                } while (*reinterpret_cast<void***>(edi124));
                ax127 = g41a9c0;
                edi128 = edi124 - 1;
                esp129 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp126) - 4);
                *reinterpret_cast<void***>(edi128) = ax127;
                *reinterpret_cast<void***>(&ecx125) = g41a9c2;
                *reinterpret_cast<void***>(edi128 + 2) = *reinterpret_cast<void***>(&ecx125);
                edi130 = esi115;
                ecx131 = 0xffffffff;
                do {
                    if (!ecx131) 
                        break;
                    --ecx131;
                    ++edi130;
                    ++esi115;
                } while (*reinterpret_cast<void***>(edi130));
                eax132 = g41f368;
                FormatMessageA(0x1000, 0, eax132, 0, reinterpret_cast<int32_t>(~ecx131) - 1 + 0x3e9 + 0x400, 0x1f4, 0, v108, 0, 0, 0, v107, v106, 6, v104, v102, 0x3ea, 0);
                esp116 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp129) - 4 - 4 - 4 - 4 - 4 - 4 + 4);
                goto addr_40a8b4_27;
            }
        }
    } else {
        eax133 = fun_403a00(7, 15, v108, 0, 0, 0, v107, v106, 6, v104, v102, 0x3ea, 0, v101, v99, 0x3e9, 0, v98, v96, 0x3ea, v95, v93, v92, v86, 0x3e8, v80, 0x3f7, v75, 0x3f6, v73, 0x3eb, 0x41f380, v63, v61, v59, v27);
        fun_405a50(v80, eax133, 7, 15, v108, 0, 0, 0, v107, v106, 6, v104, v102, 0x3ea, 0, v101, v99, 0x3e9, 0, v98, v96, 0x3ea, v95, v93, v92, v86, 0x3e8, v80, 0x3f7, v75, 0x3f6, v73, 0x3eb, 0x41f380, v63, v61, v59);
        g41f2b4 = reinterpret_cast<void**>(1);
    }
    addr_40a6d7_43:
    SetFocus();
    goto 0x3eb;
    addr_40a8b4_27:
    eax134 = fun_403a00(6, 5, esi115, v108, 0, 0, 0, v107, v106, 6, v104, v102, 0x3ea, 0, v101, v99, 0x3e9, 0, v98, v96, 0x3ea, v95, v93, v92, v86, 0x3e8, v80, 0x3f7, v75, 0x3f6, v73, 0x3eb, 0x41f380, v63, v61, v59);
    ebp114(0x3e9, eax134, esi115, v108, 0, 0, 0, v107, v106, 6, v104, v102, 0x3ea, 0);
    fun_405a50(v96, 0x3e9, 0x3e9, eax134, esi115, v108, 0, 0, 0, v107, v106, 6, v104, v102, 0x3ea, 0, v101, v99, 0x3e9, 0, v98, v96, 0x3ea, v95, v93, v92, v86, 0x3e8, v80, 0x3f7, v75, 0x3f6, v73, 0x3eb, 0x41f380, v63, v61);
    ecx135 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp116) - 4 - 4 - 4 - 4 + 4 + 8 - 4 - 4 - 4 + 4 - 4 - 4 - 4 + 4 + 72);
    fun_402200(ecx135, ecx135, v96, 0x3e9, 0x3e9, eax134, esi115, v108, 0, 0, 0, v107, v106, 6, v104, v102, 0x3ea, 0, v101, v99);
    goto addr_40a8dd_23;
    addr_40a85e_31:
    eax136 = g41f364;
    edi137 = esi115;
    esp138 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp112) - 4);
    v139 = eax136;
    ecx140 = 0xffffffff;
    do {
        if (!ecx140) 
            break;
        --ecx140;
        ++edi137;
        ++esi115;
    } while (*reinterpret_cast<void***>(edi137));
    fun_405420(reinterpret_cast<int32_t>(~ecx140) - 1 + 0x3e9 + 0x400, v139, v108, 0, 0, 0, v107, v106, 6, v104, v102, 0x3ea, 0, v101, v99, 0x3e9, 0, v98, v96, 0x3ea, v95, v93, v92, v86, 0x3e8, v80, 0x3f7, v75, 0x3f6, v73, 0x3eb, 0x41f380, v63, v61);
    eax141 = g41f28c;
    esp116 = reinterpret_cast<void*>(esp138 - 4 - 4 + 4 + 8);
    if (eax141) {
        esp142 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp116) - 4);
        v143 = eax141;
        edi144 = esi115;
        ecx145 = 0xffffffff;
        do {
            if (!ecx145) 
                break;
            --ecx145;
            ++edi144;
            ++esi115;
        } while (*reinterpret_cast<void***>(edi144));
        ebp114(reinterpret_cast<int32_t>(~ecx145) - 1 + 0x3e9 + 0x400, " (error %4.4X)", v143, v108, 0, 0, 0, v107, v106, 6, v104, v102, 0x3ea, 0);
        esp116 = reinterpret_cast<void*>(esp142 - 4 - 4 - 4 + 4 + 12);
        goto addr_40a8b4_27;
    }
    addr_40a841_32:
    edi146 = reinterpret_cast<void**>(0x7e9);
    ecx117 = reinterpret_cast<void***>(0xffffffff);
    do {
        if (!ecx117) 
            break;
        --ecx117;
        ++edi146;
        ++esi115;
    } while (*reinterpret_cast<void***>(edi146));
    *reinterpret_cast<void***>(&ecx117) = g41a9c0;
    edi147 = edi146 - 1;
    *reinterpret_cast<void***>(edi147) = *reinterpret_cast<void***>(&ecx117);
    dl148 = g41a9c2;
    *reinterpret_cast<void***>(edi147 + 2) = dl148;
    goto addr_40a85e_31;
    addr_40a539_20:
    edx149 = g41f110;
    eax150 = g41f10c;
    v151 = reinterpret_cast<void**>(0);
    if (!edx149) {
        addr_40a575_54:
        edx152 = g41f258;
        if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx152)) & 64 && ((eax158 = fun_403a00(6, 6, v86, 0x3e8, v80, 0x3f7, v75, 0x3f6, v73, 0x3eb, 0x41f380, v63, v61, v59, v27, 0, v153, v154, v89, v155, v156, v79, v157, v25, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12), esp88 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp88) - 4 - 4 - 4 + 4 + 8), !!eax158) && *reinterpret_cast<void***>(eax158))) {
            SetWindowTextA(v159, eax158, v86, 0x3e8);
            edi78(0, 1, v159, eax158, v86, 0x3e8);
            esp88 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp88) - 4 - 4 - 4 + 4 - 4 - 4 - 4 + 4);
            v63 = reinterpret_cast<void**>(1);
        }
    } else {
        do {
            if (*reinterpret_cast<void***>(eax150 + 4) == 27) 
                goto addr_40a6ef_57;
            ++v151;
            eax150 = fun_403b10(eax150, v86, 0x3e8, v80, 0x3f7, v75, eax150, v86, 0x3e8, v80, 0x3f7, v75);
            esp88 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp88) - 4 - 4 + 4 + 4);
        } while (reinterpret_cast<unsigned char>(v151) < reinterpret_cast<unsigned char>(edx149));
        goto addr_40a575_54;
    }
    eax160 = g41f35c;
    if (!eax160 && ((edx161 = g41f258, reinterpret_cast<signed char>(*reinterpret_cast<void***>(edx161)) < reinterpret_cast<signed char>(0)) && ((eax167 = fun_403a00(6, 7, v86, 0x3e8, v80, 0x3f7, v75, 0x3f6, v73, 0x3eb, 0x41f380, v63, v61, v59, v27, 0, v162, v163, v89, v164, v165, v79, v166, v25, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12), esp88 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp88) - 4 - 4 - 4 + 4 + 8), !!eax167) && (*reinterpret_cast<void***>(eax167) && ((SetWindowTextA(ebp83), edi78(ebp83), esp88 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp88) - 4 - 4 - 4 + 4 - 4 - 4 - 4 + 4), !v63) && ((eax173 = fun_403a00(6, 3, ebp83, 1, ebp83, eax167, v86, 0x3e8, v80, 0x3f7, v75, 0x3f6, v73, 0x3eb, 0x41f380, v63, v61, v59, v27, 0, v168, v169, v89, v170, v171, v79, v172, v25, a1, a2, a3, a4, a5, a6, a7, a8), esp88 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp88) - 4 - 4 - 4 + 4 + 8), eax173 == 0) || !*reinterpret_cast<void***>(eax173))))))) {
        v174 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp88) + 16);
        GetWindowRect();
        esp175 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp88) - 4 - 4 - 4 + 4);
        v176 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp175) + 16);
        GetWindowRect(ebp83, v176);
        edi177 = eax167 - 1;
        v178 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp175) - 4 - 4 - 4 + 4 + 16);
        ScreenToClient(esi58, v178, ebp83, v176);
        SetWindowPos(ebp83, 0, v59, v174, 0, 0, 5, esi58, v178, ebp83, v176);
        eax181 = fun_403a00(6, 4, ebp83, 0, v59, v174, 0, 0, 5, esi58, v178, ebp83, v176, v59, v174, ebp83, edi177 + 1, ebp83, reinterpret_cast<unsigned char>(eax167) + reinterpret_cast<unsigned char>(edi177), v86, 0x3e8, v80, 0x3f7, v75, 0x3f6, v73, 0x3eb, 0x41f380, v63, v61, v59, v27, 0, v179, v180, v89);
        eax182 = reinterpret_cast<void**>(ebx74(esi58, 0x3e9, eax181, ebp83, 0, v59, v174, 0, 0, 5, esi58, v178, ebp83, v176));
        fun_405a50(eax182, esi58, 0x3e9, eax181, ebp83, 0, v59, v174, 0, 0, 5, esi58, v178, ebp83, v176, v59, v174, ebp83, edi177 + 1, ebp83, reinterpret_cast<unsigned char>(eax167) + reinterpret_cast<unsigned char>(edi177), v86, 0x3e8, v80, 0x3f7, v75, 0x3f6, v73, 0x3eb, 0x41f380, v63, v61, v59, v27, 0, v183, v184);
        eax185 = reinterpret_cast<int32_t>(ebx74(esi58, 0x3ea, 0x41f380, 0x3e9, eax181, ebp83, 0, v59, v174, 0, 0, 5, esi58, v178, ebp83, v176));
        SetWindowTextA(eax185, esi58, 0x3ea, 0x41f380, 0x3e9, eax181, ebp83, 0, v59, v174, 0, 0, 5, esi58, v178, ebp83, v176);
    }
    eax186 = reinterpret_cast<void**>(ebx74());
    SetWindowTextA();
    fun_403b20(0x2000000, 0, 1, eax186, esi58, 0x3eb, 0x41f380, v86, 0x3e8, v80, 0x3f7, v75, 0x3f6, v73);
    goto addr_40a6d7_43;
    addr_40a6ef_57:
    g41f364 = reinterpret_cast<void**>(22);
    goto addr_40a6f9_21;
}

void fun_40d0be() {
    int1_t below_or_equal1;
    int1_t below_or_equal2;
    signed char* eax3;
    signed char* eax4;
    signed char al5;
    signed char* eax6;
    signed char* eax7;
    signed char al8;
    signed char* eax9;
    signed char* eax10;
    signed char al11;
    int32_t ebp12;
    int32_t ebp13;
    signed char bl14;

    __asm__("das ");
    __asm__("das ");
    if (!below_or_equal1) {
        return;
    } else {
        if (below_or_equal2) {
            __asm__("arpl [ecx+ebp*2+0x63], bp");
            __asm__("arpl [cs:edi+0x6d], bp");
            __asm__("das ");
            if (__intrinsic()) 
                goto 0x40d14e;
            *eax3 = reinterpret_cast<signed char>(*eax4 + al5);
            *eax6 = reinterpret_cast<signed char>(*eax7 + al8);
            *eax9 = reinterpret_cast<signed char>(*eax10 + al11);
            *reinterpret_cast<signed char*>(ebp12 - 61) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebp13 - 61) + bl14);
        }
    }
}

struct s104 {
    signed char[1] pad1;
    int32_t f1;
};

struct s105 {
    signed char[1] pad1;
    uint32_t f1;
};

void fun_41041e(struct s104* ecx) {
    struct s105* eax2;
    void* eax3;
    signed char* edx4;
    int32_t ebp5;
    signed char* edx6;
    int32_t ebp7;
    uint32_t* eax8;
    unsigned char tmp8_9;
    int32_t edx10;
    uint1_t cf11;
    int32_t edx12;
    int32_t edx13;
    int32_t* ecx14;
    int32_t ebx15;
    int32_t ebx16;
    uint32_t** edi17;

    eax2 = reinterpret_cast<struct s105*>(reinterpret_cast<int32_t>(eax3) + 1);
    edx4[ebp5 * 8] = reinterpret_cast<signed char>(edx6[ebp7 * 8] + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax2) + 1));
    eax8 = &eax2->f1;
    tmp8_9 = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(edx10 + 0x630040ea) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax8) + 1));
    cf11 = reinterpret_cast<uint1_t>(tmp8_9 < *reinterpret_cast<unsigned char*>(edx12 + 0x630040ea));
    *reinterpret_cast<unsigned char*>(edx13 + 0x630040ea) = tmp8_9;
    __asm__("cdq ");
    *eax8 = *eax8 + 1;
    *eax8 = *eax8 - (reinterpret_cast<int32_t>(eax8) + reinterpret_cast<uint1_t>(*eax8 < reinterpret_cast<int32_t>(eax8) + cf11));
    ecx14 = &ecx->f1;
    *reinterpret_cast<signed char*>(ebx15 + 0x27004100) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebx16 + 0x27004100) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax8) + 1));
    *ecx14 = *ecx14 + reinterpret_cast<int32_t>(eax8);
    *edi17 = eax8;
    *ecx14 = *ecx14 + reinterpret_cast<int32_t>(eax8);
    __asm__("das ");
}

void** fun_411b60(void** a1, void** a2, void** a3) {
    void** eax4;

    eax4 = fun_4133d2(a2, a3, __return_address(), a1, a2, a3);
    return eax4;
}

void fun_413b5e(int32_t a1, int32_t a2, int32_t a3, int32_t a4) {
    goto a4;
}

void*** g41f3a0 = reinterpret_cast<void***>(0);

uint32_t g41f39c = 0;

void** g41f398 = reinterpret_cast<void**>(0);

uint32_t g41f394 = 0;

int32_t GetCommandLineA = 0x19b32;

void fun_41403c() {
    void* esp1;
    void** edi2;
    void** esi3;
    void** ebx4;
    uint32_t eax5;
    void*** edx6;
    uint32_t ecx7;
    void** ecx8;
    void** v9;
    void** v10;
    void** v11;
    void** v12;
    void** v13;
    void** v14;
    void** v15;
    void** v16;
    void** v17;
    int32_t eax18;
    void** ecx19;
    void** eax20;
    void** eax21;
    void** v22;
    void** v23;
    void** v24;
    void** v25;
    void** eax26;
    uint32_t eax27;
    uint16_t v28;
    void** eax29;
    int32_t eax30;
    void** ecx31;
    void** v32;

    esp1 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    *reinterpret_cast<void***>(&g0) = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp1) - 4 - 4 - 4 - 4);
    eax5 = reinterpret_cast<uint32_t>(GetVersion(edi2, esi3, ebx4));
    edx6 = reinterpret_cast<void***>(0);
    *reinterpret_cast<signed char*>(&edx6) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax5) + 1);
    g41f3a0 = edx6;
    ecx7 = eax5 & 0xff;
    g41f39c = ecx7;
    ecx8 = reinterpret_cast<void**>((ecx7 << 8) + reinterpret_cast<uint32_t>(edx6));
    g41f398 = ecx8;
    g41f394 = eax5 >> 16;
    eax18 = fun_414456(ecx8, 0, edi2, esi3, ebx4, v9, v10, v11, v12, v13, v14, v15, v16, v17);
    ecx19 = reinterpret_cast<void**>(0);
    if (!eax18) {
        fun_414157(0);
        ecx19 = reinterpret_cast<void**>(28);
    }
    fun_416bad(ecx19, edi2, esi3, ebx4);
    eax20 = reinterpret_cast<void**>(GetCommandLineA(ecx19, edi2, esi3, ebx4));
    g41f8ac = eax20;
    eax21 = fun_416a7b(ecx19, edi2, esi3, ebx4);
    g41f3d4 = eax21;
    fun_41682e(ecx19, edi2, esi3, ebx4);
    fun_416775(ecx19, edi2, esi3, ebx4, v22, v23, v24);
    fun_41307b(ecx19, edi2, esi3, ebx4);
    v25 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp1) + 0xffffffa4);
    GetStartupInfoA(ecx19, v25, edi2, esi3, ebx4);
    eax26 = fun_41671d(ecx19, v25, edi2, esi3, ebx4);
    if (1) {
        eax27 = 10;
    } else {
        eax27 = v28;
    }
    eax29 = reinterpret_cast<void**>(GetModuleHandleA(ecx19, 0, 0, eax26, eax27, v25, edi2, esi3, ebx4));
    eax30 = fun_40bb70(ecx19, eax29, 0, 0, eax26, eax27, v25, edi2, esi3, ebx4);
    fun_4130a8(ecx19);
    ecx31 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(v32));
    fun_416599(ecx31, v32);
    goto eax30;
}

int32_t fun_4158a1(void** ecx) {
    int32_t** v2;
    int32_t ebp3;
    int32_t eax4;

    v2 = *reinterpret_cast<int32_t***>(ebp3 - 20);
    eax4 = fun_4158d8(ecx, v2);
    return eax4;
}

int32_t fun_415d79() {
    return 1;
}

int32_t fun_415dcf() {
    return 1;
}

int32_t fun_415f7b() {
    return 1;
}

struct s106 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s107 {
    signed char[12] pad12;
    struct s57* f12;
};

int32_t fun_416d58(struct s106* a1, struct s57* a2, int32_t a3) {
    unsigned char* esi4;
    unsigned char dh5;
    unsigned char* eax6;
    struct s107* ebp7;
    struct s57* ebx8;
    int32_t eax9;
    int32_t esi10;
    int32_t* edi11;
    int32_t ecx12;
    int32_t eax13;
    int32_t* edi14;
    int32_t ecx15;

    *esi4 = reinterpret_cast<unsigned char>(*esi4 ^ reinterpret_cast<unsigned char>(dh5 ^ *eax6));
    ebp7 = reinterpret_cast<struct s107*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 + 4 - 4);
    ebx8 = a2;
    if (a1->f4 & 6) {
        fun_413c26(ebx8, 0xff);
        eax9 = 1;
    } else {
        *reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebx8) - 4) = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ebp7) - 8);
        esi10 = ebx8->f12;
        edi11 = ebx8->f8;
        while (esi10 != -1) {
            ecx12 = esi10 + esi10 * 2;
            if ((edi11 + ecx12)[1] && (eax13 = reinterpret_cast<int32_t>((edi11 + ecx12)[1]()), ebp7 = ebp7, esi10 = esi10, ebx8 = ebp7->f12, !!eax13)) {
                if (__intrinsic()) 
                    goto addr_416df2_7;
                edi14 = ebx8->f8;
                fun_413be4(ebx8);
                ebp7 = reinterpret_cast<struct s107*>(ebx8 + 1);
                fun_413c26(ebx8, esi10);
                ecx15 = esi10 + esi10 * 2;
                fun_413cba(ecx15, 1);
                ebx8->f12 = edi14[ecx15];
                (edi14 + ecx15)[2]();
            }
            edi11 = ebx8->f8;
            esi10 = edi11[esi10 + esi10 * 2];
        }
        goto addr_416df9_10;
    }
    addr_416e15_11:
    return eax9;
    addr_416df9_10:
    eax9 = 1;
    goto addr_416e15_11;
    addr_416df2_7:
    eax9 = 0;
    goto addr_416e15_11;
}

struct s108 {
    signed char[3] pad3;
    int32_t f3;
};

struct s109 {
    signed char[3] pad3;
    int32_t f3;
};

void fun_4172b5(uint32_t ecx) {
    int32_t* esi2;
    struct s108* esi3;
    int32_t* edi4;
    struct s109* edi5;
    int32_t edx6;

    esi2 = &esi3->f3;
    edi4 = &edi5->f3;
    if (ecx < 8) 
        goto 0x41728c;
    while (ecx) {
        --ecx;
        *edi4 = *esi2;
        ++edi4;
        ++esi2;
    }
    switch (edx6) {
    case 3:
        goto 0x4173b0;
    case 2:
        goto 0x41739c;
    case 1:
        goto 0x417390;
    case 0:
        goto 0x417388;
    }
}

struct s110 {
    signed char[1] pad1;
    signed char f1;
};

struct s111 {
    signed char[1] pad1;
    signed char f1;
};

struct s112 {
    signed char[2] pad2;
    int32_t f2;
};

struct s113 {
    signed char[2] pad2;
    int32_t f2;
};

void fun_4172c9(uint32_t ecx) {
    uint32_t edx2;
    uint32_t edx3;
    signed char* edi4;
    signed char* esi5;
    uint32_t ecx6;
    struct s110* edi7;
    struct s111* esi8;
    int32_t* esi9;
    struct s112* esi10;
    int32_t* edi11;
    struct s113* edi12;

    edx2 = edx3 & ecx;
    *edi4 = *esi5;
    ecx6 = ecx >> 2;
    edi7->f1 = esi8->f1;
    esi9 = &esi10->f2;
    edi11 = &edi12->f2;
    if (ecx6 < 8) 
        goto 0x41728c;
    while (ecx6) {
        --ecx6;
        *edi11 = *esi9;
        ++edi11;
        ++esi9;
    }
    switch (edx2) {
    case 3:
        goto 0x4173b0;
    case 2:
        goto 0x41739c;
    case 1:
        goto 0x417390;
    case 0:
        goto 0x417388;
    }
}

struct s114 {
    signed char[1] pad1;
    int32_t f1;
};

struct s115 {
    signed char[1] pad1;
    int32_t f1;
};

void fun_4172f0(uint32_t ecx) {
    uint32_t edx2;
    uint32_t edx3;
    signed char* edi4;
    signed char* esi5;
    int32_t* esi6;
    struct s114* esi7;
    uint32_t ecx8;
    int32_t* edi9;
    struct s115* edi10;

    edx2 = edx3 & ecx;
    *edi4 = *esi5;
    esi6 = &esi7->f1;
    ecx8 = ecx >> 2;
    edi9 = &edi10->f1;
    if (ecx8 < 8) 
        goto 0x41728c;
    while (ecx8) {
        --ecx8;
        *edi9 = *esi6;
        ++edi9;
        ++esi6;
    }
    switch (edx2) {
    case 3:
        goto 0x4173b0;
    case 2:
        goto 0x41739c;
    case 1:
        goto 0x417390;
    case 0:
        goto 0x417388;
    }
}

void fun_417309(int32_t ecx) {
    int32_t ecx2;
    int1_t cf3;
    void* ebx4;
    int32_t esi5;
    void* ebx6;
    int32_t esi7;
    signed char bl8;
    void* ebx9;
    int32_t esi10;
    void* ebx11;
    int32_t esi12;
    signed char dl13;
    void* ebx14;
    int32_t esi15;
    void* ebx16;
    int32_t esi17;
    void* ebx18;
    int32_t esi19;
    void* ebx20;
    int32_t esi21;
    signed char al22;
    signed char* ebx23;
    int32_t esi24;
    signed char* ebx25;
    int32_t esi26;
    signed char bh27;
    signed char* ebx28;
    int32_t esi29;
    signed char* ebx30;
    int32_t esi31;
    signed char dh32;
    int32_t ecx33;
    signed char* ebx34;
    int32_t esi35;
    signed char* ebx36;
    int32_t esi37;
    int32_t ecx38;
    int32_t ebx39;
    int32_t ebx40;

    ecx2 = ecx;
    __asm__("outsd ");
    if (!cf3) 
        goto 0x417350;
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebx4) + esi5 * 2 + 65) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebx6) + esi7 * 2 + 65) + bl8);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebx9) + esi10 * 2 + 65) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebx11) + esi12 * 2 + 65) + dl13);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebx14) + esi15 * 2 + 65) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebx16) + esi17 * 2 + 65) + *reinterpret_cast<signed char*>(&ecx2));
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebx18) + esi19 * 2 + 65) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebx20) + esi21 * 2 + 65) + al22);
    ebx23[esi24 * 2] = reinterpret_cast<signed char>(ebx25[esi26 * 2] + bh27);
    ebx28[esi29 * 2] = reinterpret_cast<signed char>(ebx30[esi31 * 2] + dh32);
    ecx33 = ecx2 + 1 + 1;
    ebx34[esi35 * 2] = reinterpret_cast<signed char>(ebx36[esi37 * 2] + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx33) + 1));
    ecx38 = ecx33 + 1;
    *reinterpret_cast<signed char*>(ebx39 - 0x761b71bc) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebx40 - 0x761b71bc) + *reinterpret_cast<signed char*>(&ecx38));
}

struct s116 {
    signed char[65] pad65;
    signed char f65;
};

void fun_417376() {
    struct s116* ebx1;
    signed char dh2;
    unsigned char tmp8_3;
    int32_t eax4;
    signed char dl5;
    int1_t cf6;
    int32_t eax7;
    int32_t eax8;
    int32_t eax9;
    int32_t eax10;
    signed char dh11;

    ebx1->f65 = dh2;
    tmp8_3 = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(eax4 - 0x63ffbe8d) + dl5);
    cf6 = tmp8_3 < *reinterpret_cast<unsigned char*>(eax7 - 0x63ffbe8d);
    *reinterpret_cast<unsigned char*>(eax8 - 0x63ffbe8d) = tmp8_3;
    if (!cf6) 
        goto 0x4173c4;
    *reinterpret_cast<signed char*>(eax9 - 0x74ffbe8d) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(eax10 - 0x74ffbe8d) + dh11);
}

void fun_4173ee() {
}

struct s117 {
    signed char[3] pad3;
    signed char f3;
};

struct s118 {
    signed char[3] pad3;
    signed char f3;
};

struct s119 {
    signed char[2] pad2;
    signed char f2;
};

struct s120 {
    signed char[2] pad2;
    signed char f2;
};

void fun_417445(uint32_t ecx) {
    uint32_t edx2;
    uint32_t edx3;
    struct s117* edi4;
    struct s118* esi5;
    uint32_t ecx6;
    struct s119* edi7;
    struct s120* esi8;
    int32_t* esi9;
    void* esi10;
    int32_t* edi11;
    void* edi12;

    edx2 = edx3 & ecx;
    edi4->f3 = esi5->f3;
    ecx6 = ecx >> 2;
    edi7->f2 = esi8->f2;
    esi9 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esi10) - 2);
    edi11 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edi12) - 2);
    if (ecx6 < 8) 
        goto 0x4173f0;
    while (ecx6) {
        --ecx6;
        *edi11 = *esi9;
        --edi11;
        --esi9;
    }
    switch (edx2) {
    case 3:
        goto 0x41754c;
    case 2:
        goto 0x417538;
    case 1:
        goto 0x417528;
    case 0:
        goto 0x417520;
    }
}

struct s121 {
    signed char[3] pad3;
    signed char f3;
};

struct s122 {
    signed char[3] pad3;
    signed char f3;
};

struct s123 {
    signed char[2] pad2;
    signed char f2;
};

struct s124 {
    signed char[2] pad2;
    signed char f2;
};

struct s125 {
    signed char[1] pad1;
    signed char f1;
};

struct s126 {
    signed char[1] pad1;
    signed char f1;
};

void fun_417470(uint32_t ecx) {
    uint32_t edx2;
    uint32_t edx3;
    struct s121* edi4;
    struct s122* esi5;
    struct s123* edi6;
    struct s124* esi7;
    uint32_t ecx8;
    struct s125* edi9;
    struct s126* esi10;
    int32_t* esi11;
    void* esi12;
    int32_t* edi13;
    void* edi14;

    edx2 = edx3 & ecx;
    edi4->f3 = esi5->f3;
    edi6->f2 = esi7->f2;
    ecx8 = ecx >> 2;
    edi9->f1 = esi10->f1;
    esi11 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esi12) - 3);
    edi13 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edi14) - 3);
    if (ecx8 < 8) 
        goto 0x4173f0;
    while (ecx8) {
        --ecx8;
        *edi13 = *esi11;
        --edi13;
        --esi11;
    }
    switch (edx2) {
    case 3:
        goto 0x41754c;
    case 2:
        goto 0x417538;
    case 1:
        goto 0x417528;
    case 0:
        goto 0x417520;
    }
}

void fun_4174a1(int32_t ecx) {
    int32_t ecx2;
    int1_t zf3;
    signed char ah4;
    signed char ah5;
    signed char dl6;
    signed char ah7;
    signed char bl8;
    signed char ah9;
    signed char ah10;
    signed char dh11;
    signed char* edi12;
    signed char* edi13;
    signed char al14;
    signed char* edi15;
    int32_t ebx16;
    int32_t ebx17;

    ecx2 = ecx;
    __asm__("les esi, [ecx+eax*2+0x0]");
    if (zf3) 
        goto 0x4174ec;
    ah4 = reinterpret_cast<signed char>(ah5 + dl6);
    if (!ah4) 
        goto 0x4174f0;
    ah7 = reinterpret_cast<signed char>(ah4 + bl8);
    if (!ah7) 
        goto 0x4174f4;
    ah9 = reinterpret_cast<signed char>(ah7 + ah7);
    if (!ah9) 
        goto 0x4174f8;
    ah10 = reinterpret_cast<signed char>(ah9 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx2) + 1));
    if (!ah10) 
        goto 0x4174fc;
    if (!(ah10 + dh11)) 
        goto 0x417500;
    *edi12 = reinterpret_cast<signed char>(*edi13 + al14);
    if (*edi15) 
        goto 0x417504;
    *reinterpret_cast<signed char*>(ebx16 - 0x76e371bc) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebx17 - 0x76e371bc) + *reinterpret_cast<signed char*>(&ecx2));
}

int32_t fun_4177b4() {
    return 1;
}

struct s127 {
    signed char[3] pad3;
    int32_t f3;
};

struct s128 {
    signed char[3] pad3;
    int32_t f3;
};

void fun_4179c5(uint32_t ecx) {
    int32_t* esi2;
    struct s127* esi3;
    int32_t* edi4;
    struct s128* edi5;
    int32_t edx6;

    esi2 = &esi3->f3;
    edi4 = &edi5->f3;
    if (ecx < 8) 
        goto 0x41799c;
    while (ecx) {
        --ecx;
        *edi4 = *esi2;
        ++edi4;
        ++esi2;
    }
    switch (edx6) {
    case 3:
        goto 0x417ac0;
    case 2:
        goto 0x417aac;
    case 1:
        goto 0x417aa0;
    case 0:
        goto 0x417a98;
    }
}

struct s129 {
    signed char[1] pad1;
    signed char f1;
};

struct s130 {
    signed char[1] pad1;
    signed char f1;
};

struct s131 {
    signed char[2] pad2;
    int32_t f2;
};

struct s132 {
    signed char[2] pad2;
    int32_t f2;
};

void fun_4179d9(uint32_t ecx) {
    uint32_t edx2;
    uint32_t edx3;
    signed char* edi4;
    signed char* esi5;
    uint32_t ecx6;
    struct s129* edi7;
    struct s130* esi8;
    int32_t* esi9;
    struct s131* esi10;
    int32_t* edi11;
    struct s132* edi12;

    edx2 = edx3 & ecx;
    *edi4 = *esi5;
    ecx6 = ecx >> 2;
    edi7->f1 = esi8->f1;
    esi9 = &esi10->f2;
    edi11 = &edi12->f2;
    if (ecx6 < 8) 
        goto 0x41799c;
    while (ecx6) {
        --ecx6;
        *edi11 = *esi9;
        ++edi11;
        ++esi9;
    }
    switch (edx2) {
    case 3:
        goto 0x417ac0;
    case 2:
        goto 0x417aac;
    case 1:
        goto 0x417aa0;
    case 0:
        goto 0x417a98;
    }
}

struct s133 {
    signed char[1] pad1;
    int32_t f1;
};

struct s134 {
    signed char[1] pad1;
    int32_t f1;
};

void fun_417a00(uint32_t ecx) {
    uint32_t edx2;
    uint32_t edx3;
    signed char* edi4;
    signed char* esi5;
    int32_t* esi6;
    struct s133* esi7;
    uint32_t ecx8;
    int32_t* edi9;
    struct s134* edi10;

    edx2 = edx3 & ecx;
    *edi4 = *esi5;
    esi6 = &esi7->f1;
    ecx8 = ecx >> 2;
    edi9 = &edi10->f1;
    if (ecx8 < 8) 
        goto 0x41799c;
    while (ecx8) {
        --ecx8;
        *edi9 = *esi6;
        ++edi9;
        ++esi6;
    }
    switch (edx2) {
    case 3:
        goto 0x417ac0;
    case 2:
        goto 0x417aac;
    case 1:
        goto 0x417aa0;
    case 0:
        goto 0x417a98;
    }
}

void fun_417a19(int32_t ecx) {
    int1_t less_or_equal2;
    int32_t ecx3;
    void* edx4;
    int32_t edi5;
    void* edx6;
    int32_t edi7;
    void* edx8;
    int32_t edi9;
    void* edx10;
    int32_t edi11;
    signed char ah12;
    void* edx13;
    int32_t edi14;
    void* edx15;
    int32_t edi16;
    signed char bl17;
    void* edx18;
    int32_t edi19;
    void* edx20;
    int32_t edi21;
    signed char dl22;
    void* edx23;
    int32_t edi24;
    void* edx25;
    int32_t edi26;
    void* edx27;
    int32_t edi28;
    void* edx29;
    int32_t edi30;
    signed char al31;
    signed char* edx32;
    int32_t edi33;
    signed char* edx34;
    int32_t edi35;
    signed char bh36;
    int32_t ecx37;
    int32_t ebx38;
    int32_t ebx39;

    if (!less_or_equal2) 
        goto 0x417a98;
    ecx3 = ecx + 1;
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edx4) + edi5 * 2 + 65) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edx6) + edi7 * 2 + 65) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx3) + 1));
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edx8) + edi9 * 2 + 65) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edx10) + edi11 * 2 + 65) + ah12);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edx13) + edi14 * 2 + 65) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edx15) + edi16 * 2 + 65) + bl17);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edx18) + edi19 * 2 + 65) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edx20) + edi21 * 2 + 65) + dl22);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edx23) + edi24 * 2 + 65) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edx25) + edi26 * 2 + 65) + *reinterpret_cast<signed char*>(&ecx3));
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edx27) + edi28 * 2 + 65) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edx29) + edi30 * 2 + 65) + al31);
    edx32[edi33 * 2] = reinterpret_cast<signed char>(edx34[edi35 * 2] + bh36);
    ecx37 = ecx3 + 1;
    *reinterpret_cast<signed char*>(ebx38 - 0x761b71bc) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebx39 - 0x761b71bc) + *reinterpret_cast<signed char*>(&ecx37));
}

void fun_417a86(signed char cl) {
    int32_t eax2;
    int16_t ax3;
    int1_t pf4;
    int32_t ebx5;
    int32_t ebx6;

    eax2 = ax3;
    if (pf4) 
        goto 0x417acc;
    *reinterpret_cast<signed char*>(eax2 - 0x53ffbe86) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(eax2 - 0x53ffbe86) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax2) + 1));
    if (__intrinsic()) 
        goto 0x417ad4;
    if (__intrinsic()) 
        goto 0x417ad8;
    *reinterpret_cast<signed char*>(ebx5 + 0x5f5e0845) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebx6 + 0x5f5e0845) + cl);
}

void fun_417afe() {
}

struct s135 {
    signed char[3] pad3;
    signed char f3;
};

struct s136 {
    signed char[3] pad3;
    signed char f3;
};

struct s137 {
    signed char[2] pad2;
    signed char f2;
};

struct s138 {
    signed char[2] pad2;
    signed char f2;
};

void fun_417b55(uint32_t ecx) {
    uint32_t edx2;
    uint32_t edx3;
    struct s135* edi4;
    struct s136* esi5;
    uint32_t ecx6;
    struct s137* edi7;
    struct s138* esi8;
    int32_t* esi9;
    void* esi10;
    int32_t* edi11;
    void* edi12;

    edx2 = edx3 & ecx;
    edi4->f3 = esi5->f3;
    ecx6 = ecx >> 2;
    edi7->f2 = esi8->f2;
    esi9 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esi10) - 2);
    edi11 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edi12) - 2);
    if (ecx6 < 8) 
        goto 0x417b00;
    while (ecx6) {
        --ecx6;
        *edi11 = *esi9;
        --edi11;
        --esi9;
    }
    switch (edx2) {
    case 3:
        goto 0x417c5c;
    case 2:
        goto 0x417c48;
    case 1:
        goto 0x417c38;
    case 0:
        goto 0x417c30;
    }
}

struct s139 {
    signed char[3] pad3;
    signed char f3;
};

struct s140 {
    signed char[3] pad3;
    signed char f3;
};

struct s141 {
    signed char[2] pad2;
    signed char f2;
};

struct s142 {
    signed char[2] pad2;
    signed char f2;
};

struct s143 {
    signed char[1] pad1;
    signed char f1;
};

struct s144 {
    signed char[1] pad1;
    signed char f1;
};

void fun_417b80(uint32_t ecx) {
    uint32_t edx2;
    uint32_t edx3;
    struct s139* edi4;
    struct s140* esi5;
    struct s141* edi6;
    struct s142* esi7;
    uint32_t ecx8;
    struct s143* edi9;
    struct s144* esi10;
    int32_t* esi11;
    void* esi12;
    int32_t* edi13;
    void* edi14;

    edx2 = edx3 & ecx;
    edi4->f3 = esi5->f3;
    edi6->f2 = esi7->f2;
    ecx8 = ecx >> 2;
    edi9->f1 = esi10->f1;
    esi11 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esi12) - 3);
    edi13 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edi14) - 3);
    if (ecx8 < 8) 
        goto 0x417b00;
    while (ecx8) {
        --ecx8;
        *edi13 = *esi11;
        --edi13;
        --esi11;
    }
    switch (edx2) {
    case 3:
        goto 0x417c5c;
    case 2:
        goto 0x417c48;
    case 1:
        goto 0x417c38;
    case 0:
        goto 0x417c30;
    }
}

void fun_417bb1(int32_t ecx) {
    int32_t edi2;
    int32_t edi3;
    signed char al4;
    int32_t ecx5;
    signed char* edi6;
    signed char* edi7;
    signed char dl8;
    signed char* edi9;
    int32_t ebx10;
    int32_t ebx11;

    __asm__("aam 0x7b");
    if (!__intrinsic()) 
        goto 0x417bfc;
    if (!__intrinsic()) 
        goto 0x417c00;
    if (!__intrinsic()) 
        goto 0x417c04;
    if (!__intrinsic()) 
        goto 0x417c08;
    if (!__intrinsic()) 
        goto 0x417c0c;
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + edi2 * 2) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + edi3 * 2) + al4);
    ecx5 = ecx + 1 + 1;
    *edi6 = reinterpret_cast<signed char>(*edi7 + dl8);
    if (*edi9 < 0 != __intrinsic()) 
        goto 0x417c14;
    *reinterpret_cast<signed char*>(ebx10 - 0x76e371bc) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebx11 - 0x76e371bc) + *reinterpret_cast<signed char*>(&ecx5));
}

int32_t fun_402540(uint32_t ecx, int32_t a2, int32_t a3, uint32_t a4, void** a5) {
    int32_t eax6;
    void** v7;
    void** ebx8;
    void** v9;
    void** esi10;
    void** v11;
    void** edi12;
    int32_t eax13;
    uint32_t ecx14;
    int32_t v15;
    void** ebx16;
    void** edi17;
    uint32_t ecx18;
    void** ecx19;
    void** ebp20;
    void** v21;
    int32_t eax22;
    void** edi23;
    uint32_t ecx24;

    eax6 = a3 - 1;
    v7 = ebx8;
    v9 = esi10;
    v11 = edi12;
    if (eax6) {
        if (!(eax6 - 1)) {
            if (a5 && (eax13 = reinterpret_cast<int32_t>(SHGetPathFromIDListA(a4, reinterpret_cast<int32_t>(__zero_stack_offset()) - 0x104 - 4 - 4 - 4 + 12)), eax13 >= 0)) {
                ecx14 = 0xffffffff;
                do {
                    if (!ecx14) 
                        break;
                    --ecx14;
                } while (*reinterpret_cast<signed char*>(&v7 + 1));
            }
            SendMessageA();
            goto v15;
        }
    }
    ebx16 = a5;
    if (!ebx16) {
        addr_402618_10:
        return 0;
    } else {
        edi17 = ebx16;
        ecx18 = 0xffffffff;
        do {
            if (!ecx18) 
                break;
            --ecx18;
            ++edi17;
        } while (*reinterpret_cast<void***>(edi17));
        ecx19 = reinterpret_cast<void**>(~ecx18 - 1);
        if (!ecx19) 
            goto addr_402608_15;
        eax22 = fun_413518(ecx19, ebx16, ebp20, v11, v9, v7, v21);
        if (!eax22) 
            goto addr_4025e5_17;
    }
    addr_402608_15:
    SendMessageA();
    goto addr_402618_10;
    addr_4025e5_17:
    SendMessageA(a2, 0x466, 1, ebx16, ebp20);
    edi23 = ebx16;
    ecx24 = 0xffffffff;
    do {
        if (!ecx24) 
            break;
        --ecx24;
        ++edi23;
    } while (*reinterpret_cast<void***>(edi23));
    goto addr_402608_15;
}

void fun_40326e(unsigned char* ecx) {
    unsigned char* eax2;
    unsigned char al3;
    unsigned char* eax4;
    int32_t ebx5;
    unsigned char* eax6;
    unsigned char* eax7;
    unsigned char* eax8;

    *reinterpret_cast<unsigned char*>(&eax2) = reinterpret_cast<unsigned char>(al3 ^ *eax4);
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(__return_address()) + 4 - 4) = ebx5;
    *reinterpret_cast<unsigned char*>(&eax6) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax2) ^ *eax2);
    *reinterpret_cast<unsigned char*>(&eax7) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax6) ^ *eax6);
    __asm__("aas ");
    *reinterpret_cast<unsigned char*>(&eax8) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax7) ^ *eax7);
    *ecx = reinterpret_cast<unsigned char>(*ecx + reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax8) ^ *eax8));
}

void fun_4034d9(int32_t ecx) {
}

signed char g12004037;

struct s145 {
    signed char f0;
    signed char f1;
};

void fun_403741(int32_t ecx) {
    void* eax2;
    void* eax3;
    signed char* esi4;
    signed char* esi5;
    signed char tmp8_6;
    signed char bl7;
    struct s145* eax8;
    signed char bh9;
    signed char* eax10;

    __asm__("das ");
    __asm__("aaa ");
    eax2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(eax3) + 1);
    *esi4 = reinterpret_cast<signed char>(*esi5 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax2) + 1));
    __asm__("aaa ");
    tmp8_6 = reinterpret_cast<signed char>(g12004037 + bl7);
    g12004037 = tmp8_6;
    __asm__("aaa ");
    eax8 = reinterpret_cast<struct s145*>(reinterpret_cast<int32_t>(eax2) + 1 + 1);
    eax8->f0 = reinterpret_cast<signed char>(eax8->f0 + bh9);
    __asm__("aaa ");
    eax10 = &eax8->f1;
    *eax10 = reinterpret_cast<signed char>(*eax10 + *reinterpret_cast<signed char*>(&eax10));
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + reinterpret_cast<int32_t>(eax10)) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + reinterpret_cast<int32_t>(eax10)) + reinterpret_cast<int32_t>(eax10);
}

void fun_4038a6(signed char* ecx) {
    void* eax2;
    int32_t edx3;
    int32_t edx4;

    eax2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + 1);
    *reinterpret_cast<signed char*>(edx3 + 0x7c004038) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(edx4 + 0x7c004038) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax2)));
    *ecx = reinterpret_cast<signed char>(*ecx + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax2)));
}

void fun_4061e0(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25) {
    void** esi26;

    if (a2 == 0x110) {
        fun_404c50(a1, 0x110, a3, a4, esi26, __return_address(), a1, a2);
        fun_405fa0(a1, 7, esi26, __return_address(), a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25);
        SetFocus();
        goto esi26;
    } else {
        goto fun_404c50;
    }
}

void fun_406230(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30) {
    void** esi31;
    void** eax32;
    void** eax33;
    void** ecx34;

    if (a2 == 0x110) {
        fun_404c50(a1, 0x110, a3, a4, esi31, __return_address(), a1, a2);
        fun_405fa0(a1, 7, esi31, __return_address(), a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25);
        eax32 = fun_403a00(1, 3, a1, 7, esi31, __return_address(), a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30);
        if (*reinterpret_cast<void***>(eax32)) {
            eax33 = g41f318;
            SetWindowTextA(eax33, eax32, __return_address());
        }
        ecx34 = g41f318;
        SetFocus();
        goto ecx34;
    } else {
        goto fun_404c50;
    }
}

int32_t SendDlgItemMessageA = 0x19538;

int32_t GetDlgItemTextA = 0x1954e;

void** fun_4066c0(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26) {
    void** v27;
    void** v28;
    void** ebx29;
    void** v30;
    void** ebp31;
    void** v32;
    void** esi33;
    uint32_t eax34;
    void** v35;
    void** edi36;
    void** edx37;
    void** eax38;
    int32_t ebx39;
    void** ecx40;
    void** eax41;
    int32_t edi42;
    void** eax43;
    void** eax44;
    void** eax45;
    void** edx46;
    void** ecx47;
    void** edx48;
    void** v49;
    void** eax50;
    void** ebp51;
    int1_t zf52;
    void** eax53;
    uint32_t eax54;
    void** edx55;
    void** eax56;
    void** eax57;
    int32_t esi58;
    void** eax59;
    int32_t ebx60;
    int32_t eax61;
    int32_t ebx62;
    void** eax63;
    void** eax64;
    void** eax65;
    void** eax66;
    void** eax67;
    void** eax68;
    void** eax69;
    int32_t eax70;
    void** eax71;
    void** eax72;
    uint32_t eax73;
    void** eax74;
    void** esi75;
    void** v76;
    void** v77;
    void** ecx78;
    void** eax79;
    void** edx80;
    void** al81;
    void** eax82;
    void** eax83;
    void** v84;
    void** v85;
    void** ecx86;
    void** edx87;
    void** al88;
    void** ecx89;
    int32_t eax90;
    void** ecx91;
    void** edx92;
    void** al93;
    void** edx94;
    void** eax95;
    void** esi96;
    void** edi97;
    uint32_t ecx98;
    void** edx99;
    void** edi100;
    void** ebx101;
    uint32_t ecx102;
    void** ecx103;
    void** eax104;
    uint32_t ecx105;
    void** edi106;
    uint32_t ecx107;
    void*** esi108;
    void** edi109;
    uint32_t edx110;
    uint32_t ecx111;
    void** edi112;
    uint32_t ecx113;
    uint32_t ecx114;
    void** eax115;
    void** eax116;

    v27 = reinterpret_cast<void**>(__return_address());
    v28 = ebx29;
    v30 = ebp31;
    v32 = esi33;
    eax34 = reinterpret_cast<uint32_t>(a3 - 0x110);
    v35 = edi36;
    if (!eax34) {
        fun_404c50(a2, 0x110, a4, a5, v35, v32, v30, v28);
        fun_405fa0(a2, 7, v35, v32, v30, v28, v27, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23);
        edx37 = g41f350;
        fun_402150(a4, edx37, a2, 7, v35, v32);
        eax38 = g41f350;
        ebx39 = SetDlgItemTextA;
        ebx39(a2, 0x3ec, eax38);
        ecx40 = g41f350;
        fun_402110(ecx40, ecx40, a2, 0x3ec, eax38, v35);
        g41f2c0 = reinterpret_cast<void**>(0);
        g41f2bc = reinterpret_cast<void**>(0);
        eax41 = fun_403a00(3, 6, ecx40, a2, 0x3ec, eax38, v35, v32, v30, v28, v27, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26);
        edi42 = GetDlgItem;
        eax43 = reinterpret_cast<void**>(edi42(a2, 0x3f9, eax41, a2, 0x3ec, eax38));
        fun_405a50(eax43, a2, 0x3f9, eax41, a2, 0x3ec, eax38, v35, v32, v30, v28, v27, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26);
        eax44 = fun_403a00(3, 7, eax43, a2, 0x3f9, eax41, a2, 0x3ec, eax38, v35, v32, v30, v28, v27, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23);
        eax45 = reinterpret_cast<void**>(edi42(a2));
        fun_405a50(eax45, a2, 0x3fa, eax44, 0x3f9, eax41, a2, 0x3ec, eax38, v35, v32, v30, v28, v27, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24);
        fun_4064c0(a2, eax45, a2, 0x3fa, eax44, 0x3f9, eax41, a2, 0x3ec, eax38);
        ebx39();
        edx46 = g41f258;
        if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx46)) & 2) {
            ecx47 = g41f350;
            if (*reinterpret_cast<void***>(ecx47)) {
                edx48 = g41f318;
                v49 = edx48;
            } else {
                v49 = reinterpret_cast<void**>(0x3ec);
                edi42(a2);
            }
            SetFocus();
            eax50 = g41f258;
            if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax50 + 2)) & 16) {
                fun_406190(2, 3, v49, a2, 0x3ed, "...", 0x3fa, eax44, 0x3f9, eax41, a2, 0x3ec, eax38, v35, v32, v30, v28, v27, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
            }
            goto 0x3fa;
        } else {
            SendDlgItemMessageA(a2, 0x3ec, 0xcf, 1, 0);
            edi42();
            EnableWindow();
            SetFocus();
            goto 0;
        }
    }
    ebp51 = a2;
    if (eax34 - 1) 
        goto addr_4069fd_11;
    zf52 = g41a2a6 == -1;
    if (zf52) 
        goto addr_4066fd_13;
    eax53 = a4;
    if (*reinterpret_cast<int16_t*>(&eax53) == 0x3ed) 
        goto addr_4066fd_13;
    if (*reinterpret_cast<int16_t*>(&eax53) != 0x3ec) 
        goto addr_4069fd_11;
    addr_4066fd_13:
    eax54 = (reinterpret_cast<unsigned char>(a4) & 0xffff) - 1;
    if (!eax54) {
        edx55 = g41f350;
        GetDlgItemTextA();
        eax56 = fun_4065c0(ecx, ebp51, 0x3ec, edx55, 0x104, v35, v32, v30, v28, v27, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
        if (!eax56) {
            g41f2bc = reinterpret_cast<void**>(1);
            eax57 = fun_403a00(7, 4, ebp51, 0x3ec, edx55, 0x104, v35, v32, v30, v28, v27, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26);
            esi58 = GetDlgItem;
            eax59 = reinterpret_cast<void**>(esi58(ebp51, 0x3e9, eax57));
            fun_405a50(eax59, ebp51, 0x3e9, eax57, ebp51, 0x3ec, edx55, 0x104, v35, v32, v30, v28, v27, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25);
            ebx60 = SetDlgItemTextA;
            ebx60(ebp51, 0x3ea, 0x41f380, 0x3e9, eax57);
            ebx60(ebp51, 0x3eb, 0x41f380, ebp51, 0x3ea, 0x41f380, 0x3e9, eax57);
            eax61 = fun_406350(ebp51, 0x3eb, 0x41f380, ebp51, 0x3ea, 0x41f380, 0x3e9, eax57);
            ebx62 = eax61;
            eax63 = fun_403a00(3, 3, ebp51, 0x3eb, 0x41f380, ebp51, 0x3ea, 0x41f380, 0x3e9, eax57, ebp51, 0x3ec, edx55, 0x104, v35, v32, v30, v28, v27, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
            eax64 = reinterpret_cast<void**>(esi58(ebp51));
            fun_405a50(eax64, ebp51, 0x3e9, eax63, ebp51, 0x3eb, 0x41f380, ebp51, 0x3ea, 0x41f380, 0x3e9, eax57, ebp51, 0x3ec, edx55, 0x104, v35, v32, v30, v28, v27, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);
            eax65 = fun_403a00(3, 4, eax64, ebp51, 0x3e9, eax63, ebp51, 0x3eb, 0x41f380, ebp51, 0x3ea, 0x41f380, 0x3e9, eax57, ebp51, 0x3ec, edx55, 0x104, v35, v32, v30, v28, v27, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
            eax66 = reinterpret_cast<void**>(esi58(ebp51));
            fun_405a50(eax66, ebp51, 0x3ea, eax65, 0x3e9, eax63, ebp51, 0x3eb, 0x41f380, ebp51, 0x3ea, 0x41f380, 0x3e9, eax57, ebp51, 0x3ec, edx55, 0x104, v35, v32, v30, v28, v27, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
            eax67 = fun_403a00(3, 5, eax66, ebp51, 0x3ea, eax65, 0x3e9, eax63, ebp51, 0x3eb, 0x41f380, ebp51, 0x3ea, 0x41f380, 0x3e9, eax57, ebp51, 0x3ec, edx55, 0x104, v35, v32, v30, v28, v27, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
            eax68 = reinterpret_cast<void**>(esi58(ebp51));
            fun_405a50(eax68, ebp51, 0x3eb, eax67, 0x3ea, eax65, 0x3e9, eax63, ebp51, 0x3eb, 0x41f380, ebp51, 0x3ea, 0x41f380, 0x3e9, eax57, ebp51, 0x3ec, edx55, 0x104, v35, v32, v30, v28, v27, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
            if (!(*reinterpret_cast<unsigned char*>(&ebx62) & 1) || (eax69 = fun_403a00(7, 11, 36, 0x3eb, eax67, 0x3ea, eax65, 0x3e9, eax63, ebp51, 0x3eb, 0x41f380, ebp51, 0x3ea, 0x41f380, 0x3e9, eax57, ebp51, 0x3ec, edx55, 0x104, v35, v32, v30, v28, v27, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11), eax70 = fun_4039c0(eax69, 36, 0x3eb, eax67, 0x3ea, eax65, 0x3e9, eax63, ebp51, 0x3eb, 0x41f380, ebp51, 0x3ea, 0x41f380, 0x3e9, eax57, ebp51, 0x3ec, edx55, 0x104, v35, v32, v30, v28, v27, a2, a3, a4, a5, a6, a7), eax70 == 6)) {
                if (!(*reinterpret_cast<unsigned char*>(&ebx62) & 2)) {
                    g41f2c0 = reinterpret_cast<void**>(1);
                    goto addr_4069fd_11;
                } else {
                    eax71 = fun_413320(ecx, 0x400, 0x3eb, eax67, 0x3ea, eax65, 0x3e9, eax63, ebp51, 0x3eb, 0x41f380, ebp51, ecx, 0x400, 0x3eb, eax67, 0x3ea, eax65, 0x3e9, eax63, ebp51, 0x3eb, 0x41f380, ebp51);
                    if (eax71) {
                        fun_405420(eax71, 10, 0x3eb, eax67, 0x3ea, eax65, 0x3e9, eax63, ebp51, 0x3eb, 0x41f380, ebp51, 0x3ea, 0x41f380, 0x3e9, eax57, ebp51, 0x3ec, edx55, 0x104, v35, v32, v30, v28, v27, a2, a3, a4, a5, a6, a7, a8, a9, a10);
                        fun_4039c0(eax71, 32, eax71, 10, 0x3eb, eax67, 0x3ea, eax65, 0x3e9, eax63, ebp51, 0x3eb, 0x41f380, ebp51, 0x3ea, 0x41f380, 0x3e9, eax57, ebp51, 0x3ec, edx55, 0x104, v35, v32, v30, v28, v27, a2, a3, a4, a5);
                        fun_413483(ecx, eax71, eax71, 32, eax71, 10, 0x3eb);
                    }
                    fun_403ff0(ebp51, 0x3eb, eax67, 0x3ea);
                    goto 0x3e9;
                }
            } else {
                fun_403ff0(ebp51, 0x3eb, eax67, 0x3ea);
                goto 0x3e9;
            }
        } else {
            if (eax56 != 0xffffffff) {
                eax72 = fun_403a00(7, eax56, 64, ebp51, 0x3ec, edx55, 0x104, v35, v32, v30, v28, v27, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25);
                fun_4039c0(eax72, 64, ebp51, 0x3ec, edx55, 0x104, v35, v32, v30, v28, v27, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21);
            }
            fun_403ff0(ebp51, ebp51, 0x3ec, edx55);
            goto v35;
        }
    }
    eax73 = eax54 - 0x3eb;
    if (!eax73) {
        eax74 = fun_4133d2(0x105, 1, v35, v32, v30, v28);
        esi75 = eax74;
        if (esi75) {
            v76 = esi75;
            v77 = ebp51;
            GetDlgItemTextA(v77, 0x3ec, v76, 0x104);
            ecx78 = g41f350;
            eax79 = fun_412fb0(ecx78, esi75, ecx78, v77, 0x3ec, v76, 0x104);
            if (eax79) {
                edx80 = g41f350;
                ecx78 = esi75;
                do {
                    al81 = *reinterpret_cast<void***>(ecx78);
                    ++ecx78;
                    *reinterpret_cast<void***>(edx80) = al81;
                    ++edx80;
                } while (al81);
                fun_4064c0(ebp51, v77, 0x3ec, v76, 0x104, v35, v32, v30, v28, v27);
            }
            fun_413483(ecx78, esi75, v77, 0x3ec, v76, 0x104, v35);
            goto addr_4069fd_11;
        }
    }
    if (eax73 - 1) {
        addr_4069fd_11:
        eax82 = fun_404c50(ebp51, a3, a4, a5, v35, v32, v30, v28);
        return eax82;
    } else {
        eax83 = g41f350;
        v84 = eax83;
        v85 = ebp51;
        GetDlgItemTextA(v85, 0x3ec, v84, 0x104);
        ecx86 = g41f350;
        edx87 = g41f0cc;
        do {
            al88 = *reinterpret_cast<void***>(ecx86);
            ++ecx86;
            *reinterpret_cast<void***>(edx87) = al88;
            ++edx87;
        } while (al88);
        ecx89 = g41f0cc;
        eax90 = fun_402630(ebp51, ecx89, v85, 0x3ec, v84, 0x104, v35, v32, v30, v28, v27, a2, a3, a4, a5, a6, a7, a8, a9, a10);
        if (eax90 != 1) 
            goto addr_4069fd_11;
    }
    ecx91 = g41f0cc;
    edx92 = g41f350;
    do {
        al93 = *reinterpret_cast<void***>(ecx91);
        ++ecx91;
        *reinterpret_cast<void***>(edx92) = al93;
        ++edx92;
    } while (al93);
    edx94 = g41f350;
    fun_402150(ecx91, edx94, v85, 0x3ec, v84, 0x104);
    eax95 = g41f258;
    if (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax95 + 1)) & 32)) 
        goto addr_406810_41;
    esi96 = *reinterpret_cast<void***>(eax95 + 10);
    if (!esi96) 
        goto addr_406810_41;
    edi97 = esi96;
    ecx98 = 0xffffffff;
    edx99 = g41f350;
    do {
        if (!ecx98) 
            break;
        --ecx98;
        ++edi97;
        ++esi96;
    } while (*reinterpret_cast<void***>(edi97));
    edi100 = edx99;
    ebx101 = reinterpret_cast<void**>(~ecx98 - 1);
    ecx102 = 0xffffffff;
    do {
        if (!ecx102) 
            break;
        --ecx102;
        ++edi100;
        ++esi96;
    } while (*reinterpret_cast<void***>(edi100));
    ecx103 = reinterpret_cast<void**>(~ecx102 - 1);
    if (reinterpret_cast<signed char>(ecx103) >= reinterpret_cast<signed char>(ebx101)) 
        goto addr_4067be_50;
    addr_4067d6_51:
    fun_402110(ecx103, edx99, v85, 0x3ec, v84, 0x104);
    eax104 = g41f258;
    ecx105 = 0xffffffff;
    edi106 = *reinterpret_cast<void***>(eax104 + 10);
    do {
        if (!ecx105) 
            break;
        --ecx105;
        ++edi106;
    } while (*reinterpret_cast<void***>(edi106));
    ecx107 = ~ecx105;
    esi108 = reinterpret_cast<void***>(reinterpret_cast<unsigned char>(edi106) - ecx107);
    edi109 = g41f350;
    edx110 = ecx107;
    ecx111 = 0xffffffff;
    do {
        if (!ecx111) 
            break;
        --ecx111;
        ++edi109;
        ++esi108;
    } while (*reinterpret_cast<void***>(edi109));
    edi112 = edi109 - 1;
    ecx113 = edx110 >> 2;
    while (ecx113) {
        --ecx113;
        *reinterpret_cast<void***>(edi112) = *esi108;
        edi112 = edi112 + 4;
        esi108 = esi108 + 4;
    }
    ecx114 = edx110 & 3;
    while (ecx114) {
        --ecx114;
        *reinterpret_cast<void***>(edi112) = *esi108;
        ++edi112;
        ++esi108;
    }
    goto addr_406810_41;
    addr_4067be_50:
    eax115 = fun_412fb0(ecx103, reinterpret_cast<unsigned char>(edx99) - reinterpret_cast<unsigned char>(ebx101) + reinterpret_cast<unsigned char>(ecx103), esi96, v85, 0x3ec, v84, 0x104);
    if (!eax115) {
        addr_406810_41:
        eax116 = g41f350;
        SetDlgItemTextA(ebp51, 0x3ec, eax116, v85, 0x3ec, v84, 0x104);
        goto addr_4069fd_11;
    } else {
        edx99 = g41f350;
        goto addr_4067d6_51;
    }
}

int32_t IsWindowEnabled = 0x193d0;

int32_t CallWindowProcA = 0x193be;

int32_t ValidateRect = 0x193ae;

int32_t fun_404010(int32_t a1, int32_t a2) {
    int32_t eax3;
    uint32_t eax4;
    int32_t eax5;
    int32_t ebx6;
    int32_t ebx7;
    int32_t eax8;
    int32_t esi9;

    eax3 = reinterpret_cast<int32_t>(GetWindowLongA());
    if (eax3) {
        if (__return_address() == 7) {
            eax4 = reinterpret_cast<uint32_t>(SendMessageA());
            if (eax4 & 0x80000) {
                goto 0;
            }
        } else {
            if ((__return_address() == 15 || reinterpret_cast<int1_t>(__return_address() == 20)) && (eax5 = reinterpret_cast<int32_t>(IsWindowEnabled(a1)), !eax5)) {
                ebx6 = EnableWindow;
                ebx6(a1, 1, ebx7, a1);
                eax8 = reinterpret_cast<int32_t>(CallWindowProcA());
                ebx6();
                if (reinterpret_cast<int1_t>(__return_address() == 15)) {
                    ValidateRect(a1, 0);
                }
                return eax8;
            }
        }
        CallWindowProcA();
        goto a1;
    } else {
        goto esi9;
    }
}

void fun_408666() {
}

void fun_40958e() {
    int32_t ebx1;
    int32_t edx2;
    int32_t ebx3;
    int32_t edx4;
    signed char dl5;
    int32_t edx6;
    signed char dh7;
    signed char ch8;
    signed char dl9;
    signed char dl10;
    int32_t eax11;
    int32_t ebx12;
    signed char dl13;

    *reinterpret_cast<signed char*>(ebx1 + edx2 * 4 - 0x6baaffc0) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebx3 + edx4 * 4 - 0x6baaffc0) + dl5);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx6) + 1) = reinterpret_cast<signed char>(dh7 + ch8);
    *reinterpret_cast<signed char*>(edx6 * 4 - 0x6bf3ffc0) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(edx6 * 4 - 0x6bf3ffc0) + dl9);
    *reinterpret_cast<signed char*>(edx6 * 4 - 0x6aebffc0) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(edx6 * 4 - 0x6aebffc0) + dl10);
    eax11 = ebx12 + 1 + 1 + 1 + 1;
    *reinterpret_cast<signed char*>(eax11 + 0x53909090) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(eax11 + 0x53909090) + dl13);
}

int32_t EndDialog = 0x19594;

void** fun_40aa80(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29) {
    uint32_t eax30;
    void** edx31;
    void** edi32;
    void** esi33;
    void** eax34;
    void** eax35;
    int32_t edi36;
    void** eax37;
    void** eax38;
    void** eax39;
    void** eax40;
    void** eax41;

    eax30 = reinterpret_cast<uint32_t>(a2 - 0x110);
    if (!eax30) {
        edx31 = g41f2fc;
        fun_403970(a1, edx31, edi32, esi33);
        eax34 = fun_403a00(7, 0, a1, edx31, edi32, esi33, __return_address(), a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29);
        SetWindowTextA(a1, eax34, edi32, esi33);
        eax35 = fun_403a00(8, 6, a1, eax34, edi32, esi33, __return_address(), a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29);
        edi36 = SetDlgItemTextA;
        edi36(a1, 1, eax35, a1, eax34, edi32, esi33);
        eax37 = fun_403a00(8, 2, a1, 1, eax35, a1, eax34, edi32, esi33, __return_address(), a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26);
        edi36();
        eax38 = fun_403a00(6, 8, a1, 2, eax37, a1, 1, eax35, a1, eax34, edi32, esi33, __return_address(), a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23);
        eax39 = reinterpret_cast<void**>(GetDlgItem(a1));
        fun_405a50(eax39, a1, 0x3e8, eax38, a1, 2, eax37, a1, 1, eax35, a1, eax34, edi32, esi33, __return_address(), a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22);
        goto a1;
    } else {
        eax40 = a3;
        if (eax30 - 1 || *reinterpret_cast<int16_t*>(&eax40) != 1 && *reinterpret_cast<int16_t*>(&eax40) != 2) {
            eax41 = fun_403e70(a2, a1, a2, eax40, a4);
            return eax41;
        } else {
            EndDialog();
            goto a1;
        }
    }
}

struct s146 {
    signed char[1] pad1;
    signed char f1;
};

int32_t g41f26c = 0;

void** g41f274 = reinterpret_cast<void**>(0);

int32_t PostMessageA = 0x195a0;

int32_t PostQuitMessage = 0x195d8;

int32_t DefWindowProcA = 0x195c6;

uint32_t fun_40ae5c(void** a1, uint32_t a2, uint32_t a3, int32_t a4) {
    int32_t* edi5;
    int32_t* esi6;
    void* eax7;
    void* eax8;
    int32_t edx9;
    int32_t edx10;
    struct s146* eax11;
    int32_t edx12;
    int32_t edx13;
    signed char* eax14;
    uint32_t v15;
    uint32_t v16;
    uint32_t v17;
    void** ecx18;
    int32_t eax19;
    int32_t ecx20;
    struct s31* edx21;
    void** eax22;
    void** ecx23;
    int1_t zf24;
    void** eax25;
    uint32_t eax26;
    uint32_t v27;
    int1_t zf28;
    void** eax29;
    int1_t zf30;
    void** ecx31;
    void** eax32;

    *edi5 = *esi6;
    __asm__("lodsd ");
    eax7 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(eax8) + 1);
    *reinterpret_cast<signed char*>(edx9 + 0x2b0040ab) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(edx10 + 0x2b0040ab) + *reinterpret_cast<signed char*>(&eax7));
    __asm__("lodsd ");
    eax11 = reinterpret_cast<struct s146*>(reinterpret_cast<int32_t>(eax7) + 1 + 1);
    *reinterpret_cast<signed char*>(edx12 - 82) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(edx13 - 82) + *reinterpret_cast<signed char*>(&eax11));
    eax14 = &eax11->f1;
    *eax14 = reinterpret_cast<signed char>(*eax14 + *reinterpret_cast<signed char*>(&eax14));
    if (a2 > 0x112) {
        if (a2 == 0x113) {
        }
        if (a2 != 0x8001) 
            goto addr_40af75_12;
    } else {
        if (a2 == 0x112) {
            v15 = (a3 & 0xfff0) - 0xf030;
            if (!v15) 
                goto addr_40b053_15;
            v16 = v15 - 48;
            if (!v16) 
                goto addr_40b063_17; else 
                goto addr_40b044_18;
        } else {
            v17 = a2 - 15;
            if (!v17) {
                ecx18 = g41f27c;
                if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx18)) & 2) {
                    eax19 = reinterpret_cast<int32_t>(IsIconic(a1));
                    if (eax19) {
                        goto addr_40b0b3_23;
                    } else {
                        ecx20 = g41f26c;
                        edx21 = g41f270;
                        eax22 = g41f274;
                        ecx23 = g41f27c;
                        fun_4015f0(a1, ecx23, eax22, edx21, ecx20, a1);
                        zf24 = g41f338 == 0;
                        if (!zf24) {
                            eax25 = g41f338;
                            RedrawWindow(eax25, 0, 0, 0x400, a1);
                        }
                        eax26 = 0;
                        goto addr_40b0c9_27;
                    }
                } else {
                    goto addr_40b0b3_23;
                }
            } else {
                v27 = v17 - 13;
                if (!v27) {
                    zf28 = g41f338 == 0;
                    if (!zf28) {
                        eax29 = g41f338;
                        PostMessageA(eax29, 0x86, a3, 0);
                    }
                    goto addr_40b0b3_23;
                } else {
                    if (!(v27 - 0x66)) {
                        PostQuitMessage(0);
                        goto addr_40b0b3_23;
                    } else {
                        goto addr_40b0b3_23;
                    }
                }
            }
        }
    }
    if (!(a3 != 1 || a4 != 2)) {
        eax26 = g41f2f8;
        goto addr_40b0c9_27;
    }
    addr_40b0b3_23:
    eax26 = reinterpret_cast<uint32_t>(DefWindowProcA(a1, a2, a3, a4));
    addr_40b0c9_27:
    return eax26;
    addr_40af75_12:
    goto addr_40b0b3_23;
    addr_40b063_17:
    zf30 = g41f31c == 0;
    if (zf30) {
        g41f2e0 = reinterpret_cast<void**>(2);
        eax26 = 0;
        goto addr_40b0c9_27;
    } else {
        ecx31 = g41f31c;
        PostMessageA(ecx31, 0x111, 2, 0);
        eax26 = 0;
        goto addr_40b0c9_27;
    }
    addr_40b044_18:
    if (!(v16 - 0xc0)) {
        addr_40b053_15:
        eax32 = g41f338;
        ShowWindow(eax32, 1);
    }
    goto addr_40b0b3_23;
}

void fun_40afa3() {
    goto 0x40b0b3;
}

void fun_40b4ca(unsigned char* ecx) {
    unsigned char* ebx2;
    signed char* eax3;
    signed char* eax4;
    int32_t esi5;
    int32_t esi6;
    signed char al7;
    void* eax8;
    signed char dl9;
    int32_t ebp10;
    int32_t ebp11;
    unsigned char* eax12;
    int32_t esi13;
    int32_t esi14;
    unsigned char* edx15;
    unsigned char* edx16;

    __asm__("salc ");
    *reinterpret_cast<signed char*>(&ebx2) = 64;
    *eax3 = reinterpret_cast<signed char>(*eax4 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    *reinterpret_cast<signed char*>(esi5 + 0x200040b4) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(esi6 + 0x200040b4) + al7);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax8) + 1) = 64;
    *reinterpret_cast<signed char*>(ebx2 - 76) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebx2 - 76) + dl9);
    *reinterpret_cast<signed char*>(ebx2 - 76) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebx2 - 76) + 64);
    *reinterpret_cast<signed char*>(ebp10 - 76) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebp11 - 76) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    eax12 = reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax8) + 1 + 1 + 1);
    *reinterpret_cast<unsigned char*>(esi13 - 0x6bffbf4c) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(esi14 - 0x6bffbf4c) + *reinterpret_cast<unsigned char*>(&ecx));
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax12) + 1) = 64;
    *eax12 = reinterpret_cast<unsigned char>(*eax12 + *reinterpret_cast<unsigned char*>(&eax12));
    *ecx = reinterpret_cast<unsigned char>(*ecx | *reinterpret_cast<unsigned char*>(&eax12));
    *edx15 = reinterpret_cast<unsigned char>(*edx16 | *reinterpret_cast<unsigned char*>(&eax12));
    *ebx2 = reinterpret_cast<unsigned char>(*ebx2 | *reinterpret_cast<unsigned char*>(&eax12));
    *eax12 = reinterpret_cast<unsigned char>(*eax12 | *reinterpret_cast<unsigned char*>(&ecx));
    *eax12 = reinterpret_cast<unsigned char>(*eax12 | *reinterpret_cast<unsigned char*>(&ecx));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax12) + reinterpret_cast<int32_t>(ecx)) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax12) + reinterpret_cast<int32_t>(ecx)) | *reinterpret_cast<unsigned char*>(&eax12));
    *eax12 = reinterpret_cast<unsigned char>(*eax12 | *reinterpret_cast<unsigned char*>(&ecx));
}

void fun_4102c9() {
}

struct s147 {
    signed char f0;
    signed char[285229283] pad285229284;
    signed char f285229284;
    signed char[536870912] pad285229285;
    signed char f285229285;
    signed char[671088664] pad419447038;
    signed char f419447038;
    signed char[687865831] pad570441958;
    signed char f570441958;
};

struct s148 {
    signed char[1] pad1;
    int32_t f1;
};

int32_t fun_e8ef0456(int32_t a1);

void fun_4103dd(void* ecx) {
    int1_t below_or_equal2;
    signed char bh3;
    signed char bh4;
    signed char dh5;
    void* ecx6;
    int32_t edi7;
    int32_t edi8;
    signed char dh9;
    void* eax10;
    void* eax11;
    int32_t ebx12;
    signed char dh13;
    struct s147* ecx14;
    signed char dh15;
    void* ebp16;
    int32_t ebp17;
    void* ebp18;
    int32_t ebp19;
    signed char* edx20;
    signed char* edx21;
    void* eax22;
    signed char* edi23;
    signed char* edi24;
    void* eax25;
    int32_t ebp26;
    int32_t ebp27;
    void* eax28;
    int32_t edi29;
    int32_t edi30;
    struct s148* eax31;
    signed char* esi32;
    signed char* esi33;
    int32_t* eax34;
    signed char bl35;
    signed char dl36;
    signed char dl37;
    signed char dl38;
    int32_t esi39;
    int32_t esi40;
    signed char* edx41;
    signed char* edx42;
    signed char dh43;

    if (!below_or_equal2) 
        goto 0x4103c3;
    bh3 = reinterpret_cast<signed char>(bh4 + dh5);
    ecx6 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ecx) - 1);
    if (reinterpret_cast<uint1_t>(!!ecx6) & reinterpret_cast<uint1_t>(bh3 == 0)) 
        goto 0x410427;
    *reinterpret_cast<signed char*>(edi7 - 30) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(edi8 - 30) + dh9);
    eax10 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(eax11) + 1 + 1);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx12) + 1) = reinterpret_cast<signed char>(bh3 + dh13);
    ecx14 = reinterpret_cast<struct s147*>(reinterpret_cast<int32_t>(ecx6) - 1);
    if (ecx14) {
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax10) + 1) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax10) + 1) + dh15);
        __asm__("in al, dx");
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebp16) + ebp17 * 8 + 64) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebp18) + ebp19 * 8 + 64) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx12) + 1));
        *edx20 = reinterpret_cast<signed char>(*edx21 + *reinterpret_cast<signed char*>(&ecx14));
        __asm__("out dx, al");
        eax22 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(eax10) + 1 + 1);
        *reinterpret_cast<signed char*>(ebx12 - 0x30ffbf10) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebx12 - 0x30ffbf10) + *reinterpret_cast<signed char*>(&eax22));
        __asm__("out dx, eax");
        *edi23 = reinterpret_cast<signed char>(*edi24 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx12) + 1));
        __asm__("out dx, eax");
        eax25 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(eax22) + 1 + 1);
        *reinterpret_cast<signed char*>(ebp26 + 0x40040f2) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebp27 + 0x40040f2) + *reinterpret_cast<signed char*>(&eax25));
        eax28 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(eax25) + 1);
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax28) + edi29 * 8 + 64) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax28) + edi30 * 8 + 64) + *reinterpret_cast<signed char*>(&eax28));
        *reinterpret_cast<signed char*>(&ecx14) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&ecx14) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax28) + 1));
        eax31 = reinterpret_cast<struct s148*>(reinterpret_cast<int32_t>(eax28) + 1);
        *esi32 = reinterpret_cast<signed char>(*esi33 + *reinterpret_cast<signed char*>(&eax31));
        eax34 = &eax31->f1;
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ecx14) + 0x190040fe) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ecx14) + 0x190040fe) + bl35);
        *eax34 = *eax34 + 1;
    } else {
        ecx14->f0 = reinterpret_cast<signed char>(ecx14->f0 + *reinterpret_cast<signed char*>(&ecx14));
        __asm__("in al, 0x40");
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ecx14) + 0x110040e4) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ecx14) + 0x110040e4) + dl36);
        __asm__("in eax, 0x40");
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ecx14) + 0x110040e5) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ecx14) + 0x110040e5) + dl37);
        __asm__("out 0x40, al");
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ecx14) + 0x220040e6) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ecx14) + 0x220040e6) + dl38);
        __asm__("out 0x40, eax");
        *reinterpret_cast<signed char*>(esi39 + 0x2a0040e7) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(esi40 + 0x2a0040e7) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax10) + 1));
        fun_e8ef0456(__return_address());
        *edx41 = reinterpret_cast<signed char>(*edx42 + dh43);
    }
}

void fun_41042b() {
    signed char* esi1;
    signed char* esi2;
    signed char dl3;

    *esi1 = reinterpret_cast<signed char>(*esi2 + dl3);
    __asm__("in al, dx");
}

uint32_t fun_411a30(uint32_t a1, signed char* a2, uint32_t a3) {
    signed char* esi4;
    uint32_t ecx5;
    uint32_t edi6;
    uint32_t ebx7;
    uint32_t eax8;
    uint32_t ebp9;
    int32_t edx10;
    uint32_t ecx11;
    int32_t edx12;
    uint32_t ecx13;
    int32_t edx14;
    uint32_t ecx15;
    int32_t edx16;
    uint32_t ecx17;
    int32_t edx18;
    uint32_t ecx19;
    int32_t edx20;
    uint32_t ecx21;
    int32_t edx22;
    uint32_t ecx23;
    int32_t edx24;
    uint32_t ecx25;
    int32_t edx26;
    uint32_t ecx27;
    int32_t edx28;
    uint32_t ecx29;
    int32_t edx30;
    uint32_t ecx31;
    int32_t edx32;
    uint32_t ecx33;
    int32_t edx34;
    uint32_t ecx35;
    int32_t edx36;
    uint32_t ecx37;
    int32_t edx38;
    uint32_t ecx39;
    int32_t edx40;
    int32_t edx41;

    esi4 = a2;
    ecx5 = a1 & 0xffff;
    edi6 = a1 >> 16;
    if (esi4) {
        ebx7 = a3;
        if (ebx7) {
            do {
                eax8 = ebx7;
                if (ebx7 >= 0x15b0) {
                    eax8 = 0x15b0;
                }
                ebx7 = ebx7 - eax8;
                if (reinterpret_cast<int32_t>(eax8) >= reinterpret_cast<int32_t>(16)) {
                    ebp9 = eax8 >> 4;
                    eax8 = eax8 + (-ebp9 << 4);
                    do {
                        edx10 = 0;
                        *reinterpret_cast<signed char*>(&edx10) = *esi4;
                        esi4 = esi4 + 16;
                        ecx11 = ecx5 + edx10;
                        edx12 = 0;
                        *reinterpret_cast<signed char*>(&edx12) = *(esi4 - 15);
                        ecx13 = ecx11 + edx12;
                        edx14 = 0;
                        *reinterpret_cast<signed char*>(&edx14) = *(esi4 - 14);
                        ecx15 = ecx13 + edx14;
                        edx16 = 0;
                        *reinterpret_cast<signed char*>(&edx16) = *(esi4 - 13);
                        ecx17 = ecx15 + edx16;
                        edx18 = 0;
                        *reinterpret_cast<signed char*>(&edx18) = *(esi4 - 12);
                        ecx19 = ecx17 + edx18;
                        edx20 = 0;
                        *reinterpret_cast<signed char*>(&edx20) = *(esi4 - 11);
                        ecx21 = ecx19 + edx20;
                        edx22 = 0;
                        *reinterpret_cast<signed char*>(&edx22) = *(esi4 - 10);
                        ecx23 = ecx21 + edx22;
                        edx24 = 0;
                        *reinterpret_cast<signed char*>(&edx24) = *(esi4 - 9);
                        ecx25 = ecx23 + edx24;
                        edx26 = 0;
                        *reinterpret_cast<signed char*>(&edx26) = *(esi4 - 8);
                        ecx27 = ecx25 + edx26;
                        edx28 = 0;
                        *reinterpret_cast<signed char*>(&edx28) = *(esi4 - 7);
                        ecx29 = ecx27 + edx28;
                        edx30 = 0;
                        *reinterpret_cast<signed char*>(&edx30) = *(esi4 - 6);
                        ecx31 = ecx29 + edx30;
                        edx32 = 0;
                        *reinterpret_cast<signed char*>(&edx32) = *(esi4 - 5);
                        ecx33 = ecx31 + edx32;
                        edx34 = 0;
                        *reinterpret_cast<signed char*>(&edx34) = *(esi4 - 4);
                        ecx35 = ecx33 + edx34;
                        edx36 = 0;
                        *reinterpret_cast<signed char*>(&edx36) = *(esi4 - 3);
                        ecx37 = ecx35 + edx36;
                        edx38 = 0;
                        *reinterpret_cast<signed char*>(&edx38) = *(esi4 - 2);
                        ecx39 = ecx37 + edx38;
                        edx40 = 0;
                        *reinterpret_cast<signed char*>(&edx40) = *(esi4 - 1);
                        ecx5 = ecx39 + edx40;
                        edi6 = edi6 + ecx11 + ecx13 + ecx15 + ecx17 + ecx19 + ecx21 + ecx23 + ecx25 + ecx27 + ecx29 + ecx31 + ecx33 + ecx35 + ecx37 + ecx39 + ecx5;
                        --ebp9;
                    } while (ebp9);
                }
                if (eax8) {
                    do {
                        edx41 = 0;
                        *reinterpret_cast<signed char*>(&edx41) = *esi4;
                        ecx5 = ecx5 + edx41;
                        ++esi4;
                        edi6 = edi6 + ecx5;
                        --eax8;
                    } while (eax8);
                }
                ecx5 = ecx5 % 0xfff1;
                edi6 = edi6 % 0xfff1;
            } while (!reinterpret_cast<uint1_t>(static_cast<uint32_t>(reinterpret_cast<uint1_t>(ebx7 == 0))));
        }
        return edi6 << 16 | ecx5;
    } else {
        return 1;
    }
}

struct s149 {
    signed char[10] pad10;
    signed char f10;
};

struct s150 {
    signed char[10] pad10;
    signed char f10;
};

struct s151 {
    signed char[9] pad9;
    signed char f9;
};

struct s152 {
    signed char[9] pad9;
    signed char f9;
};

void fun_410b98(void* ecx) {
    struct s149* eax2;
    struct s150* eax3;
    signed char ah4;
    unsigned char* ecx5;
    int32_t eax6;
    int32_t eax7;
    signed char bl8;
    uint32_t eax9;
    unsigned char al10;
    uint32_t eax11;
    uint32_t eax12;
    struct s151* edx13;
    struct s152* edx14;
    signed char dl15;
    uint32_t* ecx16;
    int32_t edi17;
    int32_t edi18;
    uint32_t* ebx19;
    uint32_t* ebx20;
    int32_t ebp21;
    int32_t ebp22;

    eax2->f10 = reinterpret_cast<signed char>(eax3->f10 + ah4);
    ecx5 = reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ecx) + 1 + 1);
    *reinterpret_cast<signed char*>(eax6 - 0x2affbef6) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(eax7 - 0x2affbef6) + bl8);
    *reinterpret_cast<unsigned char*>(&eax9) = reinterpret_cast<unsigned char>(al10 | *ecx5);
    eax11 = eax9 | *ecx5;
    eax12 = eax11 | *ecx5;
    __asm__("in eax, 0x8");
    edx13->f9 = reinterpret_cast<signed char>(edx14->f9 + dl15);
    ecx16 = reinterpret_cast<uint32_t*>(ecx5 + 1 + 1);
    *reinterpret_cast<signed char*>(edi17 - 0x3effbef7) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(edi18 - 0x3effbef7) + *reinterpret_cast<signed char*>(&eax12));
    *ecx16 = *ecx16 | eax12;
    __asm__("sti ");
    *ecx16 = *ecx16 | eax12;
    *ebx19 = *ebx20 | 65;
    *reinterpret_cast<signed char*>(ebp21 - 0x74ffbef5) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebp22 - 0x74ffbef5) + *reinterpret_cast<signed char*>(&ecx16));
}

void** fun_411b80(void** ecx, void** a2, void** a3, void** a4, void** a5) {
    void** eax6;

    eax6 = fun_413483(ecx, a3, __return_address(), a2, a3, a4, a5);
    return eax6;
}

void fun_413205() {
}

void fun_413af1(void** ecx, void** a2, void** a3, void** a4) {
    void** v5;
    void** v6;
    void** v7;
    void** v8;
    int32_t edi9;
    int32_t esi10;
    void** ebx11;
    void** ebp12;

    if (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a2 + 4)) & 0x66)) {
        v5 = *reinterpret_cast<void***>(a3 + 20);
        v6 = *reinterpret_cast<void***>(a3 + 16);
        v7 = *reinterpret_cast<void***>(a3 + 8);
        v8 = *reinterpret_cast<void***>(a3 + 12);
        fun_4154f3(ecx, a2, v8, a4, 0, v7, v6, v5, 1, edi9, esi10, ebx11, ebp12, __return_address());
        if (!*reinterpret_cast<void***>(a3 + 36)) {
            fun_41393f(ecx, a3, a2, edi9, esi10, ebx11, ebp12, __return_address());
        }
        goto *reinterpret_cast<void***>(a3 + 24);
    } else {
        *reinterpret_cast<void***>(a3 + 36) = reinterpret_cast<void**>(1);
        goto 0x413b61;
    }
}

struct s153 {
    int32_t f0;
    int32_t f4;
};

void fun_414127(void** ecx) {
    int32_t* esp2;
    int32_t ebp3;
    int32_t ebp4;
    struct s153* esp5;

    esp2 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(*reinterpret_cast<void**>(ebp3 - 24)) - 4);
    *esp2 = *reinterpret_cast<int32_t*>(ebp4 - 0x68);
    esp5 = reinterpret_cast<struct s153*>(esp2 - 1);
    esp5->f0 = reinterpret_cast<int32_t>(fun_414132);
    fun_4130b9(ecx, esp5->f4);
}

void fun_4158ab() {
    int32_t ebp1;

    *reinterpret_cast<uint32_t*>(ebp1 - 4) = 0xffffffff;
}

struct s154 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_41392a(int32_t a1, int32_t a2) {
    struct s154* ebp3;

    goto ebp3->f4;
}

int32_t fun_415a05() {
    struct s87** v1;
    int32_t ebp2;
    int32_t eax3;

    v1 = *reinterpret_cast<struct s87***>(ebp2 - 20);
    eax3 = fun_415a75(v1);
    return eax3;
}

int32_t fun_415c57() {
    return 1;
}

struct s155 {
    signed char[12] pad12;
    unsigned char f12;
};

int32_t fun_415cb9() {
    int32_t eax1;
    struct s155* ebp2;

    eax1 = 0;
    *reinterpret_cast<unsigned char*>(&eax1) = reinterpret_cast<uint1_t>(!!ebp2->f12);
    return eax1;
}

void fun_415d7d() {
}

void fun_415dd3() {
}

void fun_415f7f() {
    int32_t ebp1;
    int32_t ebp2;

    *reinterpret_cast<int32_t*>(ebp1 - 36) = 0;
    *reinterpret_cast<uint32_t*>(ebp2 - 4) = 0xffffffff;
}

int32_t fun_41602f() {
    return 1;
}

int32_t fun_413c04(struct s75* a1, int32_t a2) {
    int32_t eax3;
    int32_t* v4;

    eax3 = 1;
    if (a1->f4 & 6) {
        *v4 = a2;
        eax3 = 3;
    }
    return eax3;
}

void fun_417857() {
}

unsigned char gcc004172;

void fun_417294(int32_t ecx) {
    unsigned char al2;
    int1_t cf3;
    unsigned char tmp8_4;
    signed char dh5;
    int32_t eax6;
    signed char* ebx7;
    signed char* ebx8;
    signed char ah9;

    al2 = gcc004172;
    if (cf3) 
        goto 0x4172dc;
    tmp8_4 = reinterpret_cast<unsigned char>(al2 + dh5);
    *reinterpret_cast<unsigned char*>(&eax6) = tmp8_4;
    if (tmp8_4 < al2) 
        goto 0x4172e0;
    *ebx7 = reinterpret_cast<signed char>(*ebx8 + ah9);
    __asm__("ror dword [edx+0x8a078806], 1");
    *reinterpret_cast<int32_t*>(eax6 + 0x468a0147) = *reinterpret_cast<int32_t*>(eax6 + 0x468a0147) + ecx;
}

void fun_4173ad(int32_t ecx) {
}

void fun_4173f9(int32_t ecx) {
}

void fun_417535(int32_t ecx) {
}

struct s156 {
    signed char[116] pad116;
    signed char f116;
};

struct s157 {
    signed char[3] pad3;
    signed char f3;
};

void fun_41741c(signed char* ecx) {
    int32_t eax2;
    int32_t eax3;
    signed char dh4;
    struct s156* eax5;
    void* eax6;
    signed char dh7;
    void* ecx8;
    int32_t edx9;
    int32_t edx10;
    struct s157* edi11;
    int32_t* esi12;
    void* esi13;
    uint32_t ecx14;
    int32_t* edi15;
    void* edi16;
    int32_t edx17;

    ecx[eax2 * 2] = reinterpret_cast<signed char>(ecx[eax3 * 2] - dh4);
    eax5 = reinterpret_cast<struct s156*>(reinterpret_cast<int32_t>(eax6) - 1);
    if (!eax5) 
        goto 0x417464;
    eax5->f116 = reinterpret_cast<signed char>(eax5->f116 + dh7);
    ecx8 = reinterpret_cast<void*>(ecx + 1);
    *reinterpret_cast<signed char*>(edx9 - 0x2edcfcba) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(edx10 - 0x2edcfcba) + *reinterpret_cast<signed char*>(&ecx8));
    edi11->f3 = *reinterpret_cast<signed char*>(&eax5);
    esi12 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esi13) - 1);
    ecx14 = reinterpret_cast<uint32_t>(ecx8) >> 2;
    edi15 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edi16) - 1);
    if (ecx14 < 8) 
        goto 0x4173f0;
    while (ecx14) {
        --ecx14;
        *edi15 = *esi12;
        --edi15;
        --esi12;
    }
    switch (edx17) {
    case 3:
        goto 0x41754c;
    case 2:
        goto 0x417538;
    case 1:
        goto 0x417528;
    case 0:
        goto 0x417520;
    }
}

struct s158 {
    int32_t f0;
    signed char[12] pad16;
    int32_t f16;
    int32_t f20;
};

int32_t g41f534 = 0;

int32_t fun_417565(void** ecx, struct s158** a2) {
    int32_t eax3;
    int32_t eax4;
    int32_t eax5;

    if ((*a2)->f0 != 0xe06d7363 || ((*a2)->f16 != 3 || (*a2)->f20 != 0x19930520)) {
        eax3 = g41f534;
        if (!eax3 || (eax4 = fun_417601(ecx), eax4 == 0)) {
            eax5 = 0;
        } else {
            eax5 = reinterpret_cast<int32_t>(g41f534(eax3, a2));
        }
        return eax5;
    } else {
        goto 0x415d3c;
    }
}

int32_t SetUnhandledExceptionFilter = 0x19caa;

void fun_4175ab() {
    int32_t eax1;

    eax1 = reinterpret_cast<int32_t>(SetUnhandledExceptionFilter());
    g41f534 = eax1;
    goto fun_417565;
}

void fun_41766a() {
}

void fun_4177b8() {
}

struct s159 {
    signed char f0;
    signed char[1183449414] pad1183449415;
    int32_t f1183449415;
};

void fun_4179a4(int32_t ecx) {
    struct s159* eax2;
    signed char ah3;
    signed char bl4;
    signed char* ebx5;
    signed char* ebx6;

    *reinterpret_cast<signed char*>(&eax2) = 0x79;
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax2) + 1) = reinterpret_cast<signed char>(ah3 + bl4);
    if (*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax2) + 1) >= 0) 
        goto 0x4179ec;
    eax2->f0 = reinterpret_cast<signed char>(eax2->f0 + 0x79);
    if (__intrinsic()) 
        goto 0x4179f0;
    *ebx5 = reinterpret_cast<signed char>(*ebx6 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax2) + 1));
    __asm__("ror dword [edx+0x8a078806], 1");
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(eax2) + 0x468a0147) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(eax2) + 0x468a0147) + (ecx + 1);
}

void fun_417abd(int32_t ecx) {
}

void fun_417b09(int32_t ecx) {
}

void fun_417c45(int32_t ecx) {
}

struct s160 {
    signed char[123] pad123;
    signed char f123;
};

struct s161 {
    signed char[123] pad123;
    signed char f123;
};

void fun_417b2c(int32_t ecx) {
    struct s160* eax2;
    struct s161* eax3;
    signed char bl4;
    int32_t eax5;
    int32_t eax6;
    signed char al7;

    eax2->f123 = reinterpret_cast<signed char>(eax3->f123 + bl4);
    *reinterpret_cast<signed char*>(eax5 - 0x75ffbe85) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(eax6 - 0x75ffbe85) + al7);
    __asm__("ror dword [eax+0xc14e0347], 1");
}

void** fun_40d110(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10) {
    void** eax11;

    eax11 = fun_413320(ecx, reinterpret_cast<unsigned char>(a3) * reinterpret_cast<unsigned char>(a4), __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10);
    return eax11;
}

void** fun_40a2d0(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30) {
    uint32_t eax31;
    void** esi32;
    int1_t zf33;
    void** eax34;
    int1_t zf35;
    int32_t eax36;
    int32_t eax37;
    void** eax38;

    eax31 = reinterpret_cast<uint32_t>(a2 - 0x110);
    if (!eax31) {
        fun_404c50(a1, 0x110, a3, a4, esi32, __return_address(), a1, a2);
        fun_405fa0(a1, 4, esi32, __return_address(), a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25);
        fun_401ed0(a1, a1, 4);
        fun_406190(4, 5, a1, a1, 4, esi32, __return_address(), a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26);
        SetFocus();
        zf33 = g41a2a6 == -1;
        if (zf33) {
            eax34 = fun_406c80(a3, esi32, __return_address(), a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19);
            if (!eax34) {
                g41f2e0 = reinterpret_cast<void**>(1);
            }
            goto esi32;
        } else {
            goto esi32;
        }
    } else {
        if (eax31 - 1 || ((reinterpret_cast<unsigned char>(a3) & 0xffff) - 2 || ((zf35 = g41a2a6 == -1, !zf35) || (eax36 = g41f2ac, !!eax36)))) {
            goto fun_404c50;
        } else {
            eax37 = fun_403a50(13, 15, __return_address(), a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30);
            if (eax37) {
                g41f2e0 = reinterpret_cast<void**>(2);
                fun_408cd0(a3, __return_address(), a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
                g41f2b4 = reinterpret_cast<void**>(1);
            }
            eax38 = fun_403ff0(a1, __return_address(), a1, a2);
            return eax38;
        }
    }
}

uint32_t g41a2b4 = 0x5ce2f8;

void** fun_40a8f0(void** a1, void** a2, void** a3, void** a4) {
    uint32_t eax5;
    uint32_t eax6;
    void** v7;
    void** v8;
    void** v9;
    void** v10;
    void** eax11;
    void** v12;
    void** v13;
    void** v14;
    void** eax15;
    void** v16;
    void** ebx17;
    void** ebx18;
    void** v19;
    void** ebp20;
    void** v21;
    void** esi22;
    void** v23;
    void** edi24;
    void** v25;
    void** v26;
    void** v27;
    void** v28;
    void** v29;
    void** v30;
    void** v31;
    void** v32;
    void** v33;
    void** v34;
    void** v35;
    void** v36;
    void** v37;
    void** v38;
    void** v39;
    void** v40;
    void** v41;
    void** v42;
    void** v43;
    void** v44;
    void** v45;
    void** v46;
    void** v47;
    void** ecx48;
    void** v49;
    void** eax50;
    int32_t esi51;
    void** v52;
    void** edx53;
    void** v54;
    void** eax55;
    int32_t esi56;
    void** v57;
    void** eax58;
    void** ecx59;
    int32_t edi60;
    void** v61;
    void** v62;
    void** edx63;
    void** v64;
    void** eax65;
    void** v66;
    void** eax67;
    void** v68;
    void* esp69;
    uint32_t ecx70;
    void** v71;
    uint32_t ecx72;
    signed char* edi73;
    uint32_t esi74;
    uint32_t ecx75;
    void** eax76;
    void** v77;
    void** v78;
    void** v79;
    void** v80;
    void** v81;
    void** v82;
    void** v83;
    void** v84;
    void** v85;
    void** v86;
    void** v87;
    void** v88;
    void** v89;
    int32_t v90;
    void** v91;

    eax5 = reinterpret_cast<uint32_t>(a2 - 0x110);
    if (eax5) {
        if (eax5 - 1 || ((eax6 = reinterpret_cast<unsigned char>(a3) & 0xffff, reinterpret_cast<uint1_t>(__intrinsic()) | reinterpret_cast<uint1_t>(eax6 == 0)) || reinterpret_cast<int32_t>(eax6) > reinterpret_cast<int32_t>(2))) {
            eax11 = fun_404c50(a1, a2, a3, a4, v7, v8, v9, v10);
            return eax11;
        } else {
            g41f2e0 = reinterpret_cast<void**>(2);
            eax15 = fun_403ff0(a1, v12, v13, v14);
            return eax15;
        }
    }
    v16 = ebx17;
    ebx18 = a1;
    v19 = ebp20;
    v21 = esi22;
    v23 = edi24;
    fun_404c50(ebx18, 0x110, a3, a4, v23, v21, v19, v16);
    fun_405fa0(ebx18, 0x104, v23, v21, v19, v16, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41, v42, v43, v44, v45, v46, v47);
    ecx48 = g41f31c;
    v49 = ecx48;
    eax50 = reinterpret_cast<void**>(GetDlgItem(v49, 0x415, v23, v21, v19, v16));
    esi51 = ShowWindow;
    v52 = eax50;
    esi51(v52, 0, v49, 0x415, v23, v21, v19, v16);
    edx53 = g41f318;
    v54 = edx53;
    esi51(v54, 0, v52, 0, v49, 0x415, v23, v21, v19, v16);
    eax55 = g41f318;
    esi56 = GetWindowLongA;
    v57 = eax55;
    eax58 = reinterpret_cast<void**>(esi56(v57, 0xf0, v54, 0, v52, 0, v49, 0x415, v23, v21, v19, v16));
    ecx59 = g41f318;
    edi60 = SetWindowLongA;
    *reinterpret_cast<unsigned char*>(&eax58) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax58) & 0xfe);
    v61 = eax58;
    v62 = ecx59;
    edi60(v62, 0xf0, v61, v57, 0xf0, v54, 0, v52, 0, v49, 0x415, v23, v21, v19, v16);
    edx63 = g41f314;
    v64 = edx63;
    eax65 = reinterpret_cast<void**>(esi56(v64, 0xf0, v62, 0xf0, v61, v57, 0xf0, v54, 0, v52, 0, v49, 0x415, v23, v21, v19, v16));
    *reinterpret_cast<unsigned char*>(&eax65) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax65) | 1);
    v66 = eax65;
    eax67 = g41f314;
    v68 = eax67;
    edi60();
    esp69 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 0x3ec - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 16 + 4 - 4 - 4 - 4 + 4 + 8 - 4 - 4 - 4 + 4 - 4 - 4 - 4 + 4 - 4 - 4 - 4 + 4 - 4 - 4 - 4 + 4 - 4 - 4 - 4 - 4 + 4 - 4 - 4 - 4 + 4 - 4 - 4 - 4 - 4 + 4);
    ecx70 = g41a2b4;
    v71 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp69) + 20);
    ecx72 = 0xffffffff;
    edi73 = reinterpret_cast<signed char*>(ecx70 - 0x1b42c8);
    esi74 = 0;
    do {
        if (!ecx72) 
            break;
        --ecx72;
        ++edi73;
        ++esi74;
    } while (*edi73);
    ecx75 = ~ecx72 + 0xfffffffe;
    if (!(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(ecx75) < reinterpret_cast<int32_t>(0)) | reinterpret_cast<uint1_t>(ecx75 == 0))) 
        goto addr_40aa20_9;
    addr_40aa45_10:
    *reinterpret_cast<signed char*>(&v52 + 1) = 0;
    eax76 = reinterpret_cast<void**>(GetDlgItem(ebx18));
    fun_405a50(eax76, ebx18, 100, reinterpret_cast<int32_t>(esp69) + 20, v68, 0xf0, v66, v64, v71, v62, 0xf0, v61, v57, 0xf0, v54, 0, v52, 0, v49, 0x415, v23, v21, v19, v16, v77, v78, v79, v80, v81, v82, v83, v84, v85, v86, v87, v88, v89);
    SetFocus();
    goto v90;
    do {
        addr_40aa20_9:
        ++esi74;
        ++v71;
    } while (reinterpret_cast<int32_t>(esi74) < reinterpret_cast<int32_t>(ecx75));
    ebx18 = v91;
    goto addr_40aa45_10;
}

void** fun_40ab50(void** a1, void** a2, void** a3, void** a4) {
    struct s21* eax5;
    void** ecx6;
    void** eax7;
    void** edx8;
    void** esp9;
    void** ebp10;
    uint32_t eax11;
    uint32_t edi12;
    void** ecx13;
    void** esi14;
    void** eax15;
    void* v16;
    void* ebp17;
    void* edi18;
    int32_t v19;
    int32_t esi20;
    int32_t eax21;
    uint32_t eax22;
    uint32_t edx23;
    uint32_t ebx24;
    int32_t v25;
    int32_t ebx26;
    int32_t eax27;
    uint32_t edx28;
    void** v29;
    void** v30;
    uint32_t v31;
    uint32_t v32;
    void** v33;
    void** eax34;
    void** v35;
    void** eax36;
    void** edi37;
    uint32_t ecx38;
    void** eax39;
    uint32_t edx40;
    uint32_t esi41;
    int32_t edx42;
    uint32_t ecx43;
    void** eax44;
    int32_t edx45;
    uint32_t ecx46;
    void** eax47;
    int32_t edx48;
    uint32_t ecx49;
    void** eax50;
    int32_t edx51;
    uint32_t edi52;
    uint32_t edx53;
    int32_t ebx54;
    void** eax55;
    void** ecx56;
    void** edx57;
    void** eax58;
    int16_t* ecx59;
    void** edx60;
    void** eax61;
    int32_t esi62;
    void** eax63;
    void** ecx64;
    void** eax65;
    void** edx66;
    void** eax67;
    void** eax68;
    uint32_t eax69;
    void** eax70;
    void** eax71;

    eax5 = reinterpret_cast<struct s21*>(a2 + 0xffffff7e);
    if (reinterpret_cast<uint32_t>(eax5) <= 0x90) {
        ecx6 = reinterpret_cast<void**>(0);
        *reinterpret_cast<signed char*>(&ecx6) = eax5->f4238960;
        switch (ecx6) {
        case 0:
            eax7 = g41f2fc;
            if (eax7) {
                DeleteObject(eax7);
                g41f2fc = reinterpret_cast<void**>(0);
                break;
            }
        case 1:
            edx8 = g41f27c;
            esp9 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 16 - 4 - 4 - 4 - 4);
            ebp10 = a1;
            g41f338 = ebp10;
            eax11 = 0;
            edi12 = 0;
            if (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx8)) & 2)) {
                ecx13 = *reinterpret_cast<void***>(edx8 + 12);
                esi14 = *reinterpret_cast<void***>(edx8 + 16);
            } else {
                eax15 = g41f334;
                v16 = reinterpret_cast<void*>(esp9 + 4);
                GetWindowRect();
                AdjustWindowRectEx(esp9 - 1 - 1 - 1 + 1 - 1 - 1 + 6, 0x80c80080, 0, 0);
                ecx13 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebp17) - reinterpret_cast<unsigned char>(eax15));
                esi14 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(edi18) - reinterpret_cast<uint32_t>(v16));
                __asm__("cdq ");
                edi12 = v19 - esi20 - reinterpret_cast<unsigned char>(ecx13);
                eax21 = g41f2dc;
                eax22 = eax21 - reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(ecx13) - reinterpret_cast<uint32_t>(v16)) >> 1);
                edx23 = eax22;
                if (reinterpret_cast<int32_t>(eax22) >= reinterpret_cast<int32_t>(edi12)) {
                    edx23 = edi12;
                }
                if (reinterpret_cast<int32_t>(edx23) >= reinterpret_cast<int32_t>(0)) {
                    if (reinterpret_cast<int32_t>(eax22) < reinterpret_cast<int32_t>(edi12)) {
                        edi12 = eax22;
                    }
                } else {
                    edi12 = 0;
                }
                ebx24 = v25 - ebx26 - reinterpret_cast<unsigned char>(esi14);
                __asm__("cdq ");
                eax27 = g41f2d8;
                eax11 = eax27 - reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(esi14) - edx23) >> 1);
                edx28 = eax11;
                if (reinterpret_cast<int32_t>(eax11) >= reinterpret_cast<int32_t>(ebx24)) {
                    edx28 = ebx24;
                }
                if (reinterpret_cast<int32_t>(edx28) >= reinterpret_cast<int32_t>(0)) {
                    if (reinterpret_cast<int32_t>(eax11) >= reinterpret_cast<int32_t>(ebx24)) {
                        eax11 = ebx24;
                    }
                } else {
                    eax11 = 0;
                }
            }
            v29 = esi14;
            v30 = ecx13;
            v31 = eax11;
            v32 = edi12;
            v33 = ebp10;
            SetWindowPos(v33, 0, v32, v31, v30, v29, 4);
            eax34 = g41f27c;
            v35 = eax34 + 24;
            eax36 = reinterpret_cast<void**>(CreateFontIndirectA(v35, v33, 0, v32, v31, v30, v29, 4));
            edi37 = g41f0f0;
            ecx38 = 0;
            g41f2fc = eax36;
            eax39 = g41f0f4;
            edx40 = reinterpret_cast<unsigned char>(edi37) >> 2;
            if (edx40) {
                esi41 = edx40;
                do {
                    edx42 = 0;
                    *reinterpret_cast<void***>(&edx42) = *reinterpret_cast<void***>(eax39);
                    ecx43 = (ecx38 >> 31) + ecx38 * 2 + edx42;
                    eax44 = eax39 + 1;
                    edx45 = 0;
                    *reinterpret_cast<void***>(&edx45) = *reinterpret_cast<void***>(eax44);
                    ecx46 = (ecx43 >> 31) + ecx43 * 2 + edx45;
                    eax47 = eax44 + 1;
                    edx48 = 0;
                    *reinterpret_cast<void***>(&edx48) = *reinterpret_cast<void***>(eax47);
                    ecx49 = (ecx46 >> 31) + ecx46 * 2 + edx48;
                    eax50 = eax47 + 1;
                    edx51 = 0;
                    *reinterpret_cast<void***>(&edx51) = *reinterpret_cast<void***>(eax50);
                    ecx38 = (ecx49 >> 31) + ecx49 * 2 + edx51;
                    eax39 = eax50 + 1;
                    --esi41;
                } while (esi41);
            }
            edi52 = reinterpret_cast<unsigned char>(edi37) & 3;
            edx53 = edi52;
            if (edi52) {
                do {
                    ebx54 = 0;
                    *reinterpret_cast<void***>(&ebx54) = *reinterpret_cast<void***>(eax39);
                    ecx38 = (ecx38 >> 31) + ecx38 * 2 + ebx54;
                    ++eax39;
                    --edx53;
                } while (edx53);
            }
            eax55 = g41f258;
            ecx56 = reinterpret_cast<void**>(ecx38 ^ 0x7d39ec5a);
            if (ecx56 != *reinterpret_cast<void***>(eax55 + 34) && (ecx56 != *reinterpret_cast<void***>(eax55 + 6) && (edx57 = g41f27c, eax58 = reinterpret_cast<void**>(0), !(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(*reinterpret_cast<void***>(edx57 + 92)) < reinterpret_cast<signed char>(0)) | reinterpret_cast<uint1_t>(*reinterpret_cast<void***>(edx57 + 92) == 0))))) {
                ecx59 = reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(*reinterpret_cast<void**>(edx57 + 96)) + reinterpret_cast<unsigned char>(edx57) + 2);
                do {
                    *ecx59 = 2;
                    edx60 = g41f27c;
                    ++eax58;
                    ecx59 = ecx59 + 16;
                } while (reinterpret_cast<signed char>(eax58) < reinterpret_cast<signed char>(*reinterpret_cast<void***>(edx60 + 92)));
            }
            eax61 = g41f330;
            esi62 = CreateDialogParamA;
            eax63 = reinterpret_cast<void**>(esi62(eax61, 0x84, ebp10, fun_4044f0, 0, v35, v33, 0, v32, v31, v30, v29, 4));
            ecx64 = g41f330;
            g41f328 = eax63;
            eax65 = reinterpret_cast<void**>(esi62(ecx64, 0x84, ebp10, fun_404750, 0, eax61, 0x84, ebp10, fun_4044f0, 0, v35, v33, 0, v32, v31, v30, v29, 4));
            edx66 = g41f330;
            g41f324 = eax65;
            eax67 = reinterpret_cast<void**>(esi62(edx66, 0x70, ebp10, fun_4049b0));
            g41f31c = eax67;
            PostMessageA();
            goto 0;
        case 2:
            eax68 = g41f31c;
            if (eax68) {
                PostMessageA(eax68, 0x111, a3, a4);
                break;
            }
        case 3:
            eax69 = (reinterpret_cast<unsigned char>(a3) & 0xfff0) - 0xf020;
            if (!eax69) {
                ecx6 = g41f334;
                ShowWindow(ecx6, 6);
            } else {
                if (!(eax69 - 64)) {
                    eax70 = g41f31c;
                    if (!eax70) {
                        g41f2e0 = reinterpret_cast<void**>(2);
                    } else {
                        PostMessageA(eax70, 0x111, 2, 0);
                        SetWindowLongA();
                        goto edi18;
                    }
                }
            }
        case 4:
            goto 0x40ae42;
        }
    }
    eax71 = fun_403e70(ecx6, a1, a2, a3, a4);
    return eax71;
}

void fun_40cbe0(int32_t ecx) {
    signed char* eax2;
    int32_t* eax3;
    signed char* eax4;
    signed char* edx5;
    signed char* edx6;
    signed char bl7;
    int32_t eax8;
    int32_t eax9;
    signed char dl10;
    signed char* ebx11;
    signed char* ebx12;
    int32_t eax13;
    signed char dh14;
    int32_t edi15;
    int32_t edi16;
    signed char* ebx17;
    signed char* ebx18;
    signed char* ebx19;
    signed char* ebx20;
    signed char* ebx21;
    signed char* ebx22;

    *eax2 = -48;
    *eax3 = 0x40c8cf;
    *eax4 = 44;
    __asm__("retf ");
    edx5[ecx * 8] = reinterpret_cast<signed char>(edx6[ecx * 8] + bl7);
    eax8 = eax9 + 1 + 1;
    *reinterpret_cast<signed char*>(eax8 - 54) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(eax8 - 54) + dl10);
    ebx11[ecx * 8] = reinterpret_cast<signed char>(ebx12[ecx * 8] + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    eax13 = eax8 + 1 + 1;
    *reinterpret_cast<signed char*>(eax13 + 0x160040c7) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(eax13 + 0x160040c7) + dh14);
    *reinterpret_cast<signed char*>(edi15 + 0x2c0040ca) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(edi16 + 0x2c0040ca) + *reinterpret_cast<signed char*>(&ecx));
    __asm__("retf ");
    ebx17[ecx * 8] = reinterpret_cast<signed char>(ebx18[ecx * 8] + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    ebx19[ecx * 8] = reinterpret_cast<signed char>(ebx20[ecx * 8] + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    ebx21[ecx * 8] = reinterpret_cast<signed char>(ebx22[ecx * 8] + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    *reinterpret_cast<int32_t*>(eax13 + 1 + 1 + 1 + 1 + 1) = 0x40ca3f;
}

struct s162 {
    signed char[1] pad1;
    unsigned char f1;
};

struct s163 {
    signed char[17] pad17;
    signed char f17;
};

struct s164 {
    signed char[17] pad17;
    signed char f17;
};

struct s165 {
    unsigned char f0;
    uint32_t f1;
};

void fun_4119b0(void* ecx) {
    void** eax2;
    uint32_t eax3;
    void* ecx4;
    int32_t ebp5;
    int32_t ebp6;
    struct s162* ecx7;
    struct s163* esi8;
    struct s164* esi9;
    struct s165* ecx10;
    unsigned char tmp8_11;
    int32_t esi12;
    signed char bh13;
    uint1_t cf14;
    int32_t esi15;
    int32_t esi16;
    uint32_t* ecx17;
    unsigned char tmp8_18;
    signed char* edi19;
    uint1_t cf20;
    unsigned char* edi21;
    unsigned char* edi22;
    uint32_t eax23;
    signed char bh24;
    signed char bl25;
    unsigned char bh26;
    signed char dl27;

    eax2 = reinterpret_cast<void**>(eax3 | 0xe3a0041);
    ecx4 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ecx) + 1);
    *reinterpret_cast<signed char*>(ebp5 - 0x23ffbef2) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebp6 - 0x23ffbef2) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx4) + 1));
    if (!__intrinsic()) {
        eax2 = *reinterpret_cast<void***>(eax2);
    }
    ecx7 = reinterpret_cast<struct s162*>(reinterpret_cast<int32_t>(ecx4) + 1);
    esi8->f17 = reinterpret_cast<signed char>(esi9->f17 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx7) + 1));
    ecx10 = reinterpret_cast<struct s165*>(&ecx7->f1);
    tmp8_11 = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(esi12 + 0x7c004113) + bh13);
    cf14 = reinterpret_cast<uint1_t>(tmp8_11 < *reinterpret_cast<unsigned char*>(esi15 + 0x7c004113));
    *reinterpret_cast<unsigned char*>(esi16 + 0x7c004113) = tmp8_11;
    ecx10->f0 = reinterpret_cast<unsigned char>(ecx10->f0 - reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(&eax2) + reinterpret_cast<uint1_t>(ecx10->f0 < reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(&eax2) + cf14))));
    if (!ecx10) {
        ecx17 = &ecx10->f1;
        tmp8_18 = reinterpret_cast<unsigned char>(*edi19 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax2) + 1));
        cf20 = reinterpret_cast<uint1_t>(tmp8_18 < *edi21);
        *edi22 = tmp8_18;
        *ecx17 = *ecx17 - (reinterpret_cast<uint32_t>(eax2) + reinterpret_cast<uint1_t>(*ecx17 < reinterpret_cast<uint32_t>(eax2) + cf20));
        eax23 = reinterpret_cast<uint32_t>(eax2) | 0xe250041;
        *reinterpret_cast<unsigned char*>(&eax23) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax23) + 65) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(bh24 + bl25) < bh26));
        *reinterpret_cast<signed char*>(eax23 - 0x6f6f6f70) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(eax23 - 0x6f6f6f70) + dl27);
    }
}

struct s166 {
    signed char[31] pad31;
    signed char f31;
};

struct s167 {
    signed char[31] pad31;
    signed char f31;
};

void fun_412350(uint32_t* ecx) {
    uint32_t ebx2;
    uint32_t ebx3;
    int32_t eax4;
    unsigned char tmp8_5;
    signed char ah6;
    uint1_t cf7;
    uint32_t eax8;
    signed char al9;
    unsigned char al10;
    unsigned char tmp8_11;
    uint1_t cf12;
    uint32_t eax13;
    unsigned char* edi14;
    signed char* edi15;
    struct s166* edx16;
    struct s167* edx17;
    unsigned char* ecx18;
    int32_t edi19;
    int32_t edi20;
    unsigned char al21;
    int32_t* edi22;
    int32_t* esi23;
    signed char dl24;

    ebx2 = ebx3 & *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(ecx) + eax4 * 2);
    tmp8_5 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx) + 1) + ah6);
    cf7 = reinterpret_cast<uint1_t>(tmp8_5 < *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx) + 1) = tmp8_5;
    *reinterpret_cast<unsigned char*>(&eax8) = reinterpret_cast<unsigned char>(al9 - reinterpret_cast<unsigned char>(65 + reinterpret_cast<uint1_t>(al10 < reinterpret_cast<unsigned char>(65 + cf7))));
    tmp8_11 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ecx) + *reinterpret_cast<signed char*>(&ebx2));
    cf12 = reinterpret_cast<uint1_t>(tmp8_11 < *reinterpret_cast<unsigned char*>(&ecx));
    *reinterpret_cast<unsigned char*>(&ecx) = tmp8_11;
    eax13 = eax8 - (0x1e5a0041 + reinterpret_cast<uint1_t>(eax8 < 0x1e5a0041 + cf12));
    *edi14 = reinterpret_cast<unsigned char>(*edi15 + *reinterpret_cast<unsigned char*>(&eax13));
    edx16->f31 = reinterpret_cast<signed char>(edx17->f31 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx2) + 1));
    ecx18 = reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ecx) + 1 + 1 + 1);
    *reinterpret_cast<signed char*>(edi19 + 0x38004120) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(edi20 + 0x38004120) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax13) + 1));
    al21 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax13) & *ecx18);
    *edi22 = *esi23;
    *reinterpret_cast<unsigned char*>(&eax13) = reinterpret_cast<unsigned char>(al21 & *ecx18);
    __asm__("fbld tword [edx]");
    *reinterpret_cast<signed char*>(eax13 - 0x6f6f6f70) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(eax13 - 0x6f6f6f70) + dl24);
}

int32_t fun_417e80(void** ecx, void** a2, void** a3, void** a4, int32_t a5) {
    int32_t edi6;
    int32_t esi7;
    void** ebx8;
    void** ebp9;
    int32_t eax10;

    eax10 = fun_4154f3(ecx, a2, a3, a4, a5, 0x418b74, 0, 0, 0, edi6, esi7, ebx8, 0x418b74, ebp9);
    return eax10;
}

int32_t fun_413a18(void** ecx, void** a2, void** a3, void** a4) {
    void** v5;
    void** v6;
    void** v7;
    int32_t ebp8;
    int32_t eax9;

    v5 = *reinterpret_cast<void***>(a3 + 16);
    v6 = *reinterpret_cast<void***>(a3 + 8);
    v7 = *reinterpret_cast<void***>(a3 + 12);
    eax9 = fun_4154f3(ecx, a2, v7, a4, 0, v6, v5, a3, 0, ebp8, __return_address(), a2, a3, a4);
    return eax9;
}

struct s168 {
    int32_t f0;
    struct s57* f4;
    int32_t f8;
};

void fun_415a0f() {
    void* esp1;
    int32_t ebp2;
    int32_t ebp3;
    int32_t* esp4;
    int32_t* esp5;
    int32_t ebp6;
    struct s168* esp7;

    esp1 = *reinterpret_cast<void**>(ebp2 - 24);
    *reinterpret_cast<uint32_t*>(ebp3 - 44) = 0;
    esp4 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp1) - 4);
    *esp4 = 0xff;
    esp5 = esp4 - 1;
    *esp5 = ebp6 - 16;
    esp7 = reinterpret_cast<struct s168*>(esp5 - 1);
    esp7->f0 = 0x415a21;
    fun_413c26(esp7->f4, esp7->f8);
    goto 0x4159f6;
}

void fun_415c5b() {
    goto 0x415d3c;
}

void fun_415cc2() {
    goto 0x415d3c;
}

void fun_416033() {
    int32_t ebp1;

    *reinterpret_cast<uint32_t*>(ebp1 - 4) = 0xffffffff;
}

struct s169 {
    signed char[24] pad24;
    struct s57* f24;
    int32_t f28;
};

void fun_416e1d(struct s169* a1) {
    int32_t v2;
    struct s57* v3;

    v2 = a1->f28;
    v3 = a1->f24;
    fun_413c26(v3, v2);
    return;
}

struct s170 {
    signed char[65] pad65;
    unsigned char f65;
};

struct s171 {
    signed char[65] pad65;
    unsigned char f65;
};

void fun_41750e(int16_t cx) {
    struct s170* ebp2;
    struct s171* ebp3;
    unsigned char dh4;
    signed char* eax5;
    signed char* eax6;
    signed char* eax7;
    signed char* eax8;
    signed char* eax9;
    signed char bh10;
    signed char* eax11;
    void* ebp12;
    int32_t esi13;
    void* ebp14;
    int32_t esi15;
    int32_t ebx16;
    int32_t ebx17;

    ebp2->f65 = reinterpret_cast<unsigned char>(ebp3->f65 & dh4);
    *eax5 = reinterpret_cast<signed char>(*eax6 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&cx) + 1));
    if (*eax7) 
        goto 0x417558;
    *eax8 = reinterpret_cast<signed char>(*eax9 + bh10);
    if (*eax11) 
        goto 0x41755c;
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebp12) + esi13 * 2 + 65) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebp14) + esi15 * 2 + 65) + *reinterpret_cast<signed char*>(&cx));
    *reinterpret_cast<signed char*>(ebx16 + 0x5f5e0845) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebx17 + 0x5f5e0845) + *reinterpret_cast<signed char*>(&cx));
}

void fun_4175bc() {
    int32_t v1;

    v1 = g41f534;
    SetUnhandledExceptionFilter();
    goto v1;
}

void fun_417c1e(unsigned char* ecx) {
    int32_t eax2;
    int32_t eax3;
    unsigned char bh4;
    int32_t eax5;
    int32_t edi6;
    signed char bl7;
    int32_t ebx8;
    int32_t ebx9;

    ecx[eax2 * 2] = reinterpret_cast<unsigned char>(ecx[eax3 * 2] ^ bh4);
    if (eax5 - 1 < 0 != __intrinsic()) 
        goto 0x417c6c;
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + edi6 * 2 + 65) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + edi6 * 2 + 65) + bl7);
    *reinterpret_cast<signed char*>(ebx8 + 0x5f5e0845) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebx9 + 0x5f5e0845) + *reinterpret_cast<signed char*>(&ecx));
}

void fun_417b47() {
    int32_t edx1;
    int32_t edx2;
    unsigned char dh3;
    int32_t ecx4;
    int32_t* edi5;
    int32_t* esi6;
    int32_t edx7;

    *reinterpret_cast<unsigned char*>(edx1 - 74) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(edx2 - 74) | dh3);
    while (ecx4) {
        --ecx4;
        *edi5 = *esi6;
        --edi5;
        --esi6;
    }
    switch (edx7) {
    case 3:
        goto 0x417c5c;
    case 2:
        goto 0x417c48;
    case 1:
        goto 0x417c38;
    case 0:
        goto 0x417c30;
    }
}

void fun_40d130(void** ecx, void** a2, void** a3, void** a4, void** a5) {
    if (!a3) 
        goto 0x40d13f;
    fun_413483(ecx, a3, __return_address(), a2, a3, a4, a5);
}

void fun_417e8a() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;
    signed char* eax7;
    signed char* eax8;
    signed char al9;
    signed char* eax10;
    signed char* eax11;
    signed char al12;
    signed char* eax13;
    signed char* eax14;
    signed char al15;
    signed char* eax16;
    signed char* eax17;
    signed char al18;
    signed char* eax19;
    signed char* eax20;
    signed char al21;
    signed char* eax22;
    signed char* eax23;
    signed char al24;
    signed char* eax25;
    signed char* eax26;
    signed char al27;
    signed char* eax28;
    signed char* eax29;
    signed char al30;
    signed char* eax31;
    signed char* eax32;
    signed char al33;
    signed char* eax34;
    signed char* eax35;
    signed char al36;
    signed char* eax37;
    signed char* eax38;
    signed char al39;
    signed char* eax40;
    signed char* eax41;
    signed char al42;
    signed char* eax43;
    signed char* eax44;
    signed char al45;
    signed char* eax46;
    signed char* eax47;
    signed char al48;
    signed char* eax49;
    signed char* eax50;
    signed char al51;
    signed char* eax52;
    signed char* eax53;
    signed char al54;
    signed char* eax55;
    signed char* eax56;
    signed char al57;
    signed char* eax58;
    signed char* eax59;
    signed char al60;
    signed char* eax61;
    signed char* eax62;
    signed char al63;
    signed char* eax64;
    signed char* eax65;
    signed char al66;
    signed char* eax67;
    signed char* eax68;
    signed char al69;
    signed char* eax70;
    signed char* eax71;
    signed char al72;
    signed char* eax73;
    signed char* eax74;
    signed char al75;
    signed char* eax76;
    signed char* eax77;
    signed char al78;
    signed char* eax79;
    signed char* eax80;
    signed char al81;
    signed char* eax82;
    signed char* eax83;
    signed char al84;
    signed char* eax85;
    signed char* eax86;
    signed char al87;
    signed char* eax88;
    signed char* eax89;
    signed char al90;
    signed char* eax91;
    signed char* eax92;
    signed char al93;
    signed char* eax94;
    signed char* eax95;
    signed char al96;
    signed char* eax97;
    signed char* eax98;
    signed char al99;
    signed char* eax100;
    signed char* eax101;
    signed char al102;
    signed char* eax103;
    signed char* eax104;
    signed char al105;
    signed char* eax106;
    signed char* eax107;
    signed char al108;
    signed char* eax109;
    signed char* eax110;
    signed char al111;
    signed char* eax112;
    signed char* eax113;
    signed char al114;
    signed char* eax115;
    signed char* eax116;
    signed char al117;
    signed char* eax118;
    signed char* eax119;
    signed char al120;
    signed char* eax121;
    signed char* eax122;
    signed char al123;
    signed char* eax124;
    signed char* eax125;
    signed char al126;
    signed char* eax127;
    signed char* eax128;
    signed char al129;
    signed char* eax130;
    signed char* eax131;
    signed char al132;
    signed char* eax133;
    signed char* eax134;
    signed char al135;
    signed char* eax136;
    signed char* eax137;
    signed char al138;
    signed char* eax139;
    signed char* eax140;
    signed char al141;
    signed char* eax142;
    signed char* eax143;
    signed char al144;
    signed char* eax145;
    signed char* eax146;
    signed char al147;
    signed char* eax148;
    signed char* eax149;
    signed char al150;
    signed char* eax151;
    signed char* eax152;
    signed char al153;
    signed char* eax154;
    signed char* eax155;
    signed char al156;
    signed char* eax157;
    signed char* eax158;
    signed char al159;
    signed char* eax160;
    signed char* eax161;
    signed char al162;
    signed char* eax163;
    signed char* eax164;
    signed char al165;
    signed char* eax166;
    signed char* eax167;
    signed char al168;
    signed char* eax169;
    signed char* eax170;
    signed char al171;
    signed char* eax172;
    signed char* eax173;
    signed char al174;
    signed char* eax175;
    signed char* eax176;
    signed char al177;
    signed char* eax178;
    signed char* eax179;
    signed char al180;
    signed char* eax181;
    signed char* eax182;
    signed char al183;
    signed char* eax184;
    signed char* eax185;
    signed char al186;
    signed char* eax187;
    signed char* eax188;
    signed char al189;
    signed char* eax190;
    signed char* eax191;
    signed char al192;
    signed char* eax193;
    signed char* eax194;
    signed char al195;
    signed char* eax196;
    signed char* eax197;
    signed char al198;
    signed char* eax199;
    signed char* eax200;
    signed char al201;
    signed char* eax202;
    signed char* eax203;
    signed char al204;
    signed char* eax205;
    signed char* eax206;
    signed char al207;
    signed char* eax208;
    signed char* eax209;
    signed char al210;
    signed char* eax211;
    signed char* eax212;
    signed char al213;
    signed char* eax214;
    signed char* eax215;
    signed char al216;
    signed char* eax217;
    signed char* eax218;
    signed char al219;
    signed char* eax220;
    signed char* eax221;
    signed char al222;
    signed char* eax223;
    signed char* eax224;
    signed char al225;
    signed char* eax226;
    signed char* eax227;
    signed char al228;
    signed char* eax229;
    signed char* eax230;
    signed char al231;
    signed char* eax232;
    signed char* eax233;
    signed char al234;
    signed char* eax235;
    signed char* eax236;
    signed char al237;
    signed char* eax238;
    signed char* eax239;
    signed char al240;
    signed char* eax241;
    signed char* eax242;
    signed char al243;
    signed char* eax244;
    signed char* eax245;
    signed char al246;
    signed char* eax247;
    signed char* eax248;
    signed char al249;
    signed char* eax250;
    signed char* eax251;
    signed char al252;
    signed char* eax253;
    signed char* eax254;
    signed char al255;
    signed char* eax256;
    signed char* eax257;
    signed char al258;
    signed char* eax259;
    signed char* eax260;
    signed char al261;
    signed char* eax262;
    signed char* eax263;
    signed char al264;
    signed char* eax265;
    signed char* eax266;
    signed char al267;
    signed char* eax268;
    signed char* eax269;
    signed char al270;
    signed char* eax271;
    signed char* eax272;
    signed char al273;
    signed char* eax274;
    signed char* eax275;
    signed char al276;
    signed char* eax277;
    signed char* eax278;
    signed char al279;
    signed char* eax280;
    signed char* eax281;
    signed char al282;
    signed char* eax283;
    signed char* eax284;
    signed char al285;
    signed char* eax286;
    signed char* eax287;
    signed char al288;
    signed char* eax289;
    signed char* eax290;
    signed char al291;
    signed char* eax292;
    signed char* eax293;
    signed char al294;
    signed char* eax295;
    signed char* eax296;
    signed char al297;
    signed char* eax298;
    signed char* eax299;
    signed char al300;
    signed char* eax301;
    signed char* eax302;
    signed char al303;
    signed char* eax304;
    signed char* eax305;
    signed char al306;
    signed char* eax307;
    signed char* eax308;
    signed char al309;
    signed char* eax310;
    signed char* eax311;
    signed char al312;
    signed char* eax313;
    signed char* eax314;
    signed char al315;
    signed char* eax316;
    signed char* eax317;
    signed char al318;
    signed char* eax319;
    signed char* eax320;
    signed char al321;
    signed char* eax322;
    signed char* eax323;
    signed char al324;
    signed char* eax325;
    signed char* eax326;
    signed char al327;
    signed char* eax328;
    signed char* eax329;
    signed char al330;
    signed char* eax331;
    signed char* eax332;
    signed char al333;
    signed char* eax334;
    signed char* eax335;
    signed char al336;
    signed char* eax337;
    signed char* eax338;
    signed char al339;
    signed char* eax340;
    signed char* eax341;
    signed char al342;
    signed char* eax343;
    signed char* eax344;
    signed char al345;
    signed char* eax346;
    signed char* eax347;
    signed char al348;
    signed char* eax349;
    signed char* eax350;
    signed char al351;
    signed char* eax352;
    signed char* eax353;
    signed char al354;
    signed char* eax355;
    signed char* eax356;
    signed char al357;
    signed char* eax358;
    signed char* eax359;
    signed char al360;
    signed char* eax361;
    signed char* eax362;
    signed char al363;
    signed char* eax364;
    signed char* eax365;
    signed char al366;
    signed char* eax367;
    signed char* eax368;
    signed char al369;
    signed char* eax370;
    signed char* eax371;
    signed char al372;
    signed char* eax373;
    signed char* eax374;
    signed char al375;
    signed char* eax376;
    signed char* eax377;
    signed char al378;
    signed char* eax379;
    signed char* eax380;
    signed char al381;
    signed char* eax382;
    signed char* eax383;
    signed char al384;
    signed char* eax385;
    signed char* eax386;
    signed char al387;
    signed char* eax388;
    signed char* eax389;
    signed char al390;
    signed char* eax391;
    signed char* eax392;
    signed char al393;
    signed char* eax394;
    signed char* eax395;
    signed char al396;
    signed char* eax397;
    signed char* eax398;
    signed char al399;
    signed char* eax400;
    signed char* eax401;
    signed char al402;
    signed char* eax403;
    signed char* eax404;
    signed char al405;
    signed char* eax406;
    signed char* eax407;
    signed char al408;
    signed char* eax409;
    signed char* eax410;
    signed char al411;
    signed char* eax412;
    signed char* eax413;
    signed char al414;
    signed char* eax415;
    signed char* eax416;
    signed char al417;
    signed char* eax418;
    signed char* eax419;
    signed char al420;
    signed char* eax421;
    signed char* eax422;
    signed char al423;
    signed char* eax424;
    signed char* eax425;
    signed char al426;
    signed char* eax427;
    signed char* eax428;
    signed char al429;
    signed char* eax430;
    signed char* eax431;
    signed char al432;
    signed char* eax433;
    signed char* eax434;
    signed char al435;
    signed char* eax436;
    signed char* eax437;
    signed char al438;
    signed char* eax439;
    signed char* eax440;
    signed char al441;
    signed char* eax442;
    signed char* eax443;
    signed char al444;
    signed char* eax445;
    signed char* eax446;
    signed char al447;
    signed char* eax448;
    signed char* eax449;
    signed char al450;
    signed char* eax451;
    signed char* eax452;
    signed char al453;
    signed char* eax454;
    signed char* eax455;
    signed char al456;
    signed char* eax457;
    signed char* eax458;
    signed char al459;
    signed char* eax460;
    signed char* eax461;
    signed char al462;
    signed char* eax463;
    signed char* eax464;
    signed char al465;
    signed char* eax466;
    signed char* eax467;
    signed char al468;
    signed char* eax469;
    signed char* eax470;
    signed char al471;
    signed char* eax472;
    signed char* eax473;
    signed char al474;
    signed char* eax475;
    signed char* eax476;
    signed char al477;
    signed char* eax478;
    signed char* eax479;
    signed char al480;
    signed char* eax481;
    signed char* eax482;
    signed char al483;
    signed char* eax484;
    signed char* eax485;
    signed char al486;
    signed char* eax487;
    signed char* eax488;
    signed char al489;
    signed char* eax490;
    signed char* eax491;
    signed char al492;
    signed char* eax493;
    signed char* eax494;
    signed char al495;
    signed char* eax496;
    signed char* eax497;
    signed char al498;
    signed char* eax499;
    signed char* eax500;
    signed char al501;
    signed char* eax502;
    signed char* eax503;
    signed char al504;
    signed char* eax505;
    signed char* eax506;
    signed char al507;
    signed char* eax508;
    signed char* eax509;
    signed char al510;
    signed char* eax511;
    signed char* eax512;
    signed char al513;
    signed char* eax514;
    signed char* eax515;
    signed char al516;
    signed char* eax517;
    signed char* eax518;
    signed char al519;
    signed char* eax520;
    signed char* eax521;
    signed char al522;
    signed char* eax523;
    signed char* eax524;
    signed char al525;
    signed char* eax526;
    signed char* eax527;
    signed char al528;
    signed char* eax529;
    signed char* eax530;
    signed char al531;
    signed char* eax532;
    signed char* eax533;
    signed char al534;
    signed char* eax535;
    signed char* eax536;
    signed char al537;
    signed char* eax538;
    signed char* eax539;
    signed char al540;
    signed char* eax541;
    signed char* eax542;
    signed char al543;
    signed char* eax544;
    signed char* eax545;
    signed char al546;
    signed char* eax547;
    signed char* eax548;
    signed char al549;
    signed char* eax550;
    signed char* eax551;
    signed char al552;
    signed char* eax553;
    signed char* eax554;
    signed char al555;
    signed char* eax556;
    signed char* eax557;
    signed char al558;
    signed char* eax559;
    signed char* eax560;
    signed char al561;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
    *eax7 = reinterpret_cast<signed char>(*eax8 + al9);
    *eax10 = reinterpret_cast<signed char>(*eax11 + al12);
    *eax13 = reinterpret_cast<signed char>(*eax14 + al15);
    *eax16 = reinterpret_cast<signed char>(*eax17 + al18);
    *eax19 = reinterpret_cast<signed char>(*eax20 + al21);
    *eax22 = reinterpret_cast<signed char>(*eax23 + al24);
    *eax25 = reinterpret_cast<signed char>(*eax26 + al27);
    *eax28 = reinterpret_cast<signed char>(*eax29 + al30);
    *eax31 = reinterpret_cast<signed char>(*eax32 + al33);
    *eax34 = reinterpret_cast<signed char>(*eax35 + al36);
    *eax37 = reinterpret_cast<signed char>(*eax38 + al39);
    *eax40 = reinterpret_cast<signed char>(*eax41 + al42);
    *eax43 = reinterpret_cast<signed char>(*eax44 + al45);
    *eax46 = reinterpret_cast<signed char>(*eax47 + al48);
    *eax49 = reinterpret_cast<signed char>(*eax50 + al51);
    *eax52 = reinterpret_cast<signed char>(*eax53 + al54);
    *eax55 = reinterpret_cast<signed char>(*eax56 + al57);
    *eax58 = reinterpret_cast<signed char>(*eax59 + al60);
    *eax61 = reinterpret_cast<signed char>(*eax62 + al63);
    *eax64 = reinterpret_cast<signed char>(*eax65 + al66);
    *eax67 = reinterpret_cast<signed char>(*eax68 + al69);
    *eax70 = reinterpret_cast<signed char>(*eax71 + al72);
    *eax73 = reinterpret_cast<signed char>(*eax74 + al75);
    *eax76 = reinterpret_cast<signed char>(*eax77 + al78);
    *eax79 = reinterpret_cast<signed char>(*eax80 + al81);
    *eax82 = reinterpret_cast<signed char>(*eax83 + al84);
    *eax85 = reinterpret_cast<signed char>(*eax86 + al87);
    *eax88 = reinterpret_cast<signed char>(*eax89 + al90);
    *eax91 = reinterpret_cast<signed char>(*eax92 + al93);
    *eax94 = reinterpret_cast<signed char>(*eax95 + al96);
    *eax97 = reinterpret_cast<signed char>(*eax98 + al99);
    *eax100 = reinterpret_cast<signed char>(*eax101 + al102);
    *eax103 = reinterpret_cast<signed char>(*eax104 + al105);
    *eax106 = reinterpret_cast<signed char>(*eax107 + al108);
    *eax109 = reinterpret_cast<signed char>(*eax110 + al111);
    *eax112 = reinterpret_cast<signed char>(*eax113 + al114);
    *eax115 = reinterpret_cast<signed char>(*eax116 + al117);
    *eax118 = reinterpret_cast<signed char>(*eax119 + al120);
    *eax121 = reinterpret_cast<signed char>(*eax122 + al123);
    *eax124 = reinterpret_cast<signed char>(*eax125 + al126);
    *eax127 = reinterpret_cast<signed char>(*eax128 + al129);
    *eax130 = reinterpret_cast<signed char>(*eax131 + al132);
    *eax133 = reinterpret_cast<signed char>(*eax134 + al135);
    *eax136 = reinterpret_cast<signed char>(*eax137 + al138);
    *eax139 = reinterpret_cast<signed char>(*eax140 + al141);
    *eax142 = reinterpret_cast<signed char>(*eax143 + al144);
    *eax145 = reinterpret_cast<signed char>(*eax146 + al147);
    *eax148 = reinterpret_cast<signed char>(*eax149 + al150);
    *eax151 = reinterpret_cast<signed char>(*eax152 + al153);
    *eax154 = reinterpret_cast<signed char>(*eax155 + al156);
    *eax157 = reinterpret_cast<signed char>(*eax158 + al159);
    *eax160 = reinterpret_cast<signed char>(*eax161 + al162);
    *eax163 = reinterpret_cast<signed char>(*eax164 + al165);
    *eax166 = reinterpret_cast<signed char>(*eax167 + al168);
    *eax169 = reinterpret_cast<signed char>(*eax170 + al171);
    *eax172 = reinterpret_cast<signed char>(*eax173 + al174);
    *eax175 = reinterpret_cast<signed char>(*eax176 + al177);
    *eax178 = reinterpret_cast<signed char>(*eax179 + al180);
    *eax181 = reinterpret_cast<signed char>(*eax182 + al183);
    *eax184 = reinterpret_cast<signed char>(*eax185 + al186);
    *eax187 = reinterpret_cast<signed char>(*eax188 + al189);
    *eax190 = reinterpret_cast<signed char>(*eax191 + al192);
    *eax193 = reinterpret_cast<signed char>(*eax194 + al195);
    *eax196 = reinterpret_cast<signed char>(*eax197 + al198);
    *eax199 = reinterpret_cast<signed char>(*eax200 + al201);
    *eax202 = reinterpret_cast<signed char>(*eax203 + al204);
    *eax205 = reinterpret_cast<signed char>(*eax206 + al207);
    *eax208 = reinterpret_cast<signed char>(*eax209 + al210);
    *eax211 = reinterpret_cast<signed char>(*eax212 + al213);
    *eax214 = reinterpret_cast<signed char>(*eax215 + al216);
    *eax217 = reinterpret_cast<signed char>(*eax218 + al219);
    *eax220 = reinterpret_cast<signed char>(*eax221 + al222);
    *eax223 = reinterpret_cast<signed char>(*eax224 + al225);
    *eax226 = reinterpret_cast<signed char>(*eax227 + al228);
    *eax229 = reinterpret_cast<signed char>(*eax230 + al231);
    *eax232 = reinterpret_cast<signed char>(*eax233 + al234);
    *eax235 = reinterpret_cast<signed char>(*eax236 + al237);
    *eax238 = reinterpret_cast<signed char>(*eax239 + al240);
    *eax241 = reinterpret_cast<signed char>(*eax242 + al243);
    *eax244 = reinterpret_cast<signed char>(*eax245 + al246);
    *eax247 = reinterpret_cast<signed char>(*eax248 + al249);
    *eax250 = reinterpret_cast<signed char>(*eax251 + al252);
    *eax253 = reinterpret_cast<signed char>(*eax254 + al255);
    *eax256 = reinterpret_cast<signed char>(*eax257 + al258);
    *eax259 = reinterpret_cast<signed char>(*eax260 + al261);
    *eax262 = reinterpret_cast<signed char>(*eax263 + al264);
    *eax265 = reinterpret_cast<signed char>(*eax266 + al267);
    *eax268 = reinterpret_cast<signed char>(*eax269 + al270);
    *eax271 = reinterpret_cast<signed char>(*eax272 + al273);
    *eax274 = reinterpret_cast<signed char>(*eax275 + al276);
    *eax277 = reinterpret_cast<signed char>(*eax278 + al279);
    *eax280 = reinterpret_cast<signed char>(*eax281 + al282);
    *eax283 = reinterpret_cast<signed char>(*eax284 + al285);
    *eax286 = reinterpret_cast<signed char>(*eax287 + al288);
    *eax289 = reinterpret_cast<signed char>(*eax290 + al291);
    *eax292 = reinterpret_cast<signed char>(*eax293 + al294);
    *eax295 = reinterpret_cast<signed char>(*eax296 + al297);
    *eax298 = reinterpret_cast<signed char>(*eax299 + al300);
    *eax301 = reinterpret_cast<signed char>(*eax302 + al303);
    *eax304 = reinterpret_cast<signed char>(*eax305 + al306);
    *eax307 = reinterpret_cast<signed char>(*eax308 + al309);
    *eax310 = reinterpret_cast<signed char>(*eax311 + al312);
    *eax313 = reinterpret_cast<signed char>(*eax314 + al315);
    *eax316 = reinterpret_cast<signed char>(*eax317 + al318);
    *eax319 = reinterpret_cast<signed char>(*eax320 + al321);
    *eax322 = reinterpret_cast<signed char>(*eax323 + al324);
    *eax325 = reinterpret_cast<signed char>(*eax326 + al327);
    *eax328 = reinterpret_cast<signed char>(*eax329 + al330);
    *eax331 = reinterpret_cast<signed char>(*eax332 + al333);
    *eax334 = reinterpret_cast<signed char>(*eax335 + al336);
    *eax337 = reinterpret_cast<signed char>(*eax338 + al339);
    *eax340 = reinterpret_cast<signed char>(*eax341 + al342);
    *eax343 = reinterpret_cast<signed char>(*eax344 + al345);
    *eax346 = reinterpret_cast<signed char>(*eax347 + al348);
    *eax349 = reinterpret_cast<signed char>(*eax350 + al351);
    *eax352 = reinterpret_cast<signed char>(*eax353 + al354);
    *eax355 = reinterpret_cast<signed char>(*eax356 + al357);
    *eax358 = reinterpret_cast<signed char>(*eax359 + al360);
    *eax361 = reinterpret_cast<signed char>(*eax362 + al363);
    *eax364 = reinterpret_cast<signed char>(*eax365 + al366);
    *eax367 = reinterpret_cast<signed char>(*eax368 + al369);
    *eax370 = reinterpret_cast<signed char>(*eax371 + al372);
    *eax373 = reinterpret_cast<signed char>(*eax374 + al375);
    *eax376 = reinterpret_cast<signed char>(*eax377 + al378);
    *eax379 = reinterpret_cast<signed char>(*eax380 + al381);
    *eax382 = reinterpret_cast<signed char>(*eax383 + al384);
    *eax385 = reinterpret_cast<signed char>(*eax386 + al387);
    *eax388 = reinterpret_cast<signed char>(*eax389 + al390);
    *eax391 = reinterpret_cast<signed char>(*eax392 + al393);
    *eax394 = reinterpret_cast<signed char>(*eax395 + al396);
    *eax397 = reinterpret_cast<signed char>(*eax398 + al399);
    *eax400 = reinterpret_cast<signed char>(*eax401 + al402);
    *eax403 = reinterpret_cast<signed char>(*eax404 + al405);
    *eax406 = reinterpret_cast<signed char>(*eax407 + al408);
    *eax409 = reinterpret_cast<signed char>(*eax410 + al411);
    *eax412 = reinterpret_cast<signed char>(*eax413 + al414);
    *eax415 = reinterpret_cast<signed char>(*eax416 + al417);
    *eax418 = reinterpret_cast<signed char>(*eax419 + al420);
    *eax421 = reinterpret_cast<signed char>(*eax422 + al423);
    *eax424 = reinterpret_cast<signed char>(*eax425 + al426);
    *eax427 = reinterpret_cast<signed char>(*eax428 + al429);
    *eax430 = reinterpret_cast<signed char>(*eax431 + al432);
    *eax433 = reinterpret_cast<signed char>(*eax434 + al435);
    *eax436 = reinterpret_cast<signed char>(*eax437 + al438);
    *eax439 = reinterpret_cast<signed char>(*eax440 + al441);
    *eax442 = reinterpret_cast<signed char>(*eax443 + al444);
    *eax445 = reinterpret_cast<signed char>(*eax446 + al447);
    *eax448 = reinterpret_cast<signed char>(*eax449 + al450);
    *eax451 = reinterpret_cast<signed char>(*eax452 + al453);
    *eax454 = reinterpret_cast<signed char>(*eax455 + al456);
    *eax457 = reinterpret_cast<signed char>(*eax458 + al459);
    *eax460 = reinterpret_cast<signed char>(*eax461 + al462);
    *eax463 = reinterpret_cast<signed char>(*eax464 + al465);
    *eax466 = reinterpret_cast<signed char>(*eax467 + al468);
    *eax469 = reinterpret_cast<signed char>(*eax470 + al471);
    *eax472 = reinterpret_cast<signed char>(*eax473 + al474);
    *eax475 = reinterpret_cast<signed char>(*eax476 + al477);
    *eax478 = reinterpret_cast<signed char>(*eax479 + al480);
    *eax481 = reinterpret_cast<signed char>(*eax482 + al483);
    *eax484 = reinterpret_cast<signed char>(*eax485 + al486);
    *eax487 = reinterpret_cast<signed char>(*eax488 + al489);
    *eax490 = reinterpret_cast<signed char>(*eax491 + al492);
    *eax493 = reinterpret_cast<signed char>(*eax494 + al495);
    *eax496 = reinterpret_cast<signed char>(*eax497 + al498);
    *eax499 = reinterpret_cast<signed char>(*eax500 + al501);
    *eax502 = reinterpret_cast<signed char>(*eax503 + al504);
    *eax505 = reinterpret_cast<signed char>(*eax506 + al507);
    *eax508 = reinterpret_cast<signed char>(*eax509 + al510);
    *eax511 = reinterpret_cast<signed char>(*eax512 + al513);
    *eax514 = reinterpret_cast<signed char>(*eax515 + al516);
    *eax517 = reinterpret_cast<signed char>(*eax518 + al519);
    *eax520 = reinterpret_cast<signed char>(*eax521 + al522);
    *eax523 = reinterpret_cast<signed char>(*eax524 + al525);
    *eax526 = reinterpret_cast<signed char>(*eax527 + al528);
    *eax529 = reinterpret_cast<signed char>(*eax530 + al531);
    *eax532 = reinterpret_cast<signed char>(*eax533 + al534);
    *eax535 = reinterpret_cast<signed char>(*eax536 + al537);
    *eax538 = reinterpret_cast<signed char>(*eax539 + al540);
    *eax541 = reinterpret_cast<signed char>(*eax542 + al543);
    *eax544 = reinterpret_cast<signed char>(*eax545 + al546);
    *eax547 = reinterpret_cast<signed char>(*eax548 + al549);
    *eax550 = reinterpret_cast<signed char>(*eax551 + al552);
    *eax553 = reinterpret_cast<signed char>(*eax554 + al555);
    *eax556 = reinterpret_cast<signed char>(*eax557 + al558);
    *eax559 = reinterpret_cast<signed char>(*eax560 + al561);
}

void fun_415a27() {
}
